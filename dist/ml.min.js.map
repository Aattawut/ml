{"version":3,"sources":["webpack://ML/webpack/universalModuleDefinition","webpack://ML/webpack/bootstrap","webpack://ML/./node_modules/ml-matrix/src/dc/lu.js","webpack://ML/./node_modules/ml-matrix/src/dc/util.js","webpack://ML/./node_modules/ml-matrix/src/dc/svd.js","webpack://ML/./node_modules/ml-matrix/src/util.js","webpack://ML/./node_modules/ml-matrix/src/views/base.js","webpack://ML/./node_modules/ml-matrix/src/views/transpose.js","webpack://ML/./node_modules/ml-matrix/src/views/row.js","webpack://ML/./node_modules/ml-matrix/src/views/sub.js","webpack://ML/./node_modules/ml-matrix/src/views/selection.js","webpack://ML/./node_modules/ml-matrix/src/views/rowSelection.js","webpack://ML/./node_modules/ml-matrix/src/views/columnSelection.js","webpack://ML/./node_modules/ml-matrix/src/views/column.js","webpack://ML/./node_modules/ml-matrix/src/views/flipRow.js","webpack://ML/./node_modules/ml-matrix/src/views/flipColumn.js","webpack://ML/./node_modules/ml-matrix/src/abstractMatrix.js","webpack://ML/./node_modules/ml-matrix/src/matrix.js","webpack://ML/./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack://ML/./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack://ML/./node_modules/ml-matrix/src/wrap/wrap.js","webpack://ML/./node_modules/ml-matrix/src/dc/qr.js","webpack://ML/./node_modules/ml-matrix/src/decompositions.js","webpack://ML/./node_modules/ml-matrix/src/linearDependencies.js","webpack://ML/./node_modules/ml-matrix/src/dc/evd.js","webpack://ML/./node_modules/ml-matrix/src/dc/cholesky.js","webpack://ML/./node_modules/ml-matrix/src/index.js","webpack://ML/./node_modules/is-any-array/src/index.js","webpack://ML/./node_modules/ml-distance-euclidean/euclidean.js","webpack://ML/./node_modules/ml-stat/index.js","webpack://ML/./node_modules/ml-stat/matrix.js","webpack://ML/./node_modules/ml-array-mean/lib-es6/index.js","webpack://ML/./node_modules/binary-search/index.js","webpack://ML/./node_modules/num-sort/index.js","webpack://ML/./node_modules/ml-cart/src/utils.js","webpack://ML/./node_modules/ml-cart/src/TreeNode.js","webpack://ML/./node_modules/ml-cart/src/DecisionTreeClassifier.js","webpack://ML/./node_modules/ml-cart/src/DecisionTreeRegression.js","webpack://ML/./node_modules/ml-cart/src/index.js","webpack://ML/./node_modules/ml-array-max/lib-es6/index.js","webpack://ML/./node_modules/ml-kernel/src/kernel.js","webpack://ML/./node_modules/ml-random/lib-es6/choice.js","webpack://ML/./node_modules/ml-random/lib-es6/index.js","webpack://ML/./node_modules/random-js/lib/random.js","webpack://ML/./node_modules/ml-array-rescale/lib-es6/index.js","webpack://ML/./node_modules/ml-hash-table/src/HashTable.js","webpack://ML/./node_modules/ml-hclust/src/Cluster.js","webpack://ML/./node_modules/extend/index.js","webpack://ML/./node_modules/ml-array-min/lib-es6/index.js","webpack://ML/./node_modules/ml-array-median/lib-es6/index.js","webpack://ML/./node_modules/ml-xsadd/lib-es6/xsadd.js","webpack://ML/./node_modules/ml-array-variance/lib-es6/index.js","webpack://ML/./node_modules/ml-stat/array.js","webpack://ML/./node_modules/ml-hclust/src/ClusterLeaf.js","webpack://ML/./node_modules/ml-distance-matrix/src/index.js","webpack://ML/./node_modules/ml-confusion-matrix/src/index.js","webpack://ML/./node_modules/ml-fnn/src/Layer.js","webpack://ML/./node_modules/ml-fnn/src/utils.js","webpack://ML/./node_modules/ml-fnn/src/activationFunctions.js","webpack://ML/./node_modules/ml-som/src/node-square.js","webpack://ML/./node_modules/ml-distance/src/index.js","webpack://ML/./node_modules/ml-distance/src/similarities/czekanowski.js","webpack://ML/./node_modules/ml-distance/src/distances/dice.js","webpack://ML/./node_modules/ml-distance/src/distances/intersection.js","webpack://ML/./node_modules/ml-distance/src/distances/jaccard.js","webpack://ML/./node_modules/ml-distance/src/distances/kulczynski.js","webpack://ML/./node_modules/ml-distance/src/distances/motyka.js","webpack://ML/./node_modules/ml-distance/src/distances/squaredChord.js","webpack://ML/./node_modules/ml-distance/src/similarities/tanimoto.js","webpack://ML/./node_modules/ml-distance/src/similarities/cosine.js","webpack://ML/./node_modules/ml-pad-array/src/index.js","webpack://ML/./node_modules/ml-regression-base/src/maybeToPrecision.js","webpack://ML/./node_modules/ml-regression-base/src/checkArrayLength.js","webpack://ML/./node_modules/ml-regression-base/src/index.js","webpack://ML/./node_modules/ml-regression-simple-linear/src/index.js","webpack://ML/./node_modules/ml-regression-polynomial/src/index.js","webpack://ML/./node_modules/ml-regression-exponential/src/index.js","webpack://ML/./node_modules/ml-regression-power/src/index.js","webpack://ML/./node_modules/ml-regression-multivariate-linear/src/index.js","webpack://ML/./node_modules/ml-regression/src/regression/potential-regression.js","webpack://ML/./node_modules/ml-regression/src/regression/kernel-ridge-regression.js","webpack://ML/./node_modules/ml-regression/src/regression/poly-fit-regression2d.js","webpack://ML/./node_modules/ml-regression-theil-sen/src/index.js","webpack://ML/./node_modules/ml-regression-robust-polynomial/src/index.js","webpack://ML/./node_modules/ml-regression/src/index.js","webpack://ML/./node_modules/median-quickselect/lib/median-quickselect.min.js","webpack://ML/./src/index.js","webpack://ML/./node_modules/ml-pca/src/pca.js","webpack://ML/./node_modules/ml-hclust/src/index.js","webpack://ML/./node_modules/ml-hclust/src/agnes.js","webpack://ML/./node_modules/heap/index.js","webpack://ML/./node_modules/heap/lib/heap.js","webpack://ML/./node_modules/util/util.js","webpack://ML/./node_modules/process/browser.js","webpack://ML/./node_modules/util/support/isBufferBrowser.js","webpack://ML/./node_modules/inherits/inherits_browser.js","webpack://ML/./node_modules/ml-hclust/src/diana.js","webpack://ML/./node_modules/ml-svm/src/svm.js","webpack://ML/./node_modules/ml-kernel-gaussian/gaussian-kernel.js","webpack://ML/./node_modules/ml-kernel-polynomial/polynomial-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/anova-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/cauchy-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/exponential-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/histogram-intersection-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/laplacian-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/multiquadratic-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/rational-quadratic-kernel.js","webpack://ML/./node_modules/ml-kernel-sigmoid/sigmoid-kernel.js","webpack://ML/./node_modules/ml-cross-validation/src/index.js","webpack://ML/./node_modules/ml-combinations/lib/index.js","webpack://ML/./node_modules/ml-fnn/src/FeedForwardNeuralNetwork.js","webpack://ML/./node_modules/ml-fnn/src/OutputLayer.js","webpack://ML/./node_modules/ml-som/src/index.js","webpack://ML/./node_modules/ml-som/src/node-hexagonal.js","webpack://ML/./node_modules/ml-levenberg-marquardt/lib/index.js","webpack://ML/./node_modules/ml-sparse-matrix/src/index.js","webpack://ML/./node_modules/new-array/index.js","webpack://ML/./node_modules/ml-hash-table/src/primeFinder.js","webpack://ML/./node_modules/number-is-nan/index.js","webpack://ML/./node_modules/ml-distance/src/distances.js","webpack://ML/./node_modules/ml-distance/src/distances/additiveSymmetric.js","webpack://ML/./node_modules/ml-distance/src/distances/avg.js","webpack://ML/./node_modules/ml-distance/src/distances/bhattacharyya.js","webpack://ML/./node_modules/ml-distance/src/distances/canberra.js","webpack://ML/./node_modules/ml-distance/src/distances/chebyshev.js","webpack://ML/./node_modules/ml-distance/src/distances/clark.js","webpack://ML/./node_modules/ml-distance/src/distances/czekanowski.js","webpack://ML/./node_modules/ml-distance/src/distances/divergence.js","webpack://ML/./node_modules/ml-distance/src/distances/fidelity.js","webpack://ML/./node_modules/ml-distance/src/distances/gower.js","webpack://ML/./node_modules/ml-distance/src/distances/harmonicMean.js","webpack://ML/./node_modules/ml-distance/src/distances/hellinger.js","webpack://ML/./node_modules/ml-distance/src/distances/innerProduct.js","webpack://ML/./node_modules/ml-distance/src/distances/jeffreys.js","webpack://ML/./node_modules/ml-distance/src/distances/jensenDifference.js","webpack://ML/./node_modules/ml-distance/src/distances/jensenShannon.js","webpack://ML/./node_modules/ml-distance/src/distances/kdivergence.js","webpack://ML/./node_modules/ml-distance/src/distances/kullbackLeibler.js","webpack://ML/./node_modules/ml-distance/src/distances/kumarHassebrook.js","webpack://ML/./node_modules/ml-distance/src/distances/kumarJohnson.js","webpack://ML/./node_modules/ml-distance/src/distances/lorentzian.js","webpack://ML/./node_modules/ml-distance/src/distances/manhattan.js","webpack://ML/./node_modules/ml-distance/src/distances/matusita.js","webpack://ML/./node_modules/ml-distance/src/distances/minkowski.js","webpack://ML/./node_modules/ml-distance/src/distances/neyman.js","webpack://ML/./node_modules/ml-distance/src/distances/pearson.js","webpack://ML/./node_modules/ml-distance/src/distances/probabilisticSymmetric.js","webpack://ML/./node_modules/ml-distance/src/distances/ruzicka.js","webpack://ML/./node_modules/ml-distance/src/distances/soergel.js","webpack://ML/./node_modules/ml-distance/src/distances/sorensen.js","webpack://ML/./node_modules/ml-distance/src/distances/squared.js","webpack://ML/./node_modules/ml-distance/src/distances/taneja.js","webpack://ML/./node_modules/ml-distance/src/distances/tanimoto.js","webpack://ML/./node_modules/ml-distance/src/distances/topsoe.js","webpack://ML/./node_modules/ml-tree-similarity/src/index.js","webpack://ML/./node_modules/ml-distance/src/distances/waveHedges.js","webpack://ML/./node_modules/ml-distance/src/similarities.js","webpack://ML/./node_modules/ml-distance/src/similarities/dice.js","webpack://ML/./node_modules/ml-distance/src/similarities/intersection.js","webpack://ML/./node_modules/ml-distance/src/similarities/jaccard.js","webpack://ML/./node_modules/ml-distance/src/similarities/kulczynski.js","webpack://ML/./node_modules/ml-distance/src/similarities/motyka.js","webpack://ML/./node_modules/ml-distance/src/similarities/pearson.js","webpack://ML/./node_modules/ml-distance/src/similarities/squaredChord.js","webpack://ML/./node_modules/ml-performance/src/index.js","webpack://ML/./node_modules/ml-performance/src/measures.js","webpack://ML/./node_modules/ml-savitzky-golay/src/index.js","webpack://ML/./node_modules/ml-savitzky-golay-generalized/src/index.js","webpack://ML/./node_modules/ml-bit-array/src/index.js","webpack://ML/./node_modules/ml-bit-array/src/creator.js","webpack://ML/./node_modules/ml-array-utils/src/index.js","webpack://ML/./node_modules/ml-array-utils/src/ArrayUtils.js","webpack://ML/./node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://ML/./node_modules/ml-array-utils/src/snv.js","webpack://ML/./node_modules/ml-array-mode/lib-es6/index.js","webpack://ML/./node_modules/ml-array-normed/lib-es6/index.js","webpack://ML/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://ML/./node_modules/ml-array-standard-deviation/lib-es6/index.js","webpack://ML/./node_modules/ml-array-xy-centroids-merge/src/index.js","webpack://ML/./node_modules/ml-arrayxy-closestx/src/index.js","webpack://ML/./node_modules/ml-array-xy-max-merge/src/index.js","webpack://ML/./node_modules/ml-array-xy-max-y/src/index.js","webpack://ML/./node_modules/ml-array-xy-sort-x/src/index.js","webpack://ML/./node_modules/ml-arrayxy-uniquex/src/index.js","webpack://ML/./node_modules/ml-array-xy-weighted-merge/src/index.js","webpack://ML/./node_modules/ml-kmeans/node_modules/ml-distance-euclidean/lib-es6/euclidean.js","webpack://ML/./node_modules/ml-nearest-vector/node_modules/ml-distance-euclidean/lib-es6/euclidean.js","webpack://ML/./node_modules/ml-nearest-vector/lib-es6/index.js","webpack://ML/./node_modules/ml-kmeans/src/utils.js","webpack://ML/./node_modules/ml-kmeans/src/initialization.js","webpack://ML/./node_modules/ml-kmeans/src/KMeansResult.js","webpack://ML/./node_modules/ml-kmeans/src/kmeans.js","webpack://ML/./node_modules/ml-random-forest/src/utils.js","webpack://ML/./node_modules/ml-random-forest/src/RandomForestBase.js","webpack://ML/./node_modules/ml-random-forest/src/RandomForestClassifier.js","webpack://ML/./node_modules/ml-random-forest/src/RandomForestRegression.js","webpack://ML/./node_modules/ml-random-forest/src/index.js","webpack://ML/./node_modules/ml-pls/src/utils.js","webpack://ML/./node_modules/ml-pls/src/pls.js","webpack://ML/./node_modules/ml-pls/src/kopls.js","webpack://ML/./node_modules/ml-pls/src/index.js","webpack://ML/./node_modules/ml-naivebayes/src/utils.js","webpack://ML/./node_modules/ml-naivebayes/src/GaussianNB.js","webpack://ML/./node_modules/ml-naivebayes/src/MultinomialNB.js","webpack://ML/./node_modules/ml-naivebayes/src/index.js","webpack://ML/./node_modules/ml-knn/src/KDTree.js","webpack://ML/./node_modules/ml-knn/src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LuDecomposition","constructor","matrix","j","k","v","LUcolj","kmax","lu","WrapperMatrix2D","checkMatrix","clone","rows","columns","pivotVector","Array","pivotSign","Math","min","set","abs","LU","isSingular","data","col","solve","Matrix","Error","count","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","slice","hypotenuse","a","b","sqrt","getFilled2DArray","array","SingularValueDecomposition","options","arguments","length","undefined","_options$computeLeftS","computeLeftSingularVectors","_options$computeRight","computeRightSingularVectors","_options$autoTranspos","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","console","warn","nu","ni","U","V","e","work","si","nct","nrt","max","mrc","pp","eps","Number","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","g","tmp","Y","threshold","scols","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solveForDiagonal","diag","inverse","vcols","ucols","condition","norm2","rank","tol","ii","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","index","outer","RangeError","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","TypeError","some","isArray","from","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","concat","BaseView","AbstractMatrix","super","static","species","MatrixTransposeView","rowIndex","columnIndex","MatrixRowView","MatrixSubView","MatrixSelectionView","indices","MatrixRowSelectionView","MatrixColumnSelectionView","MatrixColumnView","MatrixFlipRowView","MatrixFlipColumnView","superCtor","[object Object]","newRows","newColumns","newData","newMatrix","empty","fill","rng","random","maxValue","floor","matrix1","matrix2","result","klass","size","apply","callback","jj","to2DArray","copy","isRowVector","isColumnVector","isVector","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","repeat","rowRep","colRep","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","swapRows","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","by","sumByRow","sumByColumn","sumAll","mean","prod","norm","type","cumulativeSum","dot","vector2","vector1","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","y","x","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","add","sub","scaleRows","scaled","rescale","scaleColumns","kroneckerProduct","q","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixColumn","selection","trace","transposeView","rowView","columnView","flipRowView","flipColumnView","subMatrixView","selectionView","rowSelectionView","columnSelectionView","det","subMatrix0","subMatrix1","subMatrix2","pseudoInverse","svdSolution","SvDecomposition","rand","identity","eye","negate","tensorProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","method","forEach","mathMethod","push","inplaceMeth","staticMeth","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","removeRow","splice","addRow","removeColumn","addColumn","WrapperMatrix1D","_options$rows","_calculateIndex","wrap","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","error","thresholdValue","returnArray","linearDependencies","_options$thresholdVal","_options$thresholdErr","thresholdError","results","Abis","EigenvalueDecomposition","_options$assumeSymmet","assumeSymmetric","h","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","w","ra","sa","vr","vi","notlast","cdivres","exshift","z","iter","cdiv","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B","__webpack_exports__","matrix_Matrix","WrapperMatrix2D_WrapperMatrix2D","WrapperMatrix1D_WrapperMatrix1D","svd_SingularValueDecomposition","evd_EigenvalueDecomposition","cholesky_CholeskyDecomposition","lu_LuDecomposition","qr_QrDecomposition","toString","endsWith","squaredEuclidean","euclidean","squared","require","arrayStat","Infinity","minMax","entropy","l1","l2","log","theMean","N","theSum","product","theProduct","standardDeviation","means","unbiased","vari","variance","sum1","sum2","median","medians","modes","itemCount","itemArray","indexOf","skewness","skew","s3","dev","pow","kurtosis","kurt","s4","standardError","samples","standardDeviations","standardErrors","sqrtN","covariance","scatter","divisor","cov","correlation","scores","zScores","cor","standardize","center","inPlace","resultRow","sourceRow","weightedVariance","weights","weightedMean","weightSum","weightedCovariance","s1","factor","weightedScatter","is_any_array__WEBPACK_IMPORTED_MODULE_0__","is_any_array__WEBPACK_IMPORTED_MODULE_0___default","input","haystack","needle","comparator","mid","cmp","numberIsNan","assertNum","asc","desc","toDiscreteDistribution","numberOfClasses","counts","giniImpurity","probabilities","getNumberOfClasses","filter","val","arr","squaredError","meanArray","currentElement","gainFunctions","gini","splitted","splitsImpurity","splits","currentSplit","regression","splitFunctions","TreeNode","kind","gainFunction","splitFunction","minNumSamples","maxDepth","bestSplit","XTranspose","bestGain","check","currentFeature","splitValues","featureSplit","currentSplitVal","split","gain","maxGain","splitValue","lesser","greater","ret","Utils","calculatePrediction","distribution","train","currentDepth","parentGain","splitColumn","splittedMatrix","lesserX","greaterX","lesserY","greaterY","left","right","classify","setNodeParameters","node","defaultOptions","DecisionTreeClassifier","model","Tree","assign","trainingSet","trainingLabels","predict","toPredict","predictions","toJSON","DecisionTreeRegression","trainingValues","DecisionTreeClassifier_DecisionTreeClassifier","DecisionTreeRegression_DecisionTreeRegression","GaussianKernel","PolynomialKernel","ANOVAKernel","CauchyKernel","ExponentialKernel","HistogramKernel","LaplacianKernel","MultiquadraticKernel","RationalKernel","SigmoidKernel","kernelType","gaussian","rbf","polynomial","poly","anova","cauchy","exponential","histogram","laplacian","multiquadratic","rational","sigmoid","mlp","toLowerCase","KernelConstructor","kernelFunction","compute","inputs","landmarks","kernelMatrix","PROB_TOLERANCE","randomIndex","cumSum","randomChoice","_options$size","_options$replace","valuesArr","getArray","lib_es6_Random","Random","seedOrRandom","xsadd","XSAdd","randomGenerator","choice","randInt","randomSample","__WEBPACK_AMD_DEFINE_RESULT__","imul","al","bl","stringRepeat","String","pattern","engine","engines","nativeMath","proto","returnValue","generate","addend","toInteger","number","ceil","convertSliceArgument","returnUndefined","mt19937","Int32Array","refreshData","uses","next","temper","getUseCount","discard","seed","initial","previous","seedWithArray","source","sourceLength","autoSeed","generateEntropyArray","browserCrypto","crypto","getRandomValues","Date","getTime","int32","uint32","uint53","uint53Full","int53","int53Full","integer","isPowerOfTwoMinusOne","downscaleToRange","masking","extendedRange","maximum","downscaleToLoopCheckedRange","upscaleWithinU53","highRange","upscaleToLoopCheckedRange","upscaleWithinI53AndLoopCheck","isFinite","realZeroToOneInclusive","realZeroToOneExclusive","real","inclusive","multiplier","bool","isLeastBitTrue","lessThan","numerator","denominator","percentage","round","probability","pick","begin","end","start","finish","lowerHex","upperHex","picker","shuffle","downTo","sample","population","sampleSize","tailLength","die","sideCount","dice","dieCount","uuid4","zeroPad","string","zeroCount","pool","charAt","hex","toUpperCase","upper","date","ml_array_max__WEBPACK_IMPORTED_MODULE_0__","ml_array_min__WEBPACK_IMPORTED_MODULE_1__","is_any_array__WEBPACK_IMPORTED_MODULE_2__","is_any_array__WEBPACK_IMPORTED_MODULE_2___default","output","currentMin","currentMax","_options$min","minValue","autoMinMax","_options$max","newArray","primeFinder","nextPrime","largestPrime","FREE","FULL","REMOVED","defaultInitialCapacity","defaultMinLoadFactor","defaultMaxLoadFactor","HashTable","table","state","minLoadFactor","maxLoadFactor","distinct","freeEntries","lowWaterMark","highWaterMark","initialCapacity","capacity","chooseHighWaterMark","indexOfKey","indexOfInsertion","newCapacity","chooseGrowCapacity","rehash","remove","noRehash","maybeShrinkCapacity","delete","minLoad","maxLoad","containsKey","hash","decrement","containsValue","indexOfValue","ensureCapacity","minCapacity","oldCapacity","oldTable","oldValues","oldState","newTable","newValues","newState","element","forEachKey","forEachValue","forEachPair","Heap","Cluster","children","distance","cut","list","ans","group","minGroups","heap","first","pop","child","toArray","traverse","cb","visit","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","configurable","newValue","writable","getProperty","extend","src","copyIsArray","deep","median_quickselect__WEBPACK_IMPORTED_MODULE_0__","median_quickselect__WEBPACK_IMPORTED_MODULE_0___default","is_any_array__WEBPACK_IMPORTED_MODULE_1__","is_any_array__WEBPACK_IMPORTED_MODULE_1___default","quickSelectMedian","XSadd","LOOP","FLOAT_MUL","sh1","sh2","sh3","multiply_uint32","nlo","now","Uint32Array","init","getFloat","getUint32","nextState","periodCertification","ml_array_mean__WEBPACK_IMPORTED_MODULE_0__","_options$unbiased","_options$mean","arrayMean","sqrError","arithmeticMean","geometricMean","mul","logMean","lnsum","grandMean","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","half","theVariance","robustMeanAndStdev","averageDeviations","stdev","quartiles","quart","q1","q2","q3","pooledStandardDeviation","pooledVariance","mean1","mean2","weightedStandardDeviation","standardDev","ClusterLeaf","inherits","distanceFn","map","ConfusionMatrix","labels","actual","predicted","distinctLabels","Set","actualIdx","predictedIdx","getMatrix","getLabels","getTotalCount","getTrueCount","getFalseCount","getTruePositiveCount","label","getIndex","getTrueNegativeCount","getFalsePositiveCount","getFalseNegativeCount","getPositiveCount","getNegativeCount","getTruePositiveRate","getTrueNegativeRate","getPositivePredictiveValue","TP","getNegativePredictiveValue","TN","getFalseNegativeRate","getFalsePositiveRate","getFalseDiscoveryRate","FP","getFalseOmissionRate","FN","getF1Score","getMatthewsCorrelationCoefficient","getInformedness","getMarkedness","getConfusionTable","getAccuracy","correct","incorrect","getCount","actualIndex","predictedIndex","accuracy","total","ACTIVATION_FUNCTIONS","Layer","inputSize","outputSize","regularization","epsilon","activation","activationParam","selectedFunction","params","actFunction","derFunction","derivate","activationFunction","W","forward","backpropagation","delta","dW","db","sumCol","aCopy","update","dictOutputs","outputs","sumRow","logistic","exp","expELU","param","tanh","arctan","atan","softsign","relu","softplus","bent","sinusoid","sin","cos","sinc","parametric-relu","exponential-elu","soft-exponential","NodeSquare","som","neighbors","adjustWeights","learningRate","influence","getDistance","otherNode","getDistanceTorus","distX","distY","gridDim","getNeighbors","xy","torus","nodes","getPos","bestNeighbor","direction","simA","simB","getPosition","similarity","up","down","p1","p2","bitvector","inter","union","matrixCase","len","cond","arrayCase","maybeToPrecision","digits","toPrecision","checkArraySize","BaseRegression","_predict","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","slope","intercept","coefficients","checkArrayLength","slr","regress","computeX","precision","xFactor","absIntercept","json","PolynomialRegression","degree","powers","pr","F","FT","A","_toFormula","isLaTeX","sup","closeSup","times","fn","str","ExponentialRegression","er","yl","linear","PowerRegression","xl","newInputs","MultivariateLinearRegression","_options$intercept","_options$statistics","statistics","beta","SVD","fittedValues","addM","ri","reduce","stdError","stdErrorMatrix","stdErrors","tStats","summary","regressionStatistics","observations","variables","tStat","PotentialRegression","M","lambda","kernelOptions","computeCoefficient","KernelRidgeRegression","kernel","Kernel","K","order","PolynomialFitRegression2D","examples","x1","x2","scaleX1","scaleX2","scaleY","limit","powColVector","svd","qqs","qqs1","power","TheilSenRegression","slopes","medianSlope","cuts","theilSen","RobustPolynomialRegression","tuples","pos","counter","getRandomTuples","tuple","calcCoefficients","residuals","residual","residualsMedian","robustPolynomial","NLR","src_SimpleLinearRegression","src_PolynomialRegression","src_ExponentialRegression","src_PowerRegression","src_MultivariateLinearRegression","kernel_ridge_regression_KernelRidgeRegression","poly_fit_regression2d_PolynomialFitRegression2D","src_TheilSenRegression","src_RobustPolynomialRegression","_ref","window","mlCart","mlRandomForest","ML","PCA","HClust","KMeans","SVM","NaiveBayes","KNN","PLS","CrossValidation","RandomForestClassifier","FNN","SOM","Regression","RandomForestRegression","levenbergMarquardt","EVD","SparseMatrix","Distance","Similarity","distanceMatrix","default","Performance","savitzkyGolay","savitzkyGolayGeneralized","BitArray","padArray","binarySearch","numSort","ArrayUtils","MatrixUtil","ArrayStat","MatrixStat","normed","sequentialFill","ArrayXY","centroidsMerge","closestX","maxMerge","maxY","sortX","uniqueX","weightedMerge","matrixLib","Stat","isCovarianceMatrix","dataset","stdevs","S","_computeFromCovarianceMatrix","useCovarianceMatrix","covarianceMatrix","_adjust","div","singularValues","eigenvalues","_options$nComponents","nComponents","getExplainedVariance","getCumulativeVariance","explained","getEigenvectors","getEigenvalues","getStandardDeviations","getLoadings","evd","reverse","agnes","diana","simpleLink","cluster1","cluster2","disFun","completeLink","averageLink","centroidLink","dist","wardLink","disFunc","isDistanceMatrix","dis","fdistance","sdistance","toFixed","dmin","clustered","diff","indCount","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","lo","hi","item","lastelt","returnitem","_i","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","pushpop","peek","contains","clear","insert","top","front","has","process","getOwnPropertyDescriptors","keys","descriptors","formatRegExp","format","isString","objects","inspect","join","JSON","stringify","_","isNull","isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","primitive","simple","isNumber","formatPrimitive","visibleKeys","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","formatProperty","match","formatArray","prev","cur","numLinesEst","reduceToSingleString","line","substr","ar","arg","re","objectToString","pad","debuglog","env","NODE_DEBUG","test","pid","bold","italic","underline","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","newReason","promisify","original","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","then","nextTick","rej","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","readUInt8","ctor","super_","TempCtor","y1","splitting","Ci","ndist","Cj","intrDist","clId","rebel","tree","ind","C","sG","spl","fData","sData","stat","maxPasses","maxIterations","alphaTol","whitening","features","_trained","_loaded","D","alphas","b1","b2","passes","Ei","Ej","ai","aj","eta","numChange","_marginOnePrecomputed","newaj","iterations","nX","nY","nAlphas","_supportVectorIdx","predictOne","marginOne","noWhitening","_applyWhitening","margin","supportVectors","load","svm","whitened","sigma","constant","E","CV","combinations","initMatrix","getDistinct","validate","Classifier","classifierOptions","testIdx","trainIdx","confusionMatrix","_getTrainTest","getTrainTest","testFeatures","trainFeatures","testLabels","trainLabels","classifier","updateConfusionMatrix","validateWithCallback","_getTrainTest2","predictedLabels","leaveOneOut","leavePOut","gen","allIdx","kFold","current","folds","randi","runtime","createCommonjsModule","global","Op","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","regeneratorRuntime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","mark","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","done","Context","reset","skipTempReset","sent","_sent","delegate","tryEntries","resetTryEntry","stop","rootEntry","rootRecord","completion","rval","dispatchException","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","Function","hadRuntime","oldRuntime","runtimeModule","regenerator","_callee","twiddle","_context","OutputLayer","FeedForwardNeuralNetworks","hiddenLayers","dicts","layers","buildNetwork","propagate","NodeHexagonal","fields","randomizer","squareEuclidean","gridType","reload","numWeights","converters","getConverters","extractor","creator","nodeType","hx","distanceMethod","maxDistance","getMaxDistance","findBMU","adjust","iterationCount","startLearningRate","mapRadius","algorithmMethod","_initNodes","normalizers","denormalizers","getNormalizer","getDenormalizer","getRandomValue","zero","one","loadModel","export","includeDistance","initNodes","setTraining","convertedSet","numIterations","timeConstant","trainOne","neighbourhoodRadius","trainingValue","trainingSetFactor","bmu","_findBestMatchingUnit","now2","radiusLimit","xMin","xMax","yMin","yMax","theX","theY","getConvertedNodes","candidate","lowest","computePosition","getQuantizationError","fit","getFit","hX","distZ","mlMatrix","errorCalculation","parameters","parameterizedFunction","func","step","damping","gradientDifference","evaluatedData","gradientFunc","paramFunction","auxParams","funcParam","point","gradientFunction","matrixFunc","matrixFunction","inverseMatrix","_options$maxIteration","_options$gradientDiff","_options$damping","_options$errorToleran","errorTolerance","initialValues","converged","iteration","parameterValues","parameterError","ml_hash_table__WEBPACK_IMPORTED_MODULE_0__","ml_hash_table__WEBPACK_IMPORTED_MODULE_0___default","_init","elements","symmetric","forEachNonZero","bandWidth","isBanded","width","cardinality","v1","v2","getNonZeros","setThreshold","newThreshold","trans","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","operators","sortAsc","primeNumbers","additiveSymmetric","avg","bhattacharyya","canberra","chebyshev","clark","czekanowski","divergence","fidelity","gower","hellinger","innerProduct","intersection","jaccard","jeffreys","jensenDifference","jensenShannon","kdivergence","kulczynski","kullbackLeibler","kumarHassebrook","kumarJohnson","lorentzian","manhattan","matusita","minkowski","motyka","neyman","pearson","probabilisticSymmetric","ruzicka","soergel","sorensen","squaredChord","taneja","tanimoto","topsoe","waveHedges","czekanowskiSimilarity","tanimotoS","createTree","to","minWindow","gamma","calc","cosine","diceD","intersectionD","jaccardD","kulczynskiD","motykaD","avgA","avgB","newA","newB","squaredChordD","measures","prediction","isDistance","predP","all","pred","targ","cutoffs","MAX_VALUE","fp","tp","nPos","nNeg","currentPred","nTp","nFp","tn","nPosPred","nNegPred","nSamples","getMeasure","measure","getAURC","auc","getAUDC","getDistribution","cutLength","cutLow","cutHigh","interval","xLabels","interValues","intraValues","interCumPercent","intraCumPercent","nTP","currentTP","nFP","currentFP","thisTP","thisFP","names","acc","fpr","tpr","fnr","tnr","ppv","npv","pcfall","pcmiss","lift","rpp","rnp","windowSize","derivative","padValue","J","ones","inic","Jtranspose","getHs","hs","GramPoly","GenFact","gf","Weight","np","fullWeights","constantH","wg1","wg2","d1","d2","wg","eightBits","toBinaryString","and","arr1","arr2","or","xor","not","getBit","mask","setBit","parseBinaryString","toHexString","parseHexString","toDebug","binary","num","getEquallySpacedData","SNV","resultMatrix","coordArrayToPoints","dimensions","pointsArr","coordArrayToCoordMatrix","coordinatesArray","points","currentPoint","coordMatrixToCoordArray","coordMatrix","coodinatesArray","coordMatrixToPoints","pointsToCoordArray","pointsToCoordMatrix","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","integral","x0","xLength","_options$from","_options$to","_options$variant","variant","_options$numberOfPoin","numberOfPoints","halfStep","lastStep","previousX","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","getEquallySpacedSlot","initialOriginalStep","lastOriginalStep","sumAtMin","sumAtMax","getEquallySpacedSmooth","std","maxCount","_options$algorithm","algorithm","absoluteSum","_typeof","_options","ml_array_variance__WEBPACK_IMPORTED_MODULE_0__","mergeByCentroids","originalPoints","centroids","_options$window","mergedPoints","originalIndex","mergedIndex","binary_search__WEBPACK_IMPORTED_MODULE_0__","binary_search__WEBPACK_IMPORTED_MODULE_0___default","num_sort__WEBPACK_IMPORTED_MODULE_1__","_options$target","_options$reverse","_options$groupWidth","groupWidth","merged","maxAbscissa","calculateIndex","currentIndex","sortFunc","grouped","response","weightedAbscissa","distanceFunction","nearestVector","listVectors","similarityFunction","vectorIndex","maxSim","sim","minDist","updateClusterID","centers","clusterID","euclidianDistances","distanceSymbol","KMeansResult","clusters","nearest","centroid","computeInformation","enrichedCentroids","kmeans","tolerance","withIterations","initialization","newCenters","prevCenters","nDim","centersLen","dim","id","updateCenters","oldCenters","hasConverged","localTrials","firstCenterIdx","closestDistSquared","cumSumClosestDistSquared","candidateIdx","distanceToCandidates","bestCandidate","bestPot","bestDistSquared","newDistSquared","newPot","kmeanspp","maxDist","minDistCent","mostDistant","calculateDistanceMatrix","stepResult","stepNumber","kmeansGenerator","examplesBaggingWithReplacement","Xr","featureBagging","replacement","toRet","usedIndex","RandomForestBase","maxFeatures","nEstimators","treeOptions","isClassifier","indexes","useSampleBagging","Estimator","DTClassifier","DTRegression","estimators","est","res","predictionValues","baseModel","selectionMethods","arrayMedian","selectionMethod","RandomForestClassifier_RandomForestClassifier","RandomForestRegression_RandomForestRegression","pow2array","initializeMatrices","meanX","stdDevX","meanY","stdDevY","PBQ","R2X","scaleMethod","_options$tolerance","_options$scale","latentVectors","rx","cx","ry","cy","ssqXcal","sumOfSquaresY","T","P","Q","transposeX","transposeY","tIndex","maxSumColIndex","mulM","uIndex","t1","u","den","pnorm","ssqYcal","KOPLS","YLoadingMat","SigmaPow","YScoreMat","predScoreMat","YOrthLoadingVec","YOrthEigen","YOrthScoreMat","toNorm","TURegressionCoeff","kernelX","orthogonalComp","predictiveComp","predictiveComponents","orthogonalComponents","Identity","Sigma","YOrthScoreNorm","TpiPrime","CoTemp","SoTemp","toiPrime","ITo","lastScoreMat","lastTpPrime","KTestTrain","YOrthScoreVector","scoreMatPrime","p3","predYOrthVectors","pls_PLS","kopls_KOPLS","separateClasses","classes","totalPerClasses","separatedClasses","GaussianNB","calculateProbabilities","C1","PI","logPriorProbability","currentStd","getCurrentClass","modelName","currentCase","maxProbability","predictedClass","currentProbability","calculateLogProbability","C2","MultinomialNB","conditionalProbability","priorProbability","separateClass","classValues","matrixLog","GaussianNB_GaussianNB","MultinomialNB_MultinomialNB","Node","KDTree","metric","buildTree","restoreParent","toJSONImpl","dest","maxNodes","bestNodes","BinaryHeap","nearestSearch","ownDistance","linearPoint","bestChild","linearDistance","otherChild","saveNode","content","scoreFunction","bubbleUp","sinkDown","parentN","elemScore","child2N","child1N","swap","child1","child1Score","child2","src_KNN","kdTree","isEuclidean","_options$distance","euclideanDistance","_options$k","getSinglePrediction","knn","nearestPoints","pointsPerClass","maxPoints","lastElement","currentClass"],"mappings":"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","file":"ml.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ML\"] = factory();\n\telse\n\t\troot[\"ML\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class LuDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\r\n * @param {Matrix} matrix\r\n */\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    var lu = matrix.clone();\r\n    var rows = lu.rows;\r\n    var columns = lu.columns;\r\n    var pivotVector = new Array(rows);\r\n    var pivotSign = 1;\r\n    var i, j, k, p, s, t, v;\r\n    var LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isSingular() {\r\n    var data = this.LU;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      if (data[j][j] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var lu = this.LU;\r\n    var rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    var columns = lu.columns;\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= lu[k][k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get determinant() {\r\n    var data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    var determinant = this.pivotSign;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      determinant *= data[j][j];\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X[i][j] = data[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = 1;\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X[i][j] = data[i][j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get pivotPermutationVector() {\r\n    return this.pivotVector.slice();\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  var r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getFilled2DArray(rows, columns, value) {\r\n  var array = new Array(rows);\r\n  for (var i = 0; i < rows; i++) {\r\n    array[i] = new Array(columns);\r\n    for (var j = 0; j < columns; j++) {\r\n      array[i][j] = value;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class SingularValueDecomposition\r\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\r\n * @param {Matrix} value\r\n * @param {object} [options]\r\n * @param {boolean} [options.computeLeftSingularVectors=true]\r\n * @param {boolean} [options.computeRightSingularVectors=true]\r\n * @param {boolean} [options.autoTranspose=false]\r\n */\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false\r\n    } = options;\r\n\r\n    var wantu = Boolean(computeLeftSingularVectors);\r\n    var wantv = Boolean(computeRightSingularVectors);\r\n\r\n    var swapped = false;\r\n    var a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        var aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    var nu = Math.min(m, n);\r\n    var ni = Math.min(m + 1, n);\r\n    var s = new Array(ni);\r\n    var U = getFilled2DArray(m, nu, 0);\r\n    var V = getFilled2DArray(n, n, 0);\r\n\r\n    var e = new Array(n);\r\n    var work = new Array(m);\r\n\r\n    var si = new Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    var nct = Math.min(m - 1, n);\r\n    var nrt = Math.max(0, Math.min(n - 2, m));\r\n    var mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a[i][k]);\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a[k][k] < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a[i][k] /= s[k];\r\n          }\r\n          a[k][k] += 1;\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a[i][k] * a[i][j];\r\n          }\r\n          t = -t / a[k][k];\r\n          for (let i = k; i < m; i++) {\r\n            a[i][j] += t * a[i][k];\r\n          }\r\n        }\r\n        e[j] = a[k][j];\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U[i][k] = a[i][k];\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a[i][j];\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a[i][j] += t * work[i];\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V[i][k] = e[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a[nct][nct];\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a[nrt][p - 1];\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U[i][j] = 0;\r\n        }\r\n        U[j][j] = 1;\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U[i][k] * U[i][j];\r\n            }\r\n            t = -t / U[k][k];\r\n            for (let i = k; i < m; i++) {\r\n              U[i][j] += t * U[i][k];\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U[i][k] = -U[i][k];\r\n          }\r\n          U[k][k] = 1 + U[k][k];\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n          U[k][k] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V[i][k] * V[i][j];\r\n            }\r\n            t = -t / V[k + 1][k];\r\n            for (let i = k + 1; i < n; i++) {\r\n              V[i][j] += t * V[i][k];\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V[i][k] = 0;\r\n        }\r\n        V[k][k] = 1;\r\n      }\r\n    }\r\n\r\n    var pp = p - 1;\r\n    var iter = 0;\r\n    var eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][p - 1];\r\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][k - 1];\r\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k])\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][j + 1];\r\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][j + 1];\r\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V[i][k] = -V[i][k];\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V[i][k + 1];\r\n                V[i][k + 1] = V[i][k];\r\n                V[i][k] = t;\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U[i][k + 1];\r\n                U[i][k + 1] = U[i][k];\r\n                U[i][k] = t;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      var tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var x = svd.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    var Y = value;\r\n    var e = this.threshold;\r\n    var scols = this.s.length;\r\n    var Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls[i][i] = 0;\r\n      } else {\r\n        Ls[i][i] = 1 / this.s[i];\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n    var V = this.rightSingularVectors;\r\n\r\n    var VL = V.mmul(Ls);\r\n    var vrows = V.rows;\r\n    var urows = U.length;\r\n    var VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL[i][k] * U[j][k];\r\n        }\r\n        VLU[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array<number>} value\r\n   * @return {Matrix}\r\n   */\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var inverseA = svd.inverse();\r\n   * @return {Matrix} - The approximation of the inverse of the matrix\r\n   */\r\n  inverse() {\r\n    var V = this.V;\r\n    var e = this.threshold;\r\n    var vrows = V.length;\r\n    var vcols = V[0].length;\r\n    var X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X[i][j] = V[i][j] / this.s[j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n\r\n    var urows = U.length;\r\n    var ucols = U[0].length;\r\n    var Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X[i][k] * U[j][k];\r\n        }\r\n        Y[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rank() {\r\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    var r = 0;\r\n    var s = this.s;\r\n    for (var i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get diagonal() {\r\n    return this.s;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get threshold() {\r\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get leftSingularVectors() {\r\n    if (!Matrix.isMatrix(this.U)) {\r\n      this.U = new Matrix(this.U);\r\n    }\r\n    return this.U;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get rightSingularVectors() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\n\r\n/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns'\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices)\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  var rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  var columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function getRange(from, to) {\r\n  var arr = new Array(to - from + 1);\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] = from + i;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function sumByRow(matrix) {\r\n  var sum = Matrix.zeros(matrix.rows, 1);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  var sum = Matrix.zeros(1, matrix.columns);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  var v = 0;\r\n  for (var i = 0; i < matrix.rows; i++) {\r\n    for (var j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix() {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex\r\n    );\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex]\r\n    );\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import rescale from 'ml-array-rescale';\r\n\r\nimport LuDecomposition from './dc/lu';\r\nimport SvDecomposition from './dc/svd';\r\nimport {\r\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\r\n  checkRange, checkIndices,\r\n  sumByRow, sumByColumn, sumAll\r\n} from './util';\r\nimport MatrixTransposeView from './views/transpose';\r\nimport MatrixRowView from './views/row';\r\nimport MatrixSubView from './views/sub';\r\nimport MatrixSelectionView from './views/selection';\r\nimport MatrixRowSelectionView from './views/rowSelection';\r\nimport MatrixColumnSelectionView from './views/columnSelection';\r\nimport MatrixColumnView from './views/column';\r\nimport MatrixFlipRowView from './views/flipRow';\r\nimport MatrixFlipColumnView from './views/flipColumn';\r\n\r\nexport default function AbstractMatrix(superCtor) {\r\n  if (superCtor === undefined) superCtor = Object;\r\n\r\n  /**\r\n   * Real matrix\r\n   * @class Matrix\r\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\r\n   * 2D array containing the data or Matrix instance to clone\r\n   * @param {number} [nColumns] - Number of columns of the new matrix\r\n   */\r\n  class Matrix extends superCtor {\r\n    static get [Symbol.species]() {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs a Matrix with the chosen dimensions from a 1D array\r\n     * @param {number} newRows - Number of rows\r\n     * @param {number} newColumns - Number of columns\r\n     * @param {Array} newData - A 1D array containing data for the matrix\r\n     * @return {Matrix} - The new matrix\r\n     */\r\n    static from1DArray(newRows, newColumns, newData) {\r\n      var length = newRows * newColumns;\r\n      if (length !== newData.length) {\r\n        throw new RangeError('Data length does not match given dimensions');\r\n      }\r\n      var newMatrix = new this(newRows, newColumns);\r\n      for (var row = 0; row < newRows; row++) {\r\n        for (var column = 0; column < newColumns; column++) {\r\n          newMatrix.set(row, column, newData[row * newColumns + column]);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a row vector, a matrix with only one row.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static rowVector(newData) {\r\n      var vector = new this(1, newData.length);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(0, i, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates a column vector, a matrix with only one column.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static columnVector(newData) {\r\n      var vector = new this(newData.length, 1);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(i, 0, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static empty(rows, columns) {\r\n      return new this(rows, columns);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to zero.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static zeros(rows, columns) {\r\n      return this.empty(rows, columns).fill(0);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to one.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static ones(rows, columns) {\r\n      return this.empty(rows, columns).fill(1);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be randomly set.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static rand(rows, columns, rng) {\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          matrix.set(i, j, rng());\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be random integers.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {number} [maxValue=1000] - Maximum value\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static randInt(rows, columns, maxValue, rng) {\r\n      if (maxValue === undefined) maxValue = 1000;\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          var value = Math.floor(rng() * maxValue);\r\n          matrix.set(i, j, value);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} [columns=rows] - Number of columns\r\n         * @param {number} [value=1] - Value to fill the diagonal with\r\n         * @return {Matrix} - The new identity matrix\r\n         */\r\n    static eye(rows, columns, value) {\r\n      if (columns === undefined) columns = rows;\r\n      if (value === undefined) value = 1;\r\n      var min = Math.min(rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, value);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a diagonal matrix based on the given array.\r\n         * @param {Array} data - Array containing the data for the diagonal\r\n         * @param {number} [rows] - Number of rows (Default: data.length)\r\n         * @param {number} [columns] - Number of columns (Default: rows)\r\n         * @return {Matrix} - The new diagonal matrix\r\n         */\r\n    static diag(data, rows, columns) {\r\n      var l = data.length;\r\n      if (rows === undefined) rows = l;\r\n      if (columns === undefined) columns = rows;\r\n      var min = Math.min(l, rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, data[i]);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static min(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static max(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Check that the provided value is a Matrix and tries to instantiate one if not\r\n         * @param {*} value - The value to check\r\n         * @return {Matrix}\r\n         */\r\n    static checkMatrix(value) {\r\n      return Matrix.isMatrix(value) ? value : new this(value);\r\n    }\r\n\r\n    /**\r\n         * Returns true if the argument is a Matrix, false otherwise\r\n         * @param {*} value - The value to check\r\n         * @return {boolean}\r\n         */\r\n    static isMatrix(value) {\r\n      return (value != null) && (value.klass === 'Matrix');\r\n    }\r\n\r\n    /**\r\n         * @prop {number} size - The number of elements in the matrix.\r\n         */\r\n    get size() {\r\n      return this.rows * this.columns;\r\n    }\r\n\r\n    /**\r\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\r\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\r\n         * @return {Matrix} this\r\n         */\r\n    apply(callback) {\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError('callback must be a function');\r\n      }\r\n      var ii = this.rows;\r\n      var jj = this.columns;\r\n      for (var i = 0; i < ii; i++) {\r\n        for (var j = 0; j < jj; j++) {\r\n          callback.call(this, i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new 1D array filled row by row with the matrix values\r\n         * @return {Array}\r\n         */\r\n    to1DArray() {\r\n      var array = new Array(this.size);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          array[i * this.columns + j] = this.get(i, j);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n         * Returns a 2D array containing a copy of the data\r\n         * @return {Array}\r\n         */\r\n    to2DArray() {\r\n      var copy = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        copy[i] = new Array(this.columns);\r\n        for (var j = 0; j < this.columns; j++) {\r\n          copy[i][j] = this.get(i, j);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row\r\n         */\r\n    isRowVector() {\r\n      return this.rows === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one column\r\n         */\r\n    isColumnVector() {\r\n      return this.columns === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row or one column\r\n         */\r\n    isVector() {\r\n      return (this.rows === 1) || (this.columns === 1);\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has the same number of rows and columns\r\n         */\r\n    isSquare() {\r\n      return this.rows === this.columns;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\r\n         */\r\n    isSymmetric() {\r\n      if (this.isSquare()) {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j <= i; j++) {\r\n            if (this.get(i, j) !== this.get(j, i)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n          * @return true if the matrix is in echelon form\r\n          */\r\n    isEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isEchelonForm;\r\n    }\r\n\r\n    /**\r\n             * @return true if the matrix is in reduced echelon form\r\n             */\r\n    isReducedEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isReducedEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isReducedEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isReducedEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        for (let k = j + 1; k < this.rows; k++) {\r\n          if (this.get(i, k) !== 0) {\r\n            isReducedEchelonForm = false;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isReducedEchelonForm;\r\n    }\r\n\r\n    /**\r\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @param {number} value - The new value for the element\r\n         * @return {Matrix} this\r\n         */\r\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\r\n      throw new Error('set method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @return {number}\r\n         */\r\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\r\n      throw new Error('get method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\r\n         * rows of the matrix, and colRep times the number of columns of the matrix\r\n         * @param {number} rowRep - Number of times the rows should be repeated\r\n         * @param {number} colRep - Number of times the columns should be re\r\n         * @return {Matrix}\r\n         * @example\r\n         * var matrix = new Matrix([[1,2]]);\r\n         * matrix.repeat(2); // [[1,2],[1,2]]\r\n         */\r\n    repeat(rowRep, colRep) {\r\n      rowRep = rowRep || 1;\r\n      colRep = colRep || 1;\r\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\r\n      for (var i = 0; i < rowRep; i++) {\r\n        for (var j = 0; j < colRep; j++) {\r\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Fills the matrix with a given value. All elements will be set to this value.\r\n         * @param {number} value - New value\r\n         * @return {Matrix} this\r\n         */\r\n    fill(value) {\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, value);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Negates the matrix. All elements will be multiplied by (-1)\r\n         * @return {Matrix} this\r\n         */\r\n    neg() {\r\n      return this.mulS(-1);\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Array}\r\n         */\r\n    getRow(index) {\r\n      checkRowIndex(this, index);\r\n      var row = new Array(this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        row[i] = this.get(index, i);\r\n      }\r\n      return row;\r\n    }\r\n\r\n    /**\r\n         * Returns a new row vector from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Matrix}\r\n         */\r\n    getRowVector(index) {\r\n      return this.constructor.rowVector(this.getRow(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a row at the given index\r\n         * @param {number} index - Row index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setRow(index, array) {\r\n      checkRowIndex(this, index);\r\n      array = checkRowVector(this, array);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two rows\r\n         * @param {number} row1 - First row index\r\n         * @param {number} row2 - Second row index\r\n         * @return {Matrix} this\r\n         */\r\n    swapRows(row1, row2) {\r\n      checkRowIndex(this, row1);\r\n      checkRowIndex(this, row2);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var temp = this.get(row1, i);\r\n        this.set(row1, i, this.get(row2, i));\r\n        this.set(row2, i, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Array}\r\n         */\r\n    getColumn(index) {\r\n      checkColumnIndex(this, index);\r\n      var column = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        column[i] = this.get(i, index);\r\n      }\r\n      return column;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column vector from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Matrix}\r\n         */\r\n    getColumnVector(index) {\r\n      return this.constructor.columnVector(this.getColumn(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a column at the given index\r\n         * @param {number} index - Column index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setColumn(index, array) {\r\n      checkColumnIndex(this, index);\r\n      array = checkColumnVector(this, array);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two columns\r\n         * @param {number} column1 - First column index\r\n         * @param {number} column2 - Second column index\r\n         * @return {Matrix} this\r\n         */\r\n    swapColumns(column1, column2) {\r\n      checkColumnIndex(this, column1);\r\n      checkColumnIndex(this, column2);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var temp = this.get(i, column1);\r\n        this.set(i, column1, this.get(i, column2));\r\n        this.set(i, column2, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each row by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each column by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a row with a scalar\r\n         * @param {number} index - Row index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulRow(index, value) {\r\n      checkRowIndex(this, index);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, this.get(index, i) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a column with a scalar\r\n         * @param {number} index - Column index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumn(index, value) {\r\n      checkColumnIndex(this, index);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, this.get(i, index) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of the matrix\r\n         * @return {number}\r\n         */\r\n    max() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value\r\n         * @return {Array}\r\n         */\r\n    maxIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of the matrix\r\n         * @return {number}\r\n         */\r\n    min() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value\r\n         * @return {Array}\r\n         */\r\n    minIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    maxRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    maxRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    minRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    minRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    maxColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    maxColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    minColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    minColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns an array containing the diagonal values of the matrix\r\n         * @return {Array}\r\n         */\r\n    diag() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var diag = new Array(min);\r\n      for (var i = 0; i < min; i++) {\r\n        diag[i] = this.get(i, i);\r\n      }\r\n      return diag;\r\n    }\r\n\r\n    /**\r\n         * Returns the sum by the argument given, if no argument given,\r\n         * it returns the sum of all elements of the matrix.\r\n         * @param {string} by - sum by 'row' or 'column'.\r\n         * @return {Matrix|number}\r\n         */\r\n    sum(by) {\r\n      switch (by) {\r\n        case 'row':\r\n          return sumByRow(this);\r\n        case 'column':\r\n          return sumByColumn(this);\r\n        default:\r\n          return sumAll(this);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns the mean of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    mean() {\r\n      return this.sum() / this.size;\r\n    }\r\n\r\n    /**\r\n         * Returns the product of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    prod() {\r\n      var prod = 1;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          prod *= this.get(i, j);\r\n        }\r\n      }\r\n      return prod;\r\n    }\r\n\r\n    /**\r\n         * Returns the norm of a matrix.\r\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\r\n         * @return {number}\r\n         */\r\n    norm(type = 'frobenius') {\r\n      var result = 0;\r\n      if (type === 'max') {\r\n        return this.max();\r\n      } else if (type === 'frobenius') {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j < this.columns; j++) {\r\n            result = result + this.get(i, j) * this.get(i, j);\r\n          }\r\n        }\r\n        return Math.sqrt(result);\r\n      } else {\r\n        throw new RangeError(`unknown norm type: ${type}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\r\n         * @return {Matrix} this\r\n         */\r\n    cumulativeSum() {\r\n      var sum = 0;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          sum += this.get(i, j);\r\n          this.set(i, j, sum);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Computes the dot (scalar) product between the matrix and another\r\n         * @param {Matrix} vector2 vector\r\n         * @return {number}\r\n         */\r\n    dot(vector2) {\r\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n      var vector1 = this.to1DArray();\r\n      if (vector1.length !== vector2.length) {\r\n        throw new RangeError('vectors do not have the same size');\r\n      }\r\n      var dot = 0;\r\n      for (var i = 0; i < vector1.length; i++) {\r\n        dot += vector1[i] * vector2[i];\r\n      }\r\n      return dot;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between this and other\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    mmul(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n      if (this.columns !== other.rows) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\r\n      }\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m, p);\r\n\r\n      var Bcolj = new Array(n);\r\n      for (var j = 0; j < p; j++) {\r\n        for (var k = 0; k < n; k++) {\r\n          Bcolj[k] = other.get(k, j);\r\n        }\r\n\r\n        for (var i = 0; i < m; i++) {\r\n          var s = 0;\r\n          for (k = 0; k < n; k++) {\r\n            s += this.get(i, k) * Bcolj[k];\r\n          }\r\n\r\n          result.set(i, j, s);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    strassen2x2(other) {\r\n      var result = new this.constructor[Symbol.species](2, 2);\r\n      const a11 = this.get(0, 0);\r\n      const b11 = other.get(0, 0);\r\n      const a12 = this.get(0, 1);\r\n      const b12 = other.get(0, 1);\r\n      const a21 = this.get(1, 0);\r\n      const b21 = other.get(1, 0);\r\n      const a22 = this.get(1, 1);\r\n      const b22 = other.get(1, 1);\r\n\r\n      // Compute intermediate values.\r\n      const m1 = (a11 + a22) * (b11 + b22);\r\n      const m2 = (a21 + a22) * b11;\r\n      const m3 = a11 * (b12 - b22);\r\n      const m4 = a22 * (b21 - b11);\r\n      const m5 = (a11 + a12) * b22;\r\n      const m6 = (a21 - a11) * (b11 + b12);\r\n      const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n      // Combine intermediate values into the output.\r\n      const c00 = m1 + m4 - m5 + m7;\r\n      const c01 = m3 + m5;\r\n      const c10 = m2 + m4;\r\n      const c11 = m1 - m2 + m3 + m6;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      return result;\r\n    }\r\n\r\n    strassen3x3(other) {\r\n      var result = new this.constructor[Symbol.species](3, 3);\r\n\r\n      const a00 = this.get(0, 0);\r\n      const a01 = this.get(0, 1);\r\n      const a02 = this.get(0, 2);\r\n      const a10 = this.get(1, 0);\r\n      const a11 = this.get(1, 1);\r\n      const a12 = this.get(1, 2);\r\n      const a20 = this.get(2, 0);\r\n      const a21 = this.get(2, 1);\r\n      const a22 = this.get(2, 2);\r\n\r\n      const b00 = other.get(0, 0);\r\n      const b01 = other.get(0, 1);\r\n      const b02 = other.get(0, 2);\r\n      const b10 = other.get(1, 0);\r\n      const b11 = other.get(1, 1);\r\n      const b12 = other.get(1, 2);\r\n      const b20 = other.get(2, 0);\r\n      const b21 = other.get(2, 1);\r\n      const b22 = other.get(2, 2);\r\n\r\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n      const m2 = (a00 - a10) * (-b01 + b11);\r\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n      const m5 = (a10 + a11) * (-b00 + b01);\r\n      const m6 = a00 * b00;\r\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n      const m8 = (-a00 + a20) * (b02 - b12);\r\n      const m9 = (a20 + a21) * (-b00 + b02);\r\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n      const m13 = (a02 - a22) * (b11 - b21);\r\n      const m14 = a02 * b20;\r\n      const m15 = (a21 + a22) * (-b20 + b21);\r\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n      const m17 = (a02 - a12) * (b12 - b22);\r\n      const m18 = (a11 + a12) * (-b20 + b22);\r\n      const m19 = a01 * b10;\r\n      const m20 = a12 * b21;\r\n      const m21 = a10 * b02;\r\n      const m22 = a20 * b01;\r\n      const m23 = a22 * b22;\r\n\r\n      const c00 = m6 + m14 + m19;\r\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n      const c11 = m2 + m4 + m5 + m6 + m20;\r\n      const c12 = m14 + m16 + m17 + m18 + m21;\r\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n      const c21 = m12 + m13 + m14 + m15 + m22;\r\n      const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(0, 2, c02);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      result.set(1, 2, c12);\r\n      result.set(2, 0, c20);\r\n      result.set(2, 1, c21);\r\n      result.set(2, 2, c22);\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\r\n         * @param {Matrix} y\r\n         * @return {Matrix}\r\n         */\r\n    mmulStrassen(y) {\r\n      var x = this.clone();\r\n      var r1 = x.rows;\r\n      var c1 = x.columns;\r\n      var r2 = y.rows;\r\n      var c2 = y.columns;\r\n      if (c1 !== r2) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\r\n      }\r\n\r\n      // Put a matrix into the top left of a matrix of zeros.\r\n      // `rows` and `cols` are the dimensions of the output matrix.\r\n      function embed(mat, rows, cols) {\r\n        var r = mat.rows;\r\n        var c = mat.columns;\r\n        if ((r === rows) && (c === cols)) {\r\n          return mat;\r\n        } else {\r\n          var resultat = Matrix.zeros(rows, cols);\r\n          resultat = resultat.setSubMatrix(mat, 0, 0);\r\n          return resultat;\r\n        }\r\n      }\r\n\r\n\r\n      // Make sure both matrices are the same size.\r\n      // This is exclusively for simplicity:\r\n      // this algorithm can be implemented with matrices of different sizes.\r\n\r\n      var r = Math.max(r1, r2);\r\n      var c = Math.max(c1, c2);\r\n      x = embed(x, r, c);\r\n      y = embed(y, r, c);\r\n\r\n      // Our recursive multiplication function.\r\n      function blockMult(a, b, rows, cols) {\r\n        // For small matrices, resort to naive multiplication.\r\n        if (rows <= 512 || cols <= 512) {\r\n          return a.mmul(b); // a is equivalent to this\r\n        }\r\n\r\n        // Apply dynamic padding.\r\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\r\n          a = embed(a, rows + 1, cols + 1);\r\n          b = embed(b, rows + 1, cols + 1);\r\n        } else if (rows % 2 === 1) {\r\n          a = embed(a, rows + 1, cols);\r\n          b = embed(b, rows + 1, cols);\r\n        } else if (cols % 2 === 1) {\r\n          a = embed(a, rows, cols + 1);\r\n          b = embed(b, rows, cols + 1);\r\n        }\r\n\r\n        var halfRows = parseInt(a.rows / 2, 10);\r\n        var halfCols = parseInt(a.columns / 2, 10);\r\n        // Subdivide input matrices.\r\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n        // Compute intermediate values.\r\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\r\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\r\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\r\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\r\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\r\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\r\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\r\n\r\n        // Combine intermediate values into the output.\r\n        var c11 = Matrix.add(m1, m4);\r\n        c11.sub(m5);\r\n        c11.add(m7);\r\n        var c12 = Matrix.add(m3, m5);\r\n        var c21 = Matrix.add(m2, m4);\r\n        var c22 = Matrix.sub(m1, m2);\r\n        c22.add(m3);\r\n        c22.add(m6);\r\n\r\n        // Crop output to the desired size (undo dynamic padding).\r\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n        resultat = resultat.setSubMatrix(c11, 0, 0);\r\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n      }\r\n      return blockMult(x, y, r, c);\r\n    }\r\n\r\n    /**\r\n         * Returns a row-by-row scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The scaled matrix\r\n         */\r\n    scaleRows(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var scaled = rescale(this.getRow(i), { min, max });\r\n        newMatrix.setRow(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column-by-column scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The new scaled matrix\r\n         * @example\r\n         * var matrix = new Matrix([[1,2],[-1,0]]);\r\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\r\n         */\r\n    scaleColumns(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var scaled = rescale(this.getColumn(i), {\r\n          min: min,\r\n          max: max\r\n        });\r\n        newMatrix.setColumn(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n\r\n    /**\r\n         * Returns the Kronecker product (also known as tensor product) between this and other\r\n         * See https://en.wikipedia.org/wiki/Kronecker_product\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    kroneckerProduct(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.rows;\r\n      var q = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m * p, n * q);\r\n      for (var i = 0; i < m; i++) {\r\n        for (var j = 0; j < n; j++) {\r\n          for (var k = 0; k < p; k++) {\r\n            for (var l = 0; l < q; l++) {\r\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Transposes the matrix and returns a new one containing the result\r\n         * @return {Matrix}\r\n         */\r\n    transpose() {\r\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          result.set(j, i, this.get(i, j));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Sorts the rows (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortRows(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.setRow(i, this.getRow(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Sorts the columns (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortColumns(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix\r\n         * @param {number} startRow - First row index\r\n         * @param {number} endRow - Last row index\r\n         * @param {number} startColumn - First column index\r\n         * @param {number} endColumn - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrix(startRow, endRow, startColumn, endColumn) {\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\r\n      for (var i = startRow; i <= endRow; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of row indices\r\n         * @param {Array} indices - Array containing the row indices\r\n         * @param {number} [startColumn = 0] - First column index\r\n         * @param {number} [endColumn = this.columns-1] - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixRow(indices, startColumn, endColumn) {\r\n      if (startColumn === undefined) startColumn = 0;\r\n      if (endColumn === undefined) endColumn = this.columns - 1;\r\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.rows) {\r\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of column indices\r\n         * @param {Array} indices - Array containing the column indices\r\n         * @param {number} [startRow = 0] - First row index\r\n         * @param {number} [endRow = this.rows-1] - Last row index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixColumn(indices, startRow, endRow) {\r\n      if (startRow === undefined) startRow = 0;\r\n      if (endRow === undefined) endRow = this.rows - 1;\r\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startRow; j <= endRow; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.columns) {\r\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Set a part of the matrix to the given sub-matrix\r\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\r\n         * @param {number} startRow - The index of the first row to set\r\n         * @param {number} startColumn - The index of the first column to set\r\n         * @return {Matrix}\r\n         */\r\n    setSubMatrix(matrix, startRow, startColumn) {\r\n      matrix = this.constructor.checkMatrix(matrix);\r\n      var endRow = startRow + matrix.rows - 1;\r\n      var endColumn = startColumn + matrix.columns - 1;\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      for (var i = 0; i < matrix.rows; i++) {\r\n        for (var j = 0; j < matrix.columns; j++) {\r\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Return a new matrix based on a selection of rows and columns\r\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\r\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    selection(rowIndices, columnIndices) {\r\n      var indices = checkIndices(this, rowIndices, columnIndices);\r\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\r\n      for (var i = 0; i < indices.row.length; i++) {\r\n        var rowIndex = indices.row[i];\r\n        for (var j = 0; j < indices.column.length; j++) {\r\n          var columnIndex = indices.column[j];\r\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns the trace of the matrix (sum of the diagonal elements)\r\n         * @return {number}\r\n         */\r\n    trace() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var trace = 0;\r\n      for (var i = 0; i < min; i++) {\r\n        trace += this.get(i, i);\r\n      }\r\n      return trace;\r\n    }\r\n\r\n    /*\r\n         Matrix views\r\n         */\r\n\r\n    /**\r\n         * Returns a view of the transposition of the matrix\r\n         * @return {MatrixTransposeView}\r\n         */\r\n    transposeView() {\r\n      return new MatrixTransposeView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row vector with the given index\r\n         * @param {number} row - row index of the vector\r\n         * @return {MatrixRowView}\r\n         */\r\n    rowView(row) {\r\n      checkRowIndex(this, row);\r\n      return new MatrixRowView(this, row);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column vector with the given index\r\n         * @param {number} column - column index of the vector\r\n         * @return {MatrixColumnView}\r\n         */\r\n    columnView(column) {\r\n      checkColumnIndex(this, column);\r\n      return new MatrixColumnView(this, column);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the row axis\r\n         * @return {MatrixFlipRowView}\r\n         */\r\n    flipRowView() {\r\n      return new MatrixFlipRowView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the column axis\r\n         * @return {MatrixFlipColumnView}\r\n         */\r\n    flipColumnView() {\r\n      return new MatrixFlipColumnView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of a submatrix giving the index boundaries\r\n         * @param {number} startRow - first row index of the submatrix\r\n         * @param {number} endRow - last row index of the submatrix\r\n         * @param {number} startColumn - first column index of the submatrix\r\n         * @param {number} endColumn - last column index of the submatrix\r\n         * @return {MatrixSubView}\r\n         */\r\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\r\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the cross of the row indices and the column indices\r\n         * @example\r\n         * // resulting vector is [[2], [2]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\r\n         * @param {Array<number>} rowIndices\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixSelectionView}\r\n         */\r\n    selectionView(rowIndices, columnIndices) {\r\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row indices\r\n         * @example\r\n         * // resulting vector is [[1,2,3], [1,2,3]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\r\n         * @param {Array<number>} rowIndices\r\n         * @return {MatrixRowSelectionView}\r\n         */\r\n    rowSelectionView(rowIndices) {\r\n      return new MatrixRowSelectionView(this, rowIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column indices\r\n         * @example\r\n         * // resulting vector is [[2, 2], [5, 5]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixColumnSelectionView}\r\n         */\r\n    columnSelectionView(columnIndices) {\r\n      return new MatrixColumnSelectionView(this, columnIndices);\r\n    }\r\n\r\n\r\n    /**\r\n        * Calculates and returns the determinant of a matrix as a Number\r\n        * @example\r\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\r\n        * @return {number}\r\n        */\r\n    det() {\r\n      if (this.isSquare()) {\r\n        var a, b, c, d;\r\n        if (this.columns === 2) {\r\n          // 2 x 2 matrix\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(1, 0);\r\n          d = this.get(1, 1);\r\n\r\n          return a * d - (b * c);\r\n        } else if (this.columns === 3) {\r\n          // 3 x 3 matrix\r\n          var subMatrix0, subMatrix1, subMatrix2;\r\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\r\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\r\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(0, 2);\r\n\r\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\r\n        } else {\r\n          // general purpose determinant using the LU decomposition\r\n          return new LuDecomposition(this).determinant;\r\n        }\r\n      } else {\r\n        throw Error('Determinant can only be calculated for a square matrix.');\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns inverse of a matrix if it exists or the pseudoinverse\r\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\r\n         * @return {Matrix} the (pseudo)inverted matrix.\r\n         */\r\n    pseudoInverse(threshold) {\r\n      if (threshold === undefined) threshold = Number.EPSILON;\r\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\r\n\r\n      var U = svdSolution.leftSingularVectors;\r\n      var V = svdSolution.rightSingularVectors;\r\n      var s = svdSolution.diagonal;\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n        if (Math.abs(s[i]) > threshold) {\r\n          s[i] = 1.0 / s[i];\r\n        } else {\r\n          s[i] = 0.0;\r\n        }\r\n      }\r\n\r\n      // convert list to diagonal\r\n      s = this.constructor[Symbol.species].diag(s);\r\n      return V.mmul(s.mmul(U.transposeView()));\r\n    }\r\n\r\n    /**\r\n         * Creates an exact and independent copy of the matrix\r\n         * @return {Matrix}\r\n         */\r\n    clone() {\r\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\r\n      for (var row = 0; row < this.rows; row++) {\r\n        for (var column = 0; column < this.columns; column++) {\r\n          newMatrix.set(row, column, this.get(row, column));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n  }\r\n\r\n  Matrix.prototype.klass = 'Matrix';\r\n\r\n  function compareNumbers(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n     Synonyms\r\n     */\r\n\r\n  Matrix.random = Matrix.rand;\r\n  Matrix.diagonal = Matrix.diag;\r\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\r\n  Matrix.identity = Matrix.eye;\r\n  Matrix.prototype.negate = Matrix.prototype.neg;\r\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\r\n  Matrix.prototype.determinant = Matrix.prototype.det;\r\n\r\n  /*\r\n     Add dynamically instance and static methods for mathematical operations\r\n     */\r\n\r\n  var inplaceOperator = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var inplaceOperatorScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% value);\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceOperatorMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticOperator = `\r\n(function %name%(matrix, value) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(value);\r\n})\r\n`;\r\n\r\n  var inplaceMethod = `\r\n(function %name%() {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethod = `\r\n(function %name%(matrix) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%();\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithArgs = `\r\n(function %name%(%args%) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), %args%));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethodWithArgs = `\r\n(function %name%(matrix, %args%) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(%args%);\r\n})\r\n`;\r\n\r\n\r\n  var inplaceMethodWithOneArgScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), value));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n  var inplaceMethodWithOneArgMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithOneArg = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var staticMethodWithOneArg = staticMethodWithArgs;\r\n\r\n  var operators = [\r\n    // Arithmetic operators\r\n    ['+', 'add'],\r\n    ['-', 'sub', 'subtract'],\r\n    ['*', 'mul', 'multiply'],\r\n    ['/', 'div', 'divide'],\r\n    ['%', 'mod', 'modulus'],\r\n    // Bitwise operators\r\n    ['&', 'and'],\r\n    ['|', 'or'],\r\n    ['^', 'xor'],\r\n    ['<<', 'leftShift'],\r\n    ['>>', 'signPropagatingRightShift'],\r\n    ['>>>', 'rightShift', 'zeroFillRightShift']\r\n  ];\r\n\r\n  var i;\r\n  var eval2 = eval; // eslint-disable-line no-eval\r\n  for (var operator of operators) {\r\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\r\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\r\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\r\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\r\n    for (i = 1; i < operator.length; i++) {\r\n      Matrix.prototype[operator[i]] = inplaceOp;\r\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\r\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\r\n      Matrix[operator[i]] = staticOp;\r\n    }\r\n  }\r\n\r\n  var methods = [['~', 'not']];\r\n\r\n  [\r\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\r\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\r\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n  ].forEach(function (mathMethod) {\r\n    methods.push([`Math.${mathMethod}`, mathMethod]);\r\n  });\r\n\r\n  for (var method of methods) {\r\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\r\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\r\n    for (i = 1; i < method.length; i++) {\r\n      Matrix.prototype[method[i]] = inplaceMeth;\r\n      Matrix[method[i]] = staticMeth;\r\n    }\r\n  }\r\n\r\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\r\n\r\n  for (var methodWithArg of methodsWithArgs) {\r\n    var args = 'arg0';\r\n    for (i = 1; i < methodWithArg[1]; i++) {\r\n      args += `, arg${i}`;\r\n    }\r\n    if (methodWithArg[1] !== 1) {\r\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\r\n        name: methodWithArg[2],\r\n        method: methodWithArg[0],\r\n        args: args\r\n      }));\r\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\r\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\r\n      }\r\n    } else {\r\n      var tmplVar = {\r\n        name: methodWithArg[2],\r\n        args: args,\r\n        method: methodWithArg[0]\r\n      };\r\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\r\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\r\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\r\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\r\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\r\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\r\n        Matrix[methodWithArg[i]] = staticMethod2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function fillTemplateFunction(template, values) {\r\n    for (var value in values) {\r\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\r\n    }\r\n    return template;\r\n  }\r\n\r\n  return Matrix;\r\n}\r\n","import AbstractMatrix from './abstractMatrix';\r\nimport {\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRowIndex,\r\n  checkRowVector\r\n} from './util';\r\n\r\nexport default class Matrix extends AbstractMatrix(Array) {\r\n  constructor(nRows, nColumns) {\r\n    var i;\r\n    if (arguments.length === 1 && typeof nRows === 'number') {\r\n      return new Array(nRows);\r\n    }\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      super(nRows);\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (i = 0; i < nRows; i++) {\r\n          this[i] = new Array(nColumns);\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const matrix = nRows;\r\n      nRows = matrix.length;\r\n      nColumns = matrix[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element'\r\n        );\r\n      }\r\n      super(nRows);\r\n      for (i = 0; i < nRows; i++) {\r\n        if (matrix[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this[i] = [].concat(matrix[i]);\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array'\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this[rowIndex][columnIndex];\r\n  }\r\n\r\n  /**\r\n   * Removes a row from the given index\r\n   * @param {number} index - Row index\r\n   * @return {Matrix} this\r\n   */\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a row at the given index\r\n   * @param {number} [index = this.rows] - Row index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = checkRowVector(this, array, true);\r\n    this.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a column from the given index\r\n   * @param {number} index - Column index\r\n   * @return {Matrix} this\r\n   */\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 1);\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a column at the given index\r\n   * @param {number} [index = this.columns] - Column index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 0, array[i]);\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix1D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix1D\r\n   * @param {Array<number>} data\r\n   * @param {object} [options]\r\n   * @param {object} [options.rows = 1]\r\n   */\r\n  constructor(data, options = {}) {\r\n    const { rows = 1 } = options;\r\n\r\n    if (data.length % rows !== 0) {\r\n      throw new Error('the data length is not divisible by the number of rows');\r\n    }\r\n    super();\r\n    this.rows = rows;\r\n    this.columns = data.length / rows;\r\n    this.data = data;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    this.data[index] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    return this.data[index];\r\n  }\r\n\r\n  _calculateIndex(row, column) {\r\n    return row * this.columns + column;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix2D\r\n   * @param {Array<Array<number>>} data\r\n   */\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import WrapperMatrix1D from './WrapperMatrix1D';\r\nimport WrapperMatrix2D from './WrapperMatrix2D';\r\n\r\n/**\r\n * @param {Array<Array<number>>|Array<number>} array\r\n * @param {object} [options]\r\n * @param {object} [options.rows = 1]\r\n * @return {WrapperMatrix1D|WrapperMatrix2D}\r\n */\r\nexport function wrap(array, options) {\r\n  if (Array.isArray(array)) {\r\n    if (array[0] && Array.isArray(array[0])) {\r\n      return new WrapperMatrix2D(array);\r\n    } else {\r\n      return new WrapperMatrix1D(array, options);\r\n    }\r\n  } else {\r\n    throw new Error('the argument is not an array');\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse } from './util';\r\n\r\n/**\r\n * @class QrDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class QrDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var qr = value.clone();\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n    var rdiag = new Array(n);\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      var nrm = 0;\r\n      for (i = k; i < m; i++) {\r\n        nrm = hypotenuse(nrm, qr.get(i, k));\r\n      }\r\n      if (nrm !== 0) {\r\n        if (qr.get(k, k) < 0) {\r\n          nrm = -nrm;\r\n        }\r\n        for (i = k; i < m; i++) {\r\n          qr.set(i, k, qr.get(i, k) / nrm);\r\n        }\r\n        qr.set(k, k, qr.get(k, k) + 1);\r\n        for (j = k + 1; j < n; j++) {\r\n          s = 0;\r\n          for (i = k; i < m; i++) {\r\n            s += qr.get(i, k) * qr.get(i, j);\r\n          }\r\n          s = -s / qr.get(k, k);\r\n          for (i = k; i < m; i++) {\r\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\r\n          }\r\n        }\r\n      }\r\n      rdiag[k] = -nrm;\r\n    }\r\n\r\n    this.QR = qr;\r\n    this.Rdiag = rdiag;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var qr = QrDecomposition(A);\r\n   * var x = qr.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var qr = this.QR;\r\n    var m = qr.rows;\r\n\r\n    if (value.rows !== m) {\r\n      throw new Error('Matrix row dimensions must agree');\r\n    }\r\n    if (!this.isFullRank()) {\r\n      throw new Error('Matrix is rank deficient');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.clone();\r\n    var n = qr.columns;\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        s = 0;\r\n        for (i = k; i < m; i++) {\r\n          s += qr[i][k] * X[i][j];\r\n        }\r\n        s = -s / qr[k][k];\r\n        for (i = k; i < m; i++) {\r\n          X[i][j] += s * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = n - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= this.Rdiag[k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n\r\n    return X.subMatrix(0, n - 1, 0, count - 1);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isFullRank() {\r\n    var columns = this.QR.columns;\r\n    for (var i = 0; i < columns; i++) {\r\n      if (this.Rdiag[i] === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var qr = this.QR;\r\n    var n = qr.columns;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        if (i < j) {\r\n          X[i][j] = qr[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = this.Rdiag[i];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get orthogonalMatrix() {\r\n    var qr = this.QR;\r\n    var rows = qr.rows;\r\n    var columns = qr.columns;\r\n    var X = new Matrix(rows, columns);\r\n    var i, j, k, s;\r\n\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (i = 0; i < rows; i++) {\r\n        X[i][k] = 0;\r\n      }\r\n      X[k][k] = 1;\r\n      for (j = k; j < columns; j++) {\r\n        if (qr[k][k] !== 0) {\r\n          s = 0;\r\n          for (i = k; i < rows; i++) {\r\n            s += qr[i][k] * X[i][j];\r\n          }\r\n\r\n          s = -s / qr[k][k];\r\n\r\n          for (i = k; i < rows; i++) {\r\n            X[i][j] += s * qr[i][k];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n","import LuDecomposition from './dc/lu';\r\nimport QrDecomposition from './dc/qr';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\nimport { Matrix, WrapperMatrix2D } from './index';\r\n\r\n/**\r\n * Computes the inverse of a Matrix\r\n * @param {Matrix} matrix\r\n * @param {boolean} [useSVD=false]\r\n * @return {Matrix}\r\n */\r\nexport function inverse(matrix, useSVD = false) {\r\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(matrix).inverse();\r\n  } else {\r\n    return solve(matrix, Matrix.eye(matrix.rows));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Matrix} leftHandSide\r\n * @param {Matrix} rightHandSide\r\n * @param {boolean} [useSVD = false]\r\n * @return {Matrix}\r\n */\r\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\r\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\r\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\r\n  } else {\r\n    return leftHandSide.isSquare()\r\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\r\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\r\n  }\r\n}\r\n","import max from 'ml-array-max';\r\n\r\nimport Matrix from './matrix';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\n// function used by rowsDependencies\r\nfunction xrange(n, exception) {\r\n  var range = [];\r\n  for (var i = 0; i < n; i++) {\r\n    if (i !== exception) {\r\n      range.push(i);\r\n    }\r\n  }\r\n  return range;\r\n}\r\n\r\n// function used by rowsDependencies\r\nfunction dependenciesOneRow(\r\n  error,\r\n  matrix,\r\n  index,\r\n  thresholdValue = 10e-10,\r\n  thresholdError = 10e-10\r\n) {\r\n  if (error > thresholdError) {\r\n    return new Array(matrix.rows + 1).fill(0);\r\n  } else {\r\n    var returnArray = matrix.addRow(index, [0]);\r\n    for (var i = 0; i < returnArray.rows; i++) {\r\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\r\n        returnArray.set(i, 0, 0);\r\n      }\r\n    }\r\n    return returnArray.to1DArray();\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a matrix which represents the dependencies between rows.\r\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\r\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\r\n * @param {Matrix} matrix\r\n * @param {Object} [options] includes thresholdValue and thresholdError.\r\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\r\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\r\n * @return {Matrix} the matrix which represents the dependencies between rows.\r\n */\r\n\r\nexport function linearDependencies(matrix, options = {}) {\r\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\r\n\r\n  var n = matrix.rows;\r\n  var results = new Matrix(n, n);\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    var b = Matrix.columnVector(matrix.getRow(i));\r\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\r\n    var svd = new SingularValueDecomposition(Abis);\r\n    var x = svd.solve(b);\r\n    var error = max(\r\n      Matrix.sub(b, Abis.mmul(x))\r\n        .abs()\r\n        .to1DArray()\r\n    );\r\n    results.setRow(\r\n      i,\r\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\r\n    );\r\n  }\r\n  return results;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class EigenvalueDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\r\n * @param {Matrix} matrix\r\n * @param {object} [options]\r\n * @param {boolean} [options.assumeSymmetric=false]\r\n */\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    var n = matrix.columns;\r\n    var V = getFilled2DArray(n, n, 0);\r\n    var d = new Array(n);\r\n    var e = new Array(n);\r\n    var value = matrix;\r\n    var i, j;\r\n\r\n    var isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      var H = getFilled2DArray(n, n, 0);\r\n      var ort = new Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get realEigenvalues() {\r\n    return this.d;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get imaginaryEigenvalues() {\r\n    return this.e;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get eigenvectorMatrix() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    var n = this.n;\r\n    var e = this.e;\r\n    var d = this.d;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X[i][j] = 0;\r\n      }\r\n      X[i][i] = d[i];\r\n      if (e[i] > 0) {\r\n        X[i][i + 1] = e[i];\r\n      } else if (e[i] < 0) {\r\n        X[i][i - 1] = e[i];\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  var f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n        V[j][i] = 0;\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V[j][i] = f;\r\n        g = e[j] + V[j][j] * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V[k][j] * d[k];\r\n          e[k] += V[k][j] * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V[k][j] -= f * e[k] + g * d[k];\r\n        }\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V[n - 1][i] = V[i][i];\r\n    V[i][i] = 1;\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V[k][i + 1] / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V[k][i + 1] * V[k][j];\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V[k][j] -= g * d[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V[k][i + 1] = 0;\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n    V[n - 1][j] = 0;\r\n  }\r\n\r\n  V[n - 1][n - 1] = 1;\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  var f = 0;\r\n  var tst1 = 0;\r\n  var eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V[k][i + 1];\r\n            V[k][i + 1] = s * V[k][i] + c * h;\r\n            V[k][i] = c * V[k][i] - s * h;\r\n          }\r\n        }\r\n\r\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V[j][i];\r\n        V[j][i] = V[j][k];\r\n        V[j][k] = p;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  var low = 0;\r\n  var high = n - 1;\r\n  var f, g, h, i, j, m;\r\n  var scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H[i][m - 1]);\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H[i][m - 1] / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H[i][j] -= f * ort[i];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H[i][j] -= f * ort[j];\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H[m][m - 1] = scale * g;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V[i][j] = i === j ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H[m][m - 1] !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H[i][m - 1];\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V[i][j];\r\n        }\r\n\r\n        g = g / ort[m] / H[m][m - 1];\r\n        for (i = m; i <= high; i++) {\r\n          V[i][j] += g * ort[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  var n = nn - 1;\r\n  var low = 0;\r\n  var high = nn - 1;\r\n  var eps = Number.EPSILON;\r\n  var exshift = 0;\r\n  var norm = 0;\r\n  var p = 0;\r\n  var q = 0;\r\n  var r = 0;\r\n  var s = 0;\r\n  var z = 0;\r\n  var iter = 0;\r\n  var i, j, k, l, m, t, w, x, y;\r\n  var ra, sa, vr, vi;\r\n  var notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H[i][i];\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H[i][j]);\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H[l][l - 1]) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H[n][n] = H[n][n] + exshift;\r\n      d[n] = H[n][n];\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H[n][n - 1] * H[n - 1][n];\r\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H[n][n] = H[n][n] + exshift;\r\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\r\n      x = H[n][n];\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H[n][n - 1];\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H[n - 1][j];\r\n          H[n - 1][j] = q * z + p * H[n][j];\r\n          H[n][j] = q * H[n][j] - p * z;\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H[i][n - 1];\r\n          H[i][n - 1] = q * z + p * H[i][n];\r\n          H[i][n] = q * H[i][n] - p * z;\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V[i][n - 1];\r\n          V[i][n - 1] = q * z + p * V[i][n];\r\n          V[i][n] = q * V[i][n] - p * z;\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H[n][n];\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H[n - 1][n - 1];\r\n        w = H[n][n - 1] * H[n - 1][n];\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H[i][i] -= x;\r\n        }\r\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H[i][i] -= s;\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H[m][m];\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\r\n        q = H[m + 1][m + 1] - z - r - s;\r\n        r = H[m + 2][m + 1];\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H[m - 1][m - 1]) +\r\n                Math.abs(z) +\r\n                Math.abs(H[m + 1][m + 1])))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H[i][i - 2] = 0;\r\n        if (i > m + 2) {\r\n          H[i][i - 3] = 0;\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H[k][k - 1];\r\n          q = H[k + 1][k - 1];\r\n          r = notlast ? H[k + 2][k - 1] : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H[k][k - 1] = -s * x;\r\n          } else if (l !== m) {\r\n            H[k][k - 1] = -H[k][k - 1];\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H[k][j] + q * H[k + 1][j];\r\n            if (notlast) {\r\n              p = p + r * H[k + 2][j];\r\n              H[k + 2][j] = H[k + 2][j] - p * z;\r\n            }\r\n\r\n            H[k][j] = H[k][j] - p * x;\r\n            H[k + 1][j] = H[k + 1][j] - p * y;\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H[i][k] + y * H[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * H[i][k + 2];\r\n              H[i][k + 2] = H[i][k + 2] - p * r;\r\n            }\r\n\r\n            H[i][k] = H[i][k] - p;\r\n            H[i][k + 1] = H[i][k + 1] - p * q;\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V[i][k] + y * V[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * V[i][k + 2];\r\n              V[i][k + 2] = V[i][k + 2] - p * r;\r\n            }\r\n\r\n            V[i][k] = V[i][k] - p;\r\n            V[i][k + 1] = V[i][k + 1] - p * q;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H[n][n] = 1;\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H[i][i] - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H[i][j] * H[j][n];\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H[i][n] = t;\r\n            H[i + 1][n] =\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\r\n          }\r\n\r\n          t = Math.abs(H[i][n]);\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\r\n        H[n - 1][n - 1] = q / H[n][n - 1];\r\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\r\n      } else {\r\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\r\n        H[n - 1][n - 1] = cdivres[0];\r\n        H[n - 1][n] = cdivres[1];\r\n      }\r\n\r\n      H[n][n - 1] = 0;\r\n      H[n][n] = 1;\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H[i][j] * H[j][n - 1];\r\n          sa = sa + H[i][j] * H[j][n];\r\n        }\r\n\r\n        w = H[i][i] - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi\r\n            );\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\r\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\r\n            } else {\r\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\r\n              H[i + 1][n - 1] = cdivres[0];\r\n              H[i + 1][n] = cdivres[1];\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n - 1] = H[j][n - 1] / t;\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V[i][j] = H[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V[i][k] * H[k][j];\r\n      }\r\n      V[i][j] = z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  var r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class CholeskyDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class CholeskyDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n    if (!value.isSymmetric()) {\r\n      throw new Error('Matrix is not symmetric');\r\n    }\r\n\r\n    var a = value;\r\n    var dimension = a.rows;\r\n    var l = new Matrix(dimension, dimension);\r\n    var positiveDefinite = true;\r\n    var i, j, k;\r\n\r\n    for (j = 0; j < dimension; j++) {\r\n      var Lrowj = l[j];\r\n      var d = 0;\r\n      for (k = 0; k < j; k++) {\r\n        var Lrowk = l[k];\r\n        var s = 0;\r\n        for (i = 0; i < k; i++) {\r\n          s += Lrowk[i] * Lrowj[i];\r\n        }\r\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\r\n        d = d + s * s;\r\n      }\r\n\r\n      d = a.get(j, j) - d;\r\n\r\n      positiveDefinite &= d > 0;\r\n      l[j][j] = Math.sqrt(Math.max(d, 0));\r\n      for (k = j + 1; k < dimension; k++) {\r\n        l[j][k] = 0;\r\n      }\r\n    }\r\n\r\n    if (!positiveDefinite) {\r\n      throw new Error('Matrix is not positive definite');\r\n    }\r\n\r\n    this.L = l;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var l = this.L;\r\n    var dimension = l.rows;\r\n\r\n    if (value.rows !== dimension) {\r\n      throw new Error('Matrix dimensions do not match');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var B = value.clone();\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < dimension; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = 0; i < k; i++) {\r\n          B[k][j] -= B[i][j] * l[k][i];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    for (k = dimension - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = k + 1; i < dimension; i++) {\r\n          B[k][j] -= B[i][j] * l[i][k];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    return B;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    return this.L;\r\n  }\r\n}\r\n","export { default, default as Matrix } from './matrix';\r\nexport { default as abstractMatrix } from './abstractMatrix';\r\n\r\nexport { wrap } from './wrap/wrap';\r\nexport { default as WrapperMatrix2D } from './wrap/WrapperMatrix2D';\r\nexport { default as WrapperMatrix1D } from './wrap/WrapperMatrix1D';\r\n\r\nexport { solve, inverse } from './decompositions';\r\nexport { linearDependencies } from './linearDependencies';\r\nexport {\r\n  default as SingularValueDecomposition,\r\n  default as SVD\r\n} from './dc/svd.js';\r\nexport {\r\n  default as EigenvalueDecomposition,\r\n  default as EVD\r\n} from './dc/evd.js';\r\nexport {\r\n  default as CholeskyDecomposition,\r\n  default as CHO\r\n} from './dc/cholesky.js';\r\nexport { default as LuDecomposition, default as LU } from './dc/lu.js';\r\nexport { default as QrDecomposition, default as QR } from './dc/qr.js';\r\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nfunction squaredEuclidean(p, q) {\n    var d = 0;\n    for (var i = 0; i < p.length; i++) {\n        d += (p[i] - q[i]) * (p[i] - q[i]);\n    }\n    return d;\n}\n\nfunction euclidean(p, q) {\n    return Math.sqrt(squaredEuclidean(p, q));\n}\n\nmodule.exports = euclidean;\neuclidean.squared = squaredEuclidean;\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction mean(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sum = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sum += input[i];\n  }\n\n  return sum / input.length;\n}\n\nexport default mean;\n","module.exports = function(haystack, needle, comparator, low, high) {\n  var mid, cmp;\n\n  if(low === undefined)\n    low = 0;\n\n  else {\n    low = low|0;\n    if(low < 0 || low >= haystack.length)\n      throw new RangeError(\"invalid lower bound\");\n  }\n\n  if(high === undefined)\n    high = haystack.length - 1;\n\n  else {\n    high = high|0;\n    if(high < low || high >= haystack.length)\n      throw new RangeError(\"invalid upper bound\");\n  }\n\n  while(low <= high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle, mid, haystack);\n\n    /* Too low. */\n    if(cmp < 0.0)\n      low  = mid + 1;\n\n    /* Too high. */\n    else if(cmp > 0.0)\n      high = mid - 1;\n\n    /* Key found. */\n    else\n      return mid;\n  }\n\n  /* Key not found. */\n  return ~low;\n}\n","'use strict';\nvar numberIsNan = require('number-is-nan');\n\nfunction assertNum(x) {\n\tif (typeof x !== 'number' || numberIsNan(x)) {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.asc = function (a, b) {\n\tassertNum(a);\n\tassertNum(b);\n\treturn a - b;\n};\n\nexports.desc = function (a, b) {\n\tassertNum(a);\n\tassertNum(b);\n\treturn b - a;\n};\n","import Matrix from 'ml-matrix';\nimport meanArray from 'ml-array-mean';\n\n/**\n * @private\n * return an array of probabilities of each class\n * @param {Array} array - contains the classes\n * @param {number} numberOfClasses\n * @return {Matrix} - rowVector of probabilities.\n */\nexport function toDiscreteDistribution(array, numberOfClasses) {\n    var counts = new Array(numberOfClasses).fill(0);\n    for (var i = 0; i < array.length; ++i) {\n        counts[array[i]] += 1 / array.length;\n    }\n\n    return Matrix.rowVector(counts);\n}\n\n/**\n * @private\n * Retrieves the impurity of array of predictions\n * @param {Array} array - predictions.\n * @return {number} Gini impurity\n */\nexport function giniImpurity(array) {\n    if (array.length === 0) {\n        return 0;\n    }\n\n    var probabilities = toDiscreteDistribution(array, getNumberOfClasses(array))[0];\n\n    var sum = 0.0;\n    for (var i = 0; i < probabilities.length; ++i) {\n        sum += probabilities[i] * probabilities[i];\n    }\n\n    return 1 - sum;\n}\n\n/**\n * @private\n * Return the number of classes given the array of predictions.\n * @param {Array} array - predictions.\n * @return {number} Number of classes.\n */\nexport function getNumberOfClasses(array) {\n    return array.filter(function (val, i, arr) {\n        return arr.indexOf(val) === i;\n    }).length;\n}\n\n/**\n * @private\n * Calculates the Gini Gain of an array of predictions and those predictions splitted by a feature.\n * @para {Array} array - Predictions\n * @param {object} splitted - Object with elements \"greater\" and \"lesser\" that contains an array of predictions splitted.\n * @return {number} - Gini Gain.\n */\n\nexport function giniGain(array, splitted) {\n    var splitsImpurity = 0.0;\n    var splits = ['greater', 'lesser'];\n\n    for (var i = 0; i < splits.length; ++i) {\n        var currentSplit = splitted[splits[i]];\n        splitsImpurity += giniImpurity(currentSplit) * currentSplit.length / array.length;\n    }\n\n    return giniImpurity(array) - splitsImpurity;\n}\n\n/**\n * @private\n * Calculates the squared error of a predictions values.\n * @param {Array} array - predictions values\n * @return {number} squared error.\n */\nexport function squaredError(array) {\n    var l = array.length;\n\n    var m = meanArray(array);\n    var squaredError = 0.0;\n\n    for (var i = 0; i < l; ++i) {\n        var currentElement = array[i];\n        squaredError += (currentElement - m) * (currentElement - m);\n    }\n\n    return squaredError;\n}\n\n/**\n * @private\n * Calculates the sum of squared error of the two arrays that contains the splitted values.\n * @param {Array} array - this argument is no necessary but is used to fit with the main interface.\n * @param {object} splitted - Object with elements \"greater\" and \"lesser\" that contains an array of predictions splitted.\n * @return {number} - sum of squared errors.\n */\nexport function regressionError(array, splitted) {\n    var error = 0.0;\n    var splits = ['greater', 'lesser'];\n\n    for (var i = 0; i < splits.length; ++i) {\n        var currentSplit = splitted[splits[i]];\n        error += squaredError(currentSplit);\n    }\n    return error;\n}\n\n/**\n * @private\n * Split the training set and values from a given column of the training set if is less than a value\n * @param {Matrix} X - Training set.\n * @param {Array} y - Training values.\n * @param {number} column - Column to split.\n * @param {number} value - value to split the Training set and values.\n * @return {object} - Object that contains the splitted values.\n */\nexport function matrixSplitter(X, y, column, value) {\n    var lesserX = [];\n    var greaterX = [];\n    var lesserY = [];\n    var greaterY = [];\n\n    for (var i = 0; i < X.rows; ++i) {\n        if (X[i][column] < value) {\n            lesserX.push(X[i]);\n            lesserY.push(y[i]);\n        } else {\n            greaterX.push(X[i]);\n            greaterY.push(y[i]);\n        }\n    }\n\n    return {\n        greaterX: greaterX,\n        greaterY: greaterY,\n        lesserX: lesserX,\n        lesserY: lesserY\n    };\n}\n\n/**\n * @private\n * Calculates the mean between two values\n * @param {number} a\n * @param {number} b\n * @return {number}\n */\nexport function mean(a, b) {\n    return (a + b) / 2;\n}\n\n/**\n * @private\n * Returns a list of tuples that contains the i-th element of each array.\n * @param {Array} a\n * @param {Array} b\n * @return {Array} list of tuples.\n */\nexport function zip(a, b) {\n    if (a.length !== b.length) {\n        throw new TypeError('Error on zip: the size of a: ' + a.length + ' is different from b: ' + b.length);\n    }\n\n    var ret = new Array(a.length);\n    for (var i = 0; i < a.length; ++i) {\n        ret[i] = [a[i], b[i]];\n    }\n\n    return ret;\n}\n","import Matrix from 'ml-matrix';\nimport * as Utils from './utils';\nimport mean from 'ml-array-mean';\n\nconst gainFunctions = {\n    gini: Utils.giniGain,\n    regression: Utils.regressionError\n};\n\nconst splitFunctions = {\n    mean: Utils.mean\n};\n\nexport default class TreeNode {\n\n    /**\n     * @private\n     * Constructor for a tree node given the options received on the main classes (DecisionTreeClassifier, DecisionTreeRegression)\n     * @param {object|TreeNode} options for loading\n     * @constructor\n     */\n    constructor(options) {\n        // options parameters\n        this.kind = options.kind;\n        this.gainFunction = options.gainFunction;\n        this.splitFunction = options.splitFunction;\n        this.minNumSamples = options.minNumSamples;\n        this.maxDepth = options.maxDepth;\n    }\n\n    /**\n     * @private\n     * Function that retrieve the best feature to make the split.\n     * @param {Matrix} XTranspose - Training set transposed\n     * @param {Array} y - labels or values (depending of the decision tree)\n     * @return {object} - return tree values, the best gain, column and the split value.\n     */\n    bestSplit(XTranspose, y) {\n\n        // Depending in the node tree class, we set the variables to check information gain (to classify)\n        // or error (for regression)\n\n        var bestGain = this.kind === 'classifier' ? -Infinity : Infinity;\n        var check = this.kind === 'classifier' ? (a, b) => a > b : (a, b) => a < b;\n\n\n        var maxColumn;\n        var maxValue;\n\n        for (var i = 0; i < XTranspose.rows; ++i) {\n            var currentFeature = XTranspose[i];\n            var splitValues = this.featureSplit(currentFeature, y);\n            for (var j = 0; j < splitValues.length; ++j) {\n                var currentSplitVal = splitValues[j];\n                var splitted = this.split(currentFeature, y, currentSplitVal);\n\n                var gain = gainFunctions[this.gainFunction](y, splitted);\n                if (check(gain, bestGain)) {\n                    maxColumn = i;\n                    maxValue = currentSplitVal;\n                    bestGain = gain;\n                }\n            }\n        }\n\n        return {\n            maxGain: bestGain,\n            maxColumn: maxColumn,\n            maxValue: maxValue\n        };\n    }\n\n    /**\n     * @private\n     * Makes the split of the training labels or values from the training set feature given a split value.\n     * @param {Array} x - Training set feature\n     * @param {Array} y - Training set value or label\n     * @param {number} splitValue\n     * @return {object}\n     */\n\n    split(x, y, splitValue) {\n        var lesser = [];\n        var greater = [];\n\n        for (var i = 0; i < x.length; ++i) {\n            if (x[i] < splitValue) {\n                lesser.push(y[i]);\n            } else {\n                greater.push(y[i]);\n            }\n        }\n\n        return {\n            greater: greater,\n            lesser: lesser\n        };\n    }\n\n    /**\n     * @private\n     * Calculates the possible points to split over the tree given a training set feature and corresponding labels or values.\n     * @param {Array} x - Training set feature\n     * @param {Array} y - Training set value or label\n     * @return {Array} possible split values.\n     */\n    featureSplit(x, y) {\n        var splitValues = [];\n        var arr = Utils.zip(x, y);\n        arr.sort(function (a, b) {\n            return a[0] - b[0];\n        });\n\n        for (var i = 1; i < arr.length; ++i) {\n            if (arr[i - 1][1] !== arr[i][1]) {\n                splitValues.push(splitFunctions[this.splitFunction](arr[i - 1][0], arr[i][0]));\n            }\n        }\n\n        return splitValues;\n    }\n\n    /**\n     * @private\n     * Calculate the predictions of a leaf tree node given the training labels or values\n     * @param {Array} y\n     */\n    calculatePrediction(y) {\n        if (this.kind === 'classifier') {\n            this.distribution = Utils.toDiscreteDistribution(y, Utils.getNumberOfClasses(y));\n            if (this.distribution.columns === 0) {\n                throw new TypeError('Error on calculate the prediction');\n            }\n        } else {\n            this.distribution = mean(y);\n        }\n    }\n\n    /**\n     * @private\n     * Train a node given the training set and labels, because it trains recursively, it also receive\n     * the current depth of the node, parent gain to avoid infinite recursion and boolean value to check if\n     * the training set is transposed.\n     * @param {Matrix} X - Training set (could be transposed or not given transposed).\n     * @param {Array} y - Training labels or values.\n     * @param {number} currentDepth - Current depth of the node.\n     * @param {number} parentGain - parent node gain or error.\n     */\n    train(X, y, currentDepth, parentGain) {\n        if (X.rows <= this.minNumSamples) {\n            this.calculatePrediction(y);\n            return;\n        }\n        if (parentGain === undefined) parentGain = 0.0;\n\n        var XTranspose = X.transpose();\n        var split = this.bestSplit(XTranspose, y);\n\n        this.splitValue = split.maxValue;\n        this.splitColumn = split.maxColumn;\n        this.gain = split.maxGain;\n\n        var splittedMatrix = Utils.matrixSplitter(X, y, this.splitColumn, this.splitValue);\n\n        if (currentDepth < this.maxDepth &&\n            (this.gain > 0.01 && this.gain !== parentGain) &&\n            (splittedMatrix.lesserX.length > 0 && splittedMatrix.greaterX.length > 0)) {\n            this.left = new TreeNode(this);\n            this.right = new TreeNode(this);\n\n            var lesserX = new Matrix(splittedMatrix.lesserX);\n            var greaterX = new Matrix(splittedMatrix.greaterX);\n\n            this.left.train(lesserX, splittedMatrix.lesserY, currentDepth + 1, this.gain);\n            this.right.train(greaterX, splittedMatrix.greaterY, currentDepth + 1, this.gain);\n        } else {\n            this.calculatePrediction(y);\n        }\n    }\n\n    /**\n     * @private\n     * Calculates the prediction of a given element.\n     * @param {Array} row\n     * @return {number|Array} prediction\n     *          * if a node is a classifier returns an array of probabilities of each class.\n     *          * if a node is for regression returns a number with the prediction.\n     */\n    classify(row) {\n        if (this.right && this.left) {\n            if (row[this.splitColumn] < this.splitValue) {\n                return this.left.classify(row);\n            } else {\n                return this.right.classify(row);\n            }\n        }\n\n        return this.distribution;\n    }\n\n    /**\n     * @private\n     * Set the parameter of the current node and their children.\n     * @param {object} node - parameters of the current node and the children.\n     */\n    setNodeParameters(node) {\n        if (node.distribution !== undefined) {\n            this.distribution = node.distribution.constructor === Array ? new Matrix(node.distribution) :\n                                                                          node.distribution;\n        } else {\n            this.distribution = undefined;\n            this.splitValue = node.splitValue;\n            this.splitColumn = node.splitColumn;\n            this.gain = node.gain;\n\n            this.left = new TreeNode(this);\n            this.right = new TreeNode(this);\n\n            if (node.left !== {}) {\n                this.left.setNodeParameters(node.left);\n            }\n            if (node.right !== {}) {\n                this.right.setNodeParameters(node.right);\n            }\n        }\n    }\n}\n","import Matrix from 'ml-matrix';\nimport Tree from './TreeNode';\n\nconst defaultOptions = {\n    gainFunction: 'gini',\n    splitFunction: 'mean',\n    minNumSamples: 3,\n    maxDepth: Infinity\n};\n\nexport class DecisionTreeClassifier {\n\n    /**\n     * Create new Decision Tree Classifier with CART implementation with the given options\n     * @param {object} options\n     * @param {string} [options.gainFunction=\"gini\"] - gain function to get the best split, \"gini\" the only one supported.\n     * @param {string} [options.splitFunction=\"mean\"] - given two integers from a split feature, get the value to split, \"mean\" the only one supported.\n     * @param {number} [options.minNumSamples=3] - minimum number of samples to create a leaf node to decide a class.\n     * @param {number} [options.maxDepth=Infinity] - Max depth of the tree.\n     * @param {object} model - for load purposes.\n     * @constructor\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.options = model.options;\n            this.root = new Tree(model.options);\n            this.root.setNodeParameters(model.root);\n        } else {\n            this.options = Object.assign({}, defaultOptions, options);\n            this.options.kind = 'classifier';\n        }\n    }\n\n    /**\n     * Train the decision tree with the given training set and labels.\n     * @param {Matrix|MatrixTransposeView|Array} trainingSet\n     * @param {Array} trainingLabels\n     */\n    train(trainingSet, trainingLabels) {\n        this.root = new Tree(this.options);\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        this.root.train(trainingSet, trainingLabels, 0, null);\n    }\n\n    /**\n     * Predicts the output given the matrix to predict.\n     * @param {Matrix|MatrixTransposeView|Array} toPredict\n     * @return {Array} predictions\n     */\n    predict(toPredict) {\n        toPredict = Matrix.checkMatrix(toPredict);\n        var predictions = new Array(toPredict.rows);\n\n        for (var i = 0; i < toPredict.rows; ++i) {\n            predictions[i] = this.root.classify(toPredict.getRow(i)).maxRowIndex(0)[1];\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            options: this.options,\n            root: this.root,\n            name: 'DTClassifier'\n        };\n    }\n\n    /**\n     * Load a Decision tree classifier with the given model.\n     * @param {object} model\n     * @return {DecisionTreeClassifier}\n     */\n    static load(model) {\n        if (model.name !== 'DTClassifier') {\n            throw new RangeError('Invalid model: ' + model.name);\n        }\n\n        return new DecisionTreeClassifier(true, model);\n    }\n}\n","import Matrix from 'ml-matrix';\nimport Tree from './TreeNode';\n\nconst defaultOptions = {\n    gainFunction: 'regression',\n    splitFunction: 'mean',\n    minNumSamples: 3,\n    maxDepth: Infinity\n};\n\nexport class DecisionTreeRegression {\n\n    /**\n     * Create new Decision Tree Regression with CART implementation with the given options.\n     * @param {object} options\n     * @param {string} [options.gainFunction=\"regression\"] - gain function to get the best split, \"regression\" the only one supported.\n     * @param {string} [options.splitFunction=\"mean\"] - given two integers from a split feature, get the value to split, \"mean\" the only one supported.\n     * @param {number} [options.minNumSamples=3] - minimum number of samples to create a leaf node to decide a class.\n     * @param {number} [options.maxDepth=Infinity] - Max depth of the tree.\n     * @param {object} model - for load purposes.\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.options = model.options;\n            this.root = new Tree(model.options);\n            this.root.setNodeParameters(model.root);\n        } else {\n            this.options = Object.assign({}, defaultOptions, options);\n            this.options.kind = 'regression';\n        }\n    }\n\n    /**\n     * Train the decision tree with the given training set and values.\n     * @param {Matrix|MatrixTransposeView|Array} trainingSet\n     * @param {Array} trainingValues\n     */\n    train(trainingSet, trainingValues) {\n        this.root = new Tree(this.options);\n\n        if (trainingSet[0].length === undefined) trainingSet = Matrix.columnVector(trainingSet);\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        this.root.train(trainingSet, trainingValues, 0);\n    }\n\n    /**\n     * Predicts the values given the matrix to predict.\n     * @param {Matrix|MatrixTransposeView|Array} toPredict\n     * @return {Array} predictions\n     */\n    predict(toPredict) {\n        if (toPredict[0] !== undefined && toPredict[0].length === undefined) toPredict = Matrix.columnVector(toPredict);\n        toPredict = Matrix.checkMatrix(toPredict);\n\n        var predictions = new Array(toPredict.rows);\n        for (var i = 0; i < toPredict.rows; ++i) {\n            predictions[i] = this.root.classify(toPredict.getRow(i));\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            options: this.options,\n            root: this.root,\n            name: 'DTRegression'\n        };\n    }\n\n    /**\n     * Load a Decision tree regression with the given model.\n     * @param {object} model\n     * @return {DecisionTreeRegression}\n     */\n    static load(model) {\n        if (model.name !== 'DTRegression') {\n            throw new RangeError('Invalid model:' + model.name);\n        }\n\n        return new DecisionTreeRegression(true, model);\n    }\n}\n","export {DecisionTreeClassifier} from './DecisionTreeClassifier';\nexport {DecisionTreeRegression} from './DecisionTreeRegression';\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","'use strict';\n\nconst Matrix = require('ml-matrix').Matrix;\n\nconst GaussianKernel = require('ml-kernel-gaussian');\nconst PolynomialKernel = require('ml-kernel-polynomial');\nconst ANOVAKernel = require('./kernels/anova-kernel');\nconst CauchyKernel = require('./kernels/cauchy-kernel');\nconst ExponentialKernel = require('./kernels/exponential-kernel');\nconst HistogramKernel = require('./kernels/histogram-intersection-kernel');\nconst LaplacianKernel = require('./kernels/laplacian-kernel');\nconst MultiquadraticKernel = require('./kernels/multiquadratic-kernel');\nconst RationalKernel = require('./kernels/rational-quadratic-kernel');\nconst SigmoidKernel = require('ml-kernel-sigmoid');\n\nconst kernelType = {\n    gaussian: GaussianKernel,\n    rbf: GaussianKernel,\n    polynomial: PolynomialKernel,\n    poly: PolynomialKernel,\n    anova: ANOVAKernel,\n    cauchy: CauchyKernel,\n    exponential: ExponentialKernel,\n    histogram: HistogramKernel,\n    min: HistogramKernel,\n    laplacian: LaplacianKernel,\n    multiquadratic: MultiquadraticKernel,\n    rational: RationalKernel,\n    sigmoid: SigmoidKernel,\n    mlp: SigmoidKernel\n};\n\nclass Kernel {\n    constructor(type, options) {\n        this.kernelType = type;\n        if (type === 'linear') return;\n\n        if (typeof type === 'string') {\n            type = type.toLowerCase();\n\n            var KernelConstructor = kernelType[type];\n            if (KernelConstructor) {\n                this.kernelFunction = new KernelConstructor(options);\n            } else {\n                throw new Error('unsupported kernel type: ' + type);\n            }\n        } else if (typeof type === 'object' && typeof type.compute === 'function') {\n            this.kernelFunction = type;\n        } else {\n            throw new TypeError('first argument must be a valid kernel type or instance');\n        }\n    }\n\n    compute(inputs, landmarks) {\n        if (landmarks === undefined) {\n            landmarks = inputs;\n        }\n\n        if (this.kernelType === 'linear') {\n            var matrix = new Matrix(inputs);\n            return matrix.mmul(new Matrix(landmarks).transposeView());\n        }\n\n        const kernelMatrix = new Matrix(inputs.length, landmarks.length);\n        var i, j;\n        if (inputs === landmarks) { // fast path, matrix is symmetric\n            for (i = 0; i < inputs.length; i++) {\n                for (j = i; j < inputs.length; j++) {\n                    kernelMatrix[i][j] = kernelMatrix[j][i] = this.kernelFunction.compute(inputs[i], inputs[j]);\n                }\n            }\n        } else {\n            for (i = 0; i < inputs.length; i++) {\n                for (j = 0; j < landmarks.length; j++) {\n                    kernelMatrix[i][j] = this.kernelFunction.compute(inputs[i], landmarks[j]);\n                }\n            }\n        }\n        return kernelMatrix;\n    }\n}\n\nmodule.exports = Kernel;\n","const PROB_TOLERANCE = 0.00000001;\nfunction randomChoice(values, options = {}, random = Math.random) {\n    const { size = 1, replace = false, probabilities } = options;\n    let valuesArr;\n    let cumSum;\n    if (typeof values === 'number') {\n        valuesArr = getArray(values);\n    }\n    else {\n        valuesArr = values.slice();\n    }\n    if (probabilities) {\n        if (!replace) {\n            throw new Error('choice with probabilities and no replacement is not implemented');\n        }\n        // check input is sane\n        if (probabilities.length !== valuesArr.length) {\n            throw new Error('the length of probabilities option should be equal to the number of choices');\n        }\n        cumSum = [probabilities[0]];\n        for (let i = 1; i < probabilities.length; i++) {\n            cumSum[i] = cumSum[i - 1] + probabilities[i];\n        }\n        if (Math.abs(1 - cumSum[cumSum.length - 1]) > PROB_TOLERANCE) {\n            throw new Error(`probabilities should sum to 1, but instead sums to ${cumSum[cumSum.length - 1]}`);\n        }\n    }\n    if (replace === false && size > valuesArr.length) {\n        throw new Error('size option is too large');\n    }\n    const result = [];\n    for (let i = 0; i < size; i++) {\n        const index = randomIndex(valuesArr.length, random, cumSum);\n        result.push(valuesArr[index]);\n        if (!replace) {\n            valuesArr.splice(index, 1);\n        }\n    }\n    return result;\n}\nfunction getArray(n) {\n    const arr = [];\n    for (let i = 0; i < n; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nfunction randomIndex(n, random, cumSum) {\n    const rand = random();\n    if (!cumSum) {\n        return Math.floor(rand * n);\n    }\n    else {\n        let idx = 0;\n        while (rand > cumSum[idx]) {\n            idx++;\n        }\n        return idx;\n    }\n}\nexport default randomChoice;\n","// tslint:disable-next-line\nimport XSAdd from 'ml-xsadd';\nimport choice from './choice';\n/**\n * @classdesc Random class\n */\nexport default class Random {\n    /**\n     * @param [seedOrRandom=Math.random] - Control the random number generator used by the Random class instance. Pass a random number generator function with a uniform distribution over the half-open interval [0, 1[. If seed will pass it to ml-xsadd to create a seeded random number generator. If undefined will use Math.random.\n     */\n    constructor(seedOrRandom = Math.random) {\n        if (typeof seedOrRandom === 'number') {\n            const xsadd = new XSAdd(seedOrRandom);\n            this.randomGenerator = xsadd.random;\n        }\n        else {\n            this.randomGenerator = seedOrRandom;\n        }\n    }\n    choice(values, options) {\n        if (typeof values === 'number') {\n            return choice(values, options, this.randomGenerator);\n        }\n        return choice(values, options, this.randomGenerator);\n    }\n    /**\n     * Draw a random number from a uniform distribution on [0,1)\n     * @return The random number\n     */\n    random() {\n        return this.randomGenerator();\n    }\n    /**\n     * Draw a random integer from a uniform distribution on [low, high). If only low is specified, the number is drawn on [0, low)\n     * @param low - The lower bound of the uniform distribution interval.\n     * @param high - The higher bound of the uniform distribution interval.\n     */\n    randInt(low, high) {\n        if (high === undefined) {\n            high = low;\n            low = 0;\n        }\n        return low + Math.floor(this.randomGenerator() * (high - low));\n    }\n    /**\n     * Draw several random number from a uniform distribution on [0, 1)\n     * @param size - The number of number to draw\n     * @return - The list of drawn numbers.\n     */\n    randomSample(size) {\n        const result = [];\n        for (let i = 0; i < size; i++) {\n            result.push(this.random());\n        }\n        return result;\n    }\n}\n","/*jshint eqnull:true*/\n(function (root) {\n  \"use strict\";\n\n  var GLOBAL_KEY = \"Random\";\n\n  var imul = (typeof Math.imul !== \"function\" || Math.imul(0xffffffff, 5) !== -5 ?\n    function (a, b) {\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;\n    } :\n    Math.imul);\n\n  var stringRepeat = (typeof String.prototype.repeat === \"function\" && \"x\".repeat(3) === \"xxx\" ?\n    function (x, y) {\n      return x.repeat(y);\n    } : function (pattern, count) {\n      var result = \"\";\n      while (count > 0) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result;\n    });\n\n  function Random(engine) {\n    if (!(this instanceof Random)) {\n      return new Random(engine);\n    }\n\n    if (engine == null) {\n      engine = Random.engines.nativeMath;\n    } else if (typeof engine !== \"function\") {\n      throw new TypeError(\"Expected engine to be a function, got \" + typeof engine);\n    }\n    this.engine = engine;\n  }\n  var proto = Random.prototype;\n\n  Random.engines = {\n    nativeMath: function () {\n      return (Math.random() * 0x100000000) | 0;\n    },\n    mt19937: (function (Int32Array) {\n      // http://en.wikipedia.org/wiki/Mersenne_twister\n      function refreshData(data) {\n        var k = 0;\n        var tmp = 0;\n        for (;\n          (k | 0) < 227; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        for (;\n          (k | 0) < 623; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);\n        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n      }\n\n      function temper(value) {\n        value ^= value >>> 11;\n        value ^= (value << 7) & 0x9d2c5680;\n        value ^= (value << 15) & 0xefc60000;\n        return value ^ (value >>> 18);\n      }\n\n      function seedWithArray(data, source) {\n        var i = 1;\n        var j = 0;\n        var sourceLength = source.length;\n        var k = Math.max(sourceLength, 624) | 0;\n        var previous = data[0] | 0;\n        for (;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;\n          i = (i + 1) | 0;\n          ++j;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n          if (j >= sourceLength) {\n            j = 0;\n          }\n        }\n        for (k = 623;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;\n          i = (i + 1) | 0;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n        }\n        data[0] = 0x80000000;\n      }\n\n      function mt19937() {\n        var data = new Int32Array(624);\n        var index = 0;\n        var uses = 0;\n\n        function next() {\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n\n          var value = data[index];\n          index = (index + 1) | 0;\n          uses += 1;\n          return temper(value) | 0;\n        }\n        next.getUseCount = function() {\n          return uses;\n        };\n        next.discard = function (count) {\n          uses += count;\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n          while ((count - index) > 624) {\n            count -= 624 - index;\n            refreshData(data);\n            index = 0;\n          }\n          index = (index + count) | 0;\n          return next;\n        };\n        next.seed = function (initial) {\n          var previous = 0;\n          data[0] = previous = initial | 0;\n\n          for (var i = 1; i < 624; i = (i + 1) | 0) {\n            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;\n          }\n          index = 624;\n          uses = 0;\n          return next;\n        };\n        next.seedWithArray = function (source) {\n          next.seed(0x012bd6aa);\n          seedWithArray(data, source);\n          return next;\n        };\n        next.autoSeed = function () {\n          return next.seedWithArray(Random.generateEntropyArray());\n        };\n        return next;\n      }\n\n      return mt19937;\n    }(typeof Int32Array === \"function\" ? Int32Array : Array)),\n    browserCrypto: (typeof crypto !== \"undefined\" && typeof crypto.getRandomValues === \"function\" && typeof Int32Array === \"function\") ? (function () {\n      var data = null;\n      var index = 128;\n\n      return function () {\n        if (index >= 128) {\n          if (data === null) {\n            data = new Int32Array(128);\n          }\n          crypto.getRandomValues(data);\n          index = 0;\n        }\n\n        return data[index++] | 0;\n      };\n    }()) : null\n  };\n\n  Random.generateEntropyArray = function () {\n    var array = [];\n    var engine = Random.engines.nativeMath;\n    for (var i = 0; i < 16; ++i) {\n      array[i] = engine() | 0;\n    }\n    array.push(new Date().getTime() | 0);\n    return array;\n  };\n\n  function returnValue(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  // [-0x80000000, 0x7fffffff]\n  Random.int32 = function (engine) {\n    return engine() | 0;\n  };\n  proto.int32 = function () {\n    return Random.int32(this.engine);\n  };\n\n  // [0, 0xffffffff]\n  Random.uint32 = function (engine) {\n    return engine() >>> 0;\n  };\n  proto.uint32 = function () {\n    return Random.uint32(this.engine);\n  };\n\n  // [0, 0x1fffffffffffff]\n  Random.uint53 = function (engine) {\n    var high = engine() & 0x1fffff;\n    var low = engine() >>> 0;\n    return (high * 0x100000000) + low;\n  };\n  proto.uint53 = function () {\n    return Random.uint53(this.engine);\n  };\n\n  // [0, 0x20000000000000]\n  Random.uint53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x200000) {\n        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low;\n      }\n    }\n  };\n  proto.uint53Full = function () {\n    return Random.uint53Full(this.engine);\n  };\n\n  // [-0x20000000000000, 0x1fffffffffffff]\n  Random.int53 = function (engine) {\n    var high = engine() | 0;\n    var low = engine() >>> 0;\n    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n  };\n  proto.int53 = function () {\n    return Random.int53(this.engine);\n  };\n\n  // [-0x20000000000000, 0x20000000000000]\n  Random.int53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x400000) {\n        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n      }\n    }\n  };\n  proto.int53Full = function () {\n    return Random.int53Full(this.engine);\n  };\n\n  function add(generate, addend) {\n    if (addend === 0) {\n      return generate;\n    } else {\n      return function (engine) {\n        return generate(engine) + addend;\n      };\n    }\n  }\n\n  Random.integer = (function () {\n    function isPowerOfTwoMinusOne(value) {\n      return ((value + 1) & value) === 0;\n    }\n\n    function bitmask(masking) {\n      return function (engine) {\n        return engine() & masking;\n      };\n    }\n\n    function downscaleToLoopCheckedRange(range) {\n      var extendedRange = range + 1;\n      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);\n      return function (engine) {\n        var value = 0;\n        do {\n          value = engine() >>> 0;\n        } while (value >= maximum);\n        return value % extendedRange;\n      };\n    }\n\n    function downscaleToRange(range) {\n      if (isPowerOfTwoMinusOne(range)) {\n        return bitmask(range);\n      } else {\n        return downscaleToLoopCheckedRange(range);\n      }\n    }\n\n    function isEvenlyDivisibleByMaxInt32(value) {\n      return (value | 0) === 0;\n    }\n\n    function upscaleWithHighMasking(masking) {\n      return function (engine) {\n        var high = engine() & masking;\n        var low = engine() >>> 0;\n        return (high * 0x100000000) + low;\n      };\n    }\n\n    function upscaleToLoopCheckedRange(extendedRange) {\n      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() & 0x1fffff;\n          var low = engine() >>> 0;\n          ret = (high * 0x100000000) + low;\n        } while (ret >= maximum);\n        return ret % extendedRange;\n      };\n    }\n\n    function upscaleWithinU53(range) {\n      var extendedRange = range + 1;\n      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\n        var highRange = ((extendedRange / 0x100000000) | 0) - 1;\n        if (isPowerOfTwoMinusOne(highRange)) {\n          return upscaleWithHighMasking(highRange);\n        }\n      }\n      return upscaleToLoopCheckedRange(extendedRange);\n    }\n\n    function upscaleWithinI53AndLoopCheck(min, max) {\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() | 0;\n          var low = engine() >>> 0;\n          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n        } while (ret < min || ret > max);\n        return ret;\n      };\n    }\n\n    return function (min, max) {\n      min = Math.floor(min);\n      max = Math.floor(max);\n      if (min < -0x20000000000000 || !isFinite(min)) {\n        throw new RangeError(\"Expected min to be at least \" + (-0x20000000000000));\n      } else if (max > 0x20000000000000 || !isFinite(max)) {\n        throw new RangeError(\"Expected max to be at most \" + 0x20000000000000);\n      }\n\n      var range = max - min;\n      if (range <= 0 || !isFinite(range)) {\n        return returnValue(min);\n      } else if (range === 0xffffffff) {\n        if (min === 0) {\n          return Random.uint32;\n        } else {\n          return add(Random.int32, min + 0x80000000);\n        }\n      } else if (range < 0xffffffff) {\n        return add(downscaleToRange(range), min);\n      } else if (range === 0x1fffffffffffff) {\n        return add(Random.uint53, min);\n      } else if (range < 0x1fffffffffffff) {\n        return add(upscaleWithinU53(range), min);\n      } else if (max - 1 - min === 0x1fffffffffffff) {\n        return add(Random.uint53Full, min);\n      } else if (min === -0x20000000000000 && max === 0x20000000000000) {\n        return Random.int53Full;\n      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {\n        return Random.int53;\n      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {\n        return add(Random.int53, 1);\n      } else if (max === 0x20000000000000) {\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\n      } else {\n        return upscaleWithinI53AndLoopCheck(min, max);\n      }\n    };\n  }());\n  proto.integer = function (min, max) {\n    return Random.integer(min, max)(this.engine);\n  };\n\n  // [0, 1] (floating point)\n  Random.realZeroToOneInclusive = function (engine) {\n    return Random.uint53Full(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneInclusive = function () {\n    return Random.realZeroToOneInclusive(this.engine);\n  };\n\n  // [0, 1) (floating point)\n  Random.realZeroToOneExclusive = function (engine) {\n    return Random.uint53(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneExclusive = function () {\n    return Random.realZeroToOneExclusive(this.engine);\n  };\n\n  Random.real = (function () {\n    function multiply(generate, multiplier) {\n      if (multiplier === 1) {\n        return generate;\n      } else if (multiplier === 0) {\n        return function () {\n          return 0;\n        };\n      } else {\n        return function (engine) {\n          return generate(engine) * multiplier;\n        };\n      }\n    }\n\n    return function (left, right, inclusive) {\n      if (!isFinite(left)) {\n        throw new RangeError(\"Expected left to be a finite number\");\n      } else if (!isFinite(right)) {\n        throw new RangeError(\"Expected right to be a finite number\");\n      }\n      return add(\n        multiply(\n          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,\n          right - left),\n        left);\n    };\n  }());\n  proto.real = function (min, max, inclusive) {\n    return Random.real(min, max, inclusive)(this.engine);\n  };\n\n  Random.bool = (function () {\n    function isLeastBitTrue(engine) {\n      return (engine() & 1) === 1;\n    }\n\n    function lessThan(generate, value) {\n      return function (engine) {\n        return generate(engine) < value;\n      };\n    }\n\n    function probability(percentage) {\n      if (percentage <= 0) {\n        return returnValue(false);\n      } else if (percentage >= 1) {\n        return returnValue(true);\n      } else {\n        var scaled = percentage * 0x100000000;\n        if (scaled % 1 === 0) {\n          return lessThan(Random.int32, (scaled - 0x80000000) | 0);\n        } else {\n          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));\n        }\n      }\n    }\n\n    return function (numerator, denominator) {\n      if (denominator == null) {\n        if (numerator == null) {\n          return isLeastBitTrue;\n        }\n        return probability(numerator);\n      } else {\n        if (numerator <= 0) {\n          return returnValue(false);\n        } else if (numerator >= denominator) {\n          return returnValue(true);\n        }\n        return lessThan(Random.integer(0, denominator - 1), numerator);\n      }\n    };\n  }());\n  proto.bool = function (numerator, denominator) {\n    return Random.bool(numerator, denominator)(this.engine);\n  };\n\n  function toInteger(value) {\n    var number = +value;\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function convertSliceArgument(value, length) {\n    if (value < 0) {\n      return Math.max(value + length, 0);\n    } else {\n      return Math.min(value, length);\n    }\n  }\n  Random.pick = function (engine, array, begin, end) {\n    var length = array.length;\n    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\n    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\n    if (start >= finish) {\n      return void 0;\n    }\n    var distribution = Random.integer(start, finish - 1);\n    return array[distribution(engine)];\n  };\n  proto.pick = function (array, begin, end) {\n    return Random.pick(this.engine, array, begin, end);\n  };\n\n  function returnUndefined() {\n    return void 0;\n  }\n  var slice = Array.prototype.slice;\n  Random.picker = function (array, begin, end) {\n    var clone = slice.call(array, begin, end);\n    if (!clone.length) {\n      return returnUndefined;\n    }\n    var distribution = Random.integer(0, clone.length - 1);\n    return function (engine) {\n      return clone[distribution(engine)];\n    };\n  };\n\n  Random.shuffle = function (engine, array, downTo) {\n    var length = array.length;\n    if (length) {\n      if (downTo == null) {\n        downTo = 0;\n      }\n      for (var i = (length - 1) >>> 0; i > downTo; --i) {\n        var distribution = Random.integer(0, i);\n        var j = distribution(engine);\n        if (i !== j) {\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n      }\n    }\n    return array;\n  };\n  proto.shuffle = function (array) {\n    return Random.shuffle(this.engine, array);\n  };\n\n  Random.sample = function (engine, population, sampleSize) {\n    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {\n      throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\n    }\n\n    if (sampleSize === 0) {\n      return [];\n    }\n\n    var clone = slice.call(population);\n    var length = clone.length;\n    if (length === sampleSize) {\n      return Random.shuffle(engine, clone, 0);\n    }\n    var tailLength = length - sampleSize;\n    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);\n  };\n  proto.sample = function (population, sampleSize) {\n    return Random.sample(this.engine, population, sampleSize);\n  };\n\n  Random.die = function (sideCount) {\n    return Random.integer(1, sideCount);\n  };\n  proto.die = function (sideCount) {\n    return Random.die(sideCount)(this.engine);\n  };\n\n  Random.dice = function (sideCount, dieCount) {\n    var distribution = Random.die(sideCount);\n    return function (engine) {\n      var result = [];\n      result.length = dieCount;\n      for (var i = 0; i < dieCount; ++i) {\n        result[i] = distribution(engine);\n      }\n      return result;\n    };\n  };\n  proto.dice = function (sideCount, dieCount) {\n    return Random.dice(sideCount, dieCount)(this.engine);\n  };\n\n  // http://en.wikipedia.org/wiki/Universally_unique_identifier\n  Random.uuid4 = (function () {\n    function zeroPad(string, zeroCount) {\n      return stringRepeat(\"0\", zeroCount - string.length) + string;\n    }\n\n    return function (engine) {\n      var a = engine() >>> 0;\n      var b = engine() | 0;\n      var c = engine() | 0;\n      var d = engine() >>> 0;\n\n      return (\n        zeroPad(a.toString(16), 8) +\n        \"-\" +\n        zeroPad((b & 0xffff).toString(16), 4) +\n        \"-\" +\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\n        zeroPad(d.toString(16), 8));\n    };\n  }());\n  proto.uuid4 = function () {\n    return Random.uuid4(this.engine);\n  };\n\n  Random.string = (function () {\n    // has 2**x chars, for faster uniform distribution\n    var DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\n\n    return function (pool) {\n      if (pool == null) {\n        pool = DEFAULT_STRING_POOL;\n      }\n\n      var length = pool.length;\n      if (!length) {\n        throw new Error(\"Expected pool not to be an empty string\");\n      }\n\n      var distribution = Random.integer(0, length - 1);\n      return function (engine, length) {\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n          var j = distribution(engine);\n          result += pool.charAt(j);\n        }\n        return result;\n      };\n    };\n  }());\n  proto.string = function (length, pool) {\n    return Random.string(pool)(this.engine, length);\n  };\n\n  Random.hex = (function () {\n    var LOWER_HEX_POOL = \"0123456789abcdef\";\n    var lowerHex = Random.string(LOWER_HEX_POOL);\n    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());\n\n    return function (upper) {\n      if (upper) {\n        return upperHex;\n      } else {\n        return lowerHex;\n      }\n    };\n  }());\n  proto.hex = function (length, upper) {\n    return Random.hex(upper)(this.engine, length);\n  };\n\n  Random.date = function (start, end) {\n    if (!(start instanceof Date)) {\n      throw new TypeError(\"Expected start to be a Date, got \" + typeof start);\n    } else if (!(end instanceof Date)) {\n      throw new TypeError(\"Expected end to be a Date, got \" + typeof end);\n    }\n    var distribution = Random.integer(start.getTime(), end.getTime());\n    return function (engine) {\n      return new Date(distribution(engine));\n    };\n  };\n  proto.date = function (start, end) {\n    return Random.date(start, end)(this.engine);\n  };\n\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return Random;\n    });\n  } else if (typeof module !== \"undefined\" && typeof require === \"function\") {\n    module.exports = Random;\n  } else {\n    (function () {\n      var oldGlobal = root[GLOBAL_KEY];\n      Random.noConflict = function () {\n        root[GLOBAL_KEY] = oldGlobal;\n        return this;\n      };\n    }());\n    root[GLOBAL_KEY] = Random;\n  }\n}(this));","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","'use strict';\n\nconst newArray = require('new-array');\n\nconst primeFinder = require('./primeFinder');\nconst nextPrime = primeFinder.nextPrime;\nconst largestPrime = primeFinder.largestPrime;\n\nconst FREE = 0;\nconst FULL = 1;\nconst REMOVED = 2;\n\nconst defaultInitialCapacity = 150;\nconst defaultMinLoadFactor = 1 / 6;\nconst defaultMaxLoadFactor = 2 / 3;\n\nclass HashTable {\n    constructor(options = {}) {\n        if (options instanceof HashTable) {\n            this.table = options.table.slice();\n            this.values = options.values.slice();\n            this.state = options.state.slice();\n            this.minLoadFactor = options.minLoadFactor;\n            this.maxLoadFactor = options.maxLoadFactor;\n            this.distinct = options.distinct;\n            this.freeEntries = options.freeEntries;\n            this.lowWaterMark = options.lowWaterMark;\n            this.highWaterMark = options.maxLoadFactor;\n            return;\n        }\n\n        const initialCapacity = options.initialCapacity === undefined ? defaultInitialCapacity : options.initialCapacity;\n        if (initialCapacity < 0) {\n            throw new RangeError(`initial capacity must not be less than zero: ${initialCapacity}`);\n        }\n\n        const minLoadFactor = options.minLoadFactor === undefined ? defaultMinLoadFactor : options.minLoadFactor;\n        const maxLoadFactor = options.maxLoadFactor === undefined ? defaultMaxLoadFactor : options.maxLoadFactor;\n        if (minLoadFactor < 0 || minLoadFactor >= 1) {\n            throw new RangeError(`invalid minLoadFactor: ${minLoadFactor}`);\n        }\n        if (maxLoadFactor <= 0 || maxLoadFactor >= 1) {\n            throw new RangeError(`invalid maxLoadFactor: ${maxLoadFactor}`);\n        }\n        if (minLoadFactor >= maxLoadFactor) {\n            throw new RangeError(`minLoadFactor (${minLoadFactor}) must be smaller than maxLoadFactor (${maxLoadFactor})`);\n        }\n\n        let capacity = initialCapacity;\n        // User wants to put at least capacity elements. We need to choose the size based on the maxLoadFactor to\n        // avoid the need to rehash before this capacity is reached.\n        // actualCapacity * maxLoadFactor >= capacity\n        capacity = (capacity / maxLoadFactor) | 0;\n        capacity = nextPrime(capacity);\n        if (capacity === 0) capacity = 1;\n\n        this.table = newArray(capacity, 0);\n        this.values = newArray(capacity, 0);\n        this.state = newArray(capacity, 0);\n\n        this.minLoadFactor = minLoadFactor;\n        if (capacity === largestPrime) {\n            this.maxLoadFactor = 1;\n        } else {\n            this.maxLoadFactor = maxLoadFactor;\n        }\n\n        this.distinct = 0;\n        this.freeEntries = capacity;\n\n        this.lowWaterMark = 0;\n        this.highWaterMark = chooseHighWaterMark(capacity, this.maxLoadFactor);\n    }\n\n    clone() {\n        return new HashTable(this);\n    }\n\n    get size() {\n        return this.distinct;\n    }\n\n    get(key) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return 0;\n        return this.values[i];\n    }\n\n    set(key, value) {\n        let i = this.indexOfInsertion(key);\n        if (i < 0) {\n            i = -i - 1;\n            this.values[i] = value;\n            return false;\n        }\n\n        if (this.distinct > this.highWaterMark) {\n            const newCapacity = chooseGrowCapacity(this.distinct + 1, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n            return this.set(key, value);\n        }\n\n        this.table[i] = key;\n        this.values[i] = value;\n        if (this.state[i] === FREE) this.freeEntries--;\n        this.state[i] = FULL;\n        this.distinct++;\n\n        if (this.freeEntries < 1) {\n            const newCapacity = chooseGrowCapacity(this.distinct + 1, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n        }\n\n        return true;\n    }\n    \n    remove(key, noRehash) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return false;\n\n        this.state[i] = REMOVED;\n        this.distinct--;\n\n        if (!noRehash) this.maybeShrinkCapacity();\n\n        return true;\n    }\n\n    delete(key, noRehash) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return false;\n\n        this.state[i] = FREE;\n        this.distinct--;\n\n        if (!noRehash) this.maybeShrinkCapacity();\n\n        return true;\n    }\n\n    maybeShrinkCapacity() {\n        if (this.distinct < this.lowWaterMark) {\n            const newCapacity = chooseShrinkCapacity(this.distinct, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n        }\n    }\n\n    containsKey(key) {\n        return this.indexOfKey(key) >= 0;\n    }\n\n    indexOfKey(key) {\n        const table = this.table;\n        const state = this.state;\n        const length = this.table.length;\n\n        const hash = key & 0x7fffffff;\n        let i = hash % length;\n        let decrement = hash % (length - 2);\n        if (decrement === 0) decrement = 1;\n\n        while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n            i -= decrement;\n            if (i < 0) i += length;\n        }\n\n        if (state[i] === FREE) return -1;\n        return i;\n    }\n\n    containsValue(value) {\n        return this.indexOfValue(value) >= 0;\n    }\n\n    indexOfValue(value) {\n        const values = this.values;\n        const state = this.state;\n\n        for (var i = 0; i < state.length; i++) {\n            if (state[i] === FULL && values[i] === value) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    indexOfInsertion(key) {\n        const table = this.table;\n        const state = this.state;\n        const length = table.length;\n\n\n        const hash = key & 0x7fffffff;\n        let i = hash % length;\n        let decrement = hash % (length - 2);\n        if (decrement === 0) decrement = 1;\n\n        while (state[i] === FULL && table[i] !== key) {\n            i -= decrement;\n            if (i < 0) i += length;\n        }\n\n        if (state[i] === REMOVED) {\n            const j = i;\n            while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n                i -= decrement;\n                if (i < 0) i += length;\n            }\n            if (state[i] === FREE) i = j;\n        }\n\n        if (state[i] === FULL) {\n            return -i - 1;\n        }\n\n        return i;\n    }\n\n    ensureCapacity(minCapacity) {\n        if (this.table.length < minCapacity) {\n            const newCapacity = nextPrime(minCapacity);\n            this.rehash(newCapacity);\n        }\n    }\n\n    rehash(newCapacity) {\n        const oldCapacity = this.table.length;\n\n        if (newCapacity <= this.distinct) throw new Error('Unexpected');\n\n        const oldTable = this.table;\n        const oldValues = this.values;\n        const oldState = this.state;\n\n        const newTable = newArray(newCapacity, 0);\n        const newValues = newArray(newCapacity, 0);\n        const newState = newArray(newCapacity, 0);\n\n        this.lowWaterMark = chooseLowWaterMark(newCapacity, this.minLoadFactor);\n        this.highWaterMark = chooseHighWaterMark(newCapacity, this.maxLoadFactor);\n\n        this.table = newTable;\n        this.values = newValues;\n        this.state = newState;\n        this.freeEntries = newCapacity - this.distinct;\n\n        for (var i = 0; i < oldCapacity; i++) {\n            if (oldState[i] === FULL) {\n                var element = oldTable[i];\n                var index = this.indexOfInsertion(element);\n                newTable[index] = element;\n                newValues[index] = oldValues[i];\n                newState[index] = FULL;\n            }\n        }\n    }\n\n    forEachKey(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.table[i])) return false;\n            }\n        }\n        return true;\n    }\n\n    forEachValue(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.values[i])) return false;\n            }\n        }\n        return true;\n    }\n\n    forEachPair(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.table[i], this.values[i])) return false;\n            }\n        }\n        return true;\n    }\n}\n\nmodule.exports = HashTable;\n\nfunction chooseLowWaterMark(capacity, minLoad) {\n    return (capacity * minLoad) | 0;\n}\n\nfunction chooseHighWaterMark(capacity, maxLoad) {\n    return Math.min(capacity - 2, (capacity * maxLoad) | 0);\n}\n\nfunction chooseGrowCapacity(size, minLoad, maxLoad) {\n    return nextPrime(Math.max(size + 1, (4 * size / (3 * minLoad + maxLoad)) | 0));\n}\n\nfunction chooseShrinkCapacity(size, minLoad, maxLoad) {\n    return nextPrime(Math.max(size + 1, (4 * size / (minLoad + 3 * maxLoad)) | 0));\n}\n","'use strict';\n\nconst Heap = require('heap');\n\nfunction Cluster() {\n    this.children = [];\n    this.distance = -1;\n    this.index = [];\n}\n\n/**\n * Creates an array of values where maximum distance smaller than the threshold\n * @param {number} threshold\n * @return {Array <Cluster>}\n */\nCluster.prototype.cut = function (threshold) {\n    if (threshold < 0) throw new RangeError('Threshold too small');\n    var root = new Cluster();\n    root.children = this.children;\n    root.distance = this.distance;\n    root.index = this.index;\n    var list = [root];\n    var ans = [];\n    while (list.length > 0) {\n        var aux = list.shift();\n        if (threshold >= aux.distance) {\n            ans.push(aux);\n        } else {\n            list = list.concat(aux.children);\n        }\n    }\n    return ans;\n};\n\n/**\n * Merge the leaves in the minimum way to have 'minGroups' number of clusters\n * @param {number} minGroups - Them minimum number of children the first level of the tree should have\n * @return {Cluster}\n */\nCluster.prototype.group = function (minGroups) {\n    if (!Number.isInteger(minGroups) || minGroups < 1) throw new RangeError('Number of groups must be a positive integer');\n\n    const heap = new Heap(function (a, b) {\n        return b.distance - a.distance;\n    });\n\n    heap.push(this);\n\n    while (heap.size() < minGroups) {\n        var first = heap.pop();\n        if (first.children.length === 0) {\n            break;\n        }\n        first.children.forEach(child => heap.push(child));\n    }\n\n    var root = new Cluster();\n    root.children = heap.toArray();\n    root.distance = this.distance;\n\n    return root;\n};\n\n/**\n * Traverses the tree depth-first and provide callback to be called on each individual node\n * @param {function} cb - The callback to be called on each node encounter\n * @type {Cluster}\n */\nCluster.prototype.traverse = function (cb) {\n    function visit(root, callback) {\n        callback(root);\n        if (root.children) {\n            for (var i = root.children.length - 1; i >= 0; i--) {\n                visit(root.children[i], callback);\n            }\n        }\n    }\n    visit(this, cb);\n};\n\nmodule.exports = Cluster;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import quickSelectMedian from 'median-quickselect';\nimport isArray from 'is-any-array';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","const LOOP = 8;\nconst FLOAT_MUL = 1 / 16777216;\nconst sh1 = 15;\nconst sh2 = 18;\nconst sh3 = 11;\nfunction multiply_uint32(n, m) {\n    n >>>= 0;\n    m >>>= 0;\n    const nlo = n & 0xffff;\n    const nhi = n - nlo;\n    return (((nhi * m) >>> 0) + nlo * m) >>> 0;\n}\nexport default class XSadd {\n    constructor(seed = Date.now()) {\n        this.state = new Uint32Array(4);\n        this.init(seed);\n        this.random = this.getFloat.bind(this);\n    }\n    /**\n     * Returns a 32-bit integer r (0 <= r < 2^32)\n     */\n    getUint32() {\n        this.nextState();\n        return (this.state[3] + this.state[2]) >>> 0;\n    }\n    /**\n     * Returns a floating point number r (0.0 <= r < 1.0)\n     */\n    getFloat() {\n        return (this.getUint32() >>> 8) * FLOAT_MUL;\n    }\n    init(seed) {\n        if (!Number.isInteger(seed)) {\n            throw new TypeError('seed must be an integer');\n        }\n        this.state[0] = seed;\n        this.state[1] = 0;\n        this.state[2] = 0;\n        this.state[3] = 0;\n        for (let i = 1; i < LOOP; i++) {\n            this.state[i & 3] ^=\n                (i +\n                    multiply_uint32(1812433253, this.state[(i - 1) & 3] ^ ((this.state[(i - 1) & 3] >>> 30) >>> 0))) >>>\n                    0;\n        }\n        this.periodCertification();\n        for (let i = 0; i < LOOP; i++) {\n            this.nextState();\n        }\n    }\n    periodCertification() {\n        if (this.state[0] === 0 &&\n            this.state[1] === 0 &&\n            this.state[2] === 0 &&\n            this.state[3] === 0) {\n            this.state[0] = 88; // X\n            this.state[1] = 83; // S\n            this.state[2] = 65; // A\n            this.state[3] = 68; // D\n        }\n    }\n    nextState() {\n        let t = this.state[0];\n        t ^= t << sh1;\n        t ^= t >>> sh2;\n        t ^= this.state[3] << sh3;\n        this.state[0] = this.state[1];\n        this.state[1] = this.state[2];\n        this.state[2] = this.state[3];\n        this.state[3] = t;\n    }\n}\n","import arrayMean from 'ml-array-mean';\nimport isArray from 'is-any-array';\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {object} [options]\n * @param {boolean} [options.unbiased = true] - if true, divide by (n-1); if false, divide by n.\n * @param {number} [options.mean = arrayMean] - precalculated mean, if any.\n * @return {number}\n */\n\nfunction variance(values) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(values)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options$unbiased = options.unbiased,\n      unbiased = _options$unbiased === void 0 ? true : _options$unbiased,\n      _options$mean = options.mean,\n      mean = _options$mean === void 0 ? arrayMean(values) : _options$mean;\n  var sqrError = 0;\n\n  for (var i = 0; i < values.length; i++) {\n    var x = values[i] - mean;\n    sqrError += x * x;\n  }\n\n  if (unbiased) {\n    return sqrError / (values.length - 1);\n  } else {\n    return sqrError / values.length;\n  }\n}\n\nexport default variance;\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nconst Cluster = require('./Cluster');\nconst util = require('util');\n\nfunction ClusterLeaf(index) {\n    Cluster.call(this);\n    this.index = index;\n    this.distance = 0;\n    this.children = [];\n}\n\nutil.inherits(ClusterLeaf, Cluster);\n\nmodule.exports = ClusterLeaf;\n","'use strict';\n\n\n/**\n * Computes a distance/similarity matrix given an array of data and a distance/similarity function.\n * @param {Array} data An array of data\n * @param {function} distanceFn  A function that accepts two arguments and computes a distance/similarity between them\n * @return {Array<Array>} The similarity matrix. The similarity matrix is square and has a size equal to the length of\n * the data array\n */\nfunction distanceMatrix(data, distanceFn) {\n    const length = data.length;\n    let result = Array.from({length}).map(() => Array.from({length}));\n\n    // Compute upper distance matrix\n    for (let i = 0; i < length; i++) {\n        for (let j = 0; j <= i; j++) {\n            result[i][j] = distanceFn(data[i], data[j]);\n        }\n    }\n\n    // Copy to lower distance matrix\n    for (let i = 0; i < length; i++) {\n        for (let j = i + 1; j < length; j++) {\n            result[i][j] = result[j][i];\n        }\n    }\n\n    return result;\n}\n\nmodule.exports = distanceMatrix;\n","/**\n *  Constructs a confusion matrix\n * @class ConfusionMatrix\n * @example\n * const CM = new ConfusionMatrix([[13, 2], [10, 5]], ['cat', 'dog'])\n * @param {Array<Array<number>>} matrix - The confusion matrix, a 2D Array. Rows represent the actual label and columns\n *     the predicted label.\n * @param {Array<any>} labels - Labels of the confusion matrix, a 1D Array\n */\nclass ConfusionMatrix {\n    constructor(matrix, labels) {\n        if (matrix.length !== matrix[0].length) {\n            throw new Error('Confusion matrix must be square');\n        }\n        if (labels.length !== matrix.length) {\n            throw new Error('Confusion matrix and labels should have the same length');\n        }\n        this.labels = labels;\n        this.matrix = matrix;\n    }\n\n\n    /**\n     * Construct confusion matrix from the predicted and actual labels (classes). Be sure to provide the arguments in\n     * the correct order!\n     * @param {Array<any>} actual  - The predicted labels of the classification\n     * @param {Array<any>} predicted     - The actual labels of the classification. Has to be of same length as\n     *     predicted.\n     * @param {object} [options] - Additional options\n     * @param {Array<any>} [options.labels] - The list of labels that should be used. If not provided the distinct set\n     *     of labels present in predicted and actual is used. Labels are compared using the strict equality operator\n     *     '==='\n     * @return {ConfusionMatrix} - Confusion matrix\n     */\n    static fromLabels(actual, predicted, options = {}) {\n        if (predicted.length !== actual.length) {\n            throw new Error('predicted and actual must have the same length');\n        }\n        let distinctLabels;\n        if (options.labels) {\n            distinctLabels = new Set(options.labels);\n        } else {\n            distinctLabels = new Set([...actual, ...predicted]);\n        }\n        distinctLabels = Array.from(distinctLabels);\n        if (options.sort) {\n            distinctLabels.sort(options.sort);\n        }\n\n        // Create confusion matrix and fill with 0's\n        const matrix = Array.from({length: distinctLabels.length});\n        for (let i = 0; i < matrix.length; i++) {\n            matrix[i] = new Array(matrix.length);\n            matrix[i].fill(0);\n        }\n\n        for (let i = 0; i < predicted.length; i++) {\n            const actualIdx = distinctLabels.indexOf(actual[i]);\n            const predictedIdx = distinctLabels.indexOf(predicted[i]);\n            if (actualIdx >= 0 && predictedIdx >= 0) {\n                matrix[actualIdx][predictedIdx]++;\n            }\n        }\n\n        return new ConfusionMatrix(matrix, distinctLabels);\n    }\n\n    /**\n     * Get the confusion matrix\n     * @return {Array<Array<number> >}\n     */\n    getMatrix() {\n        return this.matrix;\n    }\n\n    getLabels() {\n        return this.labels;\n    }\n\n    /**\n     * Get the total number of samples\n     * @return {number}\n     */\n    getTotalCount() {\n        let predicted = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            for (var j = 0; j < this.matrix.length; j++) {\n                predicted += this.matrix[i][j];\n            }\n        }\n        return predicted;\n    }\n\n    /**\n     * Get the total number of true predictions\n     * @return {number}\n     */\n    getTrueCount() {\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            count += this.matrix[i][i];\n        }\n        return count;\n    }\n\n    /**\n     * Get the total number of false predictions.\n     * @return {number}\n     */\n    getFalseCount() {\n        return this.getTotalCount() - this.getTrueCount();\n    }\n\n    /**\n     * Get the number of true positive predictions.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getTruePositiveCount(label) {\n        const index = this.getIndex(label);\n        return this.matrix[index][index];\n    }\n\n    /**\n     * Get the number of true negative predictions\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getTrueNegativeCount(label) {\n        const index = this.getIndex(label);\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            for (var j = 0; j < this.matrix.length; j++) {\n                if (i !== index && j !== index) {\n                    count += this.matrix[i][j];\n                }\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of false positive predictions.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalsePositiveCount(label) {\n        const index = this.getIndex(label);\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            if (i !== index) {\n                count += this.matrix[i][index];\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of false negative predictions.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseNegativeCount(label) {\n        const index = this.getIndex(label);\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            if (i !== index) {\n                count += this.matrix[index][i];\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of real positive samples.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getPositiveCount(label) {\n        return this.getTruePositiveCount(label) + this.getFalseNegativeCount(label);\n    }\n\n    /**\n     * Get the number of real negative samples.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getNegativeCount(label) {\n        return this.getTrueNegativeCount(label) + this.getFalsePositiveCount(label);\n    }\n\n    /**\n     * Get the index in the confusion matrix that corresponds to the given label\n     * @param {any} label - The label to search for\n     * @throws if the label is not found\n     * @return {number}\n     */\n    getIndex(label) {\n        const index = this.labels.indexOf(label);\n        if (index === -1) throw new Error('The label does not exist');\n        return index;\n    }\n\n    /**\n     * Get the true positive rate a.k.a. sensitivity. Computes the ratio between the number of true positive predictions and the total number of positive samples.\n     * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number} - The true positive rate [0-1]\n     */\n    getTruePositiveRate(label) {\n        return this.getTruePositiveCount(label) / this.getPositiveCount(label);\n    }\n\n    /**\n     * Get the true negative rate a.k.a. specificity. Computes the ration between the number of true negative predictions and the total number of negative samples.\n     * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getTrueNegativeRate(label) {\n        return this.getTrueNegativeCount(label) / this.getNegativeCount(label);\n    }\n\n    /**\n     * Get the positive predictive value a.k.a. precision. Computes TP / (TP + FP)\n     * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getPositivePredictiveValue(label) {\n        const TP = this.getTruePositiveCount(label);\n        return TP / (TP + this.getFalsePositiveCount(label));\n    }\n\n    /**\n     * Negative predictive value\n     * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getNegativePredictiveValue(label) {\n        const TN = this.getTrueNegativeCount(label);\n        return TN / (TN + this.getFalseNegativeCount(label));\n    }\n\n    /**\n     * False negative rate a.k.a. miss rate.\n     * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseNegativeRate(label) {\n        return 1 - this.getTruePositiveRate(label);\n    }\n\n    /**\n     * False positive rate a.k.a. fall-out rate.\n     * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalsePositiveRate(label) {\n        return 1 - this.getTrueNegativeRate(label);\n    }\n\n    /**\n     * False discovery rate (FDR)\n     * {@link https://en.wikipedia.org/wiki/False_discovery_rate}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseDiscoveryRate(label) {\n        const FP = this.getFalsePositiveCount(label);\n        return FP / (FP + this.getTruePositiveCount(label));\n    }\n\n    /**\n     * False omission rate (FOR)\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseOmissionRate(label) {\n        const FN = this.getFalseNegativeCount(label);\n        return FN / (FN + this.getTruePositiveCount(label));\n    }\n\n    /**\n     * F1 score\n     * {@link https://en.wikipedia.org/wiki/F1_score}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getF1Score(label) {\n        const TP = this.getTruePositiveCount(label);\n        return 2 * TP / (2 * TP + this.getFalsePositiveCount(label) + this.getFalseNegativeCount(label));\n    }\n\n    /**\n     * Matthews correlation coefficient (MCC)\n     * {@link https://en.wikipedia.org/wiki/Matthews_correlation_coefficient}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getMatthewsCorrelationCoefficient(label) {\n        const TP = this.getTruePositiveCount(label);\n        const TN = this.getTrueNegativeCount(label);\n        const FP = this.getFalsePositiveCount(label);\n        const FN = this.getFalseNegativeCount(label);\n        return (TP * TN - FP * FN) / Math.sqrt((TP + FP) * (TP + FN) * (TN + FP) * (TN + FN));\n    }\n\n    /**\n     * Informedness\n     * {@link https://en.wikipedia.org/wiki/Youden%27s_J_statistic}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getInformedness(label) {\n        return this.getTruePositiveRate(label) + this.getTrueNegativeRate(label) - 1;\n    }\n\n    /**\n     * Markedness\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getMarkedness(label) {\n        return this.getPositivePredictiveValue(label) + this.getNegativePredictiveValue(label) - 1;\n    }\n\n    /**\n     * Get the confusion table.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {Array<Array<number> >} - The 2x2 confusion table. [[TP, FN], [FP, TN]]\n     */\n    getConfusionTable(label) {\n        return [\n            [\n                this.getTruePositiveCount(label),\n                this.getFalseNegativeCount(label)\n            ],\n            [\n                this.getFalsePositiveCount(label),\n                this.getTrueNegativeCount(label)\n            ]\n        ];\n    }\n\n    /**\n     * Get total accuracy.\n     * @return {number} - The ratio between the number of true predictions and total number of classifications ([0-1])\n     */\n    getAccuracy() {\n        let correct = 0;\n        let incorrect = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            for (var j = 0; j < this.matrix.length; j++) {\n                if (i === j) correct += this.matrix[i][j];\n                else incorrect += this.matrix[i][j];\n            }\n        }\n        return correct / (correct + incorrect);\n    }\n\n\n    /**\n     * Returns the element in the confusion matrix that corresponds to the given actual and predicted labels.\n     * @param {any} actual - The true label\n     * @param {any} predicted - The predicted label\n     * @return {number} - The element in the confusion matrix\n     */\n    getCount(actual, predicted) {\n        const actualIndex = this.getIndex(actual);\n        const predictedIndex = this.getIndex(predicted);\n        return this.matrix[actualIndex][predictedIndex];\n    }\n\n    /**\n     * Compute the general prediction accuracy\n     * @deprecated Use getAccuracy\n     * @return {number} - The prediction accuracy ([0-1]\n     */\n    get accuracy() {\n        return this.getAccuracy();\n    }\n\n    /**\n     * Compute the number of predicted observations\n     * @deprecated Use getTotalCount\n     * @return {number}\n     */\n    get total() {\n        return this.getTotalCount();\n    }\n}\n\nmodule.exports = ConfusionMatrix;\n","'use strict';\n\nvar Matrix = require('ml-matrix').Matrix;\n\nvar Utils = require('./utils');\nconst ACTIVATION_FUNCTIONS = require('./activationFunctions');\n\nclass Layer {\n    /**\n     * @private\n     * Create a new layer with the given options\n     * @param {object} options\n     * @param {number} [options.inputSize] - Number of conections that enter the neurons.\n     * @param {number} [options.outputSize] - Number of conections that leave the neurons.\n     * @param {number} [options.regularization] - Regularization parameter.\n     * @param {number} [options.epsilon] - Learning rate parameter.\n     * @param {string} [options.activation] - Activation function parameter from the FeedForwardNeuralNetwork class.\n     * @param {number} [options.activationParam] - Activation parameter if needed.\n     */\n    constructor(options) {\n        this.inputSize = options.inputSize;\n        this.outputSize = options.outputSize;\n        this.regularization = options.regularization;\n        this.epsilon = options.epsilon;\n        this.activation = options.activation;\n        this.activationParam = options.activationParam;\n\n        var selectedFunction = ACTIVATION_FUNCTIONS[options.activation];\n        var params = selectedFunction.activation.length;\n\n        var actFunction = params > 1 ? val => selectedFunction.activation(val, options.activationParam) : selectedFunction.activation;\n        var derFunction = params > 1 ? val => selectedFunction.derivate(val, options.activationParam) : selectedFunction.derivate;\n\n        this.activationFunction = function (i, j) {\n            this[i][j] = actFunction(this[i][j]);\n        };\n        this.derivate = function (i, j) {\n            this[i][j] = derFunction(this[i][j]);\n        };\n\n        if (options.model) {\n            // load model\n            this.W = Matrix.checkMatrix(options.W);\n            this.b = Matrix.checkMatrix(options.b);\n\n        } else {\n            // default constructor\n\n            this.W = Matrix.rand(this.inputSize, this.outputSize);\n            this.b = Matrix.zeros(1, this.outputSize);\n\n            this.W.apply(function (i, j) {\n                this[i][j] /= Math.sqrt(options.inputSize);\n            });\n        }\n    }\n\n    /**\n     * @private\n     * propagate the given input through the current layer.\n     * @param {Matrix} X - input.\n     * @return {Matrix} output at the current layer.\n     */\n    forward(X) {\n        var z = X.mmul(this.W).addRowVector(this.b);\n        z.apply(this.activationFunction);\n        this.a = z.clone();\n        return z;\n    }\n\n    /**\n     * @private\n     * apply backpropagation algorithm at the current layer\n     * @param {Matrix} delta - delta values estimated at the following layer.\n     * @param {Matrix} a - 'a' values from the following layer.\n     * @return {Matrix} the new delta values for the next layer.\n     */\n    backpropagation(delta, a) {\n        this.dW = a.transposeView().mmul(delta);\n        this.db = Utils.sumCol(delta);\n\n        var aCopy = a.clone();\n        return delta.mmul(this.W.transposeView()).mul(aCopy.apply(this.derivate));\n    }\n\n    /**\n     * @private\n     * Function that updates the weights at the current layer with the derivatives.\n     */\n    update() {\n        this.dW.add(this.W.clone().mul(this.regularization));\n        this.W.add(this.dW.mul(-this.epsilon));\n        this.b.add(this.db.mul(-this.epsilon));\n    }\n\n    /**\n     * @private\n     * Export the current layer to JSON.\n     * @return {object} model\n     */\n    toJSON() {\n        return {\n            model: 'Layer',\n            inputSize: this.inputSize,\n            outputSize: this.outputSize,\n            regularization: this.regularization,\n            epsilon: this.epsilon,\n            activation: this.activation,\n            W: this.W,\n            b: this.b\n        };\n    }\n\n    /**\n     * @private\n     * Creates a new Layer with the given model.\n     * @param {object} model\n     * @return {Layer}\n     */\n    static load(model) {\n        if (model.model !== 'Layer') {\n            throw new RangeError('the current model is not a Layer model');\n        }\n        return new Layer(model);\n    }\n\n}\n\nmodule.exports = Layer;\n","'use strict';\n\nvar Matrix = require('ml-matrix').Matrix;\n\n/**\n * @private\n * Retrieves the sum at each row of the given matrix.\n * @param {Matrix} matrix\n * @return {Matrix}\n */\nfunction sumRow(matrix) {\n    var sum = Matrix.zeros(matrix.rows, 1);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum[i][0] += matrix[i][j];\n        }\n    }\n    return sum;\n}\n\n/**\n * @private\n * Retrieves the sum at each column of the given matrix.\n * @param {Matrix} matrix\n * @return {Matrix}\n */\nfunction sumCol(matrix) {\n    var sum = Matrix.zeros(1, matrix.columns);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum[0][j] += matrix[i][j];\n        }\n    }\n    return sum;\n}\n\n/**\n * @private\n * Method that given an array of labels(predictions), returns two dictionaries, one to transform from labels to\n * numbers and other in the reverse way\n * @param {Array} array\n * @return {object}\n */\nfunction dictOutputs(array) {\n    var inputs = {};\n    var outputs = {};\n    var index = 0;\n    for (var i = 0; i < array.length; i += 1) {\n        if (inputs[array[i]] === undefined) {\n            inputs[array[i]] = index;\n            outputs[index] = array[i];\n            index++;\n        }\n    }\n\n    return {\n        inputs: inputs,\n        outputs: outputs\n    };\n}\n\nmodule.exports = {\n    dictOutputs: dictOutputs,\n    sumCol: sumCol,\n    sumRow: sumRow\n};\n","'use strict';\n\nfunction logistic(val) {\n    return 1 / (1 + Math.exp(-val));\n}\n\nfunction expELU(val, param) {\n    return val < 0 ? param * (Math.exp(val) - 1) : val;\n}\n\nfunction softExponential(val, param) {\n    if (param < 0) {\n        return -Math.log(1 - param * (val + param)) / param;\n    }\n    if (param > 0) {\n        return ((Math.exp(param * val) - 1) / param) + param;\n    }\n    return val;\n}\n\nfunction softExponentialPrime(val, param) {\n    if (param < 0) {\n        return 1 / (1 - param * (param + val));\n    } else {\n        return Math.exp(param * val);\n    }\n}\n\nconst ACTIVATION_FUNCTIONS = {\n    tanh: {\n        activation: Math.tanh,\n        derivate: val => 1 - (val * val)\n    },\n    identity: {\n        activation: val => val,\n        derivate: () => 1\n    },\n    logistic: {\n        activation: logistic,\n        derivate: val => logistic(val) * (1 - logistic(val))\n    },\n    arctan: {\n        activation: Math.atan,\n        derivate: val => 1 / (val * val + 1)\n    },\n    softsign: {\n        activation: val => val / (1 + Math.abs(val)),\n        derivate: val => 1 / ((1 + Math.abs(val)) * (1 + Math.abs(val)))\n    },\n    relu: {\n        activation: val => val < 0 ? 0 : val,\n        derivate: val => val < 0 ? 0 : 1\n    },\n    softplus: {\n        activation: val => Math.log(1 + Math.exp(val)),\n        derivate: val => 1 / (1 + Math.exp(-val))\n    },\n    bent: {\n        activation: val => ((Math.sqrt(val * val + 1) - 1) / 2) + val,\n        derivate: val => (val / (2 * Math.sqrt(val * val + 1))) + 1\n    },\n    sinusoid: {\n        activation: Math.sin,\n        derivate: Math.cos\n    },\n    sinc: {\n        activation: val => val === 0 ? 1 : Math.sin(val) / val,\n        derivate: val => val === 0 ? 0 : (Math.cos(val) / val) - (Math.sin(val) / (val * val))\n    },\n    gaussian: {\n        activation: val => Math.exp(-(val * val)),\n        derivate: val => -2 * val * Math.exp(-(val * val))\n    },\n    'parametric-relu': {\n        activation: (val, param) => val < 0 ? param * val : val,\n        derivate: (val, param) => val < 0 ? param : 1\n    },\n    'exponential-elu': {\n        activation: expELU,\n        derivate: (val, param) => val < 0 ? expELU(val, param) + param : 1\n    },\n    'soft-exponential': {\n        activation: softExponential,\n        derivate: softExponentialPrime\n    }\n};\n\nmodule.exports = ACTIVATION_FUNCTIONS;\n","function NodeSquare(x, y, weights, som) {\n    this.x = x;\n    this.y = y;\n    this.weights = weights;\n    this.som = som;\n    this.neighbors = {};\n}\n\nNodeSquare.prototype.adjustWeights = function adjustWeights(target, learningRate, influence) {\n    for (var i = 0, ii = this.weights.length; i < ii; i++) {\n        this.weights[i] += learningRate * influence * (target[i] - this.weights[i]);\n    }\n};\n\nNodeSquare.prototype.getDistance = function getDistance(otherNode) {\n    return Math.max(Math.abs(this.x - otherNode.x), Math.abs(this.y - otherNode.y));\n};\n\nNodeSquare.prototype.getDistanceTorus = function getDistanceTorus(otherNode) {\n    var distX = Math.abs(this.x - otherNode.x),\n        distY = Math.abs(this.y - otherNode.y);\n    return Math.max(Math.min(distX, this.som.gridDim.x - distX), Math.min(distY, this.som.gridDim.y - distY));\n};\n\nNodeSquare.prototype.getNeighbors = function getNeighbors(xy) {\n    if (!this.neighbors[xy]) {\n        this.neighbors[xy] = new Array(2);\n\n        // left or bottom neighbor\n        var v;\n        if (this[xy] > 0) {\n            v = this[xy] - 1;\n        } else if (this.som.torus) {\n            v = this.som.gridDim[xy] - 1\n        }\n        if (typeof v !== 'undefined') {\n            var x, y;\n            if (xy === 'x') {\n                x = v;\n                y = this.y;\n            } else {\n                x = this.x;\n                y = v;\n            }\n            this.neighbors[xy][0] = this.som.nodes[x][y];\n        }\n\n        // top or right neighbor\n        var w;\n        if (this[xy] < (this.som.gridDim[xy] - 1)) {\n            w = this[xy] + 1;\n        } else if (this.som.torus) {\n            w = 0;\n        }\n        if (typeof w !== 'undefined') {\n            if (xy === 'x') {\n                x = w;\n                y = this.y;\n            } else {\n                x = this.x;\n                y = w;\n            }\n            this.neighbors[xy][1] = this.som.nodes[x][y];\n        }\n    }\n    return this.neighbors[xy];\n};\n\nNodeSquare.prototype.getPos = function getPos(xy, element) {\n    var neighbors = this.getNeighbors(xy),\n        distance = this.som.distance,\n        bestNeighbor,\n        direction;\n    if(neighbors[0]) {\n        if (neighbors[1]) {\n            var dist1 = distance(element, neighbors[0].weights),\n                dist2 = distance(element, neighbors[1].weights);\n            if(dist1 < dist2) {\n                bestNeighbor = neighbors[0];\n                direction = -1;\n            } else {\n                bestNeighbor = neighbors[1];\n                direction = 1;\n            }\n        } else {\n            bestNeighbor = neighbors[0];\n            direction = -1;\n        }\n    } else {\n        bestNeighbor = neighbors[1];\n        direction = 1;\n    }\n    var simA = 1 - distance(element, this.weights),\n        simB = 1 - distance(element, bestNeighbor.weights);\n    var factor = ((simA - simB) / (2 - simA - simB));\n    return 0.5 + 0.5 * factor * direction;\n};\n\nNodeSquare.prototype.getPosition = function getPosition(element) {\n    return [\n        this.getPos('x', element),\n        this.getPos('y', element)\n    ];\n};\n\nmodule.exports = NodeSquare;","'use strict';\n\nexports.distance = require('./distances');\nexports.similarity = require('./similarities');","'use strict';\n\nmodule.exports = function czekanowskiSimilarity(a, b) {\n    var up = 0;\n    var down = 0;\n    for (var i = 0; i < a.length; i++) {\n        up += Math.min(a[i], b[i]);\n        down += a[i] + b[i];\n    }\n    return 2 * up / down;\n};\n","module.exports = function dice(a, b) {\n    var ii = a.length,\n        p = 0,\n        q1 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * a[i];\n        q1 += b[i] * b[i];\n        q2 += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return q2 / (p + q1);\n};\n","module.exports = function intersection(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.min(a[i], b[i]);\n    }\n    return 1 - ans;\n};\n","module.exports = function jaccard(a, b) {\n    var ii = a.length,\n        p1 = 0,\n        p2 = 0,\n        q1 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p1 += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q1 += b[i] * b[i];\n        q2 += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return q2 / (p2 + q1 - p1);\n};\n","module.exports = function kulczynski(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += Math.min(a[i],b[i]);\n    }\n    return up / down;\n};\n","module.exports = function motyka(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.min(a[i], b[i]);\n        down += a[i] + b[i];\n    }\n    return 1 - (up / down);\n};\n","module.exports = function squaredChord(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (Math.sqrt(a[i]) - Math.sqrt(b[i])) * (Math.sqrt(a[i]) - Math.sqrt(b[i]));\n    }\n    return ans;\n};\n","module.exports = function tanimoto(a, b, bitvector) {\n    if (bitvector) {\n        var inter = 0,\n            union = 0;\n        for (var j = 0; j < a.length; j++) {\n            inter += a[j] && b[j];\n            union += a[j] || b[j];\n        }\n        if (union === 0)\n            return 1;\n        return inter / union;\n    }\n    else {\n        var ii = a.length,\n            p = 0,\n            q = 0,\n            m = 0;\n        for (var i = 0; i < ii ; i++) {\n            p += a[i];\n            q += b[i];\n            m += Math.min(a[i],b[i]);\n        }\n        return 1 - (p + q - 2 * m) / (p + q - m);\n    }\n};\n","module.exports = function cosine(a, b) {\n    var ii = a.length,\n        p = 0,\n        p2 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q2 += b[i] * b[i];\n    }\n    return p / (Math.sqrt(p2) * Math.sqrt(q2));\n};\n","'use strict';\n\nvar extend = require('extend');\n\nvar defaultOptions = {\n    size: 1,\n    value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n    var len = data.length;\n    if (typeof options.size === 'number')\n        options.size = [options.size, options.size];\n\n    var cond = len + options.size[0] + options.size[1];\n\n    var output;\n    if (options.output) {\n        if (options.output.length !== cond)\n            throw new RangeError('Wrong output size');\n        output = options.output;\n    }\n    else\n        output = new Array(cond);\n\n    var i;\n\n    // circular option\n    if (options.value === 'circular') {\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = data[((len - (options.size[0] % len)) + i) % len];\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = data[(i - options.size[0]) % len];\n        }\n    }\n\n    // replicate option\n    else if (options.value === 'replicate') {\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = data[0];\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = data[len - 1];\n        }\n    }\n\n    // symmetric option\n    else if (options.value === 'symmetric') {\n        if ((options.size[0] > len) || (options.size[1] > len))\n            throw new RangeError('expanded value should not be bigger than the data length');\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = data[options.size[0] - 1 - i];\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = data[2*len + options.size[0] - i - 1];\n        }\n    }\n\n    // default option\n    else {\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = options.value;\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = options.value;\n        }\n    }\n\n    return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n    var row = data.length;\n    var col = data[0].length;\n    if (options.size[0] === undefined)\n        options.size = [options.size, options.size, options.size, options.size];\n    throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray (data, options) {\n    options = extend({}, defaultOptions, options);\n\n    if (Array.isArray(data)) {\n        if (Array.isArray(data[0]))\n            return matrixCase(data, options);\n        else\n            return arrayCase(data, options);\n    }\n    else\n        throw new TypeError('data should be an array');\n}\n\nmodule.exports = padArray;\n","export default function maybeToPrecision(value, digits) {\n    if (value < 0) {\n        value = 0 - value;\n        if (typeof digits === 'number') {\n            return '- ' + value.toPrecision(digits);\n        } else {\n            return '- ' + value.toString();\n        }\n    } else {\n        if (typeof digits === 'number') {\n            return value.toPrecision(digits);\n        } else {\n            return value.toString();\n        }\n    }\n}\n","export default function checkArraySize(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y)) {\n        throw new TypeError('x and y must be arrays');\n    }\n    if (x.length !== y.length) {\n        throw new RangeError('x and y arrays must have the same length');\n    }\n}\n","export {default as maybeToPrecision} from './maybeToPrecision';\nexport {default as checkArrayLength} from './checkArrayLength';\n\nexport default class BaseRegression {\n    constructor() {\n        if (new.target === BaseRegression) {\n            throw new Error('BaseRegression must be subclassed');\n        }\n    }\n\n    predict(x) {\n        if (typeof x === 'number') {\n            return this._predict(x);\n        } else if (Array.isArray(x)) {\n            const y = new Array(x.length);\n            for (let i = 0; i < x.length; i++) {\n                y[i] = this._predict(x[i]);\n            }\n            return y;\n        } else {\n            throw new TypeError('x must be a number or array');\n        }\n    }\n\n    _predict() {\n        throw new Error('_predict must be implemented');\n    }\n\n    train() {\n        //Do nothing for this package\n    }\n\n    toString() {\n        return '';\n    }\n\n    toLaTeX() {\n        return '';\n    }\n\n    /**\n     * Return the correlation coefficient of determination (r) and chi-square.\n     * @param {Array<number>} x\n     * @param {Array<number>} y\n     * @return {object}\n     */\n    score(x, y) {\n        if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n            throw new Error('x and y must be arrays of the same length');\n        }\n\n        const n = x.length;\n        const y2 = new Array(n);\n        for (let i = 0; i < n; i++) {\n            y2[i] = this._predict(x[i]);\n        }\n\n        let xSum = 0;\n        let ySum = 0;\n        let chi2 = 0;\n        let rmsd = 0;\n        let xSquared = 0;\n        let ySquared = 0;\n        let xY = 0;\n        for (let i = 0; i < n; i++) {\n            xSum += y2[i];\n            ySum += y[i];\n            xSquared += y2[i] * y2[i];\n            ySquared += y[i] * y[i];\n            xY += y2[i] * y[i];\n            if (y[i] !== 0) {\n                chi2 += (y[i] - y2[i]) * (y[i] - y2[i]) / y[i];\n            }\n            rmsd = (y[i] - y2[i]) * (y[i] - y2[i]);\n        }\n\n        const r = (n * xY - xSum * ySum) / Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n        return {\n            r: r,\n            r2: r * r,\n            chi2: chi2,\n            rmsd: rmsd * rmsd / n\n        };\n    }\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n    constructor(x, y) {\n        super();\n        if (x === true) {\n            this.slope = y.slope;\n            this.intercept = y.intercept;\n            this.coefficients = [y.intercept, y.slope];\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y);\n        }\n    }\n\n    toJSON() {\n        return {\n            name: 'simpleLinearRegression',\n            slope: this.slope,\n            intercept: this.intercept\n        };\n    }\n\n    _predict(x) {\n        return this.slope * x + this.intercept;\n    }\n\n    computeX(y) {\n        return (y - this.intercept) / this.slope;\n    }\n\n    toString(precision) {\n        let result = 'f(x) = ';\n        if (this.slope !== 0) {\n            const xFactor = maybeToPrecision(this.slope, precision);\n            result += (xFactor === '1' ? '' : xFactor + ' * ') + 'x';\n            if (this.intercept) {\n                const absIntercept = Math.abs(this.intercept);\n                const operator = absIntercept === this.intercept ? '+' : '-';\n                result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n            }\n        } else {\n            result += maybeToPrecision(this.intercept, precision);\n        }\n        return result;\n    }\n\n    toLaTeX(precision) {\n        return this.toString(precision);\n    }\n\n    static load(json) {\n        if (json.name !== 'simpleLinearRegression') {\n            throw new TypeError('not a SLR model');\n        }\n        return new SimpleLinearRegression(true, json);\n    }\n}\n\nfunction regress(slr, x, y) {\n    const n = x.length;\n    let xSum = 0;\n    let ySum = 0;\n\n    let xSquared = 0;\n    let xY = 0;\n\n    for (let i = 0; i < n; i++) {\n        xSum += x[i];\n        ySum += y[i];\n        xSquared += x[i] * x[i];\n        xY += x[i] * y[i];\n    }\n\n    const numerator = (n * xY - xSum * ySum);\n    slr.slope = numerator / (n * xSquared - xSum * xSum);\n    slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n    slr.coefficients = [slr.intercept, slr.slope];\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport Matrix, {solve} from 'ml-matrix';\n\nexport default class PolynomialRegression extends BaseRegression {\n    constructor(x, y, degree) {\n        super();\n        if (x === true) {\n            this.degree = y.degree;\n            this.powers = y.powers;\n            this.coefficients = y.coefficients;\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y, degree);\n        }\n    }\n\n    _predict(x) {\n        let y = 0;\n        for (let k = 0; k < this.powers.length; k++) {\n            y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n        }\n        return y;\n    }\n\n    toJSON() {\n        return {\n            name: 'polynomialRegression',\n            degree: this.degree,\n            powers: this.powers,\n            coefficients: this.coefficients\n        };\n    }\n\n    toString(precision) {\n        return this._toFormula(precision, false);\n    }\n\n    toLaTeX(precision) {\n        return this._toFormula(precision, true);\n    }\n\n    _toFormula(precision, isLaTeX) {\n        let sup = '^';\n        let closeSup = '';\n        let times = ' * ';\n        if (isLaTeX) {\n            sup = '^{';\n            closeSup = '}';\n            times = '';\n        }\n\n        let fn = '';\n        let str = '';\n        for (let k = 0; k < this.coefficients.length; k++) {\n            str = '';\n            if (this.coefficients[k] !== 0) {\n                if (this.powers[k] === 0) {\n                    str = maybeToPrecision(this.coefficients[k], precision);\n                } else {\n                    if (this.powers[k] === 1) {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x';\n                    } else {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x' + sup + this.powers[k] + closeSup;\n                    }\n                }\n\n                if (this.coefficients[k] > 0 && k !== (this.coefficients.length - 1)) {\n                    str = ' + ' + str;\n                } else if (k !== (this.coefficients.length - 1)) {\n                    str = ' ' + str;\n                }\n            }\n            fn = str + fn;\n        }\n        if (fn.charAt(0) === '+') {\n            fn = fn.slice(1);\n        }\n\n        return 'f(x) = ' + fn;\n    }\n\n    static load(json) {\n        if (json.name !== 'polynomialRegression') {\n            throw new TypeError('not a polynomial regression model');\n        }\n        return new PolynomialRegression(true, json);\n    }\n}\n\nfunction regress(pr, x, y, degree) {\n    const n = x.length;\n    let powers;\n    if (Array.isArray(degree)) {\n        powers = degree;\n        degree = powers.length;\n    } else {\n        degree++;\n        powers = new Array(degree);\n        for (let k = 0; k < degree; k++) {\n            powers[k] = k;\n        }\n    }\n    const F = new Matrix(n, degree);\n    const Y = new Matrix([y]);\n    for (let k = 0; k < degree; k++) {\n        for (let i = 0; i < n; i++) {\n            if (powers[k] === 0) {\n                F[i][k] = 1;\n            } else {\n                F[i][k] = Math.pow(x[i], powers[k]);\n            }\n        }\n    }\n\n    const FT = F.transposeView();\n    const A = FT.mmul(F);\n    const B = FT.mmul(Y.transposeView());\n\n    pr.degree = degree - 1;\n    pr.powers = powers;\n    pr.coefficients = solve(A, B).to1DArray();\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class ExponentialRegression extends BaseRegression {\n    constructor(x, y) {\n        super();\n        if (x === true) {\n            this.A = y.A;\n            this.B = y.B;\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y);\n        }\n    }\n\n    _predict(input) {\n        return this.B * Math.exp(input * this.A);\n    }\n\n    toJSON() {\n        return {\n            name: 'exponentialRegression',\n            A: this.A,\n            B: this.B\n        };\n    }\n\n    toString(precision) {\n        return 'f(x) = ' + maybeToPrecision(this.B, precision) + ' * e^(' + maybeToPrecision(this.A, precision) + ' * x)';\n    }\n\n    toLaTeX(precision) {\n        if (this.A >= 0) {\n            return 'f(x) = ' + maybeToPrecision(this.B, precision) + 'e^{' + maybeToPrecision(this.A, precision) + 'x}';\n        } else {\n            return 'f(x) = \\\\frac{' + maybeToPrecision(this.B, precision) + '}{e^{' + maybeToPrecision(-this.A, precision) + 'x}}';\n        }\n\n    }\n\n    static load(json) {\n        if (json.name !== 'exponentialRegression') {\n            throw new TypeError('not a exponential regression model');\n        }\n        return new ExponentialRegression(true, json);\n    }\n}\n\nfunction regress(er, x, y) {\n    const n = x.length;\n    const yl = new Array(n);\n    for (let i = 0; i < n; i++) {\n        yl[i] = Math.log(y[i]);\n    }\n\n    const linear = new SimpleLinearRegression(x, yl);\n    er.A = linear.slope;\n    er.B = Math.exp(linear.intercept);\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class PowerRegression extends BaseRegression {\n    constructor(x, y) {\n        super();\n        if (x === true) { // reloading model\n            this.A = y.A;\n            this.B = y.B;\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y);\n        }\n    }\n\n    _predict(newInputs) {\n        return this.A * Math.pow(newInputs, this.B);\n    }\n\n    toJSON() {\n        return {\n            name: 'powerRegression',\n            A: this.A,\n            B: this.B\n        };\n    }\n\n    toString(precision) {\n        return 'f(x) = ' + maybeToPrecision(this.A, precision) + ' * x^' + maybeToPrecision(this.B, precision);\n    }\n\n    toLaTeX(precision) {\n        if (this.B >= 0) {\n            return 'f(x) = ' + maybeToPrecision(this.A, precision) + 'x^{' + maybeToPrecision(this.B, precision) + '}';\n        } else {\n            return 'f(x) = \\\\frac{' + maybeToPrecision(this.A, precision) + '}{x^{' + maybeToPrecision(-this.B, precision) + '}}';\n        }\n    }\n\n    static load(json) {\n        if (json.name !== 'powerRegression') {\n            throw new TypeError('not a power regression model');\n        }\n        return new PowerRegression(true, json);\n    }\n}\n\nfunction regress(pr, x, y) {\n    const n = x.length;\n    const xl = new Array(n);\n    const yl = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xl[i] = Math.log(x[i]);\n        yl[i] = Math.log(y[i]);\n    }\n\n    const linear = new SimpleLinearRegression(xl, yl);\n    pr.A = Math.exp(linear.intercept);\n    pr.B = linear.slope;\n}\n","import Matrix, { SVD } from 'ml-matrix';\nimport BaseRegression from 'ml-regression-base';\n\nexport default class MultivariateLinearRegression extends BaseRegression {\n  constructor(x, y, options = {}) {\n    const { intercept = true, statistics = true } = options;\n    super();\n    this.statistics = statistics;\n    if (x === true) {\n      this.weights = y.weights;\n      this.inputs = y.inputs;\n      this.outputs = y.outputs;\n      this.intercept = y.intercept;\n    } else {\n      x = new Matrix(x);\n      if (intercept) {\n        x.addColumn(new Array(x.length).fill(1));\n      }\n      const beta = new SVD(x, { autoTranspose: true }).solve(y);\n      this.weights = beta.to2DArray();\n      this.inputs = x[0].length;\n      this.outputs = y[0].length;\n      if (intercept) this.inputs--;\n      this.intercept = intercept;\n      if (statistics) {\n        /*\n         * Let's add some basic statistics about the beta's to be able to interpret them.\n         * source: http://dept.stat.lsa.umich.edu/~kshedden/Courses/Stat401/Notes/401-multreg.pdf\n         * validated against Excel Regression AddIn\n         * test: \"datamining statistics test\"\n         */\n        const fittedValues = x.mmul(beta);\n        const residuals = new Matrix(y).addM(fittedValues.neg());\n        const variance =\n          residuals\n            .to2DArray()\n            .map((ri) => Math.pow(ri[0], 2))\n            .reduce((a, b) => a + b) /\n          (y.length - x.columns);\n        this.stdError = Math.sqrt(variance);\n        this.stdErrorMatrix = x\n          .transposeView()\n          .mmul(x)\n          .pseudoInverse()\n          .mul(variance);\n        this.stdErrors = this.stdErrorMatrix.diagonal().map((d) => Math.sqrt(d));\n        this.tStats = this.weights.map(\n          (d, i) => (this.stdErrors[i] === 0 ? 0 : d[0] / this.stdErrors[i])\n        );\n      }\n    }\n  }\n\n  predict(x) {\n    if (Array.isArray(x)) {\n      if (typeof x[0] === 'number') {\n        return this._predict(x);\n      } else if (Array.isArray(x[0])) {\n        const y = new Array(x.length);\n        for (let i = 0; i < x.length; i++) {\n          y[i] = this._predict(x[i]);\n        }\n        return y;\n      }\n    }\n    throw new TypeError('x must be a matrix or array of numbers');\n  }\n\n  _predict(x) {\n    const result = new Array(this.outputs);\n    if (this.intercept) {\n      for (let i = 0; i < this.outputs; i++) {\n        result[i] = this.weights[this.inputs][i];\n      }\n    } else {\n      result.fill(0);\n    }\n    for (let i = 0; i < this.inputs; i++) {\n      for (let j = 0; j < this.outputs; j++) {\n        result[j] += this.weights[i][j] * x[i];\n      }\n    }\n    return result;\n  }\n\n  score() {\n    throw new Error('score method is not implemented yet');\n  }\n\n  toJSON() {\n    return {\n      name: 'multivariateLinearRegression',\n      weights: this.weights,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      intercept: this.intercept,\n      summary: (this.statistics)\n        ? {\n          regressionStatistics: {\n            standardError: this.stdError,\n            observations: this.outputs\n          },\n          variables: this.weights.map((d, i) => {\n            return {\n              label:\n                i === this.weights.length - 1\n                  ? 'Intercept'\n                  : `X Variable ${i + 1}`,\n              coefficients: d,\n              standardError: this.stdErrors[i],\n              tStat: this.tStats[i]\n            };\n          })\n        }\n        : undefined,\n    };\n  }\n\n  static load(model) {\n    if (model.name !== 'multivariateLinearRegression') {\n      throw new Error('not a MLR model');\n    }\n    return new MultivariateLinearRegression(true, model);\n  }\n}\n","import {maybeToPrecision} from 'ml-regression-base';\nimport PolynomialRegression from 'ml-regression-polynomial';\nimport BaseRegression from 'ml-regression-base';\n\n/*\n * Function that calculate the potential fit in the form f(x) = A*x^M\n * with a given M and return de A coefficient.\n *\n * @param {Vector} X - Vector of the x positions of the points.\n * @param {Vector} Y - Vector of the x positions of the points.\n * @param {Number} M - The exponent of the potential fit.\n * @return {Number} A - The A coefficient of the potential fit.\n */\nexport default class PotentialRegression extends BaseRegression {\n    /**\n     * @constructor\n     * @param x: Independent variable\n     * @param y: Dependent variable\n     * @param M\n     */\n    constructor(x, y, M) {\n        super();\n        if (x === true) { // reloading model\n            this.A = y.A;\n            this.M = y.M;\n        } else {\n            var n = x.length;\n            if (n !== y.length) {\n                throw new RangeError('input and output array have a different length');\n            }\n\n            var linear = new PolynomialRegression(x, y, [M]);\n            this.A = linear.coefficients[0];\n            this.M = M;\n        }\n    }\n\n    _predict(x) {\n        return this.A * Math.pow(x, this.M);\n    }\n\n    toJSON() {\n        return {\n            name: 'potentialRegression',\n            A: this.A,\n            M: this.M\n        };\n    }\n\n    toString(precision) {\n        return 'f(x) = ' + maybeToPrecision(this.A, precision) + ' * x^' + this.M;\n    }\n\n    toLaTeX(precision) {\n        if (this.M >= 0) {\n            return 'f(x) = ' + maybeToPrecision(this.A, precision) + 'x^{' + this.M + '}';\n        } else {\n            return 'f(x) = \\\\frac{' + maybeToPrecision(this.A, precision) + '}{x^{' + (-this.M) + '}}';\n        }\n    }\n\n    static load(json) {\n        if (json.name !== 'potentialRegression') {\n            throw new TypeError('not a potential regression model');\n        }\n        return new PotentialRegression(true, json);\n    }\n}\n","import {Matrix, solve} from 'ml-matrix';\nimport Kernel from 'ml-kernel';\n\nimport BaseRegression from 'ml-regression-base';\n\nconst defaultOptions = {\n    lambda: 0.1,\n    kernelType: 'gaussian',\n    kernelOptions: {},\n    computeCoefficient: false\n};\n\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport default class KernelRidgeRegression extends BaseRegression {\n    constructor(inputs, outputs, options) {\n        super();\n        if (inputs === true) { // reloading model\n            this.alpha = outputs.alpha;\n            this.inputs = outputs.inputs;\n            this.kernelType = outputs.kernelType;\n            this.kernelOptions = outputs.kernelOptions;\n            this.kernel = new Kernel(outputs.kernelType, outputs.kernelOptions);\n        } else {\n            options = Object.assign({}, defaultOptions, options);\n\n            const kernelFunction = new Kernel(options.kernelType, options.kernelOptions);\n            const K = kernelFunction.compute(inputs);\n            const n = inputs.length;\n            K.add(Matrix.eye(n, n).mul(options.lambda));\n\n            this.alpha = solve(K, outputs);\n            this.inputs = inputs;\n            this.kernelType = options.kernelType;\n            this.kernelOptions = options.kernelOptions;\n            this.kernel = kernelFunction;\n        }\n    }\n\n    _predict(newInputs) {\n        return this.kernel.compute([newInputs], this.inputs).mmul(this.alpha)[0];\n    }\n\n    toJSON() {\n        return {\n            name: 'kernelRidgeRegression',\n            alpha: this.alpha,\n            inputs: this.inputs,\n            kernelType: this.kernelType,\n            kernelOptions: this.kernelOptions\n        };\n    }\n\n    static load(json) {\n        if (json.name !== 'kernelRidgeRegression') {\n            throw new TypeError('not a KRR model');\n        }\n        return new KernelRidgeRegression(true, json);\n    }\n}\n","import {Matrix, SVD} from 'ml-matrix';\nimport BaseRegression from 'ml-regression-base';\n\nconst defaultOptions = {\n    order: 2\n};\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport default class PolynomialFitRegression2D extends BaseRegression {\n    /**\n     * Constructor for the 2D polynomial fitting\n     *\n     * @param inputs\n     * @param outputs\n     * @param options\n     * @constructor\n     */\n    constructor(inputs, outputs, options) {\n        super();\n        if (inputs === true) { // reloading model\n            this.coefficients = Matrix.columnVector(outputs.coefficients);\n            this.order = outputs.order;\n            if (outputs.r) {\n                this.r = outputs.r;\n                this.r2 = outputs.r2;\n            }\n            if (outputs.chi2) {\n                this.chi2 = outputs.chi2;\n            }\n        } else {\n            options = Object.assign({}, defaultOptions, options);\n            this.order = options.order;\n            this.coefficients = [];\n            this.X = inputs;\n            this.y = outputs;\n\n            this.train(this.X, this.y, options);\n        }\n    }\n\n    /**\n     * Function that fits the model given the data(X) and predictions(y).\n     * The third argument is an object with the following options:\n     * * order: order of the polynomial to fit.\n     *\n     * @param {Matrix} X - A matrix with n rows and 2 columns.\n     * @param {Matrix} y - A vector of the prediction values.\n     */\n    train(X, y) {\n        if (!Matrix.isMatrix(X)) X = new Matrix(X);\n        if (!Matrix.isMatrix(y)) y = Matrix.columnVector(y);\n\n        if (y.rows !== X.rows) {\n            y = y.transpose();\n        }\n\n        if (X.columns !== 2) {\n            throw new RangeError('You give X with ' + X.columns + ' columns and it must be 2');\n        }\n        if (X.rows !== y.rows) {\n            throw new RangeError('X and y must have the same rows');\n        }\n\n        var examples = X.rows;\n        var coefficients = ((this.order + 2) * (this.order + 1)) / 2;\n        this.coefficients = new Array(coefficients);\n\n        var x1 = X.getColumnVector(0);\n        var x2 = X.getColumnVector(1);\n\n        var scaleX1 = 1.0 / x1.clone().apply(abs).max();\n        var scaleX2 = 1.0 / x2.clone().apply(abs).max();\n        var scaleY = 1.0 / y.clone().apply(abs).max();\n\n        x1.mulColumn(0, scaleX1);\n        x2.mulColumn(0, scaleX2);\n        y.mulColumn(0, scaleY);\n\n        var A = new Matrix(examples, coefficients);\n        var col = 0;\n\n        for (var i = 0; i <= this.order; ++i) {\n            var limit = this.order - i;\n            for (var j = 0; j <= limit; ++j) {\n                var result = powColVector(x1, i).mulColumnVector(powColVector(x2, j));\n                A.setColumn(col, result);\n                col++;\n            }\n        }\n\n        var svd = new SVD(A.transpose(), {\n            computeLeftSingularVectors: true,\n            computeRightSingularVectors: true,\n            autoTranspose: false\n        });\n\n        var qqs = Matrix.rowVector(svd.diagonal);\n        qqs = qqs.apply(function (i, j) {\n            if (this[i][j] >= 1e-15) this[i][j] = 1 / this[i][j];\n            else this[i][j] = 0;\n        });\n\n        var qqs1 = Matrix.zeros(examples, coefficients);\n        for (i = 0; i < coefficients; ++i) {\n            qqs1[i][i] = qqs[0][i];\n        }\n\n        qqs = qqs1;\n\n        var U = svd.rightSingularVectors;\n        var V = svd.leftSingularVectors;\n\n        this.coefficients = V.mmul(qqs.transpose()).mmul(U.transpose()).mmul(y);\n\n        col = 0;\n\n        for (i = 0; i <= coefficients; ++i) {\n            limit = this.order - i;\n            for (j = 0; j <= limit; ++j) {\n                this.coefficients[col][0] = (this.coefficients[col][0] * Math.pow(scaleX1, i) * Math.pow(scaleX2, j)) / scaleY;\n                col++;\n            }\n        }\n    }\n\n    _predict(newInputs) {\n        var x1 = newInputs[0];\n        var x2 = newInputs[1];\n\n        var y = 0;\n        var column = 0;\n\n        for (var i = 0; i <= this.order; i++) {\n            for (var j = 0; j <= this.order - i; j++) {\n                y += Math.pow(x1, i) * (Math.pow(x2, j)) * this.coefficients[column][0];\n                column++;\n            }\n        }\n\n        return y;\n    }\n\n    toJSON() {\n        return {\n            name: 'polyfit2D',\n            order: this.order,\n            coefficients: this.coefficients\n        };\n    }\n\n    static load(json) {\n        if (json.name !== 'polyfit2D') {\n            throw new TypeError('not a polyfit2D model');\n        }\n        return new PolynomialFitRegression2D(true, json);\n    }\n}\n\n/**\n * Function that given a column vector return this: vector^power\n *\n * @param x - Column vector.\n * @param power - Pow number.\n * @return {Suite|Matrix}\n */\nfunction powColVector(x, power) {\n    var result = x.clone();\n    for (var i = 0; i < x.rows; ++i) {\n        result[i][0] = Math.pow(result[i][0], power);\n    }\n    return result;\n}\n\n/**\n * Function to use in the apply method to get the absolute value\n * of each element of the matrix\n *\n * @param i - current row.\n * @param j - current column.\n */\nfunction abs(i, j) {\n    this[i][j] = Math.abs(this[i][j]);\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport {array} from 'ml-stat';\nconst median = array.median;\n\nexport default class TheilSenRegression extends BaseRegression {\n\n    /**\n     * Theil–Sen estimator\n     * https://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator\n     * @param {Array<number>|boolean} x\n     * @param {Array<number>|object} y\n     * @constructor\n     */\n    constructor(x, y) {\n        super();\n        if (x === true) {\n            // loads the model\n            this.slope = y.slope;\n            this.intercept = y.intercept;\n            this.coefficients = y.coefficients;\n        } else {\n            // creates the model\n            checkArrayLength(x, y);\n            theilSen(this, x, y);\n        }\n\n    }\n\n    toJSON() {\n        return {\n            name: 'TheilSenRegression',\n            slope: this.slope,\n            intercept: this.intercept\n        };\n    }\n\n    _predict(input) {\n        return this.slope * input + this.intercept;\n    }\n\n    computeX(input) {\n        return (input - this.intercept) / this.slope;\n    }\n\n    toString(precision) {\n        var result = 'f(x) = ';\n        if (this.slope) {\n            var xFactor = maybeToPrecision(this.slope, precision);\n            result += (Math.abs(xFactor - 1) < 1e-5 ? '' : xFactor + ' * ') + 'x';\n            if (this.intercept) {\n                var absIntercept = Math.abs(this.intercept);\n                var operator = absIntercept === this.intercept ? '+' : '-';\n                result += ' ' + operator + ' ' + maybeToPrecision(absIntercept, precision);\n            }\n        } else {\n            result += maybeToPrecision(this.intercept, precision);\n        }\n        return result;\n    }\n\n    toLaTeX(precision) {\n        return this.toString(precision);\n    }\n\n    static load(json) {\n        if (json.name !== 'TheilSenRegression') {\n            throw new TypeError('not a Theil-Sen model');\n        }\n        return new TheilSenRegression(true, json);\n    }\n}\n\nfunction theilSen(regression, x, y) {\n    let len = x.length;\n    let slopes = new Array(len * len);\n    let count = 0;\n    for (let i = 0; i < len; ++i) {\n        for (let j = i + 1; j < len; ++j) {\n            if (x[i] !== x[j]) {\n                slopes[count++] = (y[j] - y[i]) / (x[j] - x[i]);\n            }\n        }\n    }\n    slopes.length = count;\n    let medianSlope = median(slopes);\n\n    let cuts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n        cuts[i] = y[i] - medianSlope * x[i];\n    }\n\n    regression.slope = medianSlope;\n    regression.intercept = median(cuts);\n    regression.coefficients = [regression.intercept, regression.slope];\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport {solve} from 'ml-matrix';\n\nexport default class RobustPolynomialRegression extends BaseRegression {\n    constructor(x, y, degree) {\n        super();\n        if (x === true) {\n            this.degree = y.degree;\n            this.powers = y.powers;\n            this.coefficients = y.coefficients;\n        } else {\n            checkArrayLength(x, y);\n            robustPolynomial(this, x, y, degree);\n        }\n    }\n\n    toJSON() {\n        return {\n            name: 'robustPolynomialRegression',\n            degree: this.degree,\n            powers: this.powers,\n            coefficients: this.coefficients\n        };\n    }\n\n    _predict(x) {\n        return predict(x, this.powers, this.coefficients);\n    }\n\n    toString(precision) {\n        return this._toFormula(precision, false);\n    }\n\n    toLaTeX(precision) {\n        return this._toFormula(precision, true);\n    }\n\n    _toFormula(precision, isLaTeX) {\n        let sup = '^';\n        let closeSup = '';\n        let times = ' * ';\n        if (isLaTeX) {\n            sup = '^{';\n            closeSup = '}';\n            times = '';\n        }\n\n        let fn = '';\n        let str = '';\n        for (let k = 0; k < this.coefficients.length; k++) {\n            str = '';\n            if (this.coefficients[k] !== 0) {\n                if (this.powers[k] === 0) {\n                    str = maybeToPrecision(this.coefficients[k], precision);\n                } else {\n                    if (this.powers[k] === 1) {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x';\n                    } else {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x' + sup + this.powers[k] + closeSup;\n                    }\n                }\n\n                if (this.coefficients[k] > 0 && k !== (this.coefficients.length - 1)) {\n                    str = ' + ' + str;\n                } else if (k !== (this.coefficients.length - 1)) {\n                    str = ' ' + str;\n                }\n            }\n            fn = str + fn;\n        }\n        if (fn.charAt(0) === '+') {\n            fn = fn.slice(1);\n        }\n\n        return 'f(x) = ' + fn;\n    }\n\n    static load(json) {\n        if (json.name !== 'robustPolynomialRegression') {\n            throw new TypeError('not a RobustPolynomialRegression model');\n        }\n        return new RobustPolynomialRegression(true, json);\n    }\n}\n\nfunction robustPolynomial(regression, x, y, degree) {\n    let powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n        powers[k] = k;\n    }\n\n    const tuples = getRandomTuples(x, y, degree);\n    var min;\n\n    for (var i = 0; i < tuples.length; i++) {\n        var tuple = tuples[i];\n        var coefficients = calcCoefficients(tuple, powers);\n\n        var residuals = x.slice();\n        for (var j = 0; j < x.length; j++) {\n            residuals[j] = y[j] - predict(x[j], powers, coefficients);\n            residuals[j] = {\n                residual: residuals[j] * residuals[j],\n                coefficients\n            };\n        }\n\n        var median = residualsMedian(residuals);\n        if (!min || median.residual < min.residual) {\n            min = median;\n        }\n    }\n\n    regression.degree = degree;\n    regression.powers = powers;\n    regression.coefficients = min.coefficients;\n}\n\n/**\n * @ignore\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} degree\n * @return {Array<{x:number,y:number}>}\n */\nfunction getRandomTuples(x, y, degree) {\n    var len = Math.floor(x.length / degree);\n    var tuples = new Array(len);\n\n    for (var i = 0; i < x.length; i++) {\n        var pos = Math.floor(Math.random() * len);\n\n        var counter = 0;\n        while (counter < x.length) {\n            if (!tuples[pos]) {\n                tuples[pos] = [{\n                    x: x[i],\n                    y: y[i]\n                }];\n                break;\n            } else if (tuples[pos].length < degree) {\n                tuples[pos].push({\n                    x: x[i],\n                    y: y[i]\n                });\n                break;\n            } else {\n                counter++;\n                pos = (pos + 1) % len;\n            }\n        }\n\n        if (counter === x.length) {\n            return tuples;\n        }\n    }\n    return tuples;\n}\n\n/**\n * @ignore\n * @param {{x:number,y:number}} tuple\n * @param {Array<number>} powers\n * @return {Array<number>}\n */\nfunction calcCoefficients(tuple, powers) {\n    var X = tuple.slice();\n    var Y = tuple.slice();\n    for (var i = 0; i < X.length; i++) {\n        Y[i] = [tuple[i].y];\n        X[i] = new Array(powers.length);\n        for (var j = 0; j < powers.length; j++) {\n            X[i][j] = Math.pow(tuple[i].x, powers[j]);\n        }\n    }\n\n    return solve(X, Y).to1DArray();\n}\n\nfunction predict(x, powers, coefficients) {\n    let y = 0;\n    for (let k = 0; k < powers.length; k++) {\n        y += coefficients[k] * Math.pow(x, powers[k]);\n    }\n    return y;\n}\n\nfunction residualsMedian(residuals) {\n    residuals.sort((a, b) => a.residual - b.residual);\n\n    var l = residuals.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return residuals[half - 1];\n    } else {\n        return residuals[half];\n    }\n}\n","export {default as SimpleLinearRegression, default as SLR} from 'ml-regression-simple-linear';\nexport {default as PolynomialRegression} from 'ml-regression-polynomial';\nexport {default as ExponentialRegression} from 'ml-regression-exponential';\nexport {default as PowerRegression} from 'ml-regression-power';\nexport {default as MultivariateLinearRegression} from 'ml-regression-multivariate-linear';\n\nimport PotentialRegression from './regression/potential-regression';\nconst NLR = {\n    PotentialRegression\n};\nexport {NLR, NLR as NonLinearRegression};\n\nexport {default as KernelRidgeRegression, default as KRR} from './regression/kernel-ridge-regression';\nexport {default as PolinomialFitting2D} from './regression/poly-fit-regression2d';\n\n// robust regressions\nexport {default as TheilSenRegression} from 'ml-regression-theil-sen';\nexport {default as RobustPolynomialRegression} from 'ml-regression-robust-polynomial';\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","'use strict';\n\nconst mlCart = require('ml-cart');\nconst mlRandomForest = require('ml-random-forest');\n\nconst ML = exports;\n\n// Try to keep this list in the same structure as the README.\n\n// Unsupervised learning\nML.PCA = require('ml-pca');\nML.HClust = require('ml-hclust');\nML.KMeans = require('ml-kmeans');\n\n// Supervised learning\nML.SVM = require('ml-svm');\nML.NaiveBayes = require('ml-naivebayes');\nML.KNN = require('ml-knn');\nML.PLS = require('ml-pls');\nML.CrossValidation = require('ml-cross-validation');\nML.ConfusionMatrix = require('ml-confusion-matrix');\nML.DecisionTreeClassifier = mlCart.DecisionTreeClassifier;\nML.RandomForestClassifier = mlRandomForest.RandomForestClassifier;\n\n// Artificial neural networks\nML.FNN = require('ml-fnn');\nML.SOM = require('ml-som');\n\n// Regression\nconst Regression = require('ml-regression');\nML.SimpleLinearRegression = Regression.SimpleLinearRegression;\nML.PolynomialRegression = Regression.PolynomialRegression;\nML.MultivariateLinearRegression = Regression.MultivariateLinearRegression;\nML.PowerRegression = Regression.PowerRegression;\nML.ExponentialRegression = Regression.ExponentialRegression;\nML.TheilSenRegression = Regression.TheilSenRegression;\nML.RobustPolynomialRegression = Regression.RobustPolynomialRegression;\nML.DecisionTreeRegression = mlCart.DecisionTreeRegression;\nML.RandomForestRegression = mlRandomForest.RandomForestRegression;\n\n// Optimization\nML.levenbergMarquardt = require('ml-levenberg-marquardt');\n\n// Math\nconst Matrix = require('ml-matrix');\nML.Matrix = Matrix.Matrix;\nML.SVD = Matrix.SVD;\nML.EVD = Matrix.EVD;\nML.CholeskyDecomposition = Matrix.CholeskyDecomposition;\nML.LuDecomposition = Matrix.LuDecomposition;\nML.QrDecomposition = Matrix.QrDecomposition;\n\nML.SparseMatrix = require('ml-sparse-matrix');\nML.Kernel = require('ml-kernel');\nML.Distance = require('ml-distance').distance;\nML.Similarity = require('ml-distance').similarity;\nML.distanceMatrix = require('ml-distance-matrix');\nML.XSadd = require('ml-xsadd').default;\n\n// Statistics\nML.Performance = require('ml-performance');\n\n// Data preprocessing\nML.savitzkyGolay = require('ml-savitzky-golay');\nML.savitzkyGolayGeneralized = require('ml-savitzky-golay-generalized');\n\n// Utility\nML.BitArray = require('ml-bit-array');\nML.HashTable = require('ml-hash-table');\nML.padArray = require('ml-pad-array');\nML.binarySearch = require('binary-search');\nML.numSort = require('num-sort');\nML.Random = require('ml-random').default;\n\n// Undocumented/deprecated packages\nML.ArrayUtils = require('ml-array-utils');\nML.Regression = require('ml-regression');\nML.MatrixUtil = require('ml-matrix');\nML.ArrayStat = require('ml-stat').array;\nML.MatrixStat = require('ml-stat').matrix;\n\nML.Array = {\n  min: require('ml-array-min').default,\n  max: require('ml-array-max').default,\n  median: require('ml-array-median').default,\n  mean: require('ml-array-mean').default,\n  mode: require('ml-array-mode').default,\n  normed: require('ml-array-normed').default,\n  rescale: require('ml-array-rescale').default,\n  sequentialFill: require('ml-array-sequential-fill').default,\n  standardDeviation: require('ml-array-standard-deviation').default,\n  variance: require('ml-array-variance').default\n};\n\nML.ArrayXY = {\n  centroidsMerge: require('ml-array-xy-centroids-merge').default,\n  closestX: require('ml-arrayxy-closestx').default,\n  maxMerge: require('ml-array-xy-max-merge').default,\n  maxY: require('ml-array-xy-max-y').default,\n  sortX: require('ml-array-xy-sort-x').default,\n  uniqueX: require('ml-arrayxy-uniquex').default,\n  weightedMerge: require('ml-array-xy-weighted-merge').default\n};\n","'use strict';\n\nconst matrixLib = require('ml-matrix');\nconst Matrix = matrixLib.Matrix;\nconst EVD = matrixLib.EVD;\nconst SVD = matrixLib.SVD;\nconst Stat = require('ml-stat/matrix');\nconst mean = Stat.mean;\nconst stdev = Stat.standardDeviation;\n\nconst defaultOptions = {\n    isCovarianceMatrix: false,\n    center: true,\n    scale: false\n};\n\n/**\n * Creates new PCA (Principal Component Analysis) from the dataset\n * @param {Matrix} dataset - dataset or covariance matrix\n * @param {Object} options\n * @param {boolean} [options.isCovarianceMatrix=false] - true if the dataset is a covariance matrix\n * @param {boolean} [options.center=true] - should the data be centered (subtract the mean)\n * @param {boolean} [options.scale=false] - should the data be scaled (divide by the standard deviation)\n * */\nclass PCA {\n    constructor(dataset, options) {\n        if (dataset === true) {\n            const model = options;\n            this.center = model.center;\n            this.scale = model.scale;\n            this.means = model.means;\n            this.stdevs = model.stdevs;\n            this.U = Matrix.checkMatrix(model.U);\n            this.S = model.S;\n            return;\n        }\n\n        options = Object.assign({}, defaultOptions, options);\n\n        this.center = false;\n        this.scale = false;\n        this.means = null;\n        this.stdevs = null;\n\n        if (options.isCovarianceMatrix) { // user provided a covariance matrix instead of dataset\n            this._computeFromCovarianceMatrix(dataset);\n            return;\n        }\n\n        var useCovarianceMatrix;\n        if (typeof options.useCovarianceMatrix === 'boolean') {\n            useCovarianceMatrix = options.useCovarianceMatrix;\n        } else {\n            useCovarianceMatrix = dataset.length > dataset[0].length;\n        }\n\n        if (useCovarianceMatrix) { // user provided a dataset but wants us to compute and use the covariance matrix\n            dataset = this._adjust(dataset, options);\n            const covarianceMatrix = dataset.transposeView().mmul(dataset).div(dataset.rows - 1);\n            this._computeFromCovarianceMatrix(covarianceMatrix);\n        } else {\n            dataset = this._adjust(dataset, options);\n            var svd = new SVD(dataset, {\n                computeLeftSingularVectors: false,\n                computeRightSingularVectors: true,\n                autoTranspose: true\n            });\n\n            this.U = svd.rightSingularVectors;\n\n            const singularValues = svd.diagonal;\n            const eigenvalues = new Array(singularValues.length);\n            for (var i = 0; i < singularValues.length; i++) {\n                eigenvalues[i] = singularValues[i] * singularValues[i] / (dataset.length - 1);\n            }\n            this.S = eigenvalues;\n        }\n    }\n\n    /**\n     * Load a PCA model from JSON\n     * @param {Object} model\n     * @return {PCA}\n     */\n    static load(model) {\n        if (model.name !== 'PCA')\n            throw new RangeError('Invalid model: ' + model.name);\n        return new PCA(true, model);\n    }\n\n\n    /**\n     * Project the dataset into the PCA space\n     * @param {Matrix} dataset\n     * @param {Object} options\n     * @return {Matrix} dataset projected in the PCA space\n     */\n    predict(dataset, options = {}) {\n        const {\n           nComponents = this.U.columns\n        } = options;\n\n        dataset = new Matrix(dataset);\n        if (this.center) {\n            dataset.subRowVector(this.means);\n            if (this.scale) {\n                dataset.divRowVector(this.stdevs);\n            }\n        }\n\n        var predictions = dataset.mmul(this.U);\n        return predictions.subMatrix(0, predictions.rows - 1, 0, nComponents - 1);\n    }\n\n    /**\n     * Returns the proportion of variance for each component\n     * @return {[number]}\n     */\n    getExplainedVariance() {\n        var sum = 0;\n        for (var i = 0; i < this.S.length; i++) {\n            sum += this.S[i];\n        }\n        return this.S.map(value => value / sum);\n    }\n\n    /**\n     * Returns the cumulative proportion of variance\n     * @return {[number]}\n     */\n    getCumulativeVariance() {\n        var explained = this.getExplainedVariance();\n        for (var i = 1; i < explained.length; i++) {\n            explained[i] += explained[i - 1];\n        }\n        return explained;\n    }\n\n    /**\n     * Returns the Eigenvectors of the covariance matrix\n     * @returns {Matrix}\n     */\n    getEigenvectors() {\n        return this.U;\n    }\n\n    /**\n     * Returns the Eigenvalues (on the diagonal)\n     * @returns {[number]}\n     */\n    getEigenvalues() {\n        return this.S;\n    }\n\n    /**\n     * Returns the standard deviations of the principal components\n     * @returns {[number]}\n     */\n    getStandardDeviations() {\n        return this.S.map(x => Math.sqrt(x));\n    }\n\n    /**\n     * Returns the loadings matrix\n     * @return {Matrix}\n     */\n    getLoadings() {\n        return this.U.transpose();\n    }\n\n    /**\n     * Export the current model to a JSON object\n     * @return {Object} model\n     */\n    toJSON() {\n        return {\n            name: 'PCA',\n            center: this.center,\n            scale: this.scale,\n            means: this.means,\n            stdevs: this.stdevs,\n            U: this.U,\n            S: this.S,\n        };\n    }\n\n    _adjust(dataset, options) {\n        this.center = !!options.center;\n        this.scale = !!options.scale;\n\n        dataset = new Matrix(dataset);\n\n        if (this.center) {\n            const means = mean(dataset);\n            const stdevs = this.scale ? stdev(dataset, means, true) : null;\n            this.means = means;\n            dataset.subRowVector(means);\n            if (this.scale) {\n                for (var i = 0; i < stdevs.length; i++) {\n                    if (stdevs[i] === 0) {\n                        throw new RangeError('Cannot scale the dataset (standard deviation is zero at index ' + i);\n                    }\n                }\n                this.stdevs = stdevs;\n                dataset.divRowVector(stdevs);\n            }\n        }\n\n        return dataset;\n    }\n\n    _computeFromCovarianceMatrix(dataset) {\n        const evd = new EVD(dataset, {assumeSymmetric: true});\n        this.U = evd.eigenvectorMatrix;\n        for (var i = 0; i < this.U.length; i++) {\n            this.U[i].reverse();\n        }\n        this.S = evd.realEigenvalues.reverse();\n    }\n}\n\nmodule.exports = PCA;\n","'use strict';\n\nexports.agnes = require('./agnes');\nexports.diana = require('./diana');\n//exports.birch = require('./birch');\n//exports.cure = require('./cure');\n//exports.chameleon = require('./chameleon');\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\nconst ClusterLeaf = require('./ClusterLeaf');\nconst Cluster = require('./Cluster');\nconst distanceMatrix = require('ml-distance-matrix');\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction simpleLink(cluster1, cluster2, disFun) {\n    var m = 10e100;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            var d = disFun[cluster1[i]][ cluster2[j]];\n            m = Math.min(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction completeLink(cluster1, cluster2, disFun) {\n    var m = -1;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            var d = disFun[cluster1[i]][ cluster2[j]];\n            m = Math.max(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction averageLink(cluster1, cluster2, disFun) {\n    var m = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            m += disFun[cluster1[i]][ cluster2[j]];\n        }\n    }\n    return m / (cluster1.length * cluster2.length);\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {*}\n */\nfunction centroidLink(cluster1, cluster2, disFun) {\n    var dist = new Array(cluster1.length * cluster2.length);\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            dist[i * cluster2.length + j] = (disFun[cluster1[i]][ cluster2[j]]);\n        }\n    }\n    return median(dist);\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction wardLink(cluster1, cluster2, disFun) {\n    return centroidLink(cluster1, cluster2, disFun)\n        * cluster1.length * cluster2.length / (cluster1.length + cluster2.length);\n}\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nfunction median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n}\n\nvar defaultOptions = {\n    disFunc: euclidean,\n    kind: 'single',\n    isDistanceMatrix: false\n\n};\n\n/**\n * Continuously merge nodes that have the least dissimilarity\n * @param {Array <Array <number>>} distance - Array of points to be clustered\n * @param {json} options\n * @option isDistanceMatrix: Is the input a distance matrix?\n * @constructor\n */\nfunction agnes(data, options) {\n    options = Object.assign({}, defaultOptions, options);\n    var len = data.length;\n    var distance = data;//If source\n    if (!options.isDistanceMatrix) {\n        distance = distanceMatrix(data, options.disFunc);\n    }\n\n\n    // allows to use a string or a given function\n    if (typeof options.kind === 'string') {\n        switch (options.kind) {\n            case 'single':\n                options.kind = simpleLink;\n                break;\n            case 'complete':\n                options.kind = completeLink;\n                break;\n            case 'average':\n                options.kind = averageLink;\n                break;\n            case 'centroid':\n                options.kind = centroidLink;\n                break;\n            case 'ward':\n                options.kind = wardLink;\n                break;\n            default:\n                throw new RangeError('Unknown kind of similarity');\n        }\n    } else if (typeof options.kind !== 'function') {\n        throw new TypeError('Undefined kind of similarity');\n    }\n\n    var list = new Array(len);\n    for (var i = 0; i < distance.length; i++) {\n        list[i] = new ClusterLeaf(i);\n    }\n    var min = 10e5,\n        d = {},\n        dis = 0;\n\n    while (list.length > 1) {\n        // calculates the minimum distance\n        d = {};\n        min = 10e5;\n        for (var j = 0; j < list.length; j++) {\n            for (var k = j + 1; k < list.length; k++) {\n                var fdistance, sdistance;\n                if (list[j] instanceof ClusterLeaf) {\n                    fdistance = [list[j].index];\n                } else {\n                    fdistance = new Array(list[j].index.length);\n                    for (var e = 0; e < fdistance.length; e++) {\n                        fdistance[e] = list[j].index[e].index;\n                    }\n                }\n                if (list[k] instanceof ClusterLeaf) {\n                    sdistance = [list[k].index];\n                } else {\n                    sdistance = new Array(list[k].index.length);\n                    for (var f = 0; f < sdistance.length; f++) {\n                        sdistance[f] = list[k].index[f].index;\n                    }\n                }\n                dis = options.kind(fdistance, sdistance, distance).toFixed(4);\n                if (dis in d) {\n                    d[dis].push([list[j], list[k]]);\n                } else {\n                    d[dis] = [[list[j], list[k]]];\n                }\n                min = Math.min(dis, min);\n            }\n        }\n        // cluster dots\n        var dmin = d[min.toFixed(4)];\n        var clustered = new Array(dmin.length);\n        var aux,\n            count = 0;\n        while (dmin.length > 0) {\n            aux = dmin.shift();\n            for (var q = 0; q < dmin.length; q++) {\n                var int = dmin[q].filter(function (n) {\n                    //noinspection JSReferencingMutableVariableFromClosure\n                    return aux.indexOf(n) !== -1;\n                });\n                if (int.length > 0) {\n                    var diff = dmin[q].filter(function (n) {\n                        //noinspection JSReferencingMutableVariableFromClosure\n                        return aux.indexOf(n) === -1;\n                    });\n                    aux = aux.concat(diff);\n                    dmin.splice(q--, 1);\n                }\n            }\n            clustered[count++] = aux;\n        }\n        clustered.length = count;\n\n        for (var ii = 0; ii < clustered.length; ii++) {\n            var obj = new Cluster();\n            obj.children = clustered[ii].concat();\n            obj.distance = min;\n            obj.index = new Array(len);\n            var indCount = 0;\n            for (var jj = 0; jj < clustered[ii].length; jj++) {\n                if (clustered[ii][jj] instanceof ClusterLeaf) {\n                    obj.index[indCount++] = clustered[ii][jj];\n                } else {\n                    indCount += clustered[ii][jj].index.length;\n                    obj.index = clustered[ii][jj].index.concat(obj.index);\n                }\n                list.splice((list.indexOf(clustered[ii][jj])), 1);\n            }\n            obj.index.length = indCount;\n            list.push(obj);\n        }\n    }\n    return list[0];\n}\n\nmodule.exports = agnes;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\nconst ClusterLeaf = require('./ClusterLeaf');\nconst Cluster = require('./Cluster');\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction simpleLink(cluster1, cluster2, disFun) {\n    var m = 10e100;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = i; j < cluster2.length; j++) {\n            var d = disFun(cluster1[i], cluster2[j]);\n            m = Math.min(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction completeLink(cluster1, cluster2, disFun) {\n    var m = -1;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = i; j < cluster2.length; j++) {\n            var d = disFun(cluster1[i], cluster2[j]);\n            m = Math.max(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction averageLink(cluster1, cluster2, disFun) {\n    var m = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            m += disFun(cluster1[i], cluster2[j]);\n        }\n    }\n    return m / (cluster1.length * cluster2.length);\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction centroidLink(cluster1, cluster2, disFun) {\n    var x1 = 0,\n        y1 = 0,\n        x2 = 0,\n        y2 = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        x1 += cluster1[i][0];\n        y1 += cluster1[i][1];\n    }\n    for (var j = 0; j < cluster2.length; j++) {\n        x2 += cluster2[j][0];\n        y2 += cluster2[j][1];\n    }\n    x1 /= cluster1.length;\n    y1 /= cluster1.length;\n    x2 /= cluster2.length;\n    y2 /= cluster2.length;\n    return disFun([x1, y1], [x2, y2]);\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction wardLink(cluster1, cluster2, disFun) {\n    var x1 = 0,\n        y1 = 0,\n        x2 = 0,\n        y2 = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        x1 += cluster1[i][0];\n        y1 += cluster1[i][1];\n    }\n    for (var j = 0; j < cluster2.length; j++) {\n        x2 += cluster2[j][0];\n        y2 += cluster2[j][1];\n    }\n    x1 /= cluster1.length;\n    y1 /= cluster1.length;\n    x2 /= cluster2.length;\n    y2 /= cluster2.length;\n    return disFun([x1, y1], [x2, y2]) * cluster1.length * cluster2.length / (cluster1.length + cluster2.length);\n}\n\n/**\n * @private\n * Returns the most distant point and his distance\n * @param {Array <Array <number>>} splitting - Clusters to split\n * @param {Array <Array <number>>} data - Original data\n * @param {function} disFun - Distance function\n * @returns {{d: number, p: number}} - d: maximum difference between points, p: the point more distant\n */\nfunction diff(splitting, data, disFun) {\n    var ans = {\n        d: 0,\n        p: 0\n    };\n\n    var Ci = new Array(splitting[0].length);\n    for (var e = 0; e < splitting[0].length; e++) {\n        Ci[e] = data[splitting[0][e]];\n    }\n    var Cj = new Array(splitting[1].length);\n    for (var f = 0; f < splitting[1].length; f++) {\n        Cj[f] = data[splitting[1][f]];\n    }\n\n    var dist, ndist;\n    for (var i = 0; i < Ci.length; i++) {\n        dist = 0;\n        for (var j = 0; j < Ci.length; j++) {\n            if (i !== j) {\n                dist += disFun(Ci[i], Ci[j]);\n            }\n        }\n        dist /= (Ci.length - 1);\n        ndist = 0;\n        for (var k = 0; k < Cj.length; k++) {\n            ndist += disFun(Ci[i], Cj[k]);\n        }\n        ndist /= Cj.length;\n        if ((dist - ndist) > ans.d) {\n            ans.d = (dist - ndist);\n            ans.p = i;\n        }\n    }\n    return ans;\n}\n\nvar defaultOptions = {\n    dist: euclidean,\n    kind: 'single'\n};\n\n/**\n * @private\n * Intra-cluster distance\n * @param {Array} index\n * @param {Array} data\n * @param {function} disFun\n * @returns {number}\n */\nfunction intrDist(index, data, disFun) {\n    var dist = 0,\n        count = 0;\n    for (var i = 0; i < index.length; i++) {\n        for (var j = i; j < index.length; j++) {\n            dist += disFun(data[index[i].index], data[index[j].index]);\n            count++;\n        }\n    }\n    return dist / count;\n}\n\n/**\n * Splits the higher level clusters\n * @param {Array <Array <number>>} data - Array of points to be clustered\n * @param {json} options\n * @constructor\n */\nfunction diana(data, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (typeof options.kind === 'string') {\n        switch (options.kind) {\n            case 'single':\n                options.kind = simpleLink;\n                break;\n            case 'complete':\n                options.kind = completeLink;\n                break;\n            case 'average':\n                options.kind = averageLink;\n                break;\n            case 'centroid':\n                options.kind = centroidLink;\n                break;\n            case 'ward':\n                options.kind = wardLink;\n                break;\n            default:\n                throw new RangeError('Unknown kind of similarity');\n        }\n    } else if (typeof options.kind !== 'function') {\n        throw new TypeError('Undefined kind of similarity');\n    }\n    var tree = new Cluster();\n    tree.children = new Array(data.length);\n    tree.index = new Array(data.length);\n    for (var ind = 0; ind < data.length; ind++) {\n        tree.children[ind] = new ClusterLeaf(ind);\n        tree.index[ind] = new ClusterLeaf(ind);\n    }\n\n    tree.distance = intrDist(tree.index, data, options.dist);\n    var m, M, clId,\n        dist, rebel;\n    var list = [tree];\n    while (list.length > 0) {\n        M = 0;\n        clId = 0;\n        for (var i = 0; i < list.length; i++) {\n            m = 0;\n            for (var j = 0; j < list[i].length; j++) {\n                for (var l = (j + 1); l < list[i].length; l++) {\n                    m = Math.max(options.dist(data[list[i].index[j].index], data[list[i].index[l].index]), m);\n                }\n            }\n            if (m > M) {\n                M = m;\n                clId = i;\n            }\n        }\n        M = 0;\n        if (list[clId].index.length === 2) {\n            list[clId].children = [list[clId].index[0], list[clId].index[1]];\n            list[clId].distance = options.dist(data[list[clId].index[0].index], data[list[clId].index[1].index]);\n        } else if (list[clId].index.length === 3) {\n            list[clId].children = [list[clId].index[0], list[clId].index[1], list[clId].index[2]];\n            var d = [\n                options.dist(data[list[clId].index[0].index], data[list[clId].index[1].index]),\n                options.dist(data[list[clId].index[1].index], data[list[clId].index[2].index])\n            ];\n            list[clId].distance = (d[0] + d[1]) / 2;\n        } else {\n            var C = new Cluster();\n            var sG = new Cluster();\n            var splitting = [new Array(list[clId].index.length), []];\n            for (var spl = 0; spl < splitting[0].length; spl++) {\n                splitting[0][spl] = spl;\n            }\n            for (var ii = 0; ii < splitting[0].length; ii++) {\n                dist = 0;\n                for (var jj = 0; jj < splitting[0].length; jj++) {\n                    if (ii !== jj) {\n                        dist += options.dist(data[list[clId].index[splitting[0][jj]].index], data[list[clId].index[splitting[0][ii]].index]);\n                    }\n                }\n                dist /= (splitting[0].length - 1);\n                if (dist > M) {\n                    M = dist;\n                    rebel = ii;\n                }\n            }\n            splitting[1] = [rebel];\n            splitting[0].splice(rebel, 1);\n            dist = diff(splitting, data, options.dist);\n            while (dist.d > 0) {\n                splitting[1].push(splitting[0][dist.p]);\n                splitting[0].splice(dist.p, 1);\n                dist = diff(splitting, data, options.dist);\n            }\n            var fData = new Array(splitting[0].length);\n            C.index = new Array(splitting[0].length);\n            for (var e = 0; e < fData.length; e++) {\n                fData[e] = data[list[clId].index[splitting[0][e]].index];\n                C.index[e] = list[clId].index[splitting[0][e]];\n                C.children[e] = list[clId].index[splitting[0][e]];\n            }\n            var sData = new Array(splitting[1].length);\n            sG.index = new Array(splitting[1].length);\n            for (var f = 0; f < sData.length; f++) {\n                sData[f] = data[list[clId].index[splitting[1][f]].index];\n                sG.index[f] = list[clId].index[splitting[1][f]];\n                sG.children[f] = list[clId].index[splitting[1][f]];\n            }\n            C.distance = intrDist(C.index, data, options.dist);\n            sG.distance = intrDist(sG.index, data, options.dist);\n            list.push(C);\n            list.push(sG);\n            list[clId].children = [C, sG];\n        }\n        list.splice(clId, 1);\n    }\n    return tree;\n}\n\nmodule.exports = diana;\n","'use strict';\nconst Kernel = require('ml-kernel');\nconst stat = require('ml-stat').array;\n\nvar defaultOptions = {\n    C: 1,\n    tol: 1e-4,\n    maxPasses: 10,\n    maxIterations: 10000,\n    kernel: 'linear',\n    alphaTol: 1e-6,\n    random: Math.random,\n    whitening: true\n};\n\n/**\n * Simplified version of the Sequential Minimal Optimization algorithm for training\n * support vector machines\n * @param {{Object}} options - SVM options\n * @param {Number} [options.C=1] - regularization parameter\n * @param {Number} [options.tol=1e-4] - numerical tolerance\n * @param {Number} [options.alphaTol=1e-6] - alpha tolerance, threshold to decide support vectors\n * @param {Number} [options.maxPasses=10] - max number of times to iterate over alphas without changing\n * @param {Number} [options.maxIterations=10000] - max number of iterations\n * @param {String} [options.kernel=linear] - the kind of kernel. {@link https://github.com/mljs/kernel/tree/1252de5f9012776e6e0eb06c7b434b8631fb21f0 List of kernels}\n * @param {Function} [options.random=Math.random] - custom random number generator\n * @constructor\n */\nfunction SVM(options) {\n    this.options = Object.assign({}, defaultOptions, options);\n\n    this.kernel = new Kernel(this.options.kernel, this.options.kernelOptions);\n    this.b = 0;\n}\n\n/**\n * Train the SVM model\n * @param {Array <Array <number>>} features - training data features\n * @param {Array <number>} labels - training data labels in the domain {1,-1}\n */\nSVM.prototype.train = function (features, labels) {\n    if (features.length !== labels.length) {\n        throw new Error('Features and labels should have the same length');\n    }\n    if (features.length < 2) {\n        throw new Error('Cannot train with less than 2 observations');\n    }\n    this._trained = false;\n    this._loaded = false;\n    this.N = labels.length;\n    this.D = features[0].length;\n    if (this.options.whitening) {\n        this.X = new Array(this.N);\n        for (var i = 0; i < this.N; i++) {\n            this.X[i] = new Array(this.D);\n        }\n        this.minMax = new Array(this.D);\n        // Apply normalization and keep normalization parameters\n        for (var j = 0; j < this.D; j++) {\n            var d = new Array(this.N);\n            for (i = 0; i < this.N; i++) {\n                d[i] = features[i][j];\n            }\n            this.minMax[j] = stat.minMax(d);\n            for (i = 0; i < this.N; i++) {\n                this.X[i][j] = (features[i][j] - this.minMax[j].min) / (this.minMax[j].max - this.minMax[j].min);\n            }\n        }\n    } else {\n        this.X = features;\n    }\n    this.Y = labels;\n    this.b = 0;\n    this.W = undefined;\n\n    var kernel = this.kernel.compute(this.X);\n    var m = labels.length;\n    var alpha = new Array(m).fill(0);\n    this.alphas = alpha;\n    for (var a = 0; a < m; a++)\n        alpha[a] = 0;\n\n    var b1 = 0,\n        b2 = 0,\n        iter = 0,\n        passes = 0,\n        Ei = 0,\n        Ej = 0,\n        ai = 0,\n        aj = 0,\n        L = 0,\n        H = 0,\n        eta = 0;\n\n    while (passes < this.options.maxPasses && iter < this.options.maxIterations) {\n        var numChange = 0;\n        for (i = 0; i < m; i++) {\n            Ei = this._marginOnePrecomputed(i, kernel) - labels[i];\n            if (labels[i] * Ei < -this.options.tol && alpha[i] < this.options.C || labels[i] * Ei > this.options.tol && alpha[i] > 0) {\n                j = i;\n                while (j === i) j = Math.floor(this.options.random() * m);\n                Ej = this._marginOnePrecomputed(j, kernel) - labels[j];\n                ai = alpha[i];\n                aj = alpha[j];\n                if (labels[i] === labels[j]) {\n                    L = Math.max(0, ai + aj - this.options.C);\n                    H = Math.min(this.options.C, ai + aj);\n                } else  {\n                    L = Math.max(0, aj - ai);\n                    H = Math.min(this.options.C, this.options.C + aj + ai);\n                }\n                if (Math.abs(L - H) < 1e-4) continue;\n\n                eta = 2 * kernel[i][j] - kernel[i][i] - kernel[j][j];\n                if (eta >= 0) continue;\n                var newaj = alpha[j] - labels[j] * (Ei - Ej) / eta;\n                if (newaj > H)\n                    newaj = H;\n                else if (newaj < L)\n                    newaj = L;\n                if (Math.abs(aj - newaj) < 10e-4) continue;\n                alpha[j] = newaj;\n                alpha[i] = alpha[i] + labels[i] * labels[j] * (aj - newaj);\n                b1 = this.b - Ei - labels[i] * (alpha[i] - ai) * kernel[i][i] - labels[j] * (alpha[j] - aj) * kernel[i][j];\n                b2 = this.b - Ej - labels[i] * (alpha[i] - ai) * kernel[i][j] - labels[j] * (alpha[j] - aj) * kernel[j][j];\n                this.b = (b1 + b2) / 2;\n                if (alpha[i] < this.options.C && alpha[i] > 0) this.b = b1;\n                if (alpha[j] < this.options.C && alpha[j] > 0) this.b = b2;\n                numChange += 1;\n            }\n        }\n        iter++;\n        if (numChange === 0)\n            passes += 1;\n        else\n            passes = 0;\n    }\n    if (iter === this.options.maxIterations) {\n        throw new Error('max iterations reached');\n    }\n\n    this.iterations = iter;\n\n    // Compute the weights (useful for fast decision on new test instances when linear SVM)\n    if (this.options.kernel === 'linear') {\n        this.W = new Array(this.D);\n        for (var r = 0; r < this.D; r++) {\n            this.W[r] = 0;\n            for (var w = 0; w < m; w++)\n                this.W[r] += labels[w] * alpha[w] * this.X[w][r];\n        }\n    }\n\n    // Keep only support vectors\n    // It will compute decision on new test instances faster\n    // We also keep the index of the support vectors\n    // in the original data\n    var nX = [];\n    var nY = [];\n    var nAlphas = [];\n    this._supportVectorIdx = [];\n    for (i = 0; i < this.N; i++) {\n        if (this.alphas[i] > this.options.alphaTol) {\n            nX.push(this.X[i]);\n            nY.push(labels[i]);\n            nAlphas.push(this.alphas[i]);\n            this._supportVectorIdx.push(i);\n\n        }\n    }\n    this.X = nX;\n    this.Y = nY;\n    this.N = nX.length;\n    this.alphas = nAlphas;\n\n\n    // A flag to say this SVM has been trained\n    this._trained = true;\n};\n\n/**\n * Get prediction ({-1,1}) given one observation's features.\n * @private\n * @param p The observation's features.\n * @returns {number} Classification result ({-1,1})\n */\nSVM.prototype.predictOne = function (p) {\n    var margin = this.marginOne(p);\n    return margin > 0 ? 1 : -1;\n};\n\n/**\n * Predict the classification outcome of a trained svm given one or several observations' features.\n * @param {Array} features - The observation(s)' features\n * @returns {Array<Number>|Number} An array of {-1, 1} if several observations are given or a number if one observation\n * is given\n */\nSVM.prototype.predict = function (features) {\n    if (!this._trained && !this._loaded) throw new Error('Cannot predict, you need to train the SVM first');\n    if (Array.isArray(features) && Array.isArray(features[0])) {\n        return features.map(this.predictOne.bind(this));\n    } else {\n        return this.predictOne(features);\n    }\n};\n\n/**\n * Get margin given one observation's features\n * @private\n * @param {Array<Number>} features - Features\n * @returns {Number} - The computed margin\n */\nSVM.prototype.marginOne = function (features, noWhitening) {\n    // Apply normalization\n    if (this.options.whitening && !noWhitening) {\n        features = this._applyWhitening(features);\n    }\n    var ans = this.b, i;\n    if (this.options.kernel === 'linear' && this.W) {\n        // Use weights, it's faster\n        for (i = 0; i < this.W.length; i++) {\n            ans += this.W[i] * features[i];\n        }\n    } else {\n        for (i = 0; i < this.N; i++) {\n            ans += this.alphas[i] * this.Y[i] * this.kernel.compute([features], [this.X[i]])[0][0];\n        }\n    }\n    return ans;\n};\n\n\n/**\n * Get a margin using the precomputed kernel. Much faster than normal margin computation\n * @private\n * @param {Number} index - Train data index\n * @param {Array< Array<Number> >} kernel - The precomputed kernel\n * @returns {number} Computed margin\n * @private\n */\nSVM.prototype._marginOnePrecomputed = function (index, kernel) {\n    var ans = this.b, i;\n    for (i = 0; i < this.N; i++) {\n        ans += this.alphas[i] * this.Y[i] * kernel[index][i];\n    }\n    return ans;\n};\n\n\n/**\n * Returns the margin of one or several observations given its features\n * @param {Array <Array<Number> >|Array<Number>} features - Features from on or several observations.\n * @returns {Number|Array} The computed margin. Is an Array if several observations' features given, or a Number if\n * only one observation's features given\n */\nSVM.prototype.margin = function (features) {\n    if (Array.isArray(features)) {\n        return features.map(this.marginOne.bind(this));\n    } else {\n        return this.marginOne(features);\n    }\n};\n\n/**\n * Get support vectors indexes of the trained classifier. WARINNG: this method does not work for svm instances\n * created from {@link #SVM.load load} if linear kernel\n * @returns {Array<Number>} The indices in the training vector of the support vectors\n */\nSVM.prototype.supportVectors = function () {\n    if (!this._trained && !this._loaded) throw new Error('Cannot get support vectors, you need to train the SVM first');\n    if (this._loaded && this.options.kernel === 'linear') throw new Error('Cannot get support vectors from saved linear model, you need to train the SVM to have them');\n    return this._supportVectorIdx;\n};\n\n/**\n * Create a SVM instance from a saved model\n * @param {Object} model -  Object such as returned by a trained SVM instance with {@link #SVM#toJSON toJSON}\n * @returns {SVM} Instance of svm classifier\n */\nSVM.load = function (model) {\n    this._loaded = true;\n    this._trained = false;\n    var svm = new SVM(model.options);\n    if (model.options.kernel === 'linear') {\n        svm.W = model.W.slice();\n        svm.D = svm.W.length;\n    } else {\n        svm.X = model.X.slice();\n        svm.Y = model.Y.slice();\n        svm.alphas = model.alphas.slice();\n        svm.N = svm.X.length;\n        svm.D = svm.X[0].length;\n    }\n    svm.minMax = model.minMax;\n    svm.b = model.b;\n    svm._loaded = true;\n    svm._trained = false;\n    return svm;\n};\n\n/**\n * Export the minimal object that enables to reload the model\n * @returns {Object} Model object that can be reused with {@link #SVM.load load}\n */\nSVM.prototype.toJSON = function () {\n    if (!this._trained && !this._loaded) throw new Error('Cannot export, you need to train the SVM first');\n    var model = {};\n    model.options = Object.assign({}, this.options);\n    model.b = this.b;\n    model.minMax = this.minMax;\n    if (model.options.kernel === 'linear') {\n        model.W = this.W.slice();\n    } else {\n        // Exporting non-linear models is heavier\n        model.X = this.X.slice();\n        model.Y = this.Y.slice();\n        model.alphas = this.alphas.slice();\n    }\n    return model;\n};\n\nSVM.prototype._applyWhitening = function (features) {\n    if (!this.minMax) throw new Error('Could not apply whitening');\n    var whitened = new Array(features.length);\n    for (var j = 0; j < features.length; j++) {\n        whitened[j] = (features[j] - this.minMax[j].min) / (this.minMax[j].max - this.minMax[j].min);\n    }\n    return whitened;\n};\n\nmodule.exports = SVM;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass GaussianKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n        this.divisor = 2 * options.sigma * options.sigma;\n    }\n\n    compute(x, y) {\n        const distance = squaredEuclidean(x, y);\n        return Math.exp(-distance / this.divisor);\n    }\n}\n\nmodule.exports = GaussianKernel;\n","'use strict';\n\nconst defaultOptions = {\n    degree: 1,\n    constant: 1,\n    scale: 1\n};\n\nclass PolynomialKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n\n        this.degree = options.degree;\n        this.constant = options.constant;\n        this.scale = options.scale;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        for (var i = 0; i < x.length; i++) {\n            sum += x[i] * y[i];\n        }\n        return Math.pow(this.scale * sum + this.constant, this.degree);\n    }\n}\n\nmodule.exports = PolynomialKernel;\n","'use strict';\n\nconst defaultOptions = {\n    sigma: 1,\n    degree: 1\n};\n\nclass ANOVAKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n        this.degree = options.degree;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        var len = Math.min(x.length, y.length);\n        for (var i = 1; i <= len; ++i) {\n            sum += Math.pow(Math.exp(-this.sigma * Math.pow(Math.pow(x[i - 1], i) -\n                    Math.pow(y[i - 1], i), 2)), this.degree);\n        }\n        return sum;\n    }\n}\n\nmodule.exports = ANOVAKernel;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass CauchyKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n    }\n\n    compute(x, y) {\n        return 1 / (1 + squaredEuclidean(x, y) / (this.sigma * this.sigma));\n    }\n}\n\nmodule.exports = CauchyKernel;\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass ExponentialKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n        this.divisor = 2 * options.sigma * options.sigma;\n    }\n\n    compute(x, y) {\n        const distance = euclidean(x, y);\n        return Math.exp(-distance / this.divisor);\n    }\n}\n\nmodule.exports = ExponentialKernel;\n","'use strict';\n\nclass HistogramIntersectionKernel {\n    compute(x, y) {\n        var min = Math.min(x.length, y.length);\n        var sum = 0;\n        for (var i = 0; i < min; ++i) {\n            sum += Math.min(x[i], y[i]);\n        }\n\n        return sum;\n    }\n}\n\nmodule.exports = HistogramIntersectionKernel;\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass LaplacianKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n    }\n\n    compute(x, y) {\n        const distance = euclidean(x, y);\n        return Math.exp(-distance / this.sigma);\n    }\n}\n\nmodule.exports = LaplacianKernel;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    constant: 1\n};\n\nclass MultiquadraticKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.constant = options.constant;\n    }\n\n    compute(x, y) {\n        return Math.sqrt(squaredEuclidean(x, y) + this.constant * this.constant);\n    }\n}\n\nmodule.exports = MultiquadraticKernel;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    constant: 1\n};\n\nclass RationalQuadraticKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.constant = options.constant;\n    }\n\n    compute(x, y) {\n        const distance = squaredEuclidean(x, y);\n        return 1 - (distance / (distance + this.constant));\n    }\n}\n\nmodule.exports = RationalQuadraticKernel;\n","'use strict';\n\nconst defaultOptions = {\n    alpha: 0.01,\n    constant: -Math.E\n};\n\nclass SigmoidKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.alpha = options.alpha;\n        this.constant = options.constant;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        for (var i = 0; i < x.length; i++) {\n            sum += x[i] * y[i];\n        }\n        return Math.tanh(this.alpha * sum + this.constant);\n    }\n}\n\nmodule.exports = SigmoidKernel;\n","'use strict';\n\nconst ConfusionMatrix = require('ml-confusion-matrix');\n\nconst CV = {};\nconst combinations = require('ml-combinations');\n\n/**\n * Performs a leave-one-out cross-validation (LOO-CV) of the given samples. In LOO-CV, 1 observation is used as the\n * validation set while the rest is used as the training set. This is repeated once for each observation. LOO-CV is a\n * special case of LPO-CV. @see leavePout\n * @param {function} Classifier - The classifier's constructor to use for the cross validation. Expect ml-classifier\n *     api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nCV.leaveOneOut = function (Classifier, features, labels, classifierOptions) {\n    if (typeof labels === 'function') {\n        var callback = labels;\n        labels = features;\n        features = Classifier;\n        return CV.leavePOut(features, labels, 1, callback);\n    }\n    return CV.leavePOut(Classifier, features, labels, classifierOptions, 1);\n};\n\n\n/**\n * Performs a leave-p-out cross-validation (LPO-CV) of the given samples. In LPO-CV, p observations are used as the\n * validation set while the rest is used as the training set. This is repeated as many times as there are possible\n * ways to combine p observations from the set (unordered without replacement). Be aware that for relatively small\n * data-set size this can require a very large number of training and testing to do!\n * @param {function} Classifier - The classifier's constructor to use for the cross validation. Expect ml-classifier\n *     api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @param {number} p - The size of the validation sub-samples' set\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nCV.leavePOut = function (Classifier, features, labels, classifierOptions, p) {\n    if (typeof classifierOptions === 'function') {\n        var callback = classifierOptions;\n        p = labels;\n        labels = features;\n        features = Classifier;\n    }\n    check(features, labels);\n    const distinct = getDistinct(labels);\n    const confusionMatrix = initMatrix(distinct.length, distinct.length);\n\n    var N = features.length;\n    var gen = combinations(p, N);\n    var allIdx = new Array(N);\n    for (let i = 0; i < N; i++) {\n        allIdx[i] = i;\n    }\n    for (const testIdx of gen) {\n        var trainIdx = allIdx.slice();\n\n        for (let i = testIdx.length - 1; i >= 0; i--) {\n            trainIdx.splice(testIdx[i], 1);\n        }\n\n        if (callback) {\n            validateWithCallback(features, labels, testIdx, trainIdx, confusionMatrix, distinct, callback);\n        } else {\n            validate(Classifier, features, labels, classifierOptions, testIdx, trainIdx, confusionMatrix, distinct);\n        }\n\n    }\n\n    return new ConfusionMatrix(confusionMatrix, distinct);\n};\n\n/**\n * Performs k-fold cross-validation (KF-CV). KF-CV separates the data-set into k random equally sized partitions, and\n * uses each as a validation set, with all other partitions used in the training set. Observations left over from if k\n * does not divide the number of observations are left out of the cross-validation process.\n * @param {function} Classifier - The classifier's to use for the cross validation. Expect ml-classifier api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @param {number} k - The number of partitions to create\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nCV.kFold = function (Classifier, features, labels, classifierOptions, k) {\n    if (typeof classifierOptions === 'function') {\n        var callback = classifierOptions;\n        k = labels;\n        labels = features;\n        features = Classifier;\n    }\n    check(features, labels);\n    const distinct = getDistinct(labels);\n    const confusionMatrix = initMatrix(distinct.length, distinct.length);\n    var N = features.length;\n    var allIdx = new Array(N);\n    for (var i = 0; i < N; i++) {\n        allIdx[i] = i;\n    }\n\n    var l = Math.floor(N / k);\n    // create random k-folds\n    var current = [];\n    var folds = [];\n    while (allIdx.length) {\n        var randi = Math.floor(Math.random() * allIdx.length);\n        current.push(allIdx[randi]);\n        allIdx.splice(randi, 1);\n        if (current.length === l) {\n            folds.push(current);\n            current = [];\n        }\n    }\n    if (current.length) folds.push(current);\n    folds = folds.slice(0, k);\n\n\n    for (i = 0; i < folds.length; i++) {\n        var testIdx = folds[i];\n        var trainIdx = [];\n        for (var j = 0; j < folds.length; j++) {\n            if (j !== i) trainIdx = trainIdx.concat(folds[j]);\n        }\n\n        if (callback) {\n            validateWithCallback(features, labels, testIdx, trainIdx, confusionMatrix, distinct, callback);\n        } else {\n            validate(Classifier, features, labels, classifierOptions, testIdx, trainIdx, confusionMatrix, distinct);\n        }\n    }\n\n    return new ConfusionMatrix(confusionMatrix, distinct);\n};\n\nfunction check(features, labels) {\n    if (features.length !== labels.length) {\n        throw new Error('features and labels should have the same length');\n    }\n}\n\nfunction initMatrix(rows, columns) {\n    return new Array(rows).fill(0).map(() => new Array(columns).fill(0));\n}\n\nfunction getDistinct(arr) {\n    var s = new Set();\n    for (let i = 0; i < arr.length; i++) {\n        s.add(arr[i]);\n    }\n    return Array.from(s);\n}\n\nfunction validate(Classifier, features, labels, classifierOptions, testIdx, trainIdx, confusionMatrix, distinct) {\n    const {testFeatures, trainFeatures, testLabels, trainLabels} = getTrainTest(features, labels, testIdx, trainIdx);\n\n    var classifier;\n    if (Classifier.prototype.train) {\n        classifier = new Classifier(classifierOptions);\n        classifier.train(trainFeatures, trainLabels);\n    } else {\n        classifier = new Classifier(trainFeatures, trainLabels, classifierOptions);\n    }\n\n    var predictedLabels = classifier.predict(testFeatures);\n    updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct);\n}\n\nfunction validateWithCallback(features, labels, testIdx, trainIdx, confusionMatrix, distinct, callback) {\n    const {testFeatures, trainFeatures, testLabels, trainLabels} = getTrainTest(features, labels, testIdx, trainIdx);\n    const predictedLabels = callback(trainFeatures, trainLabels, testFeatures);\n    updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct);\n}\n\nfunction updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct) {\n\n    for (var i = 0; i < predictedLabels.length; i++) {\n        const actualIdx = distinct.indexOf(testLabels[i]);\n        const predictedIdx = distinct.indexOf(predictedLabels[i]);\n        if (actualIdx < 0 || predictedIdx < 0) {\n            // eslint-disable-next-line no-console\n            console.warn(`ignore unknown predicted label ${predictedLabels[i]}`);\n        }\n        confusionMatrix[actualIdx][predictedIdx]++;\n    }\n}\n\n\nfunction getTrainTest(features, labels, testIdx, trainIdx) {\n    return {\n        testFeatures: testIdx.map(function (index) {\n            return features[index];\n        }),\n        trainFeatures: trainIdx.map(function (index) {\n            return features[index];\n        }),\n        testLabels: testIdx.map(function (index) {\n            return labels[index];\n        }),\n        trainLabels: trainIdx.map(function (index) {\n            return labels[index];\n        })\n    };\n}\n\nmodule.exports = CV;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar runtime = createCommonjsModule(function (module) {\n\t/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t!(function(global) {\n\n\t  var Op = Object.prototype;\n\t  var hasOwn = Op.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = module.exports;\n\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t    var generator = Object.create(protoGenerator.prototype);\n\t    var context = new Context(tryLocsList || []);\n\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\n\t  // This is a polyfill for %IteratorPrototype% for environments that\n\t  // don't natively support it.\n\t  var IteratorPrototype = {};\n\t  IteratorPrototype[iteratorSymbol] = function () {\n\t    return this;\n\t  };\n\n\t  var getProto = Object.getPrototypeOf;\n\t  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\t  if (NativeIteratorPrototype &&\n\t      NativeIteratorPrototype !== Op &&\n\t      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t    // This environment has a native %IteratorPrototype%; use it instead\n\t    // of the polyfill.\n\t    IteratorPrototype = NativeIteratorPrototype;\n\t  }\n\n\t  var Gp = GeneratorFunctionPrototype.prototype =\n\t    Generator.prototype = Object.create(IteratorPrototype);\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] =\n\t    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t  // meant to be awaited.\n\t  runtime.awrap = function(arg) {\n\t    return { __await: arg };\n\t  };\n\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value &&\n\t            typeof value === \"object\" &&\n\t            hasOwn.call(value, \"__await\")) {\n\t          return Promise.resolve(value.__await).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\n\t    var previousPromise;\n\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t    return this;\n\t  };\n\t  runtime.AsyncIterator = AsyncIterator;\n\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\n\t      context.method = method;\n\t      context.arg = arg;\n\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          var delegateResult = maybeInvokeDelegate(delegate, context);\n\t          if (delegateResult) {\n\t            if (delegateResult === ContinueSentinel) continue;\n\t            return delegateResult;\n\t          }\n\t        }\n\n\t        if (context.method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = context.arg;\n\n\t        } else if (context.method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw context.arg;\n\t          }\n\n\t          context.dispatchException(context.arg);\n\n\t        } else if (context.method === \"return\") {\n\t          context.abrupt(\"return\", context.arg);\n\t        }\n\n\t        state = GenStateExecuting;\n\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\n\t          if (record.arg === ContinueSentinel) {\n\t            continue;\n\t          }\n\n\t          return {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(context.arg) call above.\n\t          context.method = \"throw\";\n\t          context.arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\n\t  // Call delegate.iterator[context.method](context.arg) and handle the\n\t  // result, either by returning a { value, done } result from the\n\t  // delegate iterator, or by modifying context.method and context.arg,\n\t  // setting context.delegate to null, and returning the ContinueSentinel.\n\t  function maybeInvokeDelegate(delegate, context) {\n\t    var method = delegate.iterator[context.method];\n\t    if (method === undefined) {\n\t      // A .throw or .return when the delegate iterator has no .throw\n\t      // method always terminates the yield* loop.\n\t      context.delegate = null;\n\n\t      if (context.method === \"throw\") {\n\t        if (delegate.iterator.return) {\n\t          // If the delegate iterator has a return method, give it a\n\t          // chance to clean up.\n\t          context.method = \"return\";\n\t          context.arg = undefined;\n\t          maybeInvokeDelegate(delegate, context);\n\n\t          if (context.method === \"throw\") {\n\t            // If maybeInvokeDelegate(context) changed context.method from\n\t            // \"return\" to \"throw\", let that override the TypeError below.\n\t            return ContinueSentinel;\n\t          }\n\t        }\n\n\t        context.method = \"throw\";\n\t        context.arg = new TypeError(\n\t          \"The iterator does not provide a 'throw' method\");\n\t      }\n\n\t      return ContinueSentinel;\n\t    }\n\n\t    var record = tryCatch(method, delegate.iterator, context.arg);\n\n\t    if (record.type === \"throw\") {\n\t      context.method = \"throw\";\n\t      context.arg = record.arg;\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\n\t    var info = record.arg;\n\n\t    if (! info) {\n\t      context.method = \"throw\";\n\t      context.arg = new TypeError(\"iterator result is not an object\");\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\n\t    if (info.done) {\n\t      // Assign the result of the finished delegate to the temporary\n\t      // variable specified by delegate.resultName (see delegateYield).\n\t      context[delegate.resultName] = info.value;\n\n\t      // Resume execution at the desired location (see delegateYield).\n\t      context.next = delegate.nextLoc;\n\n\t      // If context.method was \"throw\" but the delegate handled the\n\t      // exception, let the outer generator proceed normally. If\n\t      // context.method was \"next\", forget context.arg since it has been\n\t      // \"consumed\" by the delegate iterator. If context.method was\n\t      // \"return\", allow the original .return call to continue in the\n\t      // outer generator.\n\t      if (context.method !== \"return\") {\n\t        context.method = \"next\";\n\t        context.arg = undefined;\n\t      }\n\n\t    } else {\n\t      // Re-yield the result returned by the delegate method.\n\t      return info;\n\t    }\n\n\t    // The delegate iterator is finished, so forget it and continue with\n\t    // the outer generator.\n\t    context.delegate = null;\n\t    return ContinueSentinel;\n\t  }\n\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\n\t  // A Generator should always return itself as the iterator object when the\n\t  // @@iterator function is called on it. Some browsers' implementations of the\n\t  // iterator prototype chain incorrectly implement this, causing the Generator\n\t  // object to not be returned from this call. This ensures that doesn't happen.\n\t  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\n\t    this.tryEntries.push(entry);\n\t  }\n\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\n\t          next.value = undefined;\n\t          next.done = true;\n\n\t          return next;\n\t        };\n\n\t        return next.next = next;\n\t      }\n\t    }\n\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\n\t  Context.prototype = {\n\t    constructor: Context,\n\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\n\t      this.method = \"next\";\n\t      this.arg = undefined;\n\n\t      this.tryEntries.forEach(resetTryEntry);\n\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\n\t    stop: function() {\n\t      this.done = true;\n\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\n\t      return this.rval;\n\t    },\n\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\n\t        if (caught) {\n\t          // If the dispatched exception was caught by a catch block,\n\t          // then let that catch block handle the exception normally.\n\t          context.method = \"next\";\n\t          context.arg = undefined;\n\t        }\n\n\t        return !! caught;\n\t      }\n\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\n\t      if (finallyEntry) {\n\t        this.method = \"next\";\n\t        this.next = finallyEntry.finallyLoc;\n\t        return ContinueSentinel;\n\t      }\n\n\t      return this.complete(record);\n\t    },\n\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = this.arg = record.arg;\n\t        this.method = \"return\";\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\n\t      return ContinueSentinel;\n\t    },\n\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\n\t      if (this.method === \"next\") {\n\t        // Deliberately forget the last sent value so that we don't\n\t        // accidentally pass it on to the delegate.\n\t        this.arg = undefined;\n\t      }\n\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // In sloppy mode, unbound `this` refers to the global object, fallback to\n\t  // Function constructor if we're in global strict mode. That is sadly a form\n\t  // of indirect eval which violates Content Security Policy.\n\t  (function() { return this })() || Function(\"return this\")()\n\t);\n\t});\n\n\t/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t// This method of obtaining a reference to the global object needs to be\n\t// kept identical to the way it is obtained in runtime.js\n\tvar g = (function() { return this })() || Function(\"return this\")();\n\n\t// Use `getOwnPropertyNames` because not all browsers support calling\n\t// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\tvar hadRuntime = g.regeneratorRuntime &&\n\t  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n\t// Save the old regeneratorRuntime in case it needs to be restored later.\n\tvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n\t// Force reevalutation of runtime.js.\n\tg.regeneratorRuntime = undefined;\n\n\tvar runtimeModule = runtime;\n\n\tif (hadRuntime) {\n\t  // Restore the original runtime.\n\t  g.regeneratorRuntime = oldRuntime;\n\t} else {\n\t  // Remove the global property added by runtime.js.\n\t  try {\n\t    delete g.regeneratorRuntime;\n\t  } catch(e) {\n\t    g.regeneratorRuntime = undefined;\n\t  }\n\t}\n\n\tvar regenerator = runtimeModule;\n\n\tvar defaultOptions = {\n\t  mode: 'index'\n\t};\n\n\tmodule.exports = /*#__PURE__*/regenerator.mark(function _callee(M, N, options) {\n\t  var a, c, b, p, x, y, z, i, twiddle;\n\t  return regenerator.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          twiddle = function twiddle() {\n\t            var i, j, k;\n\t            j = 1;\n\t            while (p[j] <= 0) {\n\t              j++;\n\t            }\n\t            if (p[j - 1] === 0) {\n\t              for (i = j - 1; i !== 1; i--) {\n\t                p[i] = -1;\n\t              }\n\t              p[j] = 0;\n\t              x = z = 0;\n\t              p[1] = 1;\n\t              y = j - 1;\n\t            } else {\n\t              if (j > 1) {\n\t                p[j - 1] = 0;\n\t              }\n\t              do {\n\t                j++;\n\t              } while (p[j] > 0);\n\t              k = j - 1;\n\t              i = j;\n\t              while (p[i] === 0) {\n\t                p[i++] = -1;\n\t              }\n\t              if (p[i] === -1) {\n\t                p[i] = p[k];\n\t                z = p[k] - 1;\n\t                x = i - 1;\n\t                y = k - 1;\n\t                p[k] = -1;\n\t              } else {\n\t                if (i === p[0]) {\n\t                  return 0;\n\t                } else {\n\t                  p[j] = p[i];\n\t                  z = p[i] - 1;\n\t                  p[i] = 0;\n\t                  x = j - 1;\n\t                  y = i - 1;\n\t                }\n\t              }\n\t            }\n\t            return 1;\n\t          };\n\n\t          options = Object.assign({}, defaultOptions, options);\n\t          a = new Array(N);\n\t          c = new Array(M);\n\t          b = new Array(N);\n\t          p = new Array(N + 2);\n\n\n\t          // init a and b\n\t          for (i = 0; i < N; i++) {\n\t            a[i] = i;\n\t            if (i < N - M) b[i] = 0;else b[i] = 1;\n\t          }\n\n\t          // init c\n\t          for (i = 0; i < M; i++) {\n\t            c[i] = N - M + i;\n\t          }\n\n\t          // init p\n\t          for (i = 0; i < p.length; i++) {\n\t            if (i === 0) p[i] = N + 1;else if (i <= N - M) p[i] = 0;else if (i <= N) p[i] = i - N + M;else p[i] = -2;\n\t          }\n\n\t          if (!(options.mode === 'index')) {\n\t            _context.next = 20;\n\t            break;\n\t          }\n\n\t          _context.next = 12;\n\t          return c.slice();\n\n\t        case 12:\n\t          if (!twiddle()) {\n\t            _context.next = 18;\n\t            break;\n\t          }\n\n\t          c[z] = a[x];\n\t          _context.next = 16;\n\t          return c.slice();\n\n\t        case 16:\n\t          _context.next = 12;\n\t          break;\n\n\t        case 18:\n\t          _context.next = 33;\n\t          break;\n\n\t        case 20:\n\t          if (!(options.mode === 'mask')) {\n\t            _context.next = 32;\n\t            break;\n\t          }\n\n\t          _context.next = 23;\n\t          return b.slice();\n\n\t        case 23:\n\t          if (!twiddle()) {\n\t            _context.next = 30;\n\t            break;\n\t          }\n\n\t          b[x] = 1;\n\t          b[y] = 0;\n\t          _context.next = 28;\n\t          return b.slice();\n\n\t        case 28:\n\t          _context.next = 23;\n\t          break;\n\n\t        case 30:\n\t          _context.next = 33;\n\t          break;\n\n\t        case 32:\n\t          throw new Error('Invalid mode');\n\n\t        case 33:\n\t        case 'end':\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t});\n\n})));\n","'use strict';\n\nconst Matrix = require('ml-matrix').Matrix;\n\nconst Layer = require('./Layer');\nconst OutputLayer = require('./OutputLayer');\nconst Utils = require('./utils');\nconst ACTIVATION_FUNCTIONS = require('./activationFunctions');\n\nclass FeedForwardNeuralNetworks {\n\n    /**\n     * Create a new Feedforword neural network model.\n     * @class FeedForwardNeuralNetworks\n     * @param {object} [options]\n     * @param {Array} [options.hiddenLayers=[10]] - Array that contains the sizes of the hidden layers.\n     * @param {number} [options.iterations=50] - Number of iterations at the training step.\n     * @param {number} [options.learningRate=0.01] - Learning rate of the neural net (also known as epsilon).\n     * @param {number} [options.regularization=0.01] - Regularization parameter af the neural net.\n     * @param {string} [options.activation='tanh'] - activation function to be used. (options: 'tanh'(default),\n     * 'identity', 'logistic', 'arctan', 'softsign', 'relu', 'softplus', 'bent', 'sinusoid', 'sinc', 'gaussian').\n     * (single-parametric options: 'parametric-relu', 'exponential-relu', 'soft-exponential').\n     * @param {number} [options.activationParam=1] - if the selected activation function needs a parameter.\n     */\n    constructor(options) {\n        options = options || {};\n        if (options.model) {\n            // load network\n            this.hiddenLayers = options.hiddenLayers;\n            this.iterations = options.iterations;\n            this.learningRate = options.learningRate;\n            this.regularization = options.regularization;\n            this.dicts = options.dicts;\n            this.activation = options.activation;\n            this.activationParam = options.activationParam;\n            this.model = new Array(options.layers.length);\n\n            for (var i = 0; i < this.model.length - 1; ++i) {\n                this.model[i] = Layer.load(options.layers[i]);\n            }\n            this.model[this.model.length - 1] = OutputLayer.load(options.layers[this.model.length - 1]);\n        } else {\n            // default constructor\n            this.hiddenLayers = options.hiddenLayers || [10];\n            this.iterations = options.iterations || 50;\n\n            this.learningRate = options.learningRate || 0.01;\n            this.regularization = options.regularization || 0.01;\n\n            this.activation = options.activation || 'tanh';\n            this.activationParam = options.activationParam || 1;\n            if (!(this.activation in Object.keys(ACTIVATION_FUNCTIONS))) {\n                this.activation = 'tanh';\n            }\n        }\n    }\n\n    /**\n     * @private\n     * Function that build and initialize the neural net.\n     * @param {number} inputSize - total of features to fit.\n     * @param {number} outputSize - total of labels of the prediction set.\n     */\n    buildNetwork(inputSize, outputSize) {\n        var size = 2 + (this.hiddenLayers.length - 1);\n        this.model = new Array(size);\n\n        // input layer\n        this.model[0] = new Layer({\n            inputSize: inputSize,\n            outputSize: this.hiddenLayers[0],\n            activation: this.activation,\n            activationParam: this.activationParam,\n            regularization: this.regularization,\n            epsilon: this.learningRate\n        });\n\n        // hidden layers\n        for (var i = 1; i < this.hiddenLayers.length; ++i) {\n            this.model[i] = new Layer({\n                inputSize: this.hiddenLayers[i - 1],\n                outputSize: this.hiddenLayers[i],\n                activation: this.activation,\n                activationParam: this.activationParam,\n                regularization: this.regularization,\n                epsilon: this.learningRate\n            });\n        }\n\n        // output layer\n        this.model[size - 1] = new OutputLayer({\n            inputSize: this.hiddenLayers[this.hiddenLayers.length - 1],\n            outputSize: outputSize,\n            activation: this.activation,\n            activationParam: this.activationParam,\n            regularization: this.regularization,\n            epsilon: this.learningRate\n        });\n    }\n\n    /**\n     * Train the neural net with the given features and labels.\n     * @param {Matrix|Array} features\n     * @param {Matrix|Array} labels\n     */\n    train(features, labels) {\n        features = Matrix.checkMatrix(features);\n        this.dicts = Utils.dictOutputs(labels);\n\n        var inputSize = features.columns;\n        var outputSize = Object.keys(this.dicts.inputs).length;\n\n        this.buildNetwork(inputSize, outputSize);\n\n        for (var i = 0; i < this.iterations; ++i) {\n            var probabilities = this.propagate(features);\n            this.backpropagation(features, labels, probabilities);\n        }\n    }\n\n    /**\n     * @private\n     * Propagate the input(training set) and retrives the probabilities of each class.\n     * @param {Matrix} X\n     * @return {Matrix} probabilities of each class.\n     */\n    propagate(X) {\n        var input = X;\n        for (var i = 0; i < this.model.length; ++i) {\n            //console.log(i);\n            input = this.model[i].forward(input);\n        }\n\n        // get probabilities\n        return input.divColumnVector(Utils.sumRow(input));\n    }\n\n    /**\n     * @private\n     * Function that applies the backpropagation algorithm on each layer of the network\n     * in order to fit the features and labels.\n     * @param {Matrix} features\n     * @param {Array} labels\n     * @param {Matrix} probabilities - probabilities of each class of the feature set.\n     */\n    backpropagation(features, labels, probabilities) {\n        for (var i = 0; i < probabilities.length; ++i) {\n            probabilities[i][this.dicts.inputs[labels[i]]] -= 1;\n        }\n\n        // remember, the last delta doesn't matter\n        var delta = probabilities;\n        for (i = this.model.length - 1; i >= 0; --i) {\n            var a = i > 0 ? this.model[i - 1].a : features;\n            delta = this.model[i].backpropagation(delta, a);\n        }\n\n        for (i = 0; i < this.model.length; ++i) {\n            this.model[i].update();\n        }\n    }\n\n    /**\n     * Predict the output given the feature set.\n     * @param {Array|Matrix} features\n     * @return {Array}\n     */\n    predict(features) {\n        features = Matrix.checkMatrix(features);\n        var outputs = new Array(features.rows);\n        var probabilities = this.propagate(features);\n        for (var i = 0; i < features.rows; ++i) {\n            outputs[i] = this.dicts.outputs[probabilities.maxRowIndex(i)[1]];\n        }\n\n        return outputs;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} model\n     */\n    toJSON() {\n        var model = {\n            model: 'FNN',\n            hiddenLayers: this.hiddenLayers,\n            iterations: this.iterations,\n            learningRate: this.learningRate,\n            regularization: this.regularization,\n            activation: this.activation,\n            activationParam: this.activationParam,\n            dicts: this.dicts,\n            layers: new Array(this.model.length)\n        };\n\n        for (var i = 0; i < this.model.length; ++i) {\n            model.layers[i] = this.model[i].toJSON();\n        }\n\n        return model;\n    }\n\n    /**\n     * Load a Feedforward Neural Network with the current model.\n     * @param {object} model\n     * @return {FeedForwardNeuralNetworks}\n     */\n    static load(model) {\n        if (model.model !== 'FNN') {\n            throw new RangeError('the current model is not a feed forward network');\n        }\n\n        return new FeedForwardNeuralNetworks(model);\n    }\n}\n\nmodule.exports = FeedForwardNeuralNetworks;\n","'use strict';\n\nvar Layer = require('./Layer');\n\nclass OutputLayer extends Layer {\n    constructor(options) {\n        super(options);\n\n        this.activationFunction = function (i, j) {\n            this[i][j] = Math.exp(this[i][j]);\n        };\n    }\n\n    static load(model) {\n        if (model.model !== 'Layer') {\n            throw new RangeError('the current model is not a Layer model');\n        }\n\n        return new OutputLayer(model);\n    }\n}\n\nmodule.exports = OutputLayer;\n","'use strict';\n\nvar NodeSquare = require('./node-square'),\n    NodeHexagonal = require('./node-hexagonal');\n\nvar defaultOptions = {\n    fields: 3,\n    randomizer: Math.random,\n    distance: squareEuclidean,\n    iterations: 10,\n    learningRate: 0.1,\n    gridType: 'rect',\n    torus: true,\n    method: 'random'\n};\n\nfunction SOM(x, y, options, reload) {\n\n    this.x = x;\n    this.y = y;\n\n    options = options || {};\n    this.options = {};\n    for (var i in defaultOptions) {\n        if (options.hasOwnProperty(i)) {\n            this.options[i] = options[i];\n        } else {\n            this.options[i] = defaultOptions[i];\n        }\n    }\n\n    if (typeof this.options.fields === 'number') {\n        this.numWeights = this.options.fields;\n    } else if (Array.isArray(this.options.fields)) {\n        this.numWeights = this.options.fields.length;\n        var converters = getConverters(this.options.fields);\n        this.extractor = converters.extractor;\n        this.creator = converters.creator;\n    } else {\n        throw new Error('Invalid fields definition');\n    }\n\n    if (this.options.gridType === 'rect') {\n        this.nodeType = NodeSquare;\n        this.gridDim = {\n            x: x,\n            y: y\n        };\n    } else {\n        this.nodeType = NodeHexagonal;\n        var hx = this.x - Math.floor(this.y / 2);\n        this.gridDim = {\n            x: hx,\n            y: this.y,\n            z: -(0 - hx - this.y)\n        };\n    }\n\n    this.torus = this.options.torus;\n    this.distanceMethod = this.torus ? 'getDistanceTorus' : 'getDistance';\n\n    this.distance = this.options.distance;\n\n    this.maxDistance = getMaxDistance(this.distance, this.numWeights);\n\n    if (reload === true) { // For model loading\n        this.done = true;\n        return;\n    }\n    if (!(x > 0 && y > 0)) {\n        throw new Error('x and y must be positive');\n    }\n\n    this.times = {\n        findBMU: 0,\n        adjust: 0\n    };\n\n    this.randomizer = this.options.randomizer;\n\n    this.iterationCount = 0;\n    this.iterations = this.options.iterations;\n\n    this.startLearningRate = this.learningRate = this.options.learningRate;\n\n    this.mapRadius = Math.floor(Math.max(x, y) / 2);\n\n    this.algorithmMethod = this.options.method;\n\n    this._initNodes();\n\n    this.done = false;\n}\n\nSOM.load = function loadModel(model, distance) {\n    if (model.name === 'SOM') {\n        var x = model.data.length,\n            y = model.data[0].length;\n        if (distance) {\n            model.options.distance = distance;\n        } else if (model.options.distance) {\n            model.options.distance = eval('(' + model.options.distance + ')');\n        }\n        var som = new SOM(x, y, model.options, true);\n        som.nodes = new Array(x);\n        for (var i = 0; i < x; i++) {\n            som.nodes[i] = new Array(y);\n            for (var j = 0; j < y; j++) {\n                som.nodes[i][j] = new som.nodeType(i, j, model.data[i][j], som);\n            }\n        }\n        return som;\n    } else {\n        throw new Error('expecting a SOM model');\n    }\n};\n\nSOM.prototype.export = function exportModel(includeDistance) {\n    if (!this.done) {\n        throw new Error('model is not ready yet');\n    }\n    var model = {\n        name: 'SOM'\n    };\n    model.options = {\n        fields: this.options.fields,\n        gridType: this.options.gridType,\n        torus: this.options.torus\n    };\n    model.data = new Array(this.x);\n    for (var i = 0; i < this.x; i++) {\n        model.data[i] = new Array(this.y);\n        for (var j = 0; j < this.y; j++) {\n            model.data[i][j] = this.nodes[i][j].weights;\n        }\n    }\n    if (includeDistance) {\n        model.options.distance = this.distance.toString();\n    }\n    return model;\n};\n\nSOM.prototype._initNodes = function initNodes() {\n    var now = Date.now(),\n        i, j, k;\n    this.nodes = new Array(this.x);\n    for (i = 0; i < this.x; i++) {\n        this.nodes[i] = new Array(this.y);\n        for (j = 0; j < this.y; j++) {\n            var weights = new Array(this.numWeights);\n            for (k = 0; k < this.numWeights; k++) {\n                weights[k] = this.randomizer();\n            }\n            this.nodes[i][j] = new this.nodeType(i, j, weights, this);\n        }\n    }\n    this.times.initNodes = Date.now() - now;\n};\n\nSOM.prototype.setTraining = function setTraining(trainingSet) {\n    if (this.trainingSet) {\n        throw new Error('training set has already been set');\n    }\n    var now = Date.now();\n    var convertedSet = trainingSet;\n    var i, l = trainingSet.length;\n    if (this.extractor) {\n        convertedSet = new Array(l);\n        for (i = 0; i < l; i++) {\n            convertedSet[i] = this.extractor(trainingSet[i]);\n        }\n    }\n    this.numIterations = this.iterations * l;\n\n    if (this.algorithmMethod === 'random') {\n        this.timeConstant = this.numIterations / Math.log(this.mapRadius);\n    } else {\n        this.timeConstant = l / Math.log(this.mapRadius);\n    }\n    this.trainingSet = convertedSet;\n    this.times.setTraining = Date.now() - now;\n};\n\nSOM.prototype.trainOne = function trainOne() {\n    if (this.done) {\n\n        return false;\n\n    } else if (this.numIterations-- > 0) {\n\n        var neighbourhoodRadius,\n            trainingValue,\n            trainingSetFactor;\n\n        if (this.algorithmMethod === 'random') { // Pick a random value of the training set at each step\n            neighbourhoodRadius = this.mapRadius * Math.exp(-this.iterationCount / this.timeConstant);\n            trainingValue = getRandomValue(this.trainingSet, this.randomizer);\n            this._adjust(trainingValue, neighbourhoodRadius);\n            this.learningRate = this.startLearningRate * Math.exp(-this.iterationCount / this.numIterations);\n        } else { // Get next input vector\n            trainingSetFactor = -Math.floor(this.iterationCount / this.trainingSet.length);\n            neighbourhoodRadius = this.mapRadius * Math.exp(trainingSetFactor / this.timeConstant);\n            trainingValue = this.trainingSet[this.iterationCount % this.trainingSet.length];\n            this._adjust(trainingValue, neighbourhoodRadius);\n            if (((this.iterationCount + 1) % this.trainingSet.length) === 0) {\n                this.learningRate = this.startLearningRate * Math.exp(trainingSetFactor / Math.floor(this.numIterations / this.trainingSet.length));\n            }\n        }\n\n        this.iterationCount++;\n\n        return true;\n\n    } else {\n\n        this.done = true;\n        return false;\n\n    }\n};\n\nSOM.prototype._adjust = function adjust(trainingValue, neighbourhoodRadius) {\n    var now = Date.now(),\n        x, y, dist, influence;\n\n    var bmu = this._findBestMatchingUnit(trainingValue);\n\n    var now2 = Date.now();\n    this.times.findBMU += now2 - now;\n\n    var radiusLimit = Math.floor(neighbourhoodRadius);\n    var xMin = bmu.x - radiusLimit,\n        xMax = bmu.x + radiusLimit,\n        yMin = bmu.y - radiusLimit,\n        yMax = bmu.y + radiusLimit;\n\n    for (x = xMin; x <= xMax; x++) {\n        var theX = x;\n        if (x < 0) {\n            theX += this.x;\n        } else if (x >= this.x) {\n            theX -= this.x;\n        }\n        for (y = yMin; y <= yMax; y++) {\n            var theY = y;\n            if (y < 0) {\n                theY += this.y;\n            } else if (y >= this.y) {\n                theY -= this.y;\n            }\n\n            dist = bmu[this.distanceMethod](this.nodes[theX][theY]);\n\n            if (dist < neighbourhoodRadius) {\n                influence = Math.exp(-dist / (2 * neighbourhoodRadius));\n                this.nodes[theX][theY].adjustWeights(trainingValue, this.learningRate, influence);\n            }\n\n        }\n    }\n\n    this.times.adjust += (Date.now() - now2);\n\n};\n\nSOM.prototype.train = function train(trainingSet) {\n    if (!this.done) {\n        this.setTraining(trainingSet);\n        while (this.trainOne()) {\n        }\n    }\n};\n\nSOM.prototype.getConvertedNodes = function getConvertedNodes() {\n    var result = new Array(this.x);\n    for (var i = 0; i < this.x; i++) {\n        result[i] = new Array(this.y);\n        for (var j = 0; j < this.y; j++) {\n            var node = this.nodes[i][j];\n            result[i][j] = this.creator ? this.creator(node.weights) : node.weights;\n        }\n    }\n    return result;\n};\n\nSOM.prototype._findBestMatchingUnit = function findBestMatchingUnit(candidate) {\n\n    var bmu,\n        lowest = Infinity,\n        dist;\n\n    for (var i = 0; i < this.x; i++) {\n        for (var j = 0; j < this.y; j++) {\n            dist = this.distance(this.nodes[i][j].weights, candidate);\n            if (dist < lowest) {\n                lowest = dist;\n                bmu = this.nodes[i][j];\n            }\n        }\n    }\n\n    return bmu;\n\n};\n\nSOM.prototype.predict = function predict(data, computePosition) {\n    if (typeof data === 'boolean') {\n        computePosition = data;\n        data = null;\n    }\n    if (!data) {\n        data = this.trainingSet;\n    }\n    if (Array.isArray(data) && (Array.isArray(data[0]) || (typeof data[0] === 'object'))) { // predict a dataset\n        var self = this;\n        return data.map(function (element) {\n            return self._predict(element, computePosition);\n        });\n    } else { // predict a single element\n        return this._predict(data, computePosition);\n    }\n};\n\nSOM.prototype._predict = function _predict(element, computePosition) {\n    if (!Array.isArray(element)) {\n        element = this.extractor(element);\n    }\n    var bmu = this._findBestMatchingUnit(element);\n    var result = [bmu.x, bmu.y];\n    if (computePosition) {\n        result[2] = bmu.getPosition(element);\n    }\n    return result;\n};\n\n// As seen in http://www.scholarpedia.org/article/Kohonen_network\nSOM.prototype.getQuantizationError = function getQuantizationError() {\n    var fit = this.getFit(),\n        l = fit.length,\n        sum = 0;\n    for (var i = 0; i < l; i++) {\n        sum += fit[i];\n    }\n    return sum / l;\n};\n\nSOM.prototype.getFit = function getFit(dataset) {\n    if (!dataset) {\n        dataset = this.trainingSet;\n    }\n    var l = dataset.length,\n        bmu,\n        result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        bmu = this._findBestMatchingUnit(dataset[i]);\n        result[i] = Math.sqrt(this.distance(dataset[i], bmu.weights));\n    }\n    return result;\n};\n\nfunction getConverters(fields) {\n    var l = fields.length,\n        normalizers = new Array(l),\n        denormalizers = new Array(l);\n    for (var i = 0; i < l; i++) {\n        normalizers[i] = getNormalizer(fields[i].range);\n        denormalizers[i] = getDenormalizer(fields[i].range);\n    }\n    return {\n        extractor: function extractor(value) {\n            var result = new Array(l);\n            for (var i = 0; i < l; i++) {\n                result[i] = normalizers[i](value[fields[i].name]);\n            }\n            return result;\n        },\n        creator: function creator(value) {\n            var result = {};\n            for (var i = 0; i < l; i++) {\n                result[fields[i].name] = denormalizers[i](value[i]);\n            }\n            return result;\n        }\n    };\n}\n\nfunction getNormalizer(minMax) {\n    return function normalizer(value) {\n        return (value - minMax[0]) / (minMax[1] - minMax[0]);\n    };\n}\n\nfunction getDenormalizer(minMax) {\n    return function denormalizer(value) {\n        return (minMax[0] + value * (minMax[1] - minMax[0]));\n    };\n}\n\nfunction squareEuclidean(a, b) {\n    var d = 0;\n    for (var i = 0, ii = a.length; i < ii; i++) {\n        d += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return d;\n}\n\nfunction getRandomValue(arr, randomizer) {\n    return arr[Math.floor(randomizer() * arr.length)];\n}\n\nfunction getMaxDistance(distance, numWeights) {\n    var zero = new Array(numWeights),\n        one = new Array(numWeights);\n    for (var i = 0; i < numWeights; i++) {\n        zero[i] = 0;\n        one[i] = 1;\n    }\n    return distance(zero, one);\n}\n\nmodule.exports = SOM;","var NodeSquare = require('./node-square');\n\nfunction NodeHexagonal(x, y, weights, som) {\n\n    NodeSquare.call(this, x, y, weights, som);\n\n    this.hX = x - Math.floor(y / 2);\n    this.z = 0 - this.hX - y;\n\n}\n\nNodeHexagonal.prototype = new NodeSquare;\nNodeHexagonal.prototype.constructor = NodeHexagonal;\n\nNodeHexagonal.prototype.getDistance = function getDistanceHexagonal(otherNode) {\n    return Math.max(Math.abs(this.hX - otherNode.hX), Math.abs(this.y - otherNode.y), Math.abs(this.z - otherNode.z));\n};\n\nNodeHexagonal.prototype.getDistanceTorus = function getDistanceTorus(otherNode) {\n    var distX = Math.abs(this.hX - otherNode.hX),\n        distY = Math.abs(this.y - otherNode.y),\n        distZ = Math.abs(this.z - otherNode.z);\n    return Math.max(Math.min(distX, this.som.gridDim.x - distX), Math.min(distY, this.som.gridDim.y - distY), Math.min(distZ, this.som.gridDim.z - distZ));\n};\n\nNodeHexagonal.prototype.getPosition = function getPosition() {\n    throw new Error('Unimplemented : cannot get position of the points for hexagonal grid');\n};\n\nmodule.exports = NodeHexagonal;","'use strict';\n\nvar mlMatrix = require('ml-matrix');\n\n/**\n * Calculate current error\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} parameters - Array of current parameter values\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {number}\n */\nfunction errorCalculation(\n  data,\n  parameters,\n  parameterizedFunction\n) {\n  var error = 0;\n  const func = parameterizedFunction(parameters);\n\n  for (var i = 0; i < data.x.length; i++) {\n    error += Math.abs(data.y[i] - func(data.x[i]));\n  }\n\n  return error;\n}\n\n/**\n * Difference of the matrix function over the parameters\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} paramFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Matrix}\n */\nfunction gradientFunction(\n  data,\n  evaluatedData,\n  params,\n  gradientDifference,\n  paramFunction\n) {\n  const n = params.length;\n  const m = data.x.length;\n\n  var ans = new Array(n);\n\n  for (var param = 0; param < n; param++) {\n    ans[param] = new Array(m);\n    var auxParams = params.concat();\n    auxParams[param] += gradientDifference;\n    var funcParam = paramFunction(auxParams);\n\n    for (var point = 0; point < m; point++) {\n      ans[param][point] = evaluatedData[point] - funcParam(data.x[point]);\n    }\n  }\n  return new mlMatrix.Matrix(ans);\n}\n\n/**\n * Matrix function over the samples\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @return {Matrix}\n */\nfunction matrixFunction(data, evaluatedData) {\n  const m = data.x.length;\n\n  var ans = new Array(m);\n\n  for (var point = 0; point < m; point++) {\n    ans[point] = data.y[point] - evaluatedData[point];\n  }\n\n  return new mlMatrix.Matrix([ans]);\n}\n\n/**\n * Iteration for Levenberg-Marquardt\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} damping - Levenberg-Marquardt parameter\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Array<number>}\n */\nfunction step(\n  data,\n  params,\n  damping,\n  gradientDifference,\n  parameterizedFunction\n) {\n  var identity = mlMatrix.Matrix.eye(params.length).mul(\n    damping * gradientDifference * gradientDifference\n  );\n\n  var l = data.x.length;\n  var evaluatedData = new Array(l);\n  const func = parameterizedFunction(params);\n  for (var i = 0; i < l; i++) {\n    evaluatedData[i] = func(data.x[i]);\n  }\n  var gradientFunc = gradientFunction(\n    data,\n    evaluatedData,\n    params,\n    gradientDifference,\n    parameterizedFunction\n  );\n  var matrixFunc = matrixFunction(data, evaluatedData).transposeView();\n  var inverseMatrix = mlMatrix.inverse(\n    identity.add(gradientFunc.mmul(gradientFunc.transposeView()))\n  );\n  params = new mlMatrix.Matrix([params]);\n  params = params.sub(\n    inverseMatrix\n      .mmul(gradientFunc)\n      .mmul(matrixFunc)\n      .mul(gradientDifference)\n      .transposeView()\n  );\n\n  return params.to1DArray();\n}\n\n/**\n * Curve fitting algorithm\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {object} [options] - Options object\n * @param {number} [options.damping] - Levenberg-Marquardt parameter\n * @param {number} [options.gradientDifference = 10e-2] - Adjustment for decrease the damping parameter\n * @param {Array<number>} [options.initialValues] - Array of initial parameter values\n * @param {number} [options.maxIterations = 100] - Maximum of allowed iterations\n * @param {number} [options.errorTolerance = 10e-3] - Minimum uncertainty allowed for each point\n * @return {{parameterValues: Array<number>, parameterError: number, iterations: number}}\n */\nfunction levenbergMarquardt(\n  data,\n  parameterizedFunction,\n  options = {}\n) {\n  let {\n    maxIterations = 100,\n    gradientDifference = 10e-2,\n    damping = 0,\n    errorTolerance = 10e-3,\n    initialValues\n  } = options;\n\n  if (damping <= 0) {\n    throw new Error('The damping option must be a positive number');\n  } else if (!data.x || !data.y) {\n    throw new Error('The data parameter must have x and y elements');\n  } else if (\n    !Array.isArray(data.x) ||\n    data.x.length < 2 ||\n    !Array.isArray(data.y) ||\n    data.y.length < 2\n  ) {\n    throw new Error(\n      'The data parameter elements must be an array with more than 2 points'\n    );\n  } else {\n    let dataLen = data.x.length;\n    if (dataLen !== data.y.length) {\n      throw new Error('The data parameter elements must have the same size');\n    }\n  }\n\n  var parameters =\n    initialValues || new Array(parameterizedFunction.length).fill(1);\n\n  if (!Array.isArray(parameters)) {\n    throw new Error('initialValues must be an array');\n  }\n\n  var error = errorCalculation(data, parameters, parameterizedFunction);\n\n  var converged = error <= errorTolerance;\n\n  for (\n    var iteration = 0;\n    iteration < maxIterations && !converged;\n    iteration++\n  ) {\n    parameters = step(\n      data,\n      parameters,\n      damping,\n      gradientDifference,\n      parameterizedFunction\n    );\n    error = errorCalculation(data, parameters, parameterizedFunction);\n    converged = error <= errorTolerance;\n  }\n\n  return {\n    parameterValues: parameters,\n    parameterError: error,\n    iterations: iteration\n  };\n}\n\nmodule.exports = levenbergMarquardt;\n","import HashTable from 'ml-hash-table';\n\nexport class SparseMatrix {\n    constructor(rows, columns, options = {}) {\n        if (rows instanceof SparseMatrix) { // clone\n            const other = rows;\n            this._init(other.rows, other.columns, other.elements.clone(), other.threshold);\n            return;\n        }\n\n        if (Array.isArray(rows)) {\n            const matrix = rows;\n            rows = matrix.length;\n            options = columns || {};\n            columns = matrix[0].length;\n            this._init(rows, columns, new HashTable(options), options.threshold);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = matrix[i][j];\n                    if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n                    if (value !== 0) {\n                        this.elements.set(i * columns + j, matrix[i][j]);\n                    }\n                }\n            }\n        } else {\n            this._init(rows, columns, new HashTable(options), options.threshold);\n        }\n    }\n\n    _init(rows, columns, elements, threshold) {\n        this.rows = rows;\n        this.columns = columns;\n        this.elements = elements;\n        this.threshold = threshold || 0;\n    }\n\n    static eye(rows = 1, columns = rows) {\n        const min = Math.min(rows, columns);\n        const matrix = new SparseMatrix(rows, columns, {initialCapacity: min});\n        for (var i = 0; i < min; i++) {\n            matrix.set(i, i, 1);\n        }\n        return matrix;\n    }\n\n    clone() {\n        return new SparseMatrix(this);\n    }\n\n    to2DArray() {\n        const copy = new Array(this.rows);\n        for (var i = 0; i < this.rows; i++) {\n            copy[i] = new Array(this.columns);\n            for (var j = 0; j < this.columns; j++) {\n                copy[i][j] = this.get(i, j);\n            }\n        }\n        return copy;\n    }\n\n    isSquare() {\n        return this.rows === this.columns;\n    }\n\n    isSymmetric() {\n        if (!this.isSquare()) return false;\n\n        var symmetric = true;\n        this.forEachNonZero((i, j, v) => {\n            if (this.get(j, i) !== v) {\n                symmetric = false;\n                return false;\n            }\n            return v;\n        });\n        return symmetric;\n    }\n\n    /**\n     * Search for the wither band in the main diagonals\n     * @return {number}\n     */\n    bandWidth() {\n        let min = this.columns;\n        let max = -1;\n        this.forEachNonZero((i, j, v) => {\n            let diff = i - j;\n            min = Math.min(min, diff);\n            max = Math.max(max, diff);\n            return v;\n        });\n        return max - min;\n    }\n\n    /**\n     * Test if a matrix is consider banded using a threshold\n     * @param {number} width\n     * @return {boolean}\n     */\n    isBanded(width) {\n        let bandWidth = this.bandWidth();\n        return bandWidth <= width;\n    }\n\n    get cardinality() {\n        return this.elements.size;\n    }\n\n    get size() {\n        return this.rows * this.columns;\n    }\n\n    get(row, column) {\n        return this.elements.get(row * this.columns + column);\n    }\n\n    set(row, column, value) {\n        if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n        if (value === 0) {\n            this.elements.remove(row * this.columns + column);\n        } else {\n            this.elements.set(row * this.columns + column, value);\n        }\n        return this;\n    }\n\n    mmul(other) {\n        if (this.columns !== other.rows) {\n            // eslint-disable-next-line no-console\n            console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n        }\n\n        const m = this.rows;\n        const p = other.columns;\n\n        const result = new SparseMatrix(m, p);\n        this.forEachNonZero((i, j, v1) => {\n            other.forEachNonZero((k, l, v2) => {\n                if (j === k) {\n                    result.set(i, l, result.get(i, l) + v1 * v2);\n                }\n                return v2;\n            });\n            return v1;\n        });\n        return result;\n    }\n\n    kroneckerProduct(other) {\n        const m = this.rows;\n        const n = this.columns;\n        const p = other.rows;\n        const q = other.columns;\n\n        const result = new SparseMatrix(m * p, n * q, {\n            initialCapacity: this.cardinality * other.cardinality\n        });\n        this.forEachNonZero((i, j, v1) => {\n            other.forEachNonZero((k, l, v2) => {\n                result.set(p * i + k, q * j + l, v1 * v2);\n                return v2;\n            });\n            return v1;\n        });\n        return result;\n    }\n\n    forEachNonZero(callback) {\n        this.elements.forEachPair((key, value) => {\n            const i = (key / this.columns) | 0;\n            const j = key % this.columns;\n            let r = callback(i, j, value);\n            if (r === false) return false; // stop iteration\n            if (this.threshold && Math.abs(r) < this.threshold) r = 0;\n            if (r !== value) {\n                if (r === 0) {\n                    this.elements.remove(key, true);\n                } else {\n                    this.elements.set(key, r);\n                }\n            }\n            return true;\n        });\n        this.elements.maybeShrinkCapacity();\n        return this;\n    }\n\n    getNonZeros() {\n        const cardinality = this.cardinality;\n        const rows = new Array(cardinality);\n        const columns = new Array(cardinality);\n        const values = new Array(cardinality);\n        var idx = 0;\n        this.forEachNonZero((i, j, value) => {\n            rows[idx] = i;\n            columns[idx] = j;\n            values[idx] = value;\n            idx++;\n            return value;\n        });\n        return {rows, columns, values};\n    }\n\n    setThreshold(newThreshold) {\n        if (newThreshold !== 0 && newThreshold !== this.threshold) {\n            this.threshold = newThreshold;\n            this.forEachNonZero((i, j, v) => v);\n        }\n        return this;\n    }\n\n    /**\n     * @return {SparseMatrix} - New transposed sparse matrix\n     */\n    transpose() {\n        let trans = new SparseMatrix(this.columns, this.rows, {initialCapacity: this.cardinality});\n        this.forEachNonZero((i, j, value) => {\n            trans.set(j, i, value);\n            return value;\n        });\n        return trans;\n    }\n}\n\nSparseMatrix.prototype.klass = 'Matrix';\n\nSparseMatrix.identity = SparseMatrix.eye;\nSparseMatrix.prototype.tensorProduct = SparseMatrix.prototype.kroneckerProduct;\n\n/*\n Add dynamically instance and static methods for mathematical operations\n */\n\nvar inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\nvar inplaceOperatorScalar = `\n(function %name%S(value) {\n    this.forEachNonZero((i, j, v) => v %op% value);\n    return this;\n})\n`;\n\nvar inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix.forEachNonZero((i, j, v) => {\n        this.set(i, j, this.get(i, j) %op% v);\n        return v;\n    });\n    return this;\n})\n`;\n\nvar staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\nvar inplaceMethod = `\n(function %name%() {\n    this.forEachNonZero((i, j, v) => %method%(v));\n    return this;\n})\n`;\n\nvar staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%();\n})\n`;\n\nconst operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n];\n\nfor (const operator of operators) {\n    for (let i = 1; i < operator.length; i++) {\n        SparseMatrix.prototype[operator[i]] = eval(fillTemplateFunction(inplaceOperator, {name: operator[i], op: operator[0]}));\n        SparseMatrix.prototype[operator[i] + 'S'] = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[i] + 'S', op: operator[0]}));\n        SparseMatrix.prototype[operator[i] + 'M'] = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[i] + 'M', op: operator[0]}));\n\n        SparseMatrix[operator[i]] = eval(fillTemplateFunction(staticOperator, {name: operator[i]}));\n    }\n}\n\nvar methods = [\n    ['~', 'not']\n];\n\n[\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n].forEach(function (mathMethod) {\n    methods.push(['Math.' + mathMethod, mathMethod]);\n});\n\nfor (const method of methods) {\n    for (let i = 1; i < method.length; i++) {\n        SparseMatrix.prototype[method[i]] = eval(fillTemplateFunction(inplaceMethod, {name: method[i], method: method[0]}));\n        SparseMatrix[method[i]] = eval(fillTemplateFunction(staticMethod, {name: method[i]}));\n    }\n}\n\nfunction fillTemplateFunction(template, values) {\n    for (const i in values) {\n        template = template.replace(new RegExp('%' + i + '%', 'g'), values[i]);\n    }\n    return template;\n}\n","module.exports = newArray\n\nfunction newArray (n, value) {\n  n = n || 0\n  var array = new Array(n)\n  for (var i = 0; i < n; i++) {\n    array[i] = value\n  }\n  return array\n}\n","const binarySearch = require('binary-search');\nconst sortAsc = require('num-sort').asc;\n\nconst largestPrime = 0x7fffffff;\n\nconst primeNumbers = [\n    //chunk #0\n    largestPrime, // 2^31-1\n\n    //chunk #1\n    5, 11, 23, 47, 97, 197, 397, 797, 1597, 3203, 6421, 12853, 25717, 51437, 102877, 205759,\n    411527, 823117, 1646237, 3292489, 6584983, 13169977, 26339969, 52679969, 105359939,\n    210719881, 421439783, 842879579, 1685759167,\n\n    //chunk #2\n    433, 877, 1759, 3527, 7057, 14143, 28289, 56591, 113189, 226379, 452759, 905551, 1811107,\n    3622219, 7244441, 14488931, 28977863, 57955739, 115911563, 231823147, 463646329, 927292699,\n    1854585413,\n\n    //chunk #3\n    953, 1907, 3821, 7643, 15287, 30577, 61169, 122347, 244703, 489407, 978821, 1957651, 3915341,\n    7830701, 15661423, 31322867, 62645741, 125291483, 250582987, 501165979, 1002331963,\n    2004663929,\n\n    //chunk #4\n    1039, 2081, 4177, 8363, 16729, 33461, 66923, 133853, 267713, 535481, 1070981, 2141977, 4283963,\n    8567929, 17135863, 34271747, 68543509, 137087021, 274174111, 548348231, 1096696463,\n\n    //chunk #5\n    31, 67, 137, 277, 557, 1117, 2237, 4481, 8963, 17929, 35863, 71741, 143483, 286973, 573953,\n    1147921, 2295859, 4591721, 9183457, 18366923, 36733847, 73467739, 146935499, 293871013,\n    587742049, 1175484103,\n\n    //chunk #6\n    599, 1201, 2411, 4831, 9677, 19373, 38747, 77509, 155027, 310081, 620171, 1240361, 2480729,\n    4961459, 9922933, 19845871, 39691759, 79383533, 158767069, 317534141, 635068283, 1270136683,\n\n    //chunk #7\n    311, 631, 1277, 2557, 5119, 10243, 20507, 41017, 82037, 164089, 328213, 656429, 1312867,\n    2625761, 5251529, 10503061, 21006137, 42012281, 84024581, 168049163, 336098327, 672196673,\n    1344393353,\n\n    //chunk #8\n    3, 7, 17, 37, 79, 163, 331, 673, 1361, 2729, 5471, 10949, 21911, 43853, 87719, 175447, 350899,\n    701819, 1403641, 2807303, 5614657, 11229331, 22458671, 44917381, 89834777, 179669557,\n    359339171, 718678369, 1437356741,\n\n    //chunk #9\n    43, 89, 179, 359, 719, 1439, 2879, 5779, 11579, 23159, 46327, 92657, 185323, 370661, 741337,\n    1482707, 2965421, 5930887, 11861791, 23723597, 47447201, 94894427, 189788857, 379577741,\n    759155483, 1518310967,\n\n    //chunk #10\n    379, 761, 1523, 3049, 6101, 12203, 24407, 48817, 97649, 195311, 390647, 781301, 1562611,\n    3125257, 6250537, 12501169, 25002389, 50004791, 100009607, 200019221, 400038451, 800076929,\n    1600153859,\n\n    //chunk #11\n    13, 29, 59, 127, 257, 521, 1049, 2099, 4201, 8419, 16843, 33703, 67409, 134837, 269683,\n    539389, 1078787, 2157587, 4315183, 8630387, 17260781, 34521589, 69043189, 138086407,\n    276172823, 552345671, 1104691373,\n\n    //chunk #12\n    19, 41, 83, 167, 337, 677,\n    1361, 2729, 5471, 10949, 21911, 43853, 87719, 175447, 350899,\n    701819, 1403641, 2807303, 5614657, 11229331, 22458671, 44917381, 89834777, 179669557,\n    359339171, 718678369, 1437356741,\n\n    //chunk #13\n    53, 107, 223, 449, 907, 1823, 3659, 7321, 14653, 29311, 58631, 117269,\n    234539, 469099, 938207, 1876417, 3752839, 7505681, 15011389, 30022781,\n    60045577, 120091177, 240182359, 480364727, 960729461, 1921458943\n];\n\nprimeNumbers.sort(sortAsc);\n\nfunction nextPrime(value) {\n    let index = binarySearch(primeNumbers, value, sortAsc);\n    if (index < 0) {\n        index = ~index;\n    }\n    return primeNumbers[index];\n}\n\nexports.nextPrime = nextPrime;\nexports.largestPrime = largestPrime;\n","'use strict';\nmodule.exports = Number.isNaN || function (x) {\n\treturn x !== x;\n};\n","\"use strict\";\n\nexports.additiveSymmetric = require('./distances/additiveSymmetric');\nexports.avg = require('./distances/avg');\nexports.bhattacharyya = require('./distances/bhattacharyya');\nexports.canberra = require('./distances/canberra');\nexports.chebyshev = require('./distances/chebyshev');\nexports.clark = require('./distances/clark');\nexports.czekanowski = require('./distances/czekanowski');\nexports.dice = require('./distances/dice');\nexports.divergence = require('./distances/divergence');\nexports.euclidean = require('ml-distance-euclidean');\nexports.fidelity = require('./distances/fidelity');\nexports.gower = require('./distances/gower');\nexports.harmonicMean = require('./distances/harmonicMean');\nexports.hellinger = require('./distances/hellinger');\nexports.innerProduct = require('./distances/innerProduct');\nexports.intersection = require('./distances/intersection');\nexports.jaccard = require('./distances/jaccard');\nexports.jeffreys = require('./distances/jeffreys');\nexports.jensenDifference = require('./distances/jensenDifference');\nexports.jensenShannon = require('./distances/jensenShannon');\nexports.kdivergence = require('./distances/kdivergence');\nexports.kulczynski = require('./distances/kulczynski');\nexports.kullbackLeibler = require('./distances/kullbackLeibler');\nexports.kumarHassebrook = require('./distances/kumarHassebrook');\nexports.kumarJohnson = require('./distances/kumarJohnson');\nexports.lorentzian = require('./distances/lorentzian');\nexports.manhattan = require('./distances/manhattan');\nexports.matusita = require('./distances/matusita');\nexports.minkowski = require('./distances/minkowski');\nexports.motyka = require('./distances/motyka');\nexports.neyman = require('./distances/neyman');\nexports.pearson = require('./distances/pearson');\nexports.probabilisticSymmetric = require('./distances/probabilisticSymmetric');\nexports.ruzicka = require('./distances/ruzicka');\nexports.soergel = require('./distances/soergel');\nexports.sorensen = require('./distances/sorensen');\nexports.squared = require('./distances/squared');\nexports.squaredChord = require('./distances/squaredChord');\nexports.squaredEuclidean = require('ml-distance-euclidean').squared;\nexports.taneja = require('./distances/taneja');\nexports.tanimoto = require('./distances/tanimoto');\nexports.topsoe = require('./distances/topsoe');\nexports.tree = require('ml-tree-similarity');\nexports.waveHedges = require('./distances/waveHedges');\n","module.exports = function additiveSymmetric(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i]) * (a[i] + b[i])) / (a[i] * b[i]);\n    }\n    return 2 * d;\n};\n","module.exports = function avg(a, b) {\n    var ii = a.length,\n        max = 0,\n        ans = 0,\n        aux = 0;\n    for (var i = 0; i < ii ; i++) {\n        aux = Math.abs(a[i] - b[i]);\n        ans += aux;\n        if (max < aux) {\n            max = aux;\n        }\n    }\n    return (max + ans) / 2;\n};\n","module.exports = function bhattacharyya(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return - Math.log(ans);\n};\n","module.exports = function canberra(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.abs(a[i] - b[i]) / (a[i] + b[i]);\n    }\n    return ans;\n};\n","module.exports = function chebyshev(a, b) {\n    var ii = a.length,\n        max = 0,\n        aux = 0;\n    for (var i = 0; i < ii ; i++) {\n        aux = Math.abs(a[i] - b[i]);\n        if (max < aux) {\n            max = aux;\n        }\n    }\n    return max;\n};\n","module.exports = function clark(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.sqrt(((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i])));\n    }\n    return 2 * d;\n};\n","'use strict';\n\nconst czekanowskiSimilarity = require('../similarities/czekanowski');\n\nmodule.exports = function czekanowskiDistance(a, b) {\n    return 1 - czekanowskiSimilarity(a, b);\n};\n","module.exports = function divergence(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i]));\n    }\n    return 2 * d;\n};\n","module.exports = function fidelity(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return ans;\n};\n","module.exports = function gower(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.abs(a[i] - b[i]);\n    }\n    return ans / ii;\n};\n","module.exports = function harmonicMean(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] * b[i]) / (a[i] + b[i]);\n    }\n    return 2 * ans;\n};\n","module.exports = function hellinger(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return 2 * Math.sqrt(1 - ans);\n};\n","module.exports = function innerProduct(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * b[i];\n    }\n    return ans;\n};\n","module.exports = function jeffreys(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] - b[i]) * Math.log(a[i] / b[i]);\n    }\n    return ans;\n};\n","module.exports = function jensenDifference(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += ((a[i] * Math.log(a[i]) + b[i] * Math.log(b[i])) / 2) - ((a[i] + b[i]) / 2) * Math.log((a[i] + b[i]) / 2);\n    }\n    return ans;\n};\n","module.exports = function jensenShannon(a, b) {\n    var ii = a.length,\n        p = 0,\n        q = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * Math.log(2 * a[i] / (a[i] + b[i]));\n        q += b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n    }\n    return (p + q) / 2;\n};\n","module.exports = function kdivergence(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(2 * a[i] / (a[i] + b[i]));\n    }\n    return ans;\n};\n","module.exports = function kullbackLeibler(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(a[i] / b[i]);\n    }\n    return ans;\n};\n","module.exports = function kumarHassebrook(a, b) {\n    var ii = a.length,\n        p = 0,\n        p2 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q2 += b[i] * b[i];\n    }\n    return p / (p2 + q2 - p);\n};\n","module.exports = function kumarJohnson(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.pow(a[i] * a[i] - b[i] * b[i],2) / (2 * Math.pow(a[i] * b[i],1.5));\n    }\n    return ans;\n};\n","module.exports = function lorentzian(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.log(Math.abs(a[i] - b[i]) + 1);\n    }\n    return ans;\n};\n","module.exports = function manhattan(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.abs(a[i] - b[i]);\n    }\n    return d;\n};\n","module.exports = function matusita(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return Math.sqrt(2 - 2 * ans);\n};\n","module.exports = function minkowski(a, b, p) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.pow(Math.abs(a[i] - b[i]),p);\n    }\n    return Math.pow(d,(1/p));\n};\n","module.exports = function neyman(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / a[i];\n    }\n    return d;\n};\n","module.exports = function pearson(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / b[i];\n    }\n    return d;\n};\n","module.exports = function probabilisticSymmetric(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n    }\n    return 2 * d;\n};\n","module.exports = function ruzicka(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.min(a[i],b[i]);\n        down += Math.max(a[i],b[i]);\n    }\n    return up / down;\n};\n","module.exports = function soergel(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += Math.max(a[i],b[i]);\n    }\n    return up / down;\n};\n","module.exports = function sorensen(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += a[i] + b[i];\n    }\n    return up / down;\n};\n","module.exports = function squared(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n    }\n    return d;\n};\n","module.exports = function taneja(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] + b[i]) / 2 * Math.log((a[i] + b[i]) / (2 * Math.sqrt(a[i] * b[i])));\n    }\n    return ans;\n};\n","var tanimotoS = require('./../similarities/tanimoto');\n\nmodule.exports = function tanimoto(a, b, bitvector) {\n    if (bitvector)\n        return 1 - tanimotoS(a, b, bitvector);\n    else {\n        var ii = a.length,\n            p = 0,\n            q = 0,\n            m = 0;\n        for (var i = 0; i < ii ; i++) {\n            p += a[i];\n            q += b[i];\n            m += Math.min(a[i],b[i]);\n        }\n        return (p + q - 2 * m) / (p + q - m);\n    }\n};\n","module.exports = function topsoe(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(2 * a[i] / (a[i] + b[i])) + b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n    }\n    return ans;\n};\n","\"use strict\";\n\n/**\n * Function that creates the tree\n * @param {Array <number>} X - chemical shifts of the signal\n * @param {Array <number>} Y - intensity of the signal\n * @param {number} from - the low limit of x\n * @param {number} to - the top limit of x\n * @param {number} minWindow - smallest range to accept in x\n * @param {number} threshold - smallest range to accept in y\n * @returns {{sum: number, center: number, left: {json}, right: {json}}}\n * left and right have the same structure than the parent, or have a\n * undefined value if are leafs\n */\nfunction createTree (X, Y, from, to, minWindow, threshold) {\n    minWindow = minWindow || 0.16;\n    threshold = threshold || 0.01;\n    if ((to - from) < minWindow)\n        return undefined;\n    var sum = 0;\n    for (var i = 0; X[i] < to; i++) {\n        if (X[i] > from)\n            sum += Y[i];\n    }\n    if (sum < threshold) {\n        return undefined;\n    }\n    var center = 0;\n    for (var j = 0; X[j] < to; j++) {\n        if (X[i] > from)\n            center += X[j] * Y[j];\n    }\n    center = center / sum;\n    if (((center - from) < 10e-6) || ((to - center) < 10e-6)) return undefined;\n    if ((center - from) < (minWindow /4)) {\n        return createTree(X, Y, center, to, minWindow, threshold);\n    }\n    else {\n        if ((to - center) < (minWindow / 4)) {\n            return createTree(X, Y, from, center, minWindow, threshold);\n        }\n        else {\n            return {\n                'sum': sum,\n                'center': center,\n                'left': createTree(X, Y, from, center, minWindow, threshold),\n                'right': createTree(X, Y, center, to, minWindow, threshold)\n            };\n        }\n    }\n}\n\n/**\n * Similarity between two nodes\n * @param {{sum: number, center: number, left: {json}, right: {json}}} a - tree A node\n * @param {{sum: number, center: number, left: {json}, right: {json}}} b - tree B node\n * @param {number} alpha - weights the relative importance of intensity vs. shift match\n * @param {number} beta - weights the relative importance of node matching and children matching\n * @param {number} gamma - controls the attenuation of the effect of chemical shift differences\n * @returns {number} similarity measure between tree nodes\n */\nfunction S(a, b, alpha, beta, gamma) {\n    if (a === undefined || b === undefined) {\n        return 0;\n    }\n    else {\n        var C = (alpha*Math.min(a.sum, b.sum)/Math.max(a.sum, b.sum)+ (1-alpha)*Math.exp(-gamma*Math.abs(a.center - b.center)));\n    }\n    return beta*C + (1-beta)*(S(a.left, b.left, alpha, beta, gamma)+S(a.right, b.right, alpha, beta, gamma));\n}\n\n/**\n * @type {number} alpha - weights the relative importance of intensity vs. shift match\n * @type {number} beta - weights the relative importance of node matching and children matching\n * @type {number} gamma - controls the attenuation of the effect of chemical shift differences\n * @type {number} minWindow - smallest range to accept in x\n * @type {number} threshold - smallest range to accept in y\n */\nvar defaultOptions = {\n    minWindow: 0.16,\n    threshold : 0.01,\n    alpha: 0.1,\n    beta: 0.33,\n    gamma: 0.001\n};\n\n/**\n * Builds a tree based in the spectra and compares this trees\n * @param {{x: Array<number>, y: Array<number>}} A - first spectra to be compared\n * @param {{x: Array<number>, y: Array<number>}} B - second spectra to be compared\n * @param {number} from - the low limit of x\n * @param {number} to - the top limit of x\n * @param {{minWindow: number, threshold: number, alpha: number, beta: number, gamma: number}} options\n * @returns {number} similarity measure between the spectra\n */\nfunction tree(A, B, from, to, options) {\n    options = options || {};\n    for (var o in defaultOptions)\n        if (!options.hasOwnProperty(o)) {\n            options[o] = defaultOptions[o];\n        }\n    var Atree, Btree;\n    if (A.sum)\n        Atree = A;\n    else\n        Atree = createTree(A.x, A.y, from, to, options.minWindow, options.threshold);\n    if (B.sum)\n        Btree = B;\n    else\n        Btree = createTree(B.x, B.y, from, to, options.minWindow, options.threshold);\n    return S(Atree, Btree, options.alpha, options.beta, options.gamma);\n}\n\nmodule.exports = {\n    calc: tree,\n    createTree: createTree\n};","module.exports = function waveHedges(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += 1 - (Math.min(a[i], b[i]) / Math.max(a[i], b[i]));\n    }\n    return ans;\n};\n","\"use strict\";\n\nexports.cosine = require('./similarities/cosine');\nexports.czekanowski = require('./similarities/czekanowski');\nexports.dice = require('./similarities/dice');\nexports.intersection = require('./similarities/intersection');\nexports.jaccard = require('./similarities/jaccard');\nexports.kulczynski = require('./similarities/kulczynski');\nexports.motyka = require('./similarities/motyka');\nexports.pearson = require('./similarities/pearson');\nexports.squaredChord = require('./similarities/squaredChord');\nexports.tanimoto = require('./similarities/tanimoto');\n","var diceD = require('./../distances/dice');\n\nmodule.exports = function dice(a, b) {\n    return 1 - diceD(a,b);\n};\n","var intersectionD = require('./../distances/intersection');\n\nmodule.exports = function intersection(a, b) {\n    return 1 - intersectionD(a,b);\n};\n","var jaccardD = require('./../distances/jaccard');\n\nmodule.exports = function jaccard(a, b) {\n    return 1 - jaccardD(a, b);\n};\n","var kulczynskiD = require('./../distances/kulczynski');\n\nmodule.exports = function kulczynski(a, b) {\n    return 1 / kulczynskiD(a, b);\n};\n","var motykaD = require('./../distances/motyka');\n\nmodule.exports = function motyka(a, b) {\n    return 1 - motykaD(a,b);\n};\n","'use strict';\n\nvar stat=require('ml-stat').array;\nvar cosine=require('./cosine');\n\nmodule.exports = function pearson(a, b) {\n    var avgA=stat.mean(a);\n    var avgB=stat.mean(b);\n\n    var newA=new Array(a.length);\n    var newB=new Array(b.length);\n    for (var i=0; i<newA.length; i++) {\n        newA[i]=a[i]-avgA;\n        newB[i]=b[i]-avgB;\n    }\n\n    return cosine(newA, newB);\n};\n","var squaredChordD = require('./../distances/squaredChord');\n\nmodule.exports = function squaredChord(a, b) {\n    return 1 - squaredChordD(a, b);\n};\n","'use strict';\n\nconst measures = require('./measures');\n\nclass Performance {\n    /**\n     *\n     * @param prediction - The prediction matrix\n     * @param target - The target matrix (values: truthy for same class, falsy for different class)\n     * @param options\n     *\n     * @option    all    True if the entire matrix must be used. False to ignore the diagonal and lower part (default is false, for similarity/distance matrices)\n     * @option    max    True if the max value corresponds to a perfect match (like in similarity matrices), false if it is the min value (default is false, like in distance matrices. All values will be multiplied by -1)\n     */\n    constructor(prediction, target, options) {\n        options = options || {};\n        if (prediction.length !== target.length || prediction[0].length !== target[0].length) {\n            throw new Error('dimensions of prediction and target do not match');\n        }\n        const rows = prediction.length;\n        const columns = prediction[0].length;\n        const isDistance = !options.max;\n\n        const predP = [];\n\n        if (options.all) {\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    predP.push({\n                        pred: prediction[i][j],\n                        targ: target[i][j]\n                    });\n                }\n            }\n        } else {\n            if (rows < 3 || rows !== columns) {\n                throw new Error('When \"all\" option is false, the prediction matrix must be square and have at least 3 columns');\n            }\n            for (var i = 0; i < rows - 1; i++) {\n                for (var j = i + 1; j < columns; j++) {\n                    predP.push({\n                        pred: prediction[i][j],\n                        targ: target[i][j]\n                    });\n                }\n            }\n        }\n\n        if (isDistance) {\n            predP.sort((a, b) => a.pred - b.pred);\n        } else {\n            predP.sort((a, b) => b.pred - a.pred);\n        }\n        \n        const cutoffs = this.cutoffs = [isDistance ? Number.MIN_VALUE : Number.MAX_VALUE];\n        const fp = this.fp = [0];\n        const tp = this.tp = [0];\n\n        var nPos = 0;\n        var nNeg = 0;\n\n        var currentPred = predP[0].pred;\n        var nTp = 0;\n        var nFp = 0;\n        for (var i = 0; i < predP.length; i++) {\n            if (predP[i].pred !== currentPred) {\n                cutoffs.push(currentPred);\n                fp.push(nFp);\n                tp.push(nTp);\n                currentPred = predP[i].pred;\n            }\n            if (predP[i].targ) {\n                nPos++;\n                nTp++;\n            } else {\n                nNeg++;\n                nFp++;\n            }\n        }\n        cutoffs.push(currentPred);\n        fp.push(nFp);\n        tp.push(nTp);\n\n        const l = cutoffs.length;\n        const fn = this.fn = new Array(l);\n        const tn = this.tn = new Array(l);\n        const nPosPred = this.nPosPred = new Array(l);\n        const nNegPred = this.nNegPred = new Array(l);\n\n        for (var i = 0; i < l; i++) {\n            fn[i] = nPos - tp[i];\n            tn[i] = nNeg - fp[i];\n\n            nPosPred[i] = tp[i] + fp[i];\n            nNegPred[i] = tn[i] + fn[i];\n        }\n\n        this.nPos = nPos;\n        this.nNeg = nNeg;\n        this.nSamples = nPos + nNeg;\n    }\n\n    /**\n     * Computes a measure from the prediction object.\n     *\n     * Many measures are available and can be combined :\n     * To create a ROC curve, you need fpr and tpr\n     * To create a DET curve, you need fnr and fpr\n     * To create a Lift chart, you need rpp and lift\n     *\n     * Possible measures are : threshold (Threshold), acc (Accuracy), err (Error rate),\n     * fpr (False positive rate), tpr (True positive rate), fnr (False negative rate), tnr (True negative rate), ppv (Positive predictive value),\n     * npv (Negative predictive value), pcfall (Prediction-conditioned fallout), pcmiss (Prediction-conditioned miss), lift (Lift value), rpp (Rate of positive predictions), rnp (Rate of negative predictions)\n     *\n     * @param measure - The short name of the measure\n     *\n     * @return [number]\n     */\n    getMeasure(measure) {\n        if (typeof measure !== 'string') {\n            throw new Error('No measure specified');\n        }\n        if (!measures[measure]) {\n            throw new Error(`The specified measure (${measure}) does not exist`);\n        }\n        return measures[measure](this);\n    }\n\n    /**\n     * Returns the area under the ROC curve\n     */\n    getAURC() {\n        const l = this.cutoffs.length;\n        const x = new Array(l);\n        const y = new Array(l);\n        for (var i = 0; i < l; i++) {\n            x[i] = this.fp[i] / this.nNeg;\n            y[i] = this.tp[i] / this.nPos;\n        }\n        var auc = 0;\n        for (i = 1; i < l; i++) {\n            auc += 0.5 * (x[i] - x[i - 1]) * (y[i] + y[i - 1]);\n        }\n        return auc;\n    }\n\n    /**\n     * Returns the area under the DET curve\n     */\n    getAUDC() {\n        const l = this.cutoffs.length;\n        const x = new Array(l);\n        const y = new Array(l);\n        for (var i = 0; i < l; i++) {\n            x[i] = this.fn[i] / this.nPos;\n            y[i] = this.fp[i] / this.nNeg;\n        }\n        var auc = 0;\n        for (i = 1; i < l; i++) {\n            auc += 0.5 * (x[i] + x[i - 1]) * (y[i] - y[i - 1]);\n        }\n        return auc;\n    }\n\n    getDistribution(options) {\n        options = options || {};\n        var cutLength = this.cutoffs.length;\n        var cutLow = options.xMin || Math.floor(this.cutoffs[cutLength - 1] * 100) / 100;\n        var cutHigh = options.xMax || Math.ceil(this.cutoffs[1] * 100) / 100;\n        var interval = options.interval || Math.floor(((cutHigh - cutLow) / 20 * 10000000) - 1) / 10000000; // Trick to avoid the precision problem of float numbers\n\n        var xLabels = [];\n        var interValues = [];\n        var intraValues = [];\n        var interCumPercent = [];\n        var intraCumPercent = [];\n\n        var nTP = this.tp[cutLength - 1], currentTP = 0;\n        var nFP = this.fp[cutLength - 1], currentFP = 0;\n\n        for (var i = cutLow, j = (cutLength - 1); i <= cutHigh; i += interval) {\n            while (this.cutoffs[j] < i)\n                j--;\n\n            xLabels.push(i);\n\n            var thisTP = nTP - currentTP - this.tp[j];\n            var thisFP = nFP - currentFP - this.fp[j];\n\n            currentTP += thisTP;\n            currentFP += thisFP;\n\n            interValues.push(thisFP);\n            intraValues.push(thisTP);\n\n            interCumPercent.push(100 - (nFP - this.fp[j]) / nFP * 100);\n            intraCumPercent.push(100 - (nTP - this.tp[j]) / nTP * 100);\n        }\n\n        return {\n            xLabels: xLabels,\n            interValues: interValues,\n            intraValues: intraValues,\n            interCumPercent: interCumPercent,\n            intraCumPercent: intraCumPercent\n        };\n    }\n}\n\nPerformance.names = {\n    acc: 'Accuracy',\n    err: 'Error rate',\n    fpr: 'False positive rate',\n    tpr: 'True positive rate',\n    fnr: 'False negative rate',\n    tnr: 'True negative rate',\n    ppv: 'Positive predictive value',\n    npv: 'Negative predictive value',\n    pcfall: 'Prediction-conditioned fallout',\n    pcmiss: 'Prediction-conditioned miss',\n    lift: 'Lift value',\n    rpp: 'Rate of positive predictions',\n    rnp: 'Rate of negative predictions',\n    threshold: 'Threshold'\n};\n\nmodule.exports = Performance;\n","'use strict';\n\n// Accuracy\nexports.acc = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.tn[i] + pred.tp[i]) / (l - 1);\n    }\n    return result;\n};\n\n// Error rate\nexports.err = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.fp[i] / (l - 1));\n    }\n    return result;\n};\n\n// False positive rate\nexports.fpr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.fp[i] / pred.nNeg;\n    }\n    return result;\n};\n\n// True positive rate\nexports.tpr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.tp[i] / pred.nPos;\n    }\n    return result;\n};\n\n// False negative rate\nexports.fnr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.fn[i] / pred.nPos;\n    }\n    return result;\n};\n\n// True negative rate\nexports.tnr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.tn[i] / pred.nNeg;\n    }\n    return result;\n};\n\n// Positive predictive value\nexports.ppv = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fp[i] + pred.tp[i] !== 0) ? (pred.tp[i] / (pred.fp[i] + pred.tp[i])) : 0;\n    }\n    return result;\n};\n\n// Negative predictive value\nexports.npv = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.tn[i] !== 0) ? (pred.tn[i] / (pred.fn[i] + pred.tn[i])) : 0;\n    }\n    return result;\n};\n\n// Prediction conditioned fallout\nexports.pcfall = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fp[i] + pred.tp[i] !== 0) ? 1 - (pred.tp[i] / (pred.fp[i] + pred.tp[i])) : 1;\n    }\n    return result;\n};\n\n// Prediction conditioned miss\nexports.pcmiss = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.tn[i] !== 0) ? 1 - (pred.tn[i] / (pred.fn[i] + pred.tn[i])) : 1;\n    }\n    return result;\n};\n\n// Lift value\nexports.lift = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.nPosPred[i] !== 0) ? ((pred.tp[i] / pred.nPos) / (pred.nPosPred[i] / pred.nSamples)) : 0;\n    }\n    return result;\n};\n\n// Rate of positive predictions\nexports.rpp = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.nPosPred[i] / pred.nSamples;\n    }\n    return result;\n};\n\n// Rate of negative predictions\nexports.rnp = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.nNegPred[i] / pred.nSamples;\n    }\n    return result;\n};\n\n// Threshold\nexports.threshold = pred => {\n    const clone = pred.cutoffs.slice();\n    clone[0] = clone[1]; // Remove the infinite value\n    return clone;\n};\n","'use strict';\n\nvar matrixLib = require('ml-matrix');\nvar Matrix = matrixLib.Matrix;\nvar inverse = matrixLib.inverse;\nvar padArray = require('ml-pad-array');\nvar extend = require('extend');\n\nvar defaultOptions = {\n    windowSize: 5,\n    derivative: 1,\n    polynomial: 2,\n    pad: 'none',\n    padValue: 'replicate'\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nfunction SavitzkyGolay (data, h, options) {\n    options = extend({}, defaultOptions, options);\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n        throw new RangeError('Invalid window size (should be odd and at least 5 integer number)');\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n\n    var C, norm;\n    var step = Math.floor(options.windowSize / 2);\n\n    if (options.pad === 'pre') {\n        data = padArray(data, {size: step, value: options.padValue});\n    }\n\n    var ans =  new Array(data.length - 2*step);\n\n    if ((options.windowSize === 5) && (options.polynomial === 2) && ((options.derivative === 1) || (options.derivative === 2))) {\n        if (options.derivative === 1) {\n            C = [-2,-1,0,1,2];\n            norm = 10;\n        }\n        else {\n            C = [2, -1, -2, -1, 2];\n            norm = 7;\n        }\n    }\n    else {\n        var J = Matrix.ones(options.windowSize, options.polynomial + 1);\n        var inic = -(options.windowSize - 1) / 2;\n        for (var i = 0; i < J.length; i++) {\n            for (var j = 0; j < J[i].length; j++) {\n                if ((inic + 1 !== 0) || (j !== 0))\n                    J[i][j] = Math.pow((inic + i), j);\n            }\n        }\n        var Jtranspose = J.transposeView();\n        var Jinv = inverse(Jtranspose.mmul(J));\n        C = Jinv.mmul(Jtranspose);\n        C = C[options.derivative];\n        norm = 1;\n    }\n    var det = norm * Math.pow(h, options.derivative);\n    for (var k = step; k < (data.length - step); k++) {\n        var d = 0;\n        for (var l = 0; l < C.length; l++)\n            d += C[l] * data[l + k - step] / det;\n        ans[k - step] = d;\n    }\n\n    if (options.pad === 'post') {\n        ans = padArray(ans, {size: step, value: options.padValue});\n    }\n\n    return ans;\n}\n\nmodule.exports = SavitzkyGolay;\n","//Code translate from Pascal source in http://pubs.acs.org/doi/pdf/10.1021/ac00205a007\nvar extend = require('extend');\nvar stat = require('ml-stat');\n\nvar defaultOptions = {\n    windowSize: 9,\n    derivative: 0,\n    polynomial: 3,\n};\n\n\nfunction SavitzkyGolay(data, h, options) {\n    options = extend({}, defaultOptions, options);\n\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n            throw new RangeError('Invalid window size (should be odd and at least 5 integer number)')\n\n\n    if (options.windowSize>data.length)\n        throw new RangeError('Window size is higher than the data length '+options.windowSize+\">\"+data.length);\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n    if (options.polynomial >= 6)\n        console.warn('You should not use polynomial grade higher than 5 if you are' +\n            ' not sure that your data arises from such a model. Possible polynomial oscillation problems');\n\n    var windowSize = options.windowSize;\n\n    var half = Math.floor(windowSize/2);\n    var np = data.length;\n    var ans = new Array(np);\n    var weights = fullWeights(windowSize,options.polynomial,options.derivative);\n    var hs = 0;\n    var constantH = true;\n    if( Object.prototype.toString.call( h ) === '[object Array]' ) {\n        constantH = false;\n    }\n    else{\n        hs = Math.pow(h, options.derivative);\n    }\n    //console.log(\"Constant h: \"+constantH);\n    //For the borders\n    for(var i=0;i<half;i++){\n        var wg1=weights[half-i-1];\n        var wg2=weights[half+i+1];\n        var d1 = 0,d2=0;\n        for (var l = 0; l < windowSize; l++){\n            d1 += wg1[l] * data[l];\n            d2 += wg2[l] * data[np-windowSize+l-1];\n        }\n        if(constantH){\n            ans[half-i-1] = d1/hs;\n            ans[np-half+i] = d2/hs;\n        }\n        else{\n            hs = getHs(h,half-i-1,half, options.derivative);\n            ans[half-i-1] = d1/hs;\n            hs = getHs(h,np-half+i,half, options.derivative);\n            ans[np-half+i] = d2/hs;\n        }\n    }\n    //For the internal points\n    var wg = weights[half];\n    for(var i=windowSize;i<np+1;i++){\n        var d = 0;\n        for (var l = 0; l < windowSize; l++)\n            d += wg[l] * data[l+i-windowSize];\n        if(!constantH)\n            hs = getHs(h,i-half-1,half, options.derivative);\n        ans[i-half-1] = d/hs;\n    }\n    return ans;\n}\n\nfunction getHs(h,center,half,derivative){\n    var hs = 0;\n    var count = 0;\n    for(var i=center-half;i<center+half;i++){\n        if(i>=0 && i < h.length-1){\n            hs+= (h[i+1]-h[i]);\n            count++;\n        }\n    }\n    return Math.pow(hs/count,derivative);\n}\n\nfunction GramPoly(i,m,k,s){\n    var Grampoly = 0;\n    if(k>0){\n        Grampoly = (4*k-2)/(k*(2*m-k+1))*(i*GramPoly(i,m,k-1,s) +\n            s*GramPoly(i,m,k-1,s-1)) - ((k-1)*(2*m+k))/(k*(2*m-k+1))*GramPoly(i,m,k-2,s);\n    }\n    else{\n        if(k==0&&s==0){\n            Grampoly=1;\n        }\n        else{\n            Grampoly=0;\n        }\n    }\n    //console.log(Grampoly);\n    return Grampoly;\n}\n\nfunction GenFact(a,b){\n    var gf=1;\n    if(a>=b){\n        for(var j=a-b+1;j<=a;j++){\n            gf*=j;\n        }\n    }\n    return gf;\n}\n\nfunction Weight(i,t,m,n,s){\n    var sum=0;\n    for(var k=0;k<=n;k++){\n        //console.log(k);\n        sum+=(2*k+1)*(GenFact(2*m,k)/GenFact(2*m+k+1,k+1))*GramPoly(i,m,k,0)*GramPoly(t,m,k,s)\n    }\n    return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m,n,s){\n    var weights = new Array(m);\n    var np = Math.floor(m/2);\n    for(var t=-np;t<=np;t++){\n        weights[t+np] = new Array(m);\n        for(var j=-np;j<=np;j++){\n            weights[t+np][j+np]=Weight(j,t,np,n,s);\n        }\n    }\n    return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\nmodule.exports = SavitzkyGolay;\n \n","'use strict';\n\nvar eightBits = require('./creator');\n\n/**\n * Count the number of true values in an array\n * @param {Array} arr\n * @return {number}\n */\nfunction count(arr) {\n    var c = 0;\n    for (var i = 0; i < arr.length; i++) {\n        c += eightBits[arr[i] & 0xff] + eightBits[(arr[i] >> 8) & 0xff] + eightBits[(arr[i] >> 16) & 0xff] + eightBits[(arr[i] >> 24) & 0xff];\n    }\n    return c;\n}\n\n/**\n * Logical AND operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction and(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] & arr2[i];\n    return ans;\n}\n\n/**\n * Logical OR operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction or(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] | arr2[i];\n    return ans;\n}\n\n/**\n * Logical XOR operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction xor(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] ^ arr2[i];\n    return ans;\n}\n\n/**\n * Logical NOT operation\n * @param {Array} arr\n * @return {Array}\n */\nfunction not(arr) {\n    var ans = new Array(arr.length);\n    for (var i = 0; i < ans.length; i++)\n        ans[i] = ~arr[i];\n    return ans;\n}\n\n/**\n * Gets the n value of array arr\n * @param {Array} arr\n * @param {number} n\n * @return {boolean}\n */\nfunction getBit(arr, n) {\n    var index = n >> 5; // Same as Math.floor(n/32)\n    var mask = 1 << (31 - n % 32);\n    return Boolean(arr[index] & mask);\n}\n\n/**\n * Sets the n value of array arr to the value val\n * @param {Array} arr\n * @param {number} n\n * @param {boolean} val\n * @return {Array}\n */\nfunction setBit(arr, n, val) {\n    var index = n >> 5; // Same as Math.floor(n/32)\n    var mask = 1 << (31 - n % 32);\n    if (val)\n        arr[index] = mask | arr[index];\n    else\n        arr[index] = ~mask & arr[index];\n    return arr;\n}\n\n/**\n * Translates an array of numbers to a string of bits\n * @param {Array} arr\n * @returns {string}\n */\nfunction toBinaryString(arr) {\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        var obj = (arr[i] >>> 0).toString(2);\n        str += '00000000000000000000000000000000'.substr(obj.length) + obj;\n    }\n    return str;\n}\n\n/**\n * Creates an array of numbers based on a string of bits\n * @param {string} str\n * @returns {Array}\n */\nfunction parseBinaryString(str) {\n    var len = str.length / 32;\n    var ans = new Array(len);\n    for (var i = 0; i < len; i++) {\n        ans[i] = parseInt(str.substr(i*32, 32), 2) | 0;\n    }\n    return ans;\n}\n\n/**\n * Translates an array of numbers to a hex string\n * @param {Array} arr\n * @returns {string}\n */\nfunction toHexString(arr) {\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        var obj = (arr[i] >>> 0).toString(16);\n        str += '00000000'.substr(obj.length) + obj;\n    }\n    return str;\n}\n\n/**\n * Creates an array of numbers based on a hex string\n * @param {string} str\n * @returns {Array}\n */\nfunction parseHexString(str) {\n    var len = str.length / 8;\n    var ans = new Array(len);\n    for (var i = 0; i < len; i++) {\n        ans[i] = parseInt(str.substr(i*8, 8), 16) | 0;\n    }\n    return ans;\n}\n\n/**\n * Creates a human readable string of the array\n * @param {Array} arr\n * @returns {string}\n */\nfunction toDebug(arr) {\n    var binary = toBinaryString(arr);\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        str += '0000'.substr((i * 32).toString(16).length) + (i * 32).toString(16) + ':';\n        for (var j = 0; j < 32; j += 4) {\n            str += ' ' + binary.substr(i * 32 + j, 4);\n        }\n        if (i < arr.length - 1) str += '\\n';\n    }\n    return str\n}\n\nmodule.exports = {\n    count: count,\n    and: and,\n    or: or,\n    xor: xor,\n    not: not,\n    getBit: getBit,\n    setBit: setBit,\n    toBinaryString: toBinaryString,\n    parseBinaryString: parseBinaryString,\n    toHexString: toHexString,\n    parseHexString: parseHexString,\n    toDebug: toDebug\n};\n","// auxiliary file to create the 256 look at table elements\n\nvar ans = new Array(256);\nfor (var i = 0; i < 256; i++) {\n    var num = i;\n    var c = 0;\n    while (num) {\n        num = num & (num - 1);\n        c++;\n    }\n    ans[i] = c;\n}\n\nmodule.exports = ans;","'use strict';\n\nmodule.exports = exports = require('./ArrayUtils');\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for (var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for (var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for (i = 0; i < array.length; i += dimensions) {\n        for (var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for (var i = 0; i < coordMatrix[0].length; ++i) {\n        for (var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for (var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for (var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for (var i = 0; i < points.length; ++i) {\n        for (var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if (firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options = {}) {\n    const {\n        min,\n        max\n    } = options;\n\n    var y = options.inPlace ? input : (new Array(input.length));\n    var minMax = Stat.minMax(input);\n\n    if (typeof max === 'number') {\n        if (typeof min === 'number') {\n            let factor = (max - min) / (minMax.max - minMax.min);\n            for (let i = 0; i < y.length; i++) {\n                y[i] = (input[i] - minMax.min) * factor + min;\n            }\n        } else if (minMax.max !== 0) {\n            let factor = max / minMax.max;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n        } else {\n            options.min = minMax.min;\n            y = scale(input, options);\n        }\n    } else if (typeof min === 'number') {\n        if (minMax.min !== 0) {\n            let factor = min / minMax.min;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n\n        } else {\n            options.max = minMax.max;\n            y = scale(input, options);\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale: scale\n};\n\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options = {}) {\n    var xLength = x.length;\n    if (x.length > 1 && x[0] > x[1]) {\n        x = x.slice().reverse();\n        y = y.slice().reverse();\n    }\n\n    var {\n        from = x[0],\n        to = x[xLength - 1],\n        variant = 'smooth',\n        numberOfPoints = 100\n    } = options;\n\n    if (xLength !== y.length) {\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n    }\n\n    if (typeof from !== 'number' || isNaN(from)) {\n        throw new RangeError(\"'from' option must be a number\");\n    }\n\n    if (typeof to !== 'number' || isNaN(to)) {\n        throw new RangeError(\"'to' option must be a number\");\n    }\n\n    var reverse = from > to;\n    if (reverse) {\n        [from, to] = [to, from];\n    }\n\n    if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n        throw new RangeError(\"'numberOfPoints' option must be a number\");\n    }\n    if (numberOfPoints < 1) {\n        throw new RangeError('the number of points must be at least 1');\n    }\n\n    var output = variant === 'slot' ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n    // Init main variables\n    var min = from - halfStep;\n    var max = from + halfStep;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while (true) {\n\n        if (previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j++] = (sumAtMax - sumAtMin) / step;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope * previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while (true) {\n        if (previousX >= nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if (backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if (previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n            currentPoints--;\n        }\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;\n","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mode of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction mode(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = 0;\n  var maxCount = 0;\n  var count = 0;\n  var counts = {};\n\n  for (var i = 0; i < input.length; ++i) {\n    var element = input[i];\n    count = counts[element];\n\n    if (count) {\n      counts[element]++;\n      count++;\n    } else {\n      counts[element] = count = 1;\n    }\n\n    if (count > maxCount) {\n      maxCount = count;\n      maxValue = input[i];\n    }\n  }\n\n  return maxValue;\n}\n\nexport default mode;\n","/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [algorithm='absolute']\n * @return {number}\n */\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm;\n\n  if (!Array.isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      var sum = absoluteSum(input);\n      if (sum === 0) return input.slice(0);\n      return input.map(function (element) {\n        return element / sum;\n      });\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sum = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sum += Math.abs(input[i]);\n  }\n\n  return sum;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","import variance from 'ml-array-variance';\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {object} [options]\n * @param {boolean} [options.unbiased = true] - if true, divide by (n-1); if false, divide by n.\n * @param {number} [options.mean = arrayMean] - precalculated mean, if any.\n * @return {number}\n */\n\nfunction standardDeviation(values) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Math.sqrt(variance(values, options));\n}\n\nexport default standardDeviation;\n","/**\n * Merge abscissa values if the ordinate value is in a list of centroids\n * @param {object} originalPoints\n * @param {Array<number>} originalPoints.x\n * @param {Array<number>} originalPoints.y\n * @param {Array<number>} centroids\n * @param {object} [options]\n * @param {number} [options.window = 0.01] - has to be a positive number\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function mergeByCentroids(\n  originalPoints,\n  centroids,\n  options = {}\n) {\n  const { window = 0.01 } = options;\n\n  var mergedPoints = {\n    x: centroids.slice(),\n    y: new Array(centroids.length).fill(0)\n  };\n\n  var originalIndex = 0;\n  var mergedIndex = 0;\n  while (\n    originalIndex < originalPoints.x.length &&\n    mergedIndex < centroids.length\n  ) {\n    var diff = originalPoints.x[originalIndex] - centroids[mergedIndex];\n    if (Math.abs(diff) < window) {\n      mergedPoints.y[mergedIndex] += originalPoints.y[originalIndex++];\n    } else if (diff < 0) {\n      originalIndex++;\n    } else {\n      mergedIndex++;\n    }\n  }\n\n  return mergedPoints;\n}\n","import binarySearch from 'binary-search';\nimport { asc, desc } from 'num-sort';\n\n/**\n *\n * @param {object} points\n * @param {Array<number>} originalPoints.x\n * @param {Array<number>} originalPoints.y\n * @param {*} options\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function closestX(points, options) {\n  const { x, y } = points;\n  const { target = x[0], reverse = false } = options;\n\n  let index;\n  if (reverse) {\n    index = binarySearch(x, target, desc);\n  } else {\n    index = binarySearch(x, target, asc);\n  }\n\n  if (index >= 0) {\n    return {\n      x: x[index],\n      y: y[index]\n    };\n  } else {\n    index = ~index;\n    if (\n      (index !== 0 && Math.abs(x[index] - target) > 0.5) ||\n      index === x.length\n    ) {\n      return {\n        x: x[index - 1],\n        y: y[index - 1]\n      };\n    } else {\n      return {\n        x: x[index],\n        y: y[index]\n      };\n    }\n  }\n}\n","/**\n * Merge abscissas values on similar ordinates and weight the group of abscissas\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {number} [options.groupWidth = 0.001] - window for abscissas to merge\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function maxMerge(points, options = {}) {\n  const { x, y } = points;\n  const { groupWidth = 0.001 } = options;\n\n  var merged = { x: [], y: [] };\n  var maxAbscissa = { x: [], y: [] };\n  var size = 0;\n  var index = 0;\n\n  while (index < x.length) {\n    if (size === 0 || x[index] - merged.x[size - 1] > groupWidth) {\n      maxAbscissa.x.push(x[index]);\n      maxAbscissa.y.push(y[index]);\n      merged.x.push(x[index]);\n      merged.y.push(y[index]);\n      index++;\n      size++;\n    } else {\n      if (y[index] > maxAbscissa.y[size - 1]) {\n        maxAbscissa.x[size - 1] = x[index];\n        maxAbscissa.y[size - 1] = y[index];\n      }\n      merged.x[size - 1] = x[index];\n      merged.y[size - 1] += y[index];\n      index++;\n    }\n  }\n\n  merged.x = maxAbscissa.x.slice();\n\n  return merged;\n}\n","import binarySearch from 'binary-search';\nimport { asc, desc } from 'num-sort';\n\n/**\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {object} [options.from = {index: 0}]\n * @param {object} [options.to = {index: x.length-1}]\n * @param {boolean} [options.reverse = false]\n * @return {{index: number, value: number}}\n */\nexport default function maxY(points, options = {}) {\n  const { x, y } = points;\n  let {\n    from = { index: 0 },\n    to = { index: x.length },\n    reverse = false\n  } = options;\n\n  if (from.value !== undefined && from.index === undefined) {\n    from.index = calculateIndex(from.value, x, reverse);\n  }\n\n  if (to.value !== undefined && to.index === undefined) {\n    to.index = calculateIndex(to.value, x, reverse);\n  }\n\n  var currentMax = Number.MIN_VALUE;\n  var currentIndex;\n  for (var i = from.index; i < to.index; i++) {\n    if (currentMax < y[i]) {\n      currentMax = y[i];\n      currentIndex = i;\n    }\n  }\n\n  return {\n    index: currentIndex,\n    value: currentMax\n  };\n}\n\n/**\n * @param {number} value\n * @param {Array<number>} x\n * @param {boolean} reverse\n * @return {number} index of the value in the array\n */\nfunction calculateIndex(value, x, reverse) {\n  let index;\n  if (reverse) {\n    index = binarySearch(x, value, desc);\n  } else {\n    index = binarySearch(x, value, asc);\n  }\n\n  if (index < 0) {\n    throw new Error(`the value ${value} doesn't belongs to the abscissa value`);\n  }\n\n  return index;\n}\n","export default function sortX(points, options = {}) {\n  const { x, y } = points;\n  const { reverse = false } = options;\n\n  var sortFunc;\n  if (!reverse) {\n    sortFunc = (a, b) => a.x - b.x;\n  } else {\n    sortFunc = (a, b) => b.x - a.x;\n  }\n\n  var grouped = x\n    .map((val, index) => ({\n      x: val,\n      y: y[index]\n    }))\n    .sort(sortFunc);\n\n  var response = { x: x.slice(), y: y.slice() };\n  for (var i = 0; i < x.length; i++) {\n    response.x[i] = grouped[i].x;\n    response.y[i] = grouped[i].y;\n  }\n\n  return response;\n}\n","\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","/**\n * Merge abscissas values on similar ordinates and weight the group of abscissas\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {number} [options.groupWidth = 0.001] - window for abscissas to merge\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function weightedMerge(points, options = {}) {\n  const { x, y } = points;\n  const { groupWidth = 0.001 } = options;\n\n  var merged = { x: [], y: [] };\n  var weightedAbscissa = { x: [], y: [] };\n  var size = 0;\n  var index = 0;\n\n  while (index < x.length) {\n    if (size === 0 || x[index] - merged.x[size - 1] > groupWidth) {\n      weightedAbscissa.x.push(x[index] * y[index]);\n      weightedAbscissa.y.push(y[index]);\n      merged.x.push(x[index]);\n      merged.y.push(y[index]);\n      index++;\n      size++;\n    } else {\n      weightedAbscissa.x[size - 1] += x[index] * y[index];\n      weightedAbscissa.y[size - 1] += y[index];\n      merged.x[size - 1] = x[index];\n      merged.y[size - 1] += y[index];\n      index++;\n    }\n  }\n\n  for (var i = 0; i < merged.x.length; i++) {\n    merged.x[i] = weightedAbscissa.x[i] / weightedAbscissa.y[i];\n  }\n\n  return merged;\n}\n","export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n","export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n","'use strict';\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nconst defaultOptions = {\n    distanceFunction: squaredEuclidean\n};\nexport default function nearestVector(listVectors, vector, options = defaultOptions) {\n    const distanceFunction = options.distanceFunction || defaultOptions.distanceFunction;\n    const similarityFunction = options.similarityFunction || defaultOptions.similarityFunction;\n    let vectorIndex = -1;\n    if (typeof similarityFunction === 'function') {\n        // maximum similarity\n        let maxSim = Number.MIN_VALUE;\n        for (let j = 0; j < listVectors.length; j++) {\n            const sim = similarityFunction(vector, listVectors[j]);\n            if (sim > maxSim) {\n                maxSim = sim;\n                vectorIndex = j;\n            }\n        }\n    }\n    else if (typeof distanceFunction === 'function') {\n        // minimum distance\n        let minDist = Number.MAX_VALUE;\n        for (let i = 0; i < listVectors.length; i++) {\n            const dist = distanceFunction(vector, listVectors[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                vectorIndex = i;\n            }\n        }\n    }\n    else {\n        throw new Error(\"A similarity or distance function it's required\");\n    }\n    return vectorIndex;\n}\nexport function findNearestVector(vectorList, vector, options = defaultOptions) {\n    const index = nearestVector(vectorList, vector, options);\n    return vectorList[index];\n}\n","import nearestVector from 'ml-nearest-vector';\n\n/**\n * Calculates the distance matrix for a given array of points\n * @ignore\n * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n * @param {function} distance - Distance function to use between the points\n * @return {Array<Array<number>>} - matrix with the distance values\n */\nexport function calculateDistanceMatrix(data, distance) {\n  var distanceMatrix = new Array(data.length);\n  for (var i = 0; i < data.length; ++i) {\n    for (var j = i; j < data.length; ++j) {\n      if (!distanceMatrix[i]) {\n        distanceMatrix[i] = new Array(data.length);\n      }\n      if (!distanceMatrix[j]) {\n        distanceMatrix[j] = new Array(data.length);\n      }\n      const dist = distance(data[i], data[j]);\n      distanceMatrix[i][j] = dist;\n      distanceMatrix[j][i] = dist;\n    }\n  }\n  return distanceMatrix;\n}\n\n/**\n * Updates the cluster identifier based in the new data\n * @ignore\n * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n * @param {Array<Array<number>>} centers - the K centers in format [x,y,z,...]\n * @param {Array <number>} clusterID - the cluster identifier for each data dot\n * @param {function} distance - Distance function to use between the points\n * @return {Array} the cluster identifier for each data dot\n */\nexport function updateClusterID(data, centers, clusterID, distance) {\n  for (var i = 0; i < data.length; i++) {\n    clusterID[i] = nearestVector(centers, data[i], {\n      distanceFunction: distance\n    });\n  }\n  return clusterID;\n}\n\n/**\n * Update the center values based in the new configurations of the clusters\n * @ignore\n * @param {Array<Array<number>>} prevCenters - Centroids from the previous iteration\n * @param {Array <Array <number>>} data - the [x,y,z,...] points to cluster\n * @param {Array <number>} clusterID - the cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @return {Array} he K centers in format [x,y,z,...]\n */\nexport function updateCenters(prevCenters, data, clusterID, K) {\n  const nDim = data[0].length;\n\n  // copy previous centers\n  var centers = new Array(K);\n  var centersLen = new Array(K);\n  for (var i = 0; i < K; i++) {\n    centers[i] = new Array(nDim);\n    centersLen[i] = 0;\n    for (var j = 0; j < nDim; j++) {\n      centers[i][j] = 0;\n    }\n  }\n\n  // add the value for all dimensions of the point\n  for (var l = 0; l < data.length; l++) {\n    centersLen[clusterID[l]]++;\n    for (var dim = 0; dim < nDim; dim++) {\n      centers[clusterID[l]][dim] += data[l][dim];\n    }\n  }\n\n  // divides by length\n  for (var id = 0; id < K; id++) {\n    for (var d = 0; d < nDim; d++) {\n      if (centersLen[id]) {\n        centers[id][d] /= centersLen[id];\n      } else {\n        centers[id][d] = prevCenters[id][d];\n      }\n    }\n  }\n  return centers;\n}\n\n/**\n * The centers have moved more than the tolerance value?\n * @ignore\n * @param {Array<Array<number>>} centers - the K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} oldCenters - the K old centers in format [x,y,z,...]\n * @param {function} distanceFunction - Distance function to use between the points\n * @param {number} tolerance - Allowed distance for the centroids to move\n * @return {boolean}\n */\nexport function hasConverged(centers, oldCenters, distanceFunction, tolerance) {\n  for (var i = 0; i < centers.length; i++) {\n    if (distanceFunction(centers[i], oldCenters[i]) > tolerance) {\n      return false;\n    }\n  }\n  return true;\n}\n","import Random from 'ml-random';\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nimport { Matrix } from 'ml-matrix';\n\n/**\n * Choose K different random points from the original data\n * @ignore\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - number of clusters\n * @param {number} seed - seed for random number generation\n * @return {Array<Array<number>>} - Initial random points\n */\nexport function random(data, K, seed) {\n  const random = new Random(seed);\n  return random.choice(data, { size: K });\n}\n\n/**\n * Chooses the most distant points to a first random pick\n * @ignore\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - number of clusters\n * @param {Array<Array<number>>} distanceMatrix - matrix with the distance values\n * @param {number} seed - seed for random number generation\n * @return {Array<Array<number>>} - Initial random points\n */\nexport function mostDistant(data, K, distanceMatrix, seed) {\n  const random = new Random(seed);\n  var ans = new Array(K);\n  // chooses a random point as initial cluster\n  ans[0] = Math.floor(random.random() * data.length);\n\n  if (K > 1) {\n    // chooses the more distant point\n    var maxDist = { dist: -1, index: -1 };\n    for (var l = 0; l < data.length; ++l) {\n      if (distanceMatrix[ans[0]][l] > maxDist.dist) {\n        maxDist.dist = distanceMatrix[ans[0]][l];\n        maxDist.index = l;\n      }\n    }\n    ans[1] = maxDist.index;\n\n    if (K > 2) {\n      // chooses the set of points that maximises the min distance\n      for (var k = 2; k < K; ++k) {\n        var center = { dist: -1, index: -1 };\n        for (var m = 0; m < data.length; ++m) {\n          // minimum distance to centers\n          var minDistCent = { dist: Number.MAX_VALUE, index: -1 };\n          for (var n = 0; n < k; ++n) {\n            if (\n              distanceMatrix[n][m] < minDistCent.dist &&\n              ans.indexOf(m) === -1\n            ) {\n              minDistCent = {\n                dist: distanceMatrix[n][m],\n                index: m\n              };\n            }\n          }\n\n          if (\n            minDistCent.dist !== Number.MAX_VALUE &&\n            minDistCent.dist > center.dist\n          ) {\n            center = Object.assign({}, minDistCent);\n          }\n        }\n\n        ans[k] = center.index;\n      }\n    }\n  }\n\n  return ans.map((index) => data[index]);\n}\n\n// Implementation inspired from scikit\nexport function kmeanspp(X, K, options = {}) {\n  X = new Matrix(X);\n  const nSamples = X.length;\n  const random = new Random(options.seed);\n  // Set the number of trials\n  const centers = [];\n  const localTrials = options.localTrials || 2 + Math.floor(Math.log(K));\n\n  // Pick the first center at random from the dataset\n  const firstCenterIdx = random.randInt(nSamples);\n  centers.push(X[firstCenterIdx].slice());\n\n  // Init closest distances\n  let closestDistSquared = [X.map((x) => squaredEuclidean(x, centers[0]))];\n  let cumSumClosestDistSquared = [cumSum(closestDistSquared[0])];\n  const factor = 1 / cumSumClosestDistSquared[0][nSamples - 1];\n  let probabilities = Matrix.mul(closestDistSquared, factor);\n\n  // Iterate over the remaining centers\n  for (let i = 1; i < K; i++) {\n    const candidateIdx = random.choice(nSamples, {\n      replace: true,\n      size: localTrials,\n      probabilities: probabilities[0]\n    });\n\n    const candidates = X.selection(candidateIdx, range(X[0].length));\n    const distanceToCandidates = euclidianDistances(candidates, X);\n\n    let bestCandidate;\n    let bestPot;\n    let bestDistSquared;\n\n    for (let j = 0; j < localTrials; j++) {\n      const newDistSquared = Matrix.min(closestDistSquared, [distanceToCandidates[j]]);\n      const newPot = newDistSquared.sum();\n      if (bestCandidate === undefined || newPot < bestPot) {\n        bestCandidate = candidateIdx[j];\n        bestPot = newPot;\n        bestDistSquared = newDistSquared;\n      }\n    }\n    centers[i] = X[bestCandidate].slice();\n    closestDistSquared = bestDistSquared;\n    cumSumClosestDistSquared = [cumSum(closestDistSquared[0])];\n    probabilities = Matrix.mul(\n      closestDistSquared,\n      1 / cumSumClosestDistSquared[0][nSamples - 1]\n    );\n  }\n  return centers;\n}\n\nfunction euclidianDistances(A, B) {\n  const result = new Matrix(A.length, B.length);\n  for (let i = 0; i < A.length; i++) {\n    for (let j = 0; j < B.length; j++) {\n      result.set(i, j, squaredEuclidean(A.getRow(i), B.getRow(j)));\n    }\n  }\n  return result;\n}\n\nfunction range(l) {\n  let r = [];\n  for (let i = 0; i < l; i++) {\n    r.push(i);\n  }\n  return r;\n}\n\nfunction cumSum(arr) {\n  let cumSum = [arr[0]];\n  for (let i = 1; i < arr.length; i++) {\n    cumSum[i] = cumSum[i - 1] + arr[i];\n  }\n  return cumSum;\n}\n","import { updateClusterID } from './utils';\n\nconst distanceSymbol = Symbol('distance');\n\nexport default class KMeansResult {\n  /**\n   * Result of the kmeans algorithm\n   * @param {Array<number>} clusters - the cluster identifier for each data dot\n   * @param {Array<Array<object>>} centroids - the K centers in format [x,y,z,...], the error and size of the cluster\n   * @param {boolean} converged - Converge criteria satisfied\n   * @param {number} iterations - Current number of iterations\n   * @param {function} distance - (*Private*) Distance function to use between the points\n   * @constructor\n   */\n  constructor(clusters, centroids, converged, iterations, distance) {\n    this.clusters = clusters;\n    this.centroids = centroids;\n    this.converged = converged;\n    this.iterations = iterations;\n    this[distanceSymbol] = distance;\n  }\n\n  /**\n   * Allows to compute for a new array of points their cluster id\n   * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n   * @return {Array<number>} - cluster id for each point\n   */\n  nearest(data) {\n    const clusterID = new Array(data.length);\n    const centroids = this.centroids.map(function (centroid) {\n      return centroid.centroid;\n    });\n    return updateClusterID(data, centroids, clusterID, this[distanceSymbol]);\n  }\n\n  /**\n   * Returns a KMeansResult with the error and size of the cluster\n   * @ignore\n   * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n   * @return {KMeansResult}\n   */\n  computeInformation(data) {\n    var enrichedCentroids = this.centroids.map(function (centroid) {\n      return {\n        centroid: centroid,\n        error: 0,\n        size: 0\n      };\n    });\n\n    for (var i = 0; i < data.length; i++) {\n      enrichedCentroids[this.clusters[i]].error += this[distanceSymbol](\n        data[i],\n        this.centroids[this.clusters[i]]\n      );\n      enrichedCentroids[this.clusters[i]].size++;\n    }\n\n    for (var j = 0; j < this.centroids.length; j++) {\n      if (enrichedCentroids[j].size) {\n        enrichedCentroids[j].error /= enrichedCentroids[j].size;\n      } else {\n        enrichedCentroids[j].error = null;\n      }\n    }\n\n    return new KMeansResult(\n      this.clusters,\n      enrichedCentroids,\n      this.converged,\n      this.iterations,\n      this[distanceSymbol]\n    );\n  }\n}\n","import { squaredEuclidean } from 'ml-distance-euclidean';\n\nimport {\n  updateClusterID,\n  updateCenters,\n  hasConverged,\n  calculateDistanceMatrix\n} from './utils';\nimport { mostDistant, random, kmeanspp } from './initialization';\nimport KMeansResult from './KMeansResult';\n\nconst defaultOptions = {\n  maxIterations: 100,\n  tolerance: 1e-6,\n  withIterations: false,\n  initialization: 'kmeans++',\n  distanceFunction: squaredEuclidean\n};\n\n/**\n * Each step operation for kmeans\n * @ignore\n * @param {Array<Array<number>>} centers - K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} data - Points [x,y,z,...] to cluster\n * @param {Array<number>} clusterID - Cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n * @param {number} iterations - Current number of iterations\n * @return {KMeansResult}\n */\nfunction step(centers, data, clusterID, K, options, iterations) {\n  clusterID = updateClusterID(\n    data,\n    centers,\n    clusterID,\n    options.distanceFunction\n  );\n  var newCenters = updateCenters(centers, data, clusterID, K);\n  var converged = hasConverged(\n    newCenters,\n    centers,\n    options.distanceFunction,\n    options.tolerance\n  );\n  return new KMeansResult(\n    clusterID,\n    newCenters,\n    converged,\n    iterations,\n    options.distanceFunction\n  );\n}\n\n/**\n * Generator version for the algorithm\n * @ignore\n * @param {Array<Array<number>>} centers - K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} data - Points [x,y,z,...] to cluster\n * @param {Array<number>} clusterID - Cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n */\nfunction* kmeansGenerator(centers, data, clusterID, K, options) {\n  var converged = false;\n  var stepNumber = 0;\n  var stepResult;\n  while (!converged && stepNumber < options.maxIterations) {\n    stepResult = step(centers, data, clusterID, K, options, ++stepNumber);\n    yield stepResult.computeInformation(data);\n    converged = stepResult.converged;\n    centers = stepResult.centroids;\n  }\n}\n\n/**\n * K-means algorithm\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n * @param {number} [options.maxIterations = 100] - Maximum of iterations allowed\n * @param {number} [options.tolerance = 1e-6] - Error tolerance\n * @param {boolean} [options.withIterations = false] - Store clusters and centroids for each iteration\n * @param {function} [options.distanceFunction = squaredDistance] - Distance function to use between the points\n * @param {number} [options.seed] - Seed for random initialization.\n * @param {string|Array<Array<number>>} [options.initialization = 'kmeans++'] - K centers in format [x,y,z,...] or a method for initialize the data:\n *  * You can either specify your custom start centroids, or select one of the following initialization method:\n *  * `'kmeans++'` will use the kmeans++ method as described by http://ilpubs.stanford.edu:8090/778/1/2006-13.pdf\n *  * `'random'` will choose K random different values.\n *  * `'mostDistant'` will choose the more distant points to a first random pick\n * @return {KMeansResult} - Cluster identifier for each data dot and centroids with the following fields:\n *  * `'clusters'`: Array of indexes for the clusters.\n *  * `'centroids'`: Array with the resulting centroids.\n *  * `'iterations'`: Number of iterations that took to converge\n */\nexport default function kmeans(data, K, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  if (K <= 0 || K > data.length || !Number.isInteger(K)) {\n    throw new Error(\n      'K should be a positive integer smaller than the number of points'\n    );\n  }\n\n  var centers;\n  if (Array.isArray(options.initialization)) {\n    if (options.initialization.length !== K) {\n      throw new Error('The initial centers should have the same length as K');\n    } else {\n      centers = options.initialization;\n    }\n  } else {\n    switch (options.initialization) {\n      case 'kmeans++':\n        centers = kmeanspp(data, K, options);\n        break;\n      case 'random':\n        centers = random(data, K, options.seed);\n        break;\n      case 'mostDistant':\n        centers = mostDistant(\n          data,\n          K,\n          calculateDistanceMatrix(data, options.distanceFunction),\n          options.seed\n        );\n        break;\n      default:\n        throw new Error(\n          `Unknown initialization method: \"${options.initialization}\"`\n        );\n    }\n  }\n\n  // infinite loop until convergence\n  if (options.maxIterations === 0) {\n    options.maxIterations = Number.MAX_VALUE;\n  }\n\n  var clusterID = new Array(data.length);\n  if (options.withIterations) {\n    return kmeansGenerator(centers, data, clusterID, K, options);\n  } else {\n    var converged = false;\n    var stepNumber = 0;\n    var stepResult;\n    while (!converged && stepNumber < options.maxIterations) {\n      stepResult = step(centers, data, clusterID, K, options, ++stepNumber);\n      converged = stepResult.converged;\n      centers = stepResult.centroids;\n    }\n    return stepResult.computeInformation(data);\n  }\n}\n","import Random from 'random-js';\nimport Matrix from 'ml-matrix';\n\nexport function checkFloat(n) {\n  return n > 0.0 && n <= 1.0;\n}\n\n/**\n * Select n with replacement elements on the training set and values, where n is the size of the training set.\n * @ignore\n * @param {Matrix} trainingSet\n * @param {Array} trainingValue\n * @param {number} seed - seed for the random selection, must be a 32-bit integer.\n * @return {object} with new X and y.\n */\nexport function examplesBaggingWithReplacement(trainingSet, trainingValue, seed) {\n  var engine = Random.engines.mt19937();\n  var distribution = Random.integer(0, trainingSet.rows - 1);\n  if (seed === undefined) {\n    engine = engine.autoSeed();\n  } else if (Number.isInteger(seed)) {\n    engine = engine.seed(seed);\n  } else {\n    throw new RangeError(`Expected seed must be undefined or integer not ${seed}`);\n  }\n\n  var Xr = new Array(trainingSet.rows);\n  var yr = new Array(trainingSet.rows);\n\n  for (var i = 0; i < trainingSet.rows; ++i) {\n    var index = distribution(engine);\n    Xr[i] = trainingSet[index];\n    yr[i] = trainingValue[index];\n  }\n\n  return {\n    X: new Matrix(Xr),\n    y: yr\n  };\n}\n\n/**\n * selects n features from the training set with or without replacement, returns the new training set and the indexes used.\n * @ignore\n * @param {Matrix} trainingSet\n * @param {number} n - features.\n * @param {boolean} replacement\n * @param {number} seed - seed for the random selection, must be a 32-bit integer.\n * @return {object}\n */\nexport function featureBagging(trainingSet, n, replacement, seed) {\n  if (trainingSet.columns < n) {\n    throw new RangeError('N should be less or equal to the number of columns of X');\n  }\n\n  var distribution = Random.integer(0, trainingSet.columns - 1);\n  var engine = Random.engines.mt19937();\n  if (seed === undefined) {\n    engine = engine.autoSeed();\n  } else if (Number.isInteger(seed)) {\n    engine = engine.seed(seed);\n  } else {\n    throw new RangeError(`Expected seed must be undefined or integer not ${seed}`);\n  }\n\n  var toRet = new Matrix(trainingSet.rows, n);\n\n  if (replacement) {\n    var usedIndex = new Array(n);\n    for (var i = 0; i < n; ++i) {\n      var index = distribution(engine);\n      usedIndex[i] = index;\n      toRet.setColumn(i, trainingSet.getColumn(index));\n    }\n  } else {\n    usedIndex = new Set();\n    index = distribution(engine);\n    for (i = 0; i < n; ++i) {\n      while (usedIndex.has(index)) {\n        index = distribution(engine);\n      }\n      toRet.setColumn(i, trainingSet.getColumn(index));\n      usedIndex.add(index);\n    }\n    usedIndex = Array.from(usedIndex);\n  }\n\n  return {\n    X: toRet,\n    usedIndex: usedIndex\n  };\n}\n","import {\n  DecisionTreeClassifier as DTClassifier,\n  DecisionTreeRegression as DTRegression\n} from 'ml-cart';\nimport { Matrix, WrapperMatrix2D } from 'ml-matrix';\n\nimport * as Utils from './utils';\n\n/**\n * @class RandomForestBase\n */\nexport class RandomForestBase {\n  /**\n   * Create a new base random forest for a classifier or regression model.\n   * @constructor\n   * @param {object} options\n   * @param {number|String} [options.maxFeatures] - the number of features used on each estimator.\n   *        * if is an integer it selects maxFeatures elements over the sample features.\n   *        * if is a float between (0, 1), it takes the percentage of features.\n   * @param {boolean} [options.replacement] - use replacement over the sample features.\n   * @param {number} [options.seed] - seed for feature and samples selection, must be a 32-bit integer.\n   * @param {number} [options.nEstimators] - number of estimator to use.\n   * @param {object} [options.treeOptions] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n   * @param {boolean} [options.isClassifier] - boolean to check if is a classifier or regression model (used by subclasses).\n   * @param {boolean} [options.useSampleBagging] - use bagging over training samples.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.replacement = model.replacement;\n      this.maxFeatures = model.maxFeatures;\n      this.nEstimators = model.nEstimators;\n      this.treeOptions = model.treeOptions;\n      this.isClassifier = model.isClassifier;\n      this.seed = model.seed;\n      this.n = model.n;\n      this.indexes = model.indexes;\n      this.useSampleBagging = model.useSampleBagging;\n\n      var Estimator = this.isClassifier ? DTClassifier : DTRegression;\n      this.estimators = model.estimators.map((est) => Estimator.load(est));\n    } else {\n      this.replacement = options.replacement;\n      this.maxFeatures = options.maxFeatures;\n      this.nEstimators = options.nEstimators;\n      this.treeOptions = options.treeOptions;\n      this.isClassifier = options.isClassifier;\n      this.seed = options.seed;\n      this.useSampleBagging = options.useSampleBagging;\n    }\n  }\n\n  /**\n   * Train the decision tree with the given training set and labels.\n   * @param {Matrix|Array} trainingSet\n   * @param {Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n\n    this.maxFeatures = this.maxFeatures || trainingSet.columns;\n\n    if (Utils.checkFloat(this.maxFeatures)) {\n      this.n = Math.floor(trainingSet.columns * this.maxFeatures);\n    } else if (Number.isInteger(this.maxFeatures)) {\n      if (this.maxFeatures > trainingSet.columns) {\n        throw new RangeError(`The maxFeatures parameter should be less than ${trainingSet.columns}`);\n      } else {\n        this.n = this.maxFeatures;\n      }\n    } else {\n      throw new RangeError(`Cannot process the maxFeatures parameter ${this.maxFeatures}`);\n    }\n\n\n    if (this.isClassifier) {\n      var Estimator = DTClassifier;\n    } else {\n      Estimator = DTRegression;\n    }\n\n    this.estimators = new Array(this.nEstimators);\n    this.indexes = new Array(this.nEstimators);\n\n    for (var i = 0; i < this.nEstimators; ++i) {\n      var res = this.useSampleBagging ? Utils.examplesBaggingWithReplacement(trainingSet, trainingValues, this.seed) : { X: trainingSet, y: trainingValues };\n      var X = res.X;\n      var y = res.y;\n\n      res = Utils.featureBagging(X, this.n, this.replacement, this.seed);\n      X = res.X;\n\n      this.indexes[i] = res.usedIndex;\n      this.estimators[i] = new Estimator(this.treeOptions);\n      this.estimators[i].train(X, y);\n    }\n  }\n\n  /**\n   * Method that returns the way the algorithm generates the predictions, for example, in classification\n   * you can return the mode of all predictions retrieved by the trees, or in case of regression you can\n   * use the mean or the median.\n   * @abstract\n   * @param {Array} values - predictions of the estimators.\n   * @return {number} prediction.\n   */\n  // eslint-disable-next-line no-unused-vars\n  selection(values) {\n    throw new Error('Abstract method \\'selection\\' not implemented!');\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Matrix|Array} toPredict\n   * @return {Array} predictions\n   */\n  predict(toPredict) {\n    var predictionValues = new Array(this.nEstimators);\n    toPredict = Matrix.checkMatrix(toPredict);\n    for (var i = 0; i < this.nEstimators; ++i) {\n      var X = toPredict.columnSelectionView(this.indexes[i]); // get features for estimator\n      predictionValues[i] = this.estimators[i].predict(X);\n    }\n\n    predictionValues = new WrapperMatrix2D(predictionValues).transposeView();\n    var predictions = new Array(predictionValues.rows);\n    for (i = 0; i < predictionValues.rows; ++i) {\n      predictions[i] = this.selection(predictionValues.getRow(i));\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      indexes: this.indexes,\n      n: this.n,\n      replacement: this.replacement,\n      maxFeatures: this.maxFeatures,\n      nEstimators: this.nEstimators,\n      treeOptions: this.treeOptions,\n      isClassifier: this.isClassifier,\n      seed: this.seed,\n      estimators: this.estimators.map((est) => est.toJSON()),\n      useSampleBagging: this.useSampleBagging\n    };\n  }\n}\n","import { RandomForestBase } from './RandomForestBase';\n\nconst defaultOptions = {\n  maxFeatures: 1.0,\n  replacement: true,\n  nEstimators: 10,\n  seed: 42,\n  useSampleBagging: false\n};\n\n/**\n * @class RandomForestClassifier\n * @augments RandomForestBase\n */\nexport class RandomForestClassifier extends RandomForestBase {\n  /**\n     * Create a new base random forest for a classifier or regression model.\n     * @constructor\n     * @param {object} options\n     * @param {number} [options.maxFeatures=1.0] - the number of features used on each estimator.\n     *        * if is an integer it selects maxFeatures elements over the sample features.\n     *        * if is a float between (0, 1), it takes the percentage of features.\n     * @param {boolean} [options.replacement=true] - use replacement over the sample features.\n     * @param {number} [options.seed=42] - seed for feature and samples selection, must be a 32-bit integer.\n     * @param {number} [options.nEstimators=10] - number of estimator to use.\n     * @param {object} [options.treeOptions={}] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n     * @param {boolean} [options.useSampleBagging=false] - use bagging over training samples.\n     * @param {object} model - for load purposes.\n     */\n  constructor(options, model) {\n    if (options === true) {\n      super(true, model.baseModel);\n    } else {\n      options = Object.assign({}, defaultOptions, options);\n      options.isClassifier = true;\n      super(options);\n    }\n  }\n\n  /**\n     * retrieve the prediction given the selection method.\n     * @param {Array} values - predictions of the estimators.\n     * @return {number} prediction\n     */\n  selection(values) {\n    return mode(values);\n  }\n\n  /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n  toJSON() {\n    var baseModel = super.toJSON();\n    return {\n      baseModel: baseModel,\n      name: 'RFClassifier'\n    };\n  }\n\n  /**\n     * Load a Decision tree classifier with the given model.\n     * @param {object} model\n     * @return {RandomForestClassifier}\n     */\n  static load(model) {\n    if (model.name !== 'RFClassifier') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    return new RandomForestClassifier(true, model);\n  }\n}\n\n/**\n * Return the most repeated element on the array.\n * @param {Array} arr\n * @return {number} mode\n */\nfunction mode(arr) {\n  return arr.sort((a, b) =>\n    arr.filter((v) => v === a).length\n        - arr.filter((v) => v === b).length\n  ).pop();\n}\n","import arrayMean from 'ml-array-mean';\nimport arrayMedian from 'ml-array-median';\n\nimport { RandomForestBase } from './RandomForestBase';\n\nconst selectionMethods = {\n  mean: arrayMean,\n  median: arrayMedian\n};\n\nconst defaultOptions = {\n  maxFeatures: 1.0,\n  replacement: false,\n  nEstimators: 10,\n  treeOptions: {},\n  selectionMethod: 'mean',\n  seed: 42,\n  useSampleBagging: false\n};\n\n/**\n * @class RandomForestRegression\n * @augments RandomForestBase\n */\nexport class RandomForestRegression extends RandomForestBase {\n  /**\n     * Create a new base random forest for a classifier or regression model.\n     * @constructor\n     * @param {object} options\n     * @param {number} [options.maxFeatures=1.0] - the number of features used on each estimator.\n     *        * if is an integer it selects maxFeatures elements over the sample features.\n     *        * if is a float between (0, 1), it takes the percentage of features.\n     * @param {boolean} [options.replacement=true] - use replacement over the sample features.\n     * @param {number} [options.seed=42] - seed for feature and samples selection, must be a 32-bit integer.\n     * @param {number} [options.nEstimators=10] - number of estimator to use.\n     * @param {object} [options.treeOptions={}] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n     * @param {string} [options.selectionMethod=\"mean\"] - the way to calculate the prediction from estimators, \"mean\" and \"median\" are supported.\n     * @param {boolean} [options.useSampleBagging=false] - use bagging over training samples.\n     * @param {object} model - for load purposes.\n     */\n  constructor(options, model) {\n    if (options === true) {\n      super(true, model.baseModel);\n      this.selectionMethod = model.selectionMethod;\n    } else {\n      options = Object.assign({}, defaultOptions, options);\n\n      if (!(options.selectionMethod === 'mean' || options.selectionMethod === 'median')) {\n        throw new RangeError(`Unsupported selection method ${options.selectionMethod}`);\n      }\n\n      options.isClassifier = false;\n\n      super(options);\n      this.selectionMethod = options.selectionMethod;\n    }\n  }\n\n  /**\n     * retrieve the prediction given the selection method.\n     * @param {Array} values - predictions of the estimators.\n     * @return {number} prediction\n     */\n  selection(values) {\n    return selectionMethods[this.selectionMethod](values);\n  }\n\n  /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n  toJSON() {\n    var baseModel = super.toJSON();\n    return {\n      baseModel: baseModel,\n      selectionMethod: this.selectionMethod,\n      name: 'RFRegression'\n    };\n  }\n\n  /**\n     * Load a Decision tree classifier with the given model.\n     * @param {object} model\n     * @return {RandomForestRegression}\n     */\n  static load(model) {\n    if (model.name !== 'RFRegression') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    return new RandomForestRegression(true, model);\n  }\n}\n","export { RandomForestClassifier } from './RandomForestClassifier';\nexport { RandomForestRegression } from './RandomForestRegression';\n","import Matrix from 'ml-matrix';\nimport Stat from 'ml-stat/matrix';\n\n/**\n * @private\n * Function that given vector, returns his norm\n * @param {Vector} X\n * @return {number} Norm of the vector\n */\nexport function norm(X) {\n    return Math.sqrt(X.clone().apply(pow2array).sum());\n}\n\n/**\n * @private\n * Function that pow 2 each element of a Matrix or a Vector,\n * used in the apply method of the Matrix object\n * @param {number} i - index i.\n * @param {number} j - index j.\n * @return {Matrix} The Matrix object modified at the index i, j.\n * */\nexport function pow2array(i, j) {\n    this[i][j] = this[i][j] * this[i][j];\n    return this;\n}\n\n/**\n * @private\n * Function that normalize the dataset and return the means and\n * standard deviation of each feature.\n * @param {Matrix} dataset\n * @return {object} dataset normalized, means and standard deviations\n */\nexport function featureNormalize(dataset) {\n    var means = Stat.mean(dataset);\n    var std = Stat.standardDeviation(dataset, means, true);\n    var result = Matrix.checkMatrix(dataset).subRowVector(means);\n    return {result: result.divRowVector(std), means: means, std: std};\n}\n\n/**\n * @private\n * Function that initialize an array of matrices.\n * @param {Array} array\n * @param {boolean} isMatrix\n * @return {Array} array with the matrices initialized.\n */\nexport function initializeMatrices(array, isMatrix) {\n    if (isMatrix) {\n        for (var i = 0; i < array.length; ++i) {\n            for (var j = 0; j < array[i].length; ++j) {\n                var elem = array[i][j];\n                array[i][j] = elem !== null ? new Matrix(array[i][j]) : undefined;\n            }\n        }\n    } else {\n        for (i = 0; i < array.length; ++i) {\n            array[i] = new Matrix(array[i]);\n        }\n    }\n\n    return array;\n}\n","import Matrix from 'ml-matrix';\nimport Stat from 'ml-stat/matrix';\nimport * as Utils from './utils';\n\n/**\n * @class PLS\n */\nexport class PLS {\n\n    /**\n     * Constructor for Partial Least Squares (PLS)\n     * @param {object} options\n     * @param {number} [options.latentVectors] - Number of latent vector to get (if the algorithm doesn't find a good model below the tolerance)\n     * @param {number} [options.tolerance=1e-5]\n     * @param {boolean} [options.scale=true] - rescale dataset using mean.\n     * @param {object} model - for load purposes.\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.meanX = model.meanX;\n            this.stdDevX = model.stdDevX;\n            this.meanY = model.meanY;\n            this.stdDevY = model.stdDevY;\n            this.PBQ = Matrix.checkMatrix(model.PBQ);\n            this.R2X = model.R2X;\n            this.scale = model.scale;\n            this.scaleMethod = model.scaleMethod;\n            this.tolerance = model.tolerance;\n        } else {\n            var {\n                tolerance = 1e-5,\n                scale = true,\n            } = options;\n            this.tolerance = tolerance;\n            this.scale = scale;\n            this.latentVectors = options.latentVectors;\n        }\n    }\n\n    /**\n     * Fits the model with the given data and predictions, in this function is calculated the\n     * following outputs:\n     *\n     * T - Score matrix of X\n     * P - Loading matrix of X\n     * U - Score matrix of Y\n     * Q - Loading matrix of Y\n     * B - Matrix of regression coefficient\n     * W - Weight matrix of X\n     *\n     * @param {Matrix|Array} trainingSet\n     * @param {Matrix|Array} trainingValues\n     */\n    train(trainingSet, trainingValues) {\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        trainingValues = Matrix.checkMatrix(trainingValues);\n\n        if (trainingSet.length !== trainingValues.length) {\n            throw new RangeError('The number of X rows must be equal to the number of Y rows');\n        }\n\n        this.meanX = Stat.mean(trainingSet);\n        this.stdDevX = Stat.standardDeviation(trainingSet, this.meanX, true);\n        this.meanY = Stat.mean(trainingValues);\n        this.stdDevY = Stat.standardDeviation(trainingValues, this.meanY, true);\n\n        if (this.scale) { // here should be the ml-preprocess project\n            trainingSet = trainingSet.clone().subRowVector(this.meanX).divRowVector(this.stdDevX);\n            trainingValues = trainingValues.clone().subRowVector(this.meanY).divRowVector(this.stdDevY);\n        }\n\n        if (this.latentVectors === undefined) {\n            this.latentVectors = Math.min(trainingSet.length - 1, trainingSet[0].length);\n        }\n\n        var rx = trainingSet.rows;\n        var cx = trainingSet.columns;\n        var ry = trainingValues.rows;\n        var cy = trainingValues.columns;\n\n        var ssqXcal = trainingSet.clone().mul(trainingSet).sum(); // for the r²\n        var sumOfSquaresY = trainingValues.clone().mul(trainingValues).sum();\n\n        var tolerance = this.tolerance;\n        var n = this.latentVectors;\n        var T = Matrix.zeros(rx, n);\n        var P = Matrix.zeros(cx, n);\n        var U = Matrix.zeros(ry, n);\n        var Q = Matrix.zeros(cy, n);\n        var B = Matrix.zeros(n, n);\n        var W = P.clone();\n        var k = 0;\n\n        while (Utils.norm(trainingValues) > tolerance && k < n) {\n            var transposeX = trainingSet.transpose();\n            var transposeY = trainingValues.transpose();\n\n            var tIndex = maxSumColIndex(trainingSet.clone().mulM(trainingSet));\n            var uIndex = maxSumColIndex(trainingValues.clone().mulM(trainingValues));\n\n            var t1 = trainingSet.getColumnVector(tIndex);\n            var u = trainingValues.getColumnVector(uIndex);\n            var t = Matrix.zeros(rx, 1);\n\n            while (Utils.norm(t1.clone().sub(t)) > tolerance) {\n                var w = transposeX.mmul(u);\n                w.div(Utils.norm(w));\n                t = t1;\n                t1 = trainingSet.mmul(w);\n                var q = transposeY.mmul(t1);\n                q.div(Utils.norm(q));\n                u = trainingValues.mmul(q);\n            }\n\n            t = t1;\n            var num = transposeX.mmul(t);\n            var den = (t.transpose().mmul(t))[0][0];\n            var p = num.div(den);\n            var pnorm = Utils.norm(p);\n            p.div(pnorm);\n            t.mul(pnorm);\n            w.mul(pnorm);\n\n            num = u.transpose().mmul(t);\n            den = (t.transpose().mmul(t))[0][0];\n            var b = (num.div(den))[0][0];\n            trainingSet.sub(t.mmul(p.transpose()));\n            trainingValues.sub(t.clone().mul(b).mmul(q.transpose()));\n\n            T.setColumn(k, t);\n            P.setColumn(k, p);\n            U.setColumn(k, u);\n            Q.setColumn(k, q);\n            W.setColumn(k, w);\n\n            B[k][k] = b;\n            k++;\n        }\n\n        k--;\n        T = T.subMatrix(0, T.rows - 1, 0, k);\n        P = P.subMatrix(0, P.rows - 1, 0, k);\n        U = U.subMatrix(0, U.rows - 1, 0, k);\n        Q = Q.subMatrix(0, Q.rows - 1, 0, k);\n        W = W.subMatrix(0, W.rows - 1, 0, k);\n        B = B.subMatrix(0, k, 0, k);\n\n        // TODO: review of R2Y\n        //this.R2Y = t.transpose().mmul(t).mul(q[k][0]*q[k][0]).divS(ssqYcal)[0][0];\n        //\n        this.ssqYcal = sumOfSquaresY;\n        this.E = trainingSet;\n        this.F = trainingValues;\n        this.T = T;\n        this.P = P;\n        this.U = U;\n        this.Q = Q;\n        this.W = W;\n        this.B = B;\n        this.PBQ = P.mmul(B).mmul(Q.transpose());\n        this.R2X = t.transpose().mmul(t).mmul(p.transpose().mmul(p)).div(ssqXcal)[0][0];\n    }\n\n    /**\n     * Predicts the behavior of the given dataset.\n     * @param {Matrix|Array} dataset - data to be predicted.\n     * @return {Matrix} - predictions of each element of the dataset.\n     */\n    predict(dataset) {\n        var X = Matrix.checkMatrix(dataset);\n        if (this.scale) {\n            X = X.subRowVector(this.meanX).divRowVector(this.stdDevX);\n        }\n        var Y = X.mmul(this.PBQ);\n        Y = Y.mulRowVector(this.stdDevY).addRowVector(this.meanY);\n        return Y;\n    }\n\n    /**\n     * Returns the explained variance on training of the PLS model\n     * @return {number}\n     */\n    getExplainedVariance() {\n        return this.R2X;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            name: 'PLS',\n            R2X: this.R2X,\n            meanX: this.meanX,\n            stdDevX: this.stdDevX,\n            meanY: this.meanY,\n            stdDevY: this.stdDevY,\n            PBQ: this.PBQ,\n            tolerance: this.tolerance,\n            scale: this.scale,\n        };\n    }\n\n    /**\n     * Load a PLS model from a JSON Object\n     * @param {object} model\n     * @return {PLS} - PLS object from the given model\n     */\n    static load(model) {\n        if (model.name !== 'PLS') {\n            throw new RangeError('Invalid model: ' + model.name);\n        }\n        return new PLS(true, model);\n    }\n}\n\n/**\n * @private\n * Function that returns the index where the sum of each\n * column vector is maximum.\n * @param {Matrix} data\n * @return {number} index of the maximum\n */\nfunction maxSumColIndex(data) {\n    return data.sum('column').maxIndex()[0];\n}\n","import {Matrix, SingularValueDecomposition, inverse} from 'ml-matrix';\nimport {initializeMatrices} from './utils';\n\n/**\n * @class KOPLS\n */\nexport class KOPLS {\n\n    /**\n     * Constructor for Kernel-based Orthogonal Projections to Latent Structures (K-OPLS)\n     * @param {object} options\n     * @param {number} [options.predictiveComponents] - Number of predictive components to use.\n     * @param {number} [options.orthogonalComponents] - Number of Y-Orthogonal components.\n     * @param {Kernel} [options.kernel] - Kernel object to apply, see [ml-kernel](https://github.com/mljs/kernel).\n     * @param {object} model - for load purposes.\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.trainingSet = new Matrix(model.trainingSet);\n            this.YLoadingMat = new Matrix(model.YLoadingMat);\n            this.SigmaPow = new Matrix(model.SigmaPow);\n            this.YScoreMat = new Matrix(model.YScoreMat);\n            this.predScoreMat = initializeMatrices(model.predScoreMat, false);\n            this.YOrthLoadingVec = initializeMatrices(model.YOrthLoadingVec, false);\n            this.YOrthEigen = model.YOrthEigen;\n            this.YOrthScoreMat = initializeMatrices(model.YOrthScoreMat, false);\n            this.toNorm = initializeMatrices(model.toNorm, false);\n            this.TURegressionCoeff = initializeMatrices(model.TURegressionCoeff, false);\n            this.kernelX = initializeMatrices(model.kernelX, true);\n            this.kernel = model.kernel;\n            this.orthogonalComp = model.orthogonalComp;\n            this.predictiveComp = model.predictiveComp;\n        } else {\n            if (options.predictiveComponents === undefined) {\n                throw new RangeError('no predictive components found!');\n            }\n            if (options.orthogonalComponents === undefined) {\n                throw new RangeError('no orthogonal components found!');\n            }\n            if (options.kernel === undefined) {\n                throw new RangeError('no kernel found!');\n            }\n\n            this.orthogonalComp = options.orthogonalComponents;\n            this.predictiveComp = options.predictiveComponents;\n            this.kernel = options.kernel;\n        }\n    }\n\n    /**\n     * Train the K-OPLS model with the given training set and labels.\n     * @param {Matrix|Array} trainingSet\n     * @param {Matrix|Array} trainingValues\n     */\n    train(trainingSet, trainingValues) {\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        trainingValues = Matrix.checkMatrix(trainingValues);\n\n        // to save and compute kernel with the prediction dataset.\n        this.trainingSet = trainingSet.clone();\n\n        var kernelX = this.kernel.compute(trainingSet);\n\n        var Identity = Matrix.eye(kernelX.rows, kernelX.rows, 1);\n        var temp = kernelX;\n        kernelX = new Matrix(this.orthogonalComp + 1, this.orthogonalComp + 1);\n        kernelX[0][0] = temp;\n\n        var result = new SingularValueDecomposition(trainingValues.transpose().mmul(kernelX[0][0]).mmul(trainingValues), {\n            computeLeftSingularVectors: true,\n            computeRightSingularVectors: false\n        });\n        var YLoadingMat = result.leftSingularVectors;\n        var Sigma = result.diagonalMatrix;\n\n        YLoadingMat = YLoadingMat.subMatrix(0, YLoadingMat.rows - 1, 0, this.predictiveComp - 1);\n        Sigma = Sigma.subMatrix(0, this.predictiveComp - 1, 0, this.predictiveComp - 1);\n\n        var YScoreMat = trainingValues.mmul(YLoadingMat);\n\n        var predScoreMat = new Array(this.orthogonalComp + 1);\n        var TURegressionCoeff = new Array(this.orthogonalComp + 1);\n        var YOrthScoreMat = new Array(this.orthogonalComp);\n        var YOrthLoadingVec = new Array(this.orthogonalComp);\n        var YOrthEigen = new Array(this.orthogonalComp);\n        var YOrthScoreNorm = new Array(this.orthogonalComp);\n\n        var SigmaPow = Matrix.pow(Sigma, -0.5);\n        // to avoid errors, check infinity\n        SigmaPow.apply(function (i, j) {\n            if (this[i][j] === Infinity) {\n                this[i][j] = 0.0;\n            }\n        });\n\n        for (var i = 0; i < this.orthogonalComp; ++i) {\n            predScoreMat[i] = kernelX[0][i].transpose().mmul(YScoreMat).mmul(SigmaPow);\n\n            var TpiPrime = predScoreMat[i].transpose();\n            TURegressionCoeff[i] = inverse(TpiPrime.mmul(predScoreMat[i])).mmul(TpiPrime).mmul(YScoreMat);\n\n            result = new SingularValueDecomposition(TpiPrime.mmul(Matrix.sub(kernelX[i][i], predScoreMat[i].mmul(TpiPrime))).mmul(predScoreMat[i]), {\n                computeLeftSingularVectors: true,\n                computeRightSingularVectors: false\n            });\n            var CoTemp = result.leftSingularVectors;\n            var SoTemp = result.diagonalMatrix;\n\n            YOrthLoadingVec[i] = CoTemp.subMatrix(0, CoTemp.rows - 1, 0, 0);\n            YOrthEigen[i] = SoTemp[0][0];\n\n            YOrthScoreMat[i] = Matrix.sub(kernelX[i][i], predScoreMat[i].mmul(TpiPrime)).mmul(predScoreMat[i]).mmul(YOrthLoadingVec[i]).mul(Math.pow(YOrthEigen[i], -0.5));\n\n            var toiPrime = YOrthScoreMat[i].transpose();\n            YOrthScoreNorm[i] = Matrix.sqrt(toiPrime.mmul(YOrthScoreMat[i]));\n\n            YOrthScoreMat[i] = YOrthScoreMat[i].divRowVector(YOrthScoreNorm[i]);\n\n            var ITo = Matrix.sub(Identity, YOrthScoreMat[i].mmul(YOrthScoreMat[i].transpose()));\n\n            kernelX[0][i + 1] = kernelX[0][i].mmul(ITo);\n            kernelX[i + 1][i + 1] = ITo.mmul(kernelX[i][i]).mmul(ITo);\n        }\n\n        var lastScoreMat = predScoreMat[this.orthogonalComp] = kernelX[0][this.orthogonalComp].transpose().mmul(YScoreMat).mmul(SigmaPow);\n\n        var lastTpPrime = lastScoreMat.transpose();\n        TURegressionCoeff[this.orthogonalComp] = inverse(lastTpPrime.mmul(lastScoreMat)).mmul(lastTpPrime).mmul(YScoreMat);\n\n        this.YLoadingMat = YLoadingMat;\n        this.SigmaPow = SigmaPow;\n        this.YScoreMat = YScoreMat;\n        this.predScoreMat = predScoreMat;\n        this.YOrthLoadingVec = YOrthLoadingVec;\n        this.YOrthEigen = YOrthEigen;\n        this.YOrthScoreMat = YOrthScoreMat;\n        this.toNorm = YOrthScoreNorm;\n        this.TURegressionCoeff = TURegressionCoeff;\n        this.kernelX = kernelX;\n    }\n\n    /**\n     * Predicts the output given the matrix to predict.\n     * @param {Matrix|Array} toPredict\n     * @return {{y: Matrix, predScoreMat: Array<Matrix>, predYOrthVectors: Array<Matrix>}} predictions\n     */\n    predict(toPredict) {\n\n        var KTestTrain = this.kernel.compute(toPredict, this.trainingSet);\n\n        var temp = KTestTrain;\n        KTestTrain = new Matrix(this.orthogonalComp + 1, this.orthogonalComp + 1);\n        KTestTrain[0][0] = temp;\n\n        var YOrthScoreVector = new Array(this.orthogonalComp);\n        var predScoreMat = new Array(this.orthogonalComp);\n\n        var i;\n        for (i = 0; i < this.orthogonalComp; ++i) {\n            predScoreMat[i] = KTestTrain[i][0].mmul(this.YScoreMat).mmul(this.SigmaPow);\n\n            YOrthScoreVector[i] = Matrix.sub(KTestTrain[i][i], predScoreMat[i].mmul(this.predScoreMat[i].transpose())).mmul(this.predScoreMat[i]).mmul(this.YOrthLoadingVec[i]).mul(Math.pow(this.YOrthEigen[i], -0.5));\n\n            YOrthScoreVector[i] = YOrthScoreVector[i].divRowVector(this.toNorm[i]);\n\n            var scoreMatPrime = this.YOrthScoreMat[i].transpose();\n            KTestTrain[i + 1][0] = Matrix.sub(KTestTrain[i][0], YOrthScoreVector[i].mmul(scoreMatPrime).mmul(this.kernelX[0][i].transpose()));\n\n            var p1 = Matrix.sub(KTestTrain[i][0], KTestTrain[i][i].mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime));\n            var p2 = YOrthScoreVector[i].mmul(scoreMatPrime).mmul(this.kernelX[i][i]);\n            var p3 = p2.mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime);\n\n            KTestTrain[i + 1][i + 1] = p1.sub(p2).add(p3);\n        }\n\n        predScoreMat[i] = KTestTrain[i][0].mmul(this.YScoreMat).mmul(this.SigmaPow);\n        var prediction = predScoreMat[i].mmul(this.TURegressionCoeff[i]).mmul(this.YLoadingMat.transpose());\n\n        return {\n            prediction: prediction,\n            predScoreMat: predScoreMat,\n            predYOrthVectors: YOrthScoreVector\n        };\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            name: 'K-OPLS',\n            YLoadingMat: this.YLoadingMat,\n            SigmaPow: this.SigmaPow,\n            YScoreMat: this.YScoreMat,\n            predScoreMat: this.predScoreMat,\n            YOrthLoadingVec: this.YOrthLoadingVec,\n            YOrthEigen: this.YOrthEigen,\n            YOrthScoreMat: this.YOrthScoreMat,\n            toNorm: this.toNorm,\n            TURegressionCoeff: this.TURegressionCoeff,\n            kernelX: this.kernelX,\n            trainingSet: this.trainingSet,\n            orthogonalComp: this.orthogonalComp,\n            predictiveComp: this.predictiveComp\n        };\n    }\n\n    /**\n     * Load a K-OPLS with the given model.\n     * @param {object} model\n     * @param {Kernel} kernel - kernel used on the model, see [ml-kernel](https://github.com/mljs/kernel).\n     * @return {KOPLS}\n     */\n    static load(model, kernel) {\n        if (model.name !== 'K-OPLS') {\n            throw new RangeError('Invalid model: ' + model.name);\n        }\n\n        if (!kernel) {\n            throw new RangeError('You must provide a kernel for the model!');\n        }\n\n        model.kernel = kernel;\n        return new KOPLS(true, model);\n    }\n}\n","export {PLS} from './pls';\nexport {KOPLS} from './kopls';\n","import Matrix from 'ml-matrix';\n\n/**\n * @private\n * Function that retuns an array of matrices of the cases that belong to each class.\n * @param {Matrix} X - dataset\n * @param {Array} y - predictions\n * @return {Array}\n */\nexport function separateClasses(X, y) {\n    var features = X.columns;\n\n    var classes = 0;\n    var totalPerClasses = new Array(10000); // max upperbound of classes\n    for (var i = 0; i < y.length; i++) {\n        if (totalPerClasses[y[i]] === undefined) {\n            totalPerClasses[y[i]] = 0;\n            classes++;\n        }\n        totalPerClasses[y[i]]++;\n    }\n    var separatedClasses = new Array(classes);\n    var currentIndex = new Array(classes);\n    for (i = 0; i < classes; ++i) {\n        separatedClasses[i] = new Matrix(totalPerClasses[i], features);\n        currentIndex[i] = 0;\n    }\n    for (i = 0; i < X.rows; ++i) {\n        separatedClasses[y[i]].setRow(currentIndex[y[i]], X.getRow(i));\n        currentIndex[y[i]]++;\n    }\n    return separatedClasses;\n}\n","import Matrix from 'ml-matrix';\nimport Stat from 'ml-stat';\nimport {separateClasses} from './utils';\n\n/**\n * @class GaussianNB\n */\nexport class GaussianNB {\n\n    /**\n     * @constructor\n     * Constructor for the Gaussian Naive Bayes classifier, the parameters here is just for loading purposes.\n     *\n     * @param {boolean} reload\n     * @param {object} model\n     */\n    constructor(reload, model) {\n        if (reload) {\n            this.means = model.means;\n            this.calculateProbabilities = model.calculateProbabilities;\n        }\n    }\n\n    /**\n     * Function that trains the classifier with a matrix that represents the training set and an array that\n     * represents the label of each row in the training set. the labels must be numbers between 0 to n-1 where\n     * n represents the number of classes.\n     *\n     * WARNING: in the case that one class, all the cases in one or more features have the same value, the\n     * Naive Bayes classifier will not work well.\n     * @param {Matrix|Array} trainingSet\n     * @param {Matrix|Array} trainingLabels\n     */\n    train(trainingSet, trainingLabels) {\n        var C1 = Math.sqrt(2 * Math.PI); // constant to precalculate the squared root\n        trainingSet = Matrix.checkMatrix(trainingSet);//if (!Matrix.isMatrix(trainingSet)) trainingSet = new Matrix(trainingSet);\n\n        if (trainingSet.rows !== trainingLabels.length) {\n            throw new RangeError('the size of the training set and the training labels must be the same.');\n        }\n\n        var separatedClasses = separateClasses(trainingSet, trainingLabels);\n        var calculateProbabilities = new Array(separatedClasses.length);\n        this.means = new Array(separatedClasses.length);\n        for (var i = 0; i < separatedClasses.length; ++i) {\n            var means = Stat.matrix.mean(separatedClasses[i]);\n            var std = Stat.matrix.standardDeviation(separatedClasses[i], means);\n\n            var logPriorProbability = Math.log(separatedClasses[i].rows / trainingSet.rows);\n            calculateProbabilities[i] = new Array(means.length + 1);\n\n            calculateProbabilities[i][0] = logPriorProbability;\n            for (var j = 1; j < means.length + 1; ++j) {\n                var currentStd = std[j - 1];\n                calculateProbabilities[i][j] = [(1 / (C1 * currentStd)), -2 * currentStd * currentStd];\n            }\n\n            this.means[i] = means;\n        }\n\n        this.calculateProbabilities = calculateProbabilities;\n    }\n\n    /**\n     * function that predicts each row of the dataset (must be a matrix).\n     *\n     * @param {Matrix|Array} dataset\n     * @return {Array}\n     */\n    predict(dataset) {\n        if (dataset[0].length === this.calculateProbabilities[0].length) {\n            throw new RangeError('the dataset must have the same features as the training set');\n        }\n\n        var predictions = new Array(dataset.length);\n\n        for (var i = 0; i < predictions.length; ++i) {\n            predictions[i] = getCurrentClass(dataset[i], this.means, this.calculateProbabilities);\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Function that export the NaiveBayes model.\n     * @return {object}\n     */\n    toJSON() {\n        return {\n            modelName: 'NaiveBayes',\n            means: this.means,\n            calculateProbabilities: this.calculateProbabilities\n        };\n    }\n\n    /**\n     * Function that create a GaussianNB classifier with the given model.\n     * @param {object} model\n     * @return {GaussianNB}\n     */\n    static load(model) {\n        if (model.modelName !== 'NaiveBayes') {\n            throw new RangeError('The current model is not a Multinomial Naive Bayes, current model:', model.name);\n        }\n\n        return new GaussianNB(true, model);\n    }\n}\n\n/**\n * @private\n * Function the retrieves a prediction with one case.\n *\n * @param {Array} currentCase\n * @param {Array} mean - Precalculated means of each class trained\n * @param {Array} classes - Precalculated value of each class (Prior probability and probability function of each feature)\n * @return {number}\n */\nfunction getCurrentClass(currentCase, mean, classes) {\n    var maxProbability = 0;\n    var predictedClass = -1;\n\n    // going through all precalculated values for the classes\n    for (var i = 0; i < classes.length; ++i) {\n        var currentProbability = classes[i][0]; // initialize with the prior probability\n        for (var j = 1; j < classes[0][1].length + 1; ++j) {\n            currentProbability += calculateLogProbability(currentCase[j - 1], mean[i][j - 1], classes[i][j][0], classes[i][j][1]);\n        }\n\n        currentProbability = Math.exp(currentProbability);\n        if (currentProbability > maxProbability) {\n            maxProbability = currentProbability;\n            predictedClass = i;\n        }\n    }\n\n    return predictedClass;\n}\n\n/**\n * @private\n * function that retrieves the probability of the feature given the class.\n * @param {number} value - value of the feature.\n * @param {number} mean - mean of the feature for the given class.\n * @param {number} C1 - precalculated value of (1 / (sqrt(2*pi) * std)).\n * @param {number} C2 - precalculated value of (2 * std^2) for the denominator of the exponential.\n * @return {number}\n */\nfunction calculateLogProbability(value, mean, C1, C2) {\n    value = value - mean;\n    return Math.log(C1 * Math.exp((value * value) / C2));\n}\n","import Matrix from 'ml-matrix';\nimport {separateClasses} from './utils';\n\n/**\n * @class MultinomialNB\n */\nexport class MultinomialNB {\n\n    /**\n     * @constructor\n     * Constructor for Multinomial Naive Bayes, the model parameter is for load purposes.\n     *\n     * @param {object} model - for load purposes.\n     */\n    constructor(model) {\n        if (model) {\n            this.conditionalProbability = Matrix.checkMatrix(model.conditionalProbability);\n            this.priorProbability = Matrix.checkMatrix(model.priorProbability);\n        }\n    }\n\n    /**\n     * Train the classifier with the current training set and labels, the labels must be numbers between 0 and n.\n     * @param {Matrix|Array} trainingSet\n     * @param {Array} trainingLabels\n     */\n    train(trainingSet, trainingLabels) {\n        trainingSet = Matrix.checkMatrix(trainingSet);\n\n        if (trainingSet.rows !== trainingLabels.length) {\n            throw new RangeError('the size of the training set and the training labels must be the same.');\n        }\n\n        var separateClass = separateClasses(trainingSet, trainingLabels);\n        this.priorProbability = new Matrix(separateClass.length, 1);\n\n        for (var i = 0; i < separateClass.length; ++i) {\n            this.priorProbability[i][0] = Math.log(separateClass[i].length / trainingSet.rows);\n        }\n\n        var features = trainingSet.columns;\n        this.conditionalProbability = new Matrix(separateClass.length, features);\n        for (i = 0; i < separateClass.length; ++i) {\n            var classValues = Matrix.checkMatrix(separateClass[i]);\n            var total = classValues.sum();\n            var divisor = total + features;\n            this.conditionalProbability.setRow(i, classValues.sum('column').add(1).div(divisor).apply(matrixLog));\n        }\n    }\n\n    /**\n     * Retrieves the predictions for the dataset with the current model.\n     * @param {Matrix|Array} dataset\n     * @return {Array} - predictions from the dataset.\n     */\n    predict(dataset) {\n        dataset = Matrix.checkMatrix(dataset);\n        var predictions = new Array(dataset.rows);\n        for (var i = 0; i < dataset.rows; ++i) {\n            var currentElement = dataset.getRowVector(i);\n            predictions[i] = this.conditionalProbability.clone().mulRowVector(currentElement).sum('row')\n                .add(this.priorProbability).maxIndex()[0];\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Function that saves the current model.\n     * @return {object} - model in JSON format.\n     */\n    toJSON() {\n        return {\n            name: 'MultinomialNB',\n            priorProbability: this.priorProbability,\n            conditionalProbability: this.conditionalProbability\n        };\n    }\n\n    /**\n     * Creates a new MultinomialNB from the given model\n     * @param {object} model\n     * @return {MultinomialNB}\n     */\n    static load(model) {\n        if (model.name !== 'MultinomialNB') {\n            throw new RangeError(`${model.name} is not a Multinomial Naive Bayes`);\n        }\n\n        return new MultinomialNB(model);\n    }\n}\n\nfunction matrixLog(i, j) {\n    this[i][j] = Math.log(this[i][j]);\n}\n","export {GaussianNB} from './GaussianNB';\nexport {MultinomialNB} from './MultinomialNB';\n","/*\n * Original code from:\n *\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */\n\nfunction Node(obj, dimension, parent) {\n    this.obj = obj;\n    this.left = null;\n    this.right = null;\n    this.parent = parent;\n    this.dimension = dimension;\n}\n\nexport default class KDTree {\n    constructor(points, metric) {\n        // If points is not an array, assume we're loading a pre-built tree\n        if (!Array.isArray(points)) {\n            this.dimensions = points.dimensions;\n            this.root = points;\n            restoreParent(this.root);\n        } else {\n            this.dimensions = new Array(points[0].length);\n            for (var i = 0; i < this.dimensions.length; i++) {\n                this.dimensions[i] = i;\n            }\n            this.root = buildTree(points, 0, null, this.dimensions);\n        }\n        this.metric = metric;\n    }\n\n    // Convert to a JSON serializable structure; this just requires removing\n    // the `parent` property\n    toJSON() {\n        const result = toJSONImpl(this.root, true);\n        result.dimensions = this.dimensions;\n        return result;\n    }\n\n    nearest(point, maxNodes, maxDistance) {\n        const metric = this.metric;\n        const dimensions = this.dimensions;\n        var i;\n\n        const bestNodes = new BinaryHeap(\n            function (e) {\n                return -e[1];\n            }\n        );\n\n        function nearestSearch(node) {\n            const dimension = dimensions[node.dimension];\n            const ownDistance = metric(point, node.obj);\n            const linearPoint = {};\n            var bestChild,\n                linearDistance,\n                otherChild,\n                i;\n\n            function saveNode(node, distance) {\n                bestNodes.push([node, distance]);\n                if (bestNodes.size() > maxNodes) {\n                    bestNodes.pop();\n                }\n            }\n\n            for (i = 0; i < dimensions.length; i += 1) {\n                if (i === node.dimension) {\n                    linearPoint[dimensions[i]] = point[dimensions[i]];\n                } else {\n                    linearPoint[dimensions[i]] = node.obj[dimensions[i]];\n                }\n            }\n\n            linearDistance = metric(linearPoint, node.obj);\n\n            if (node.right === null && node.left === null) {\n                if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n                    saveNode(node, ownDistance);\n                }\n                return;\n            }\n\n            if (node.right === null) {\n                bestChild = node.left;\n            } else if (node.left === null) {\n                bestChild = node.right;\n            } else {\n                if (point[dimension] < node.obj[dimension]) {\n                    bestChild = node.left;\n                } else {\n                    bestChild = node.right;\n                }\n            }\n\n            nearestSearch(bestChild);\n\n            if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n                saveNode(node, ownDistance);\n            }\n\n            if (bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[1]) {\n                if (bestChild === node.left) {\n                    otherChild = node.right;\n                } else {\n                    otherChild = node.left;\n                }\n                if (otherChild !== null) {\n                    nearestSearch(otherChild);\n                }\n            }\n        }\n\n        if (maxDistance) {\n            for (i = 0; i < maxNodes; i += 1) {\n                bestNodes.push([null, maxDistance]);\n            }\n        }\n\n        if (this.root) {\n            nearestSearch(this.root);\n        }\n\n        const result = [];\n        for (i = 0; i < Math.min(maxNodes, bestNodes.content.length); i += 1) {\n            if (bestNodes.content[i][0]) {\n                result.push([bestNodes.content[i][0].obj, bestNodes.content[i][1]]);\n            }\n        }\n        return result;\n    }\n}\n\nfunction toJSONImpl(src) {\n    const dest = new Node(src.obj, src.dimension, null);\n    if (src.left) dest.left = toJSONImpl(src.left);\n    if (src.right) dest.right = toJSONImpl(src.right);\n    return dest;\n}\n\nfunction buildTree(points, depth, parent, dimensions) {\n    const dim = depth % dimensions.length;\n\n    if (points.length === 0) {\n        return null;\n    }\n    if (points.length === 1) {\n        return new Node(points[0], dim, parent);\n    }\n\n    points.sort((a, b) => a[dimensions[dim]] - b[dimensions[dim]]);\n\n    const median = Math.floor(points.length / 2);\n    const node = new Node(points[median], dim, parent);\n    node.left = buildTree(points.slice(0, median), depth + 1, node, dimensions);\n    node.right = buildTree(points.slice(median + 1), depth + 1, node, dimensions);\n\n    return node;\n}\n\nfunction restoreParent(root) {\n    if (root.left) {\n        root.left.parent = root;\n        restoreParent(root.left);\n    }\n\n    if (root.right) {\n        root.right.parent = root;\n        restoreParent(root.right);\n    }\n}\n\n// Binary heap implementation from:\n// http://eloquentjavascript.net/appendix2.html\nclass BinaryHeap {\n    constructor(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n\n    push(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n        // Allow it to bubble up.\n        this.bubbleUp(this.content.length - 1);\n    }\n\n    pop() {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it sink down.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.sinkDown(0);\n        }\n        return result;\n    }\n\n    peek() {\n        return this.content[0];\n    }\n\n    size() {\n        return this.content.length;\n    }\n\n    bubbleUp(n) {\n        // Fetch the element that has to be moved.\n        var element = this.content[n];\n        // When at 0, an element can not go up any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = Math.floor((n + 1) / 2) - 1;\n            const parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            } else { // Found a parent that is less, no need to move it further.\n                break;\n            }\n        }\n    }\n\n    sinkDown(n) {\n        // Look up the target element and its score.\n        var length = this.content.length;\n        var element = this.content[n];\n        var elemScore = this.scoreFunction(element);\n\n        while (true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) * 2;\n            var child1N = child2N - 1;\n            // This is used to store the new position of the element,\n            // if any.\n            var swap = null;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                var child1Score = this.scoreFunction(child1);\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N];\n                var child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            } else {\n                // Otherwise, we are done.\n                break;\n            }\n        }\n    }\n}\n","import KDTree from './KDTree';\nimport euclideanDistance from 'ml-distance-euclidean';\n\nexport default class KNN {\n\n    /**\n     * @param {Array} dataset\n     * @param {Array} labels\n     * @param {object} options\n     * @param {number} [options.k=numberOfClasses + 1] - Number of neighbors to classify.\n     * @param {function} [options.distance=euclideanDistance] - Distance function that takes two parameters.\n     */\n    constructor(dataset, labels, options = {}) {\n        if (dataset === true) {\n            const model = labels;\n            this.kdTree = new KDTree(model.kdTree, options);\n            this.k = model.k;\n            this.classes = new Set(model.classes);\n            this.isEuclidean = model.isEuclidean;\n            return;\n        }\n\n        const classes = new Set(labels);\n\n        const {\n            distance = euclideanDistance,\n            k = classes.size + 1\n        } = options;\n\n        const points = new Array(dataset.length);\n        for (var i = 0; i < points.length; ++i) {\n            points[i] = dataset[i].slice();\n        }\n\n        for (i = 0; i < labels.length; ++i) {\n            points[i].push(labels[i]);\n        }\n\n        this.kdTree = new KDTree(points, distance);\n        this.k = k;\n        this.classes = classes;\n        this.isEuclidean = distance === euclideanDistance;\n    }\n\n    /**\n     * Create a new KNN instance with the given model.\n     * @param {object} model\n     * @param {function} distance=euclideanDistance - distance function must be provided if the model wasn't trained with euclidean distance.\n     * @return {KNN}\n     */\n    static load(model, distance = euclideanDistance) {\n        if (model.name !== 'KNN') {\n            throw new Error('invalid model: ' + model.name);\n        }\n        if (!model.isEuclidean && distance === euclideanDistance) {\n            throw new Error('a custom distance function was used to create the model. Please provide it again');\n        }\n        if (model.isEuclidean && distance !== euclideanDistance) {\n            throw new Error('the model was created with the default distance function. Do not load it with another one');\n        }\n        return new KNN(true, model, distance);\n    }\n\n    /**\n     * Return a JSON containing the kd-tree model.\n     * @return {object} JSON KNN model.\n     */\n    toJSON() {\n        return {\n            name: 'KNN',\n            kdTree: this.kdTree,\n            k: this.k,\n            classes: Array.from(this.classes),\n            isEuclidean: this.isEuclidean\n        };\n    }\n\n    /**\n     * Predicts the output given the matrix to predict.\n     * @param {Array} dataset\n     * @return {Array} predictions\n     */\n    predict(dataset) {\n        if (Array.isArray(dataset)) {\n            if (typeof dataset[0] === 'number') {\n                return getSinglePrediction(this, dataset);\n            } else if (Array.isArray(dataset[0]) && typeof dataset[0][0] === 'number') {\n                const predictions = new Array(dataset.length);\n                for (var i = 0; i < dataset.length; i++) {\n                    predictions[i] = getSinglePrediction(this, dataset[i]);\n                }\n                return predictions;\n            }\n        }\n        throw new TypeError('dataset to predict must be an array or a matrix');\n    }\n}\n\nfunction getSinglePrediction(knn, currentCase) {\n    var nearestPoints = knn.kdTree.nearest(currentCase, knn.k);\n    var pointsPerClass = {};\n    var predictedClass = -1;\n    var maxPoints = -1;\n    var lastElement = nearestPoints[0][0].length - 1;\n\n    for (var element of knn.classes) {\n        pointsPerClass[element] = 0;\n    }\n\n    for (var i = 0; i < nearestPoints.length; ++i) {\n        var currentClass = nearestPoints[i][0][lastElement];\n        var currentPoints = ++pointsPerClass[currentClass];\n        if (currentPoints > maxPoints) {\n            predictedClass = currentClass;\n            maxPoints = currentPoints;\n        }\n    }\n\n    return predictedClass;\n}\n"],"sourceRoot":""}