{"version":3,"sources":["webpack://ML/webpack/universalModuleDefinition","webpack://ML/webpack/bootstrap","webpack://ML/./node_modules/ml-matrix/src/dc/lu.js","webpack://ML/./node_modules/ml-matrix/src/dc/util.js","webpack://ML/./node_modules/ml-matrix/src/dc/svd.js","webpack://ML/./node_modules/ml-matrix/src/util.js","webpack://ML/./node_modules/ml-matrix/src/views/base.js","webpack://ML/./node_modules/ml-matrix/src/views/transpose.js","webpack://ML/./node_modules/ml-matrix/src/views/row.js","webpack://ML/./node_modules/ml-matrix/src/views/sub.js","webpack://ML/./node_modules/ml-matrix/src/views/selection.js","webpack://ML/./node_modules/ml-matrix/src/views/rowSelection.js","webpack://ML/./node_modules/ml-matrix/src/views/columnSelection.js","webpack://ML/./node_modules/ml-matrix/src/views/column.js","webpack://ML/./node_modules/ml-matrix/src/views/flipRow.js","webpack://ML/./node_modules/ml-matrix/src/views/flipColumn.js","webpack://ML/./node_modules/ml-matrix/src/abstractMatrix.js","webpack://ML/./node_modules/ml-matrix/src/matrix.js","webpack://ML/./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack://ML/./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack://ML/./node_modules/ml-matrix/src/wrap/wrap.js","webpack://ML/./node_modules/ml-matrix/src/dc/qr.js","webpack://ML/./node_modules/ml-matrix/src/decompositions.js","webpack://ML/./node_modules/ml-matrix/src/linearDependencies.js","webpack://ML/./node_modules/ml-matrix/src/dc/evd.js","webpack://ML/./node_modules/ml-matrix/src/dc/cholesky.js","webpack://ML/./node_modules/ml-matrix/src/index.js","webpack://ML/./node_modules/is-any-array/src/index.js","webpack://ML/./node_modules/ml-distance-euclidean/euclidean.js","webpack://ML/./node_modules/ml-stat/index.js","webpack://ML/./node_modules/ml-stat/matrix.js","webpack://ML/./node_modules/ml-array-mean/lib-es6/index.js","webpack://ML/./node_modules/binary-search/index.js","webpack://ML/./node_modules/num-sort/index.js","webpack://ML/./node_modules/ml-cart/src/utils.js","webpack://ML/./node_modules/ml-cart/src/TreeNode.js","webpack://ML/./node_modules/ml-cart/src/DecisionTreeClassifier.js","webpack://ML/./node_modules/ml-cart/src/DecisionTreeRegression.js","webpack://ML/./node_modules/ml-cart/src/index.js","webpack://ML/./node_modules/ml-array-max/lib-es6/index.js","webpack://ML/./node_modules/ml-kernel/src/kernel.js","webpack://ML/./node_modules/ml-random/lib-es6/choice.js","webpack://ML/./node_modules/ml-random/lib-es6/index.js","webpack://ML/./node_modules/random-js/lib/random.js","webpack://ML/./node_modules/ml-array-rescale/lib-es6/index.js","webpack://ML/./node_modules/ml-hash-table/src/HashTable.js","webpack://ML/./node_modules/ml-hclust/src/Cluster.js","webpack://ML/./node_modules/extend/index.js","webpack://ML/./node_modules/ml-array-min/lib-es6/index.js","webpack://ML/./node_modules/ml-array-median/lib-es6/index.js","webpack://ML/./node_modules/ml-xsadd/lib-es6/xsadd.js","webpack://ML/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://ML/./node_modules/ml-array-variance/lib-es6/index.js","webpack://ML/./node_modules/ml-stat/array.js","webpack://ML/./node_modules/ml-hclust/src/ClusterLeaf.js","webpack://ML/./node_modules/ml-distance-matrix/src/index.js","webpack://ML/./node_modules/ml-confusion-matrix/src/index.js","webpack://ML/./node_modules/ml-fnn/src/Layer.js","webpack://ML/./node_modules/ml-fnn/src/utils.js","webpack://ML/./node_modules/ml-fnn/src/activationFunctions.js","webpack://ML/./node_modules/ml-som/src/node-square.js","webpack://ML/./node_modules/ml-distance/src/index.js","webpack://ML/./node_modules/ml-distance/src/similarities/czekanowski.js","webpack://ML/./node_modules/ml-distance/src/distances/dice.js","webpack://ML/./node_modules/ml-distance/src/distances/intersection.js","webpack://ML/./node_modules/ml-distance/src/distances/jaccard.js","webpack://ML/./node_modules/ml-distance/src/distances/kulczynski.js","webpack://ML/./node_modules/ml-distance/src/distances/motyka.js","webpack://ML/./node_modules/ml-distance/src/distances/squaredChord.js","webpack://ML/./node_modules/ml-distance/src/similarities/tanimoto.js","webpack://ML/./node_modules/ml-distance/src/similarities/cosine.js","webpack://ML/./node_modules/ml-pad-array/src/index.js","webpack://ML/./node_modules/ml-regression-base/src/maybeToPrecision.js","webpack://ML/./node_modules/ml-regression-base/src/checkArrayLength.js","webpack://ML/./node_modules/ml-regression-base/src/index.js","webpack://ML/./node_modules/ml-regression-simple-linear/src/index.js","webpack://ML/./node_modules/ml-regression-polynomial/src/index.js","webpack://ML/./node_modules/ml-regression-exponential/src/index.js","webpack://ML/./node_modules/ml-regression-power/src/index.js","webpack://ML/./node_modules/ml-regression-multivariate-linear/src/index.js","webpack://ML/./node_modules/ml-regression/src/regression/potential-regression.js","webpack://ML/./node_modules/ml-regression/src/regression/kernel-ridge-regression.js","webpack://ML/./node_modules/ml-regression/src/regression/poly-fit-regression2d.js","webpack://ML/./node_modules/ml-regression-theil-sen/src/index.js","webpack://ML/./node_modules/ml-regression-robust-polynomial/src/index.js","webpack://ML/./node_modules/ml-regression/src/index.js","webpack://ML/./node_modules/median-quickselect/lib/median-quickselect.min.js","webpack://ML/./src/index.js","webpack://ML/./node_modules/ml-pca/src/pca.js","webpack://ML/./node_modules/ml-hclust/src/index.js","webpack://ML/./node_modules/ml-hclust/src/agnes.js","webpack://ML/./node_modules/heap/index.js","webpack://ML/./node_modules/heap/lib/heap.js","webpack://ML/./node_modules/util/util.js","webpack://ML/./node_modules/process/browser.js","webpack://ML/./node_modules/util/support/isBufferBrowser.js","webpack://ML/./node_modules/util/node_modules/inherits/inherits_browser.js","webpack://ML/./node_modules/ml-hclust/src/diana.js","webpack://ML/./node_modules/ml-svm/src/svm.js","webpack://ML/./node_modules/ml-kernel-gaussian/gaussian-kernel.js","webpack://ML/./node_modules/ml-kernel-polynomial/polynomial-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/anova-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/cauchy-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/exponential-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/histogram-intersection-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/laplacian-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/multiquadratic-kernel.js","webpack://ML/./node_modules/ml-kernel/src/kernels/rational-quadratic-kernel.js","webpack://ML/./node_modules/ml-kernel-sigmoid/sigmoid-kernel.js","webpack://ML/./node_modules/ml-cross-validation/src/index.js","webpack://ML/./node_modules/ml-combinations/lib/index.js","webpack://ML/./node_modules/ml-fnn/src/FeedForwardNeuralNetwork.js","webpack://ML/./node_modules/ml-fnn/src/OutputLayer.js","webpack://ML/./node_modules/ml-som/src/index.js","webpack://ML/./node_modules/ml-som/src/node-hexagonal.js","webpack://ML/./node_modules/ml-sparse-matrix/src/index.js","webpack://ML/./node_modules/new-array/index.js","webpack://ML/./node_modules/ml-hash-table/src/primeFinder.js","webpack://ML/./node_modules/number-is-nan/index.js","webpack://ML/./node_modules/ml-distance/src/distances.js","webpack://ML/./node_modules/ml-distance/src/distances/additiveSymmetric.js","webpack://ML/./node_modules/ml-distance/src/distances/avg.js","webpack://ML/./node_modules/ml-distance/src/distances/bhattacharyya.js","webpack://ML/./node_modules/ml-distance/src/distances/canberra.js","webpack://ML/./node_modules/ml-distance/src/distances/chebyshev.js","webpack://ML/./node_modules/ml-distance/src/distances/clark.js","webpack://ML/./node_modules/ml-distance/src/distances/czekanowski.js","webpack://ML/./node_modules/ml-distance/src/distances/divergence.js","webpack://ML/./node_modules/ml-distance/src/distances/fidelity.js","webpack://ML/./node_modules/ml-distance/src/distances/gower.js","webpack://ML/./node_modules/ml-distance/src/distances/harmonicMean.js","webpack://ML/./node_modules/ml-distance/src/distances/hellinger.js","webpack://ML/./node_modules/ml-distance/src/distances/innerProduct.js","webpack://ML/./node_modules/ml-distance/src/distances/jeffreys.js","webpack://ML/./node_modules/ml-distance/src/distances/jensenDifference.js","webpack://ML/./node_modules/ml-distance/src/distances/jensenShannon.js","webpack://ML/./node_modules/ml-distance/src/distances/kdivergence.js","webpack://ML/./node_modules/ml-distance/src/distances/kullbackLeibler.js","webpack://ML/./node_modules/ml-distance/src/distances/kumarHassebrook.js","webpack://ML/./node_modules/ml-distance/src/distances/kumarJohnson.js","webpack://ML/./node_modules/ml-distance/src/distances/lorentzian.js","webpack://ML/./node_modules/ml-distance/src/distances/manhattan.js","webpack://ML/./node_modules/ml-distance/src/distances/matusita.js","webpack://ML/./node_modules/ml-distance/src/distances/minkowski.js","webpack://ML/./node_modules/ml-distance/src/distances/neyman.js","webpack://ML/./node_modules/ml-distance/src/distances/pearson.js","webpack://ML/./node_modules/ml-distance/src/distances/probabilisticSymmetric.js","webpack://ML/./node_modules/ml-distance/src/distances/ruzicka.js","webpack://ML/./node_modules/ml-distance/src/distances/soergel.js","webpack://ML/./node_modules/ml-distance/src/distances/sorensen.js","webpack://ML/./node_modules/ml-distance/src/distances/squared.js","webpack://ML/./node_modules/ml-distance/src/distances/taneja.js","webpack://ML/./node_modules/ml-distance/src/distances/tanimoto.js","webpack://ML/./node_modules/ml-distance/src/distances/topsoe.js","webpack://ML/./node_modules/ml-tree-similarity/src/index.js","webpack://ML/./node_modules/ml-distance/src/distances/waveHedges.js","webpack://ML/./node_modules/ml-distance/src/similarities.js","webpack://ML/./node_modules/ml-distance/src/similarities/dice.js","webpack://ML/./node_modules/ml-distance/src/similarities/intersection.js","webpack://ML/./node_modules/ml-distance/src/similarities/jaccard.js","webpack://ML/./node_modules/ml-distance/src/similarities/kulczynski.js","webpack://ML/./node_modules/ml-distance/src/similarities/motyka.js","webpack://ML/./node_modules/ml-distance/src/similarities/pearson.js","webpack://ML/./node_modules/ml-distance/src/similarities/squaredChord.js","webpack://ML/./node_modules/ml-performance/src/index.js","webpack://ML/./node_modules/ml-performance/src/measures.js","webpack://ML/./node_modules/ml-savitzky-golay/src/index.js","webpack://ML/./node_modules/ml-savitzky-golay-generalized/src/index.js","webpack://ML/./node_modules/ml-bit-array/src/index.js","webpack://ML/./node_modules/ml-bit-array/src/creator.js","webpack://ML/./node_modules/ml-array-utils/src/index.js","webpack://ML/./node_modules/ml-array-utils/src/ArrayUtils.js","webpack://ML/./node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://ML/./node_modules/ml-array-utils/src/snv.js","webpack://ML/./node_modules/ml-array-mode/lib-es6/index.js","webpack://ML/./node_modules/ml-array-normed/lib-es6/index.js","webpack://ML/./node_modules/ml-array-standard-deviation/lib-es6/index.js","webpack://ML/./node_modules/ml-array-xy-centroids-merge/src/index.js","webpack://ML/./node_modules/ml-arrayxy-closestx/src/index.js","webpack://ML/./node_modules/ml-array-xy-max-merge/src/index.js","webpack://ML/./node_modules/ml-array-xy-max-y/src/index.js","webpack://ML/./node_modules/ml-array-xy-sort-x/src/index.js","webpack://ML/./node_modules/ml-arrayxy-uniquex/src/index.js","webpack://ML/./node_modules/ml-array-xy-weighted-merge/src/index.js","webpack://ML/./node_modules/ml-kmeans/node_modules/ml-distance-euclidean/lib-es6/euclidean.js","webpack://ML/./node_modules/ml-nearest-vector/node_modules/ml-distance-euclidean/lib-es6/euclidean.js","webpack://ML/./node_modules/ml-nearest-vector/lib-es6/index.js","webpack://ML/./node_modules/ml-kmeans/src/utils.js","webpack://ML/./node_modules/ml-kmeans/src/initialization.js","webpack://ML/./node_modules/ml-kmeans/src/KMeansResult.js","webpack://ML/./node_modules/ml-kmeans/src/kmeans.js","webpack://ML/./node_modules/ml-random-forest/src/utils.js","webpack://ML/./node_modules/ml-random-forest/src/RandomForestBase.js","webpack://ML/./node_modules/ml-random-forest/src/RandomForestClassifier.js","webpack://ML/./node_modules/ml-random-forest/src/RandomForestRegression.js","webpack://ML/./node_modules/ml-random-forest/src/index.js","webpack://ML/./node_modules/ml-array-xy-equally-spaced/src/integral.js","webpack://ML/./node_modules/ml-array-xy-equally-spaced/src/index.js","webpack://ML/./node_modules/ml-array-xy-equally-spaced/src/getZones.js","webpack://ML/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","webpack://ML/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","webpack://ML/./node_modules/ml-naivebayes/src/utils.js","webpack://ML/./node_modules/ml-naivebayes/src/GaussianNB.js","webpack://ML/./node_modules/ml-naivebayes/src/MultinomialNB.js","webpack://ML/./node_modules/ml-naivebayes/src/index.js","webpack://ML/./node_modules/ml-pls/src/utils.js","webpack://ML/./node_modules/ml-pls/src/pls.js","webpack://ML/./node_modules/ml-pls/src/kopls.js","webpack://ML/./node_modules/ml-pls/src/index.js","webpack://ML/./node_modules/ml-levenberg-marquardt/src/errorCalculation.js","webpack://ML/./node_modules/ml-levenberg-marquardt/src/step.js","webpack://ML/./node_modules/ml-levenberg-marquardt/src/index.js","webpack://ML/./node_modules/ml-array-xy-filter-x/src/index.js","webpack://ML/./node_modules/ml-array-xy-filter-x/src/getZones.js","webpack://ML/./node_modules/ml-knn/src/KDTree.js","webpack://ML/./node_modules/ml-knn/src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LuDecomposition","constructor","matrix","j","k","v","LUcolj","kmax","lu","WrapperMatrix2D","checkMatrix","clone","rows","columns","pivotVector","Array","pivotSign","Math","min","set","abs","LU","isSingular","data","col","solve","Matrix","Error","count","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","slice","hypotenuse","a","b","sqrt","getFilled2DArray","array","SingularValueDecomposition","options","arguments","length","undefined","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","console","warn","nu","ni","U","V","e","work","si","nct","nrt","max","mrc","pp","eps","Number","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","g","tmp","Y","threshold","scols","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solveForDiagonal","diag","inverse","vcols","ucols","condition","norm2","rank","tol","ii","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","index","outer","RangeError","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","TypeError","some","isArray","from","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","concat","BaseView","AbstractMatrix","super","static","species","MatrixTransposeView","rowIndex","columnIndex","MatrixRowView","MatrixSubView","MatrixSelectionView","indices","MatrixRowSelectionView","MatrixColumnSelectionView","MatrixColumnView","MatrixFlipRowView","MatrixFlipColumnView","superCtor","[object Object]","newRows","newColumns","newData","newMatrix","empty","fill","rng","random","maxValue","floor","matrix1","matrix2","result","klass","size","apply","callback","jj","to2DArray","copy","isRowVector","isColumnVector","isVector","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","repeat","rowRep","colRep","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","swapRows","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","by","sumByRow","sumByColumn","sumAll","mean","prod","norm","type","cumulativeSum","dot","vector2","vector1","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","y","x","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","add","sub","scaleRows","scaled","rescale","scaleColumns","kroneckerProduct","q","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixColumn","selection","trace","transposeView","rowView","columnView","flipRowView","flipColumnView","subMatrixView","selectionView","rowSelectionView","columnSelectionView","det","subMatrix0","subMatrix1","subMatrix2","pseudoInverse","svdSolution","SvDecomposition","rand","identity","eye","negate","tensorProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","method","forEach","mathMethod","push","inplaceMeth","staticMeth","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","removeRow","splice","addRow","removeColumn","addColumn","WrapperMatrix1D","_calculateIndex","wrap","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","error","thresholdValue","returnArray","linearDependencies","thresholdError","results","Abis","EigenvalueDecomposition","assumeSymmetric","h","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","w","ra","sa","vr","vi","notlast","cdivres","exshift","z","iter","cdiv","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B","__webpack_exports__","matrix_Matrix","WrapperMatrix2D_WrapperMatrix2D","WrapperMatrix1D_WrapperMatrix1D","svd_SingularValueDecomposition","evd_EigenvalueDecomposition","cholesky_CholeskyDecomposition","lu_LuDecomposition","qr_QrDecomposition","toString","endsWith","squaredEuclidean","euclidean","squared","require","arrayStat","Infinity","minMax","entropy","l1","l2","log","theMean","N","theSum","product","theProduct","standardDeviation","means","unbiased","vari","variance","sum1","sum2","median","medians","modes","itemCount","itemArray","indexOf","skewness","skew","s3","dev","pow","kurtosis","kurt","s4","standardError","samples","standardDeviations","standardErrors","sqrtN","covariance","scatter","divisor","cov","correlation","scores","zScores","cor","standardize","center","inPlace","resultRow","sourceRow","weightedVariance","weights","weightedMean","weightSum","weightedCovariance","s1","factor","weightedScatter","is_any_array__WEBPACK_IMPORTED_MODULE_0__","is_any_array__WEBPACK_IMPORTED_MODULE_0___default","input","haystack","needle","comparator","mid","cmp","numberIsNan","assertNum","asc","desc","toDiscreteDistribution","numberOfClasses","counts","giniImpurity","probabilities","getNumberOfClasses","filter","val","arr","squaredError","meanArray","currentElement","gainFunctions","gini","splitted","splitsImpurity","splits","currentSplit","regression","splitFunctions","TreeNode","kind","gainFunction","splitFunction","minNumSamples","maxDepth","bestSplit","XTranspose","bestGain","check","currentFeature","splitValues","featureSplit","currentSplitVal","split","gain","maxGain","splitValue","lesser","greater","ret","Utils","calculatePrediction","distribution","train","currentDepth","parentGain","splitColumn","splittedMatrix","lesserX","greaterX","lesserY","greaterY","left","right","classify","setNodeParameters","node","defaultOptions","DecisionTreeClassifier","model","Tree","assign","trainingSet","trainingLabels","predict","toPredict","predictions","toJSON","DecisionTreeRegression","trainingValues","DecisionTreeClassifier_DecisionTreeClassifier","DecisionTreeRegression_DecisionTreeRegression","GaussianKernel","PolynomialKernel","ANOVAKernel","CauchyKernel","ExponentialKernel","HistogramKernel","LaplacianKernel","MultiquadraticKernel","RationalKernel","SigmoidKernel","kernelType","gaussian","rbf","polynomial","poly","anova","cauchy","exponential","histogram","laplacian","multiquadratic","rational","sigmoid","mlp","toLowerCase","KernelConstructor","kernelFunction","compute","inputs","landmarks","kernelMatrix","PROB_TOLERANCE","randomIndex","cumSum","randomChoice","valuesArr","getArray","lib_es6_Random","Random","seedOrRandom","xsadd","XSAdd","randomGenerator","choice","randInt","randomSample","__WEBPACK_AMD_DEFINE_RESULT__","imul","al","bl","stringRepeat","String","pattern","engine","engines","nativeMath","proto","returnValue","generate","addend","toInteger","number","ceil","convertSliceArgument","returnUndefined","mt19937","Int32Array","refreshData","uses","next","temper","getUseCount","discard","seed","initial","previous","seedWithArray","source","sourceLength","autoSeed","generateEntropyArray","browserCrypto","crypto","getRandomValues","Date","getTime","int32","uint32","uint53","uint53Full","int53","int53Full","integer","isPowerOfTwoMinusOne","downscaleToRange","masking","extendedRange","maximum","downscaleToLoopCheckedRange","upscaleWithinU53","highRange","upscaleToLoopCheckedRange","upscaleWithinI53AndLoopCheck","isFinite","realZeroToOneInclusive","realZeroToOneExclusive","real","inclusive","multiplier","bool","isLeastBitTrue","lessThan","numerator","denominator","percentage","round","probability","pick","begin","end","start","finish","lowerHex","upperHex","picker","shuffle","downTo","sample","population","sampleSize","tailLength","die","sideCount","dice","dieCount","uuid4","zeroPad","string","zeroCount","pool","charAt","hex","toUpperCase","upper","date","ml_array_max__WEBPACK_IMPORTED_MODULE_0__","ml_array_min__WEBPACK_IMPORTED_MODULE_1__","is_any_array__WEBPACK_IMPORTED_MODULE_2__","is_any_array__WEBPACK_IMPORTED_MODULE_2___default","output","currentMin","currentMax","_options$min","minValue","autoMinMax","_options$max","newArray","primeFinder","nextPrime","largestPrime","FREE","FULL","REMOVED","defaultInitialCapacity","defaultMinLoadFactor","defaultMaxLoadFactor","HashTable","table","state","minLoadFactor","maxLoadFactor","distinct","freeEntries","lowWaterMark","highWaterMark","initialCapacity","capacity","chooseHighWaterMark","indexOfKey","indexOfInsertion","newCapacity","chooseGrowCapacity","rehash","remove","noRehash","maybeShrinkCapacity","delete","minLoad","maxLoad","containsKey","hash","decrement","containsValue","indexOfValue","ensureCapacity","minCapacity","oldCapacity","oldTable","oldValues","oldState","newTable","newValues","newState","element","forEachKey","forEachValue","forEachPair","Heap","Cluster","children","distance","cut","list","ans","group","minGroups","heap","first","pop","child","toArray","traverse","cb","visit","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","configurable","newValue","writable","getProperty","extend","src","copyIsArray","deep","median_quickselect__WEBPACK_IMPORTED_MODULE_0__","median_quickselect__WEBPACK_IMPORTED_MODULE_0___default","is_any_array__WEBPACK_IMPORTED_MODULE_1__","is_any_array__WEBPACK_IMPORTED_MODULE_1___default","quickSelectMedian","XSadd","LOOP","FLOAT_MUL","sh1","sh2","sh3","multiply_uint32","nlo","now","Uint32Array","init","getFloat","getUint32","nextState","periodCertification","_typeof","iterator","sequentialFill","_options","_options$from","_options$to","to","_options$size","step","_i","ml_array_mean__WEBPACK_IMPORTED_MODULE_0__","_options$unbiased","_options$mean","arrayMean","sqrError","arithmeticMean","geometricMean","mul","logMean","lnsum","grandMean","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","half","theVariance","robustMeanAndStdev","averageDeviations","stdev","quartiles","quart","q1","q2","q3","pooledStandardDeviation","pooledVariance","mean1","mean2","weightedStandardDeviation","standardDev","ClusterLeaf","inherits","distanceFn","map","ConfusionMatrix","labels","actual","predicted","distinctLabels","Set","actualIdx","predictedIdx","getMatrix","getLabels","getTotalCount","getTrueCount","getFalseCount","getTruePositiveCount","label","getIndex","getTrueNegativeCount","getFalsePositiveCount","getFalseNegativeCount","getPositiveCount","getNegativeCount","getTruePositiveRate","getTrueNegativeRate","getPositivePredictiveValue","TP","getNegativePredictiveValue","TN","getFalseNegativeRate","getFalsePositiveRate","getFalseDiscoveryRate","FP","getFalseOmissionRate","FN","getF1Score","getMatthewsCorrelationCoefficient","getInformedness","getMarkedness","getConfusionTable","getAccuracy","correct","incorrect","getCount","actualIndex","predictedIndex","accuracy","total","ACTIVATION_FUNCTIONS","Layer","inputSize","outputSize","regularization","epsilon","activation","activationParam","selectedFunction","params","actFunction","derFunction","derivate","activationFunction","W","forward","backpropagation","delta","dW","db","sumCol","aCopy","update","dictOutputs","outputs","sumRow","logistic","exp","expELU","param","tanh","arctan","atan","softsign","relu","softplus","bent","sinusoid","sin","cos","sinc","parametric-relu","exponential-elu","soft-exponential","NodeSquare","som","neighbors","adjustWeights","learningRate","influence","getDistance","otherNode","getDistanceTorus","distX","distY","gridDim","getNeighbors","xy","torus","nodes","getPos","bestNeighbor","direction","simA","simB","getPosition","similarity","up","down","p1","p2","bitvector","inter","union","matrixCase","len","cond","arrayCase","maybeToPrecision","digits","toPrecision","checkArraySize","BaseRegression","_predict","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","slope","intercept","coefficients","checkArrayLength","slr","regress","computeX","precision","xFactor","absIntercept","json","PolynomialRegression","degree","powers","pr","F","FT","A","_toFormula","isLaTeX","sup","closeSup","times","fn","str","ExponentialRegression","er","yl","linear","PowerRegression","xl","newInputs","MultivariateLinearRegression","statistics","beta","SVD","fittedValues","addM","ri","reduce","stdError","stdErrorMatrix","stdErrors","tStats","summary","regressionStatistics","observations","variables","tStat","PotentialRegression","M","lambda","kernelOptions","computeCoefficient","KernelRidgeRegression","kernel","Kernel","K","order","PolynomialFitRegression2D","examples","x1","x2","scaleX1","scaleX2","scaleY","limit","powColVector","svd","qqs","qqs1","power","TheilSenRegression","slopes","medianSlope","cuts","theilSen","RobustPolynomialRegression","tuples","pos","counter","getRandomTuples","tuple","calcCoefficients","residuals","residual","residualsMedian","robustPolynomial","NLR","src_SimpleLinearRegression","src_PolynomialRegression","src_ExponentialRegression","src_PowerRegression","src_MultivariateLinearRegression","kernel_ridge_regression_KernelRidgeRegression","poly_fit_regression2d_PolynomialFitRegression2D","src_TheilSenRegression","src_RobustPolynomialRegression","_ref","window","mlCart","mlRandomForest","ML","PCA","HClust","KMeans","SVM","NaiveBayes","KNN","PLS","CrossValidation","RandomForestClassifier","FNN","SOM","Regression","RandomForestRegression","levenbergMarquardt","EVD","SparseMatrix","Distance","Similarity","distanceMatrix","default","Performance","savitzkyGolay","savitzkyGolayGeneralized","BitArray","padArray","binarySearch","numSort","ArrayUtils","MatrixUtil","ArrayStat","MatrixStat","normed","ArrayXY","centroidsMerge","closestX","maxMerge","maxY","sortX","uniqueX","weightedMerge","equallySpaced","filterX","matrixLib","Stat","isCovarianceMatrix","dataset","stdevs","S","_computeFromCovarianceMatrix","useCovarianceMatrix","covarianceMatrix","_adjust","div","singularValues","eigenvalues","nComponents","getExplainedVariance","getCumulativeVariance","explained","getEigenvectors","getEigenvalues","getStandardDeviations","getLoadings","evd","reverse","agnes","diana","simpleLink","cluster1","cluster2","disFun","completeLink","averageLink","centroidLink","dist","wardLink","disFunc","isDistanceMatrix","dis","fdistance","sdistance","toFixed","dmin","clustered","diff","indCount","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","lo","hi","item","lastelt","returnitem","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","pushpop","peek","contains","clear","insert","top","front","has","process","getOwnPropertyDescriptors","keys","descriptors","formatRegExp","format","isString","objects","inspect","join","JSON","stringify","_","isNull","isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","primitive","simple","isNumber","formatPrimitive","visibleKeys","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","formatProperty","match","formatArray","prev","cur","numLinesEst","reduceToSingleString","line","substr","ar","arg","re","objectToString","pad","debuglog","env","NODE_DEBUG","test","pid","bold","italic","underline","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","newReason","promisify","original","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","then","nextTick","rej","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","readUInt8","ctor","super_","TempCtor","y1","splitting","Ci","ndist","Cj","intrDist","clId","rebel","tree","ind","C","sG","spl","fData","sData","stat","maxPasses","maxIterations","alphaTol","whitening","features","_trained","_loaded","D","alphas","b1","b2","passes","Ei","Ej","ai","aj","eta","numChange","_marginOnePrecomputed","newaj","iterations","nX","nY","nAlphas","_supportVectorIdx","predictOne","marginOne","noWhitening","_applyWhitening","margin","supportVectors","load","svm","whitened","sigma","constant","E","CV","combinations","initMatrix","getDistinct","validate","Classifier","classifierOptions","testIdx","trainIdx","confusionMatrix","testFeatures","trainFeatures","testLabels","trainLabels","getTrainTest","classifier","updateConfusionMatrix","validateWithCallback","predictedLabels","leaveOneOut","leavePOut","gen","allIdx","kFold","current","folds","randi","runtime","createCommonjsModule","global","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","regeneratorRuntime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","mark","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","done","Context","reset","skipTempReset","sent","_sent","delegate","tryEntries","resetTryEntry","stop","rootEntry","rootRecord","completion","rval","dispatchException","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","Function","hadRuntime","oldRuntime","runtimeModule","regenerator","_callee","twiddle","_context","OutputLayer","FeedForwardNeuralNetworks","hiddenLayers","dicts","layers","buildNetwork","propagate","NodeHexagonal","fields","randomizer","squareEuclidean","gridType","reload","numWeights","converters","getConverters","extractor","creator","nodeType","hx","distanceMethod","maxDistance","getMaxDistance","findBMU","adjust","iterationCount","startLearningRate","mapRadius","algorithmMethod","_initNodes","normalizers","denormalizers","getNormalizer","getDenormalizer","getRandomValue","zero","one","loadModel","export","includeDistance","initNodes","setTraining","convertedSet","numIterations","timeConstant","trainOne","neighbourhoodRadius","trainingValue","trainingSetFactor","bmu","_findBestMatchingUnit","now2","radiusLimit","xMin","xMax","yMin","yMax","theX","theY","getConvertedNodes","candidate","lowest","computePosition","getQuantizationError","fit","getFit","hX","distZ","ml_hash_table__WEBPACK_IMPORTED_MODULE_0__","ml_hash_table__WEBPACK_IMPORTED_MODULE_0___default","_init","elements","symmetric","forEachNonZero","bandWidth","isBanded","width","cardinality","v1","v2","getNonZeros","setThreshold","newThreshold","trans","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","operators","sortAsc","primeNumbers","additiveSymmetric","avg","bhattacharyya","canberra","chebyshev","clark","czekanowski","divergence","fidelity","gower","hellinger","innerProduct","intersection","jaccard","jeffreys","jensenDifference","jensenShannon","kdivergence","kulczynski","kullbackLeibler","kumarHassebrook","kumarJohnson","lorentzian","manhattan","matusita","minkowski","motyka","neyman","pearson","probabilisticSymmetric","ruzicka","soergel","sorensen","squaredChord","taneja","tanimoto","topsoe","waveHedges","czekanowskiSimilarity","tanimotoS","createTree","minWindow","gamma","calc","cosine","diceD","intersectionD","jaccardD","kulczynskiD","motykaD","avgA","avgB","newA","newB","squaredChordD","measures","prediction","isDistance","predP","all","pred","targ","cutoffs","MAX_VALUE","fp","tp","nPos","nNeg","currentPred","nTp","nFp","tn","nPosPred","nNegPred","nSamples","getMeasure","measure","getAURC","auc","getAUDC","getDistribution","cutLength","cutLow","cutHigh","interval","xLabels","interValues","intraValues","interCumPercent","intraCumPercent","nTP","currentTP","nFP","currentFP","thisTP","thisFP","names","acc","fpr","tpr","fnr","tnr","ppv","npv","pcfall","pcmiss","lift","rpp","rnp","windowSize","derivative","padValue","J","ones","inic","Jtranspose","getHs","hs","GramPoly","GenFact","gf","Weight","np","fullWeights","constantH","wg1","wg2","d1","d2","wg","eightBits","toBinaryString","and","arr1","arr2","or","xor","not","getBit","mask","setBit","parseBinaryString","toHexString","parseHexString","toDebug","binary","num","getEquallySpacedData","SNV","resultMatrix","coordArrayToPoints","dimensions","pointsArr","point","coordArrayToCoordMatrix","coordinatesArray","points","currentPoint","coordMatrixToCoordArray","coordMatrix","coodinatesArray","coordMatrixToPoints","pointsToCoordArray","pointsToCoordMatrix","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","integral","x0","xLength","variant","numberOfPoints","halfStep","lastStep","previousX","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","getEquallySpacedSlot","initialOriginalStep","lastOriginalStep","sumAtMin","sumAtMax","getEquallySpacedSmooth","std","maxCount","_options$algorithm","algorithm","absoluteSum","ml_array_variance__WEBPACK_IMPORTED_MODULE_0__","mergeByCentroids","originalPoints","centroids","mergedPoints","originalIndex","mergedIndex","binary_search__WEBPACK_IMPORTED_MODULE_0__","binary_search__WEBPACK_IMPORTED_MODULE_0___default","num_sort__WEBPACK_IMPORTED_MODULE_1__","groupWidth","merged","maxAbscissa","calculateIndex","currentIndex","sortFunc","grouped","response","weightedAbscissa","distanceFunction","nearestVector","listVectors","similarityFunction","vectorIndex","maxSim","sim","minDist","updateClusterID","centers","clusterID","euclidianDistances","distanceSymbol","KMeansResult","clusters","converged","nearest","centroid","computeInformation","enrichedCentroids","kmeans","tolerance","withIterations","initialization","newCenters","prevCenters","nDim","centersLen","dim","id","updateCenters","oldCenters","hasConverged","localTrials","firstCenterIdx","closestDistSquared","cumSumClosestDistSquared","candidateIdx","distanceToCandidates","bestCandidate","bestPot","bestDistSquared","newDistSquared","newPot","kmeanspp","maxDist","minDistCent","mostDistant","calculateDistanceMatrix","stepResult","stepNumber","kmeansGenerator","examplesBaggingWithReplacement","Xr","featureBagging","replacement","toRet","usedIndex","RandomForestBase","maxFeatures","nEstimators","treeOptions","isClassifier","indexes","useSampleBagging","Estimator","DTClassifier","DTRegression","estimators","est","res","predictionValues","baseModel","selectionMethods","arrayMedian","selectionMethod","RandomForestClassifier_RandomForestClassifier","RandomForestRegression_RandomForestRegression","arrayXY","exclusions","zones","exclusion","parse","toRemove","unitsPerPoint","currentFrom","totalPoints","currentNbPoints","getZones","xResult","yResult","zone","zoneResult","processZone","equallySpacedSlot","equallySpacedSmooth","separateClasses","classes","totalPerClasses","separatedClasses","GaussianNB","calculateProbabilities","C1","PI","logPriorProbability","currentStd","getCurrentClass","modelName","currentCase","maxProbability","predictedClass","currentProbability","calculateLogProbability","C2","MultinomialNB","conditionalProbability","priorProbability","separateClass","classValues","matrixLog","GaussianNB_GaussianNB","MultinomialNB_MultinomialNB","pow2array","initializeMatrices","meanX","stdDevX","meanY","stdDevY","PBQ","R2X","scaleMethod","latentVectors","rx","cx","ry","cy","ssqXcal","sumOfSquaresY","T","P","Q","transposeX","transposeY","tIndex","maxSumColIndex","mulM","uIndex","t1","u","den","pnorm","ssqYcal","KOPLS","YLoadingMat","SigmaPow","YScoreMat","predScoreMat","YOrthLoadingVec","YOrthEigen","YOrthScoreMat","toNorm","TURegressionCoeff","kernelX","orthogonalComp","predictiveComp","predictiveComponents","orthogonalComponents","Identity","Sigma","YOrthScoreNorm","TpiPrime","CoTemp","SoTemp","toiPrime","ITo","lastScoreMat","lastTpPrime","KTestTrain","YOrthScoreVector","scoreMatPrime","p3","predYOrthVectors","pls_PLS","kopls_KOPLS","errorCalculation","parameters","parameterizedFunction","func","damping","gradientDifference","evaluatedData","gradientFunc","paramFunction","auxParams","funcParam","gradientFunction","matrixFunc","matrixFunction","inverseMatrix","errorTolerance","minValues","maxValues","initialValues","parLen","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","iteration","parameterValues","parameterError","currentZoneIndex","newX","newY","position","Node","KDTree","metric","buildTree","restoreParent","toJSONImpl","dest","maxNodes","bestNodes","BinaryHeap","nearestSearch","ownDistance","linearPoint","bestChild","linearDistance","otherChild","saveNode","content","scoreFunction","bubbleUp","sinkDown","parentN","elemScore","child2N","child1N","swap","child1","child1Score","child2","src_KNN","kdTree","isEuclidean","euclideanDistance","getSinglePrediction","knn","nearestPoints","pointsPerClass","maxPoints","lastElement","currentClass"],"mappings":"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","file":"ml.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ML\"] = factory();\n\telse\n\t\troot[\"ML\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class LuDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\r\n * @param {Matrix} matrix\r\n */\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    var lu = matrix.clone();\r\n    var rows = lu.rows;\r\n    var columns = lu.columns;\r\n    var pivotVector = new Array(rows);\r\n    var pivotSign = 1;\r\n    var i, j, k, p, s, t, v;\r\n    var LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isSingular() {\r\n    var data = this.LU;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      if (data[j][j] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var lu = this.LU;\r\n    var rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    var columns = lu.columns;\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= lu[k][k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get determinant() {\r\n    var data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    var determinant = this.pivotSign;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      determinant *= data[j][j];\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X[i][j] = data[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = 1;\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X[i][j] = data[i][j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get pivotPermutationVector() {\r\n    return this.pivotVector.slice();\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  var r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getFilled2DArray(rows, columns, value) {\r\n  var array = new Array(rows);\r\n  for (var i = 0; i < rows; i++) {\r\n    array[i] = new Array(columns);\r\n    for (var j = 0; j < columns; j++) {\r\n      array[i][j] = value;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class SingularValueDecomposition\r\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\r\n * @param {Matrix} value\r\n * @param {object} [options]\r\n * @param {boolean} [options.computeLeftSingularVectors=true]\r\n * @param {boolean} [options.computeRightSingularVectors=true]\r\n * @param {boolean} [options.autoTranspose=false]\r\n */\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false\r\n    } = options;\r\n\r\n    var wantu = Boolean(computeLeftSingularVectors);\r\n    var wantv = Boolean(computeRightSingularVectors);\r\n\r\n    var swapped = false;\r\n    var a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        var aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    var nu = Math.min(m, n);\r\n    var ni = Math.min(m + 1, n);\r\n    var s = new Array(ni);\r\n    var U = getFilled2DArray(m, nu, 0);\r\n    var V = getFilled2DArray(n, n, 0);\r\n\r\n    var e = new Array(n);\r\n    var work = new Array(m);\r\n\r\n    var si = new Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    var nct = Math.min(m - 1, n);\r\n    var nrt = Math.max(0, Math.min(n - 2, m));\r\n    var mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a[i][k]);\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a[k][k] < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a[i][k] /= s[k];\r\n          }\r\n          a[k][k] += 1;\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a[i][k] * a[i][j];\r\n          }\r\n          t = -t / a[k][k];\r\n          for (let i = k; i < m; i++) {\r\n            a[i][j] += t * a[i][k];\r\n          }\r\n        }\r\n        e[j] = a[k][j];\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U[i][k] = a[i][k];\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a[i][j];\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a[i][j] += t * work[i];\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V[i][k] = e[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a[nct][nct];\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a[nrt][p - 1];\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U[i][j] = 0;\r\n        }\r\n        U[j][j] = 1;\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U[i][k] * U[i][j];\r\n            }\r\n            t = -t / U[k][k];\r\n            for (let i = k; i < m; i++) {\r\n              U[i][j] += t * U[i][k];\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U[i][k] = -U[i][k];\r\n          }\r\n          U[k][k] = 1 + U[k][k];\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n          U[k][k] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V[i][k] * V[i][j];\r\n            }\r\n            t = -t / V[k + 1][k];\r\n            for (let i = k + 1; i < n; i++) {\r\n              V[i][j] += t * V[i][k];\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V[i][k] = 0;\r\n        }\r\n        V[k][k] = 1;\r\n      }\r\n    }\r\n\r\n    var pp = p - 1;\r\n    var iter = 0;\r\n    var eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][p - 1];\r\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][k - 1];\r\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k])\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][j + 1];\r\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][j + 1];\r\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V[i][k] = -V[i][k];\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V[i][k + 1];\r\n                V[i][k + 1] = V[i][k];\r\n                V[i][k] = t;\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U[i][k + 1];\r\n                U[i][k + 1] = U[i][k];\r\n                U[i][k] = t;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      var tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var x = svd.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    var Y = value;\r\n    var e = this.threshold;\r\n    var scols = this.s.length;\r\n    var Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls[i][i] = 0;\r\n      } else {\r\n        Ls[i][i] = 1 / this.s[i];\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n    var V = this.rightSingularVectors;\r\n\r\n    var VL = V.mmul(Ls);\r\n    var vrows = V.rows;\r\n    var urows = U.length;\r\n    var VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL[i][k] * U[j][k];\r\n        }\r\n        VLU[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array<number>} value\r\n   * @return {Matrix}\r\n   */\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var inverseA = svd.inverse();\r\n   * @return {Matrix} - The approximation of the inverse of the matrix\r\n   */\r\n  inverse() {\r\n    var V = this.V;\r\n    var e = this.threshold;\r\n    var vrows = V.length;\r\n    var vcols = V[0].length;\r\n    var X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X[i][j] = V[i][j] / this.s[j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n\r\n    var urows = U.length;\r\n    var ucols = U[0].length;\r\n    var Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X[i][k] * U[j][k];\r\n        }\r\n        Y[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rank() {\r\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    var r = 0;\r\n    var s = this.s;\r\n    for (var i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get diagonal() {\r\n    return this.s;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get threshold() {\r\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get leftSingularVectors() {\r\n    if (!Matrix.isMatrix(this.U)) {\r\n      this.U = new Matrix(this.U);\r\n    }\r\n    return this.U;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get rightSingularVectors() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\n\r\n/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns'\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices)\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  var rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  var columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function getRange(from, to) {\r\n  var arr = new Array(to - from + 1);\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] = from + i;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function sumByRow(matrix) {\r\n  var sum = Matrix.zeros(matrix.rows, 1);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  var sum = Matrix.zeros(1, matrix.columns);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  var v = 0;\r\n  for (var i = 0; i < matrix.rows; i++) {\r\n    for (var j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix() {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex\r\n    );\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex]\r\n    );\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import rescale from 'ml-array-rescale';\r\n\r\nimport LuDecomposition from './dc/lu';\r\nimport SvDecomposition from './dc/svd';\r\nimport {\r\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\r\n  checkRange, checkIndices,\r\n  sumByRow, sumByColumn, sumAll\r\n} from './util';\r\nimport MatrixTransposeView from './views/transpose';\r\nimport MatrixRowView from './views/row';\r\nimport MatrixSubView from './views/sub';\r\nimport MatrixSelectionView from './views/selection';\r\nimport MatrixRowSelectionView from './views/rowSelection';\r\nimport MatrixColumnSelectionView from './views/columnSelection';\r\nimport MatrixColumnView from './views/column';\r\nimport MatrixFlipRowView from './views/flipRow';\r\nimport MatrixFlipColumnView from './views/flipColumn';\r\n\r\nexport default function AbstractMatrix(superCtor) {\r\n  if (superCtor === undefined) superCtor = Object;\r\n\r\n  /**\r\n   * Real matrix\r\n   * @class Matrix\r\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\r\n   * 2D array containing the data or Matrix instance to clone\r\n   * @param {number} [nColumns] - Number of columns of the new matrix\r\n   */\r\n  class Matrix extends superCtor {\r\n    static get [Symbol.species]() {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs a Matrix with the chosen dimensions from a 1D array\r\n     * @param {number} newRows - Number of rows\r\n     * @param {number} newColumns - Number of columns\r\n     * @param {Array} newData - A 1D array containing data for the matrix\r\n     * @return {Matrix} - The new matrix\r\n     */\r\n    static from1DArray(newRows, newColumns, newData) {\r\n      var length = newRows * newColumns;\r\n      if (length !== newData.length) {\r\n        throw new RangeError('Data length does not match given dimensions');\r\n      }\r\n      var newMatrix = new this(newRows, newColumns);\r\n      for (var row = 0; row < newRows; row++) {\r\n        for (var column = 0; column < newColumns; column++) {\r\n          newMatrix.set(row, column, newData[row * newColumns + column]);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a row vector, a matrix with only one row.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static rowVector(newData) {\r\n      var vector = new this(1, newData.length);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(0, i, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates a column vector, a matrix with only one column.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static columnVector(newData) {\r\n      var vector = new this(newData.length, 1);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(i, 0, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static empty(rows, columns) {\r\n      return new this(rows, columns);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to zero.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static zeros(rows, columns) {\r\n      return this.empty(rows, columns).fill(0);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to one.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static ones(rows, columns) {\r\n      return this.empty(rows, columns).fill(1);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be randomly set.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static rand(rows, columns, rng) {\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          matrix.set(i, j, rng());\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be random integers.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {number} [maxValue=1000] - Maximum value\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static randInt(rows, columns, maxValue, rng) {\r\n      if (maxValue === undefined) maxValue = 1000;\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          var value = Math.floor(rng() * maxValue);\r\n          matrix.set(i, j, value);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} [columns=rows] - Number of columns\r\n         * @param {number} [value=1] - Value to fill the diagonal with\r\n         * @return {Matrix} - The new identity matrix\r\n         */\r\n    static eye(rows, columns, value) {\r\n      if (columns === undefined) columns = rows;\r\n      if (value === undefined) value = 1;\r\n      var min = Math.min(rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, value);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a diagonal matrix based on the given array.\r\n         * @param {Array} data - Array containing the data for the diagonal\r\n         * @param {number} [rows] - Number of rows (Default: data.length)\r\n         * @param {number} [columns] - Number of columns (Default: rows)\r\n         * @return {Matrix} - The new diagonal matrix\r\n         */\r\n    static diag(data, rows, columns) {\r\n      var l = data.length;\r\n      if (rows === undefined) rows = l;\r\n      if (columns === undefined) columns = rows;\r\n      var min = Math.min(l, rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, data[i]);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static min(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static max(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Check that the provided value is a Matrix and tries to instantiate one if not\r\n         * @param {*} value - The value to check\r\n         * @return {Matrix}\r\n         */\r\n    static checkMatrix(value) {\r\n      return Matrix.isMatrix(value) ? value : new this(value);\r\n    }\r\n\r\n    /**\r\n         * Returns true if the argument is a Matrix, false otherwise\r\n         * @param {*} value - The value to check\r\n         * @return {boolean}\r\n         */\r\n    static isMatrix(value) {\r\n      return (value != null) && (value.klass === 'Matrix');\r\n    }\r\n\r\n    /**\r\n         * @prop {number} size - The number of elements in the matrix.\r\n         */\r\n    get size() {\r\n      return this.rows * this.columns;\r\n    }\r\n\r\n    /**\r\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\r\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\r\n         * @return {Matrix} this\r\n         */\r\n    apply(callback) {\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError('callback must be a function');\r\n      }\r\n      var ii = this.rows;\r\n      var jj = this.columns;\r\n      for (var i = 0; i < ii; i++) {\r\n        for (var j = 0; j < jj; j++) {\r\n          callback.call(this, i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new 1D array filled row by row with the matrix values\r\n         * @return {Array}\r\n         */\r\n    to1DArray() {\r\n      var array = new Array(this.size);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          array[i * this.columns + j] = this.get(i, j);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n         * Returns a 2D array containing a copy of the data\r\n         * @return {Array}\r\n         */\r\n    to2DArray() {\r\n      var copy = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        copy[i] = new Array(this.columns);\r\n        for (var j = 0; j < this.columns; j++) {\r\n          copy[i][j] = this.get(i, j);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row\r\n         */\r\n    isRowVector() {\r\n      return this.rows === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one column\r\n         */\r\n    isColumnVector() {\r\n      return this.columns === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row or one column\r\n         */\r\n    isVector() {\r\n      return (this.rows === 1) || (this.columns === 1);\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has the same number of rows and columns\r\n         */\r\n    isSquare() {\r\n      return this.rows === this.columns;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\r\n         */\r\n    isSymmetric() {\r\n      if (this.isSquare()) {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j <= i; j++) {\r\n            if (this.get(i, j) !== this.get(j, i)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n          * @return true if the matrix is in echelon form\r\n          */\r\n    isEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isEchelonForm;\r\n    }\r\n\r\n    /**\r\n             * @return true if the matrix is in reduced echelon form\r\n             */\r\n    isReducedEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isReducedEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isReducedEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isReducedEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        for (let k = j + 1; k < this.rows; k++) {\r\n          if (this.get(i, k) !== 0) {\r\n            isReducedEchelonForm = false;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isReducedEchelonForm;\r\n    }\r\n\r\n    /**\r\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @param {number} value - The new value for the element\r\n         * @return {Matrix} this\r\n         */\r\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\r\n      throw new Error('set method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @return {number}\r\n         */\r\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\r\n      throw new Error('get method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\r\n         * rows of the matrix, and colRep times the number of columns of the matrix\r\n         * @param {number} rowRep - Number of times the rows should be repeated\r\n         * @param {number} colRep - Number of times the columns should be re\r\n         * @return {Matrix}\r\n         * @example\r\n         * var matrix = new Matrix([[1,2]]);\r\n         * matrix.repeat(2); // [[1,2],[1,2]]\r\n         */\r\n    repeat(rowRep, colRep) {\r\n      rowRep = rowRep || 1;\r\n      colRep = colRep || 1;\r\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\r\n      for (var i = 0; i < rowRep; i++) {\r\n        for (var j = 0; j < colRep; j++) {\r\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Fills the matrix with a given value. All elements will be set to this value.\r\n         * @param {number} value - New value\r\n         * @return {Matrix} this\r\n         */\r\n    fill(value) {\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, value);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Negates the matrix. All elements will be multiplied by (-1)\r\n         * @return {Matrix} this\r\n         */\r\n    neg() {\r\n      return this.mulS(-1);\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Array}\r\n         */\r\n    getRow(index) {\r\n      checkRowIndex(this, index);\r\n      var row = new Array(this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        row[i] = this.get(index, i);\r\n      }\r\n      return row;\r\n    }\r\n\r\n    /**\r\n         * Returns a new row vector from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Matrix}\r\n         */\r\n    getRowVector(index) {\r\n      return this.constructor.rowVector(this.getRow(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a row at the given index\r\n         * @param {number} index - Row index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setRow(index, array) {\r\n      checkRowIndex(this, index);\r\n      array = checkRowVector(this, array);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two rows\r\n         * @param {number} row1 - First row index\r\n         * @param {number} row2 - Second row index\r\n         * @return {Matrix} this\r\n         */\r\n    swapRows(row1, row2) {\r\n      checkRowIndex(this, row1);\r\n      checkRowIndex(this, row2);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var temp = this.get(row1, i);\r\n        this.set(row1, i, this.get(row2, i));\r\n        this.set(row2, i, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Array}\r\n         */\r\n    getColumn(index) {\r\n      checkColumnIndex(this, index);\r\n      var column = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        column[i] = this.get(i, index);\r\n      }\r\n      return column;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column vector from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Matrix}\r\n         */\r\n    getColumnVector(index) {\r\n      return this.constructor.columnVector(this.getColumn(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a column at the given index\r\n         * @param {number} index - Column index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setColumn(index, array) {\r\n      checkColumnIndex(this, index);\r\n      array = checkColumnVector(this, array);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two columns\r\n         * @param {number} column1 - First column index\r\n         * @param {number} column2 - Second column index\r\n         * @return {Matrix} this\r\n         */\r\n    swapColumns(column1, column2) {\r\n      checkColumnIndex(this, column1);\r\n      checkColumnIndex(this, column2);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var temp = this.get(i, column1);\r\n        this.set(i, column1, this.get(i, column2));\r\n        this.set(i, column2, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each row by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each column by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a row with a scalar\r\n         * @param {number} index - Row index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulRow(index, value) {\r\n      checkRowIndex(this, index);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, this.get(index, i) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a column with a scalar\r\n         * @param {number} index - Column index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumn(index, value) {\r\n      checkColumnIndex(this, index);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, this.get(i, index) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of the matrix\r\n         * @return {number}\r\n         */\r\n    max() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value\r\n         * @return {Array}\r\n         */\r\n    maxIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of the matrix\r\n         * @return {number}\r\n         */\r\n    min() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value\r\n         * @return {Array}\r\n         */\r\n    minIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    maxRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    maxRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    minRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    minRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    maxColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    maxColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    minColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    minColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns an array containing the diagonal values of the matrix\r\n         * @return {Array}\r\n         */\r\n    diag() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var diag = new Array(min);\r\n      for (var i = 0; i < min; i++) {\r\n        diag[i] = this.get(i, i);\r\n      }\r\n      return diag;\r\n    }\r\n\r\n    /**\r\n         * Returns the sum by the argument given, if no argument given,\r\n         * it returns the sum of all elements of the matrix.\r\n         * @param {string} by - sum by 'row' or 'column'.\r\n         * @return {Matrix|number}\r\n         */\r\n    sum(by) {\r\n      switch (by) {\r\n        case 'row':\r\n          return sumByRow(this);\r\n        case 'column':\r\n          return sumByColumn(this);\r\n        default:\r\n          return sumAll(this);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns the mean of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    mean() {\r\n      return this.sum() / this.size;\r\n    }\r\n\r\n    /**\r\n         * Returns the product of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    prod() {\r\n      var prod = 1;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          prod *= this.get(i, j);\r\n        }\r\n      }\r\n      return prod;\r\n    }\r\n\r\n    /**\r\n         * Returns the norm of a matrix.\r\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\r\n         * @return {number}\r\n         */\r\n    norm(type = 'frobenius') {\r\n      var result = 0;\r\n      if (type === 'max') {\r\n        return this.max();\r\n      } else if (type === 'frobenius') {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j < this.columns; j++) {\r\n            result = result + this.get(i, j) * this.get(i, j);\r\n          }\r\n        }\r\n        return Math.sqrt(result);\r\n      } else {\r\n        throw new RangeError(`unknown norm type: ${type}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\r\n         * @return {Matrix} this\r\n         */\r\n    cumulativeSum() {\r\n      var sum = 0;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          sum += this.get(i, j);\r\n          this.set(i, j, sum);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Computes the dot (scalar) product between the matrix and another\r\n         * @param {Matrix} vector2 vector\r\n         * @return {number}\r\n         */\r\n    dot(vector2) {\r\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n      var vector1 = this.to1DArray();\r\n      if (vector1.length !== vector2.length) {\r\n        throw new RangeError('vectors do not have the same size');\r\n      }\r\n      var dot = 0;\r\n      for (var i = 0; i < vector1.length; i++) {\r\n        dot += vector1[i] * vector2[i];\r\n      }\r\n      return dot;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between this and other\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    mmul(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n      if (this.columns !== other.rows) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\r\n      }\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m, p);\r\n\r\n      var Bcolj = new Array(n);\r\n      for (var j = 0; j < p; j++) {\r\n        for (var k = 0; k < n; k++) {\r\n          Bcolj[k] = other.get(k, j);\r\n        }\r\n\r\n        for (var i = 0; i < m; i++) {\r\n          var s = 0;\r\n          for (k = 0; k < n; k++) {\r\n            s += this.get(i, k) * Bcolj[k];\r\n          }\r\n\r\n          result.set(i, j, s);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    strassen2x2(other) {\r\n      var result = new this.constructor[Symbol.species](2, 2);\r\n      const a11 = this.get(0, 0);\r\n      const b11 = other.get(0, 0);\r\n      const a12 = this.get(0, 1);\r\n      const b12 = other.get(0, 1);\r\n      const a21 = this.get(1, 0);\r\n      const b21 = other.get(1, 0);\r\n      const a22 = this.get(1, 1);\r\n      const b22 = other.get(1, 1);\r\n\r\n      // Compute intermediate values.\r\n      const m1 = (a11 + a22) * (b11 + b22);\r\n      const m2 = (a21 + a22) * b11;\r\n      const m3 = a11 * (b12 - b22);\r\n      const m4 = a22 * (b21 - b11);\r\n      const m5 = (a11 + a12) * b22;\r\n      const m6 = (a21 - a11) * (b11 + b12);\r\n      const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n      // Combine intermediate values into the output.\r\n      const c00 = m1 + m4 - m5 + m7;\r\n      const c01 = m3 + m5;\r\n      const c10 = m2 + m4;\r\n      const c11 = m1 - m2 + m3 + m6;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      return result;\r\n    }\r\n\r\n    strassen3x3(other) {\r\n      var result = new this.constructor[Symbol.species](3, 3);\r\n\r\n      const a00 = this.get(0, 0);\r\n      const a01 = this.get(0, 1);\r\n      const a02 = this.get(0, 2);\r\n      const a10 = this.get(1, 0);\r\n      const a11 = this.get(1, 1);\r\n      const a12 = this.get(1, 2);\r\n      const a20 = this.get(2, 0);\r\n      const a21 = this.get(2, 1);\r\n      const a22 = this.get(2, 2);\r\n\r\n      const b00 = other.get(0, 0);\r\n      const b01 = other.get(0, 1);\r\n      const b02 = other.get(0, 2);\r\n      const b10 = other.get(1, 0);\r\n      const b11 = other.get(1, 1);\r\n      const b12 = other.get(1, 2);\r\n      const b20 = other.get(2, 0);\r\n      const b21 = other.get(2, 1);\r\n      const b22 = other.get(2, 2);\r\n\r\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n      const m2 = (a00 - a10) * (-b01 + b11);\r\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n      const m5 = (a10 + a11) * (-b00 + b01);\r\n      const m6 = a00 * b00;\r\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n      const m8 = (-a00 + a20) * (b02 - b12);\r\n      const m9 = (a20 + a21) * (-b00 + b02);\r\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n      const m13 = (a02 - a22) * (b11 - b21);\r\n      const m14 = a02 * b20;\r\n      const m15 = (a21 + a22) * (-b20 + b21);\r\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n      const m17 = (a02 - a12) * (b12 - b22);\r\n      const m18 = (a11 + a12) * (-b20 + b22);\r\n      const m19 = a01 * b10;\r\n      const m20 = a12 * b21;\r\n      const m21 = a10 * b02;\r\n      const m22 = a20 * b01;\r\n      const m23 = a22 * b22;\r\n\r\n      const c00 = m6 + m14 + m19;\r\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n      const c11 = m2 + m4 + m5 + m6 + m20;\r\n      const c12 = m14 + m16 + m17 + m18 + m21;\r\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n      const c21 = m12 + m13 + m14 + m15 + m22;\r\n      const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(0, 2, c02);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      result.set(1, 2, c12);\r\n      result.set(2, 0, c20);\r\n      result.set(2, 1, c21);\r\n      result.set(2, 2, c22);\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\r\n         * @param {Matrix} y\r\n         * @return {Matrix}\r\n         */\r\n    mmulStrassen(y) {\r\n      var x = this.clone();\r\n      var r1 = x.rows;\r\n      var c1 = x.columns;\r\n      var r2 = y.rows;\r\n      var c2 = y.columns;\r\n      if (c1 !== r2) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\r\n      }\r\n\r\n      // Put a matrix into the top left of a matrix of zeros.\r\n      // `rows` and `cols` are the dimensions of the output matrix.\r\n      function embed(mat, rows, cols) {\r\n        var r = mat.rows;\r\n        var c = mat.columns;\r\n        if ((r === rows) && (c === cols)) {\r\n          return mat;\r\n        } else {\r\n          var resultat = Matrix.zeros(rows, cols);\r\n          resultat = resultat.setSubMatrix(mat, 0, 0);\r\n          return resultat;\r\n        }\r\n      }\r\n\r\n\r\n      // Make sure both matrices are the same size.\r\n      // This is exclusively for simplicity:\r\n      // this algorithm can be implemented with matrices of different sizes.\r\n\r\n      var r = Math.max(r1, r2);\r\n      var c = Math.max(c1, c2);\r\n      x = embed(x, r, c);\r\n      y = embed(y, r, c);\r\n\r\n      // Our recursive multiplication function.\r\n      function blockMult(a, b, rows, cols) {\r\n        // For small matrices, resort to naive multiplication.\r\n        if (rows <= 512 || cols <= 512) {\r\n          return a.mmul(b); // a is equivalent to this\r\n        }\r\n\r\n        // Apply dynamic padding.\r\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\r\n          a = embed(a, rows + 1, cols + 1);\r\n          b = embed(b, rows + 1, cols + 1);\r\n        } else if (rows % 2 === 1) {\r\n          a = embed(a, rows + 1, cols);\r\n          b = embed(b, rows + 1, cols);\r\n        } else if (cols % 2 === 1) {\r\n          a = embed(a, rows, cols + 1);\r\n          b = embed(b, rows, cols + 1);\r\n        }\r\n\r\n        var halfRows = parseInt(a.rows / 2, 10);\r\n        var halfCols = parseInt(a.columns / 2, 10);\r\n        // Subdivide input matrices.\r\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n        // Compute intermediate values.\r\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\r\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\r\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\r\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\r\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\r\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\r\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\r\n\r\n        // Combine intermediate values into the output.\r\n        var c11 = Matrix.add(m1, m4);\r\n        c11.sub(m5);\r\n        c11.add(m7);\r\n        var c12 = Matrix.add(m3, m5);\r\n        var c21 = Matrix.add(m2, m4);\r\n        var c22 = Matrix.sub(m1, m2);\r\n        c22.add(m3);\r\n        c22.add(m6);\r\n\r\n        // Crop output to the desired size (undo dynamic padding).\r\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n        resultat = resultat.setSubMatrix(c11, 0, 0);\r\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n      }\r\n      return blockMult(x, y, r, c);\r\n    }\r\n\r\n    /**\r\n         * Returns a row-by-row scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The scaled matrix\r\n         */\r\n    scaleRows(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var scaled = rescale(this.getRow(i), { min, max });\r\n        newMatrix.setRow(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column-by-column scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The new scaled matrix\r\n         * @example\r\n         * var matrix = new Matrix([[1,2],[-1,0]]);\r\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\r\n         */\r\n    scaleColumns(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var scaled = rescale(this.getColumn(i), {\r\n          min: min,\r\n          max: max\r\n        });\r\n        newMatrix.setColumn(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n\r\n    /**\r\n         * Returns the Kronecker product (also known as tensor product) between this and other\r\n         * See https://en.wikipedia.org/wiki/Kronecker_product\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    kroneckerProduct(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.rows;\r\n      var q = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m * p, n * q);\r\n      for (var i = 0; i < m; i++) {\r\n        for (var j = 0; j < n; j++) {\r\n          for (var k = 0; k < p; k++) {\r\n            for (var l = 0; l < q; l++) {\r\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Transposes the matrix and returns a new one containing the result\r\n         * @return {Matrix}\r\n         */\r\n    transpose() {\r\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          result.set(j, i, this.get(i, j));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Sorts the rows (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortRows(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.setRow(i, this.getRow(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Sorts the columns (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortColumns(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix\r\n         * @param {number} startRow - First row index\r\n         * @param {number} endRow - Last row index\r\n         * @param {number} startColumn - First column index\r\n         * @param {number} endColumn - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrix(startRow, endRow, startColumn, endColumn) {\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\r\n      for (var i = startRow; i <= endRow; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of row indices\r\n         * @param {Array} indices - Array containing the row indices\r\n         * @param {number} [startColumn = 0] - First column index\r\n         * @param {number} [endColumn = this.columns-1] - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixRow(indices, startColumn, endColumn) {\r\n      if (startColumn === undefined) startColumn = 0;\r\n      if (endColumn === undefined) endColumn = this.columns - 1;\r\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.rows) {\r\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of column indices\r\n         * @param {Array} indices - Array containing the column indices\r\n         * @param {number} [startRow = 0] - First row index\r\n         * @param {number} [endRow = this.rows-1] - Last row index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixColumn(indices, startRow, endRow) {\r\n      if (startRow === undefined) startRow = 0;\r\n      if (endRow === undefined) endRow = this.rows - 1;\r\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startRow; j <= endRow; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.columns) {\r\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Set a part of the matrix to the given sub-matrix\r\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\r\n         * @param {number} startRow - The index of the first row to set\r\n         * @param {number} startColumn - The index of the first column to set\r\n         * @return {Matrix}\r\n         */\r\n    setSubMatrix(matrix, startRow, startColumn) {\r\n      matrix = this.constructor.checkMatrix(matrix);\r\n      var endRow = startRow + matrix.rows - 1;\r\n      var endColumn = startColumn + matrix.columns - 1;\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      for (var i = 0; i < matrix.rows; i++) {\r\n        for (var j = 0; j < matrix.columns; j++) {\r\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Return a new matrix based on a selection of rows and columns\r\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\r\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    selection(rowIndices, columnIndices) {\r\n      var indices = checkIndices(this, rowIndices, columnIndices);\r\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\r\n      for (var i = 0; i < indices.row.length; i++) {\r\n        var rowIndex = indices.row[i];\r\n        for (var j = 0; j < indices.column.length; j++) {\r\n          var columnIndex = indices.column[j];\r\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns the trace of the matrix (sum of the diagonal elements)\r\n         * @return {number}\r\n         */\r\n    trace() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var trace = 0;\r\n      for (var i = 0; i < min; i++) {\r\n        trace += this.get(i, i);\r\n      }\r\n      return trace;\r\n    }\r\n\r\n    /*\r\n         Matrix views\r\n         */\r\n\r\n    /**\r\n         * Returns a view of the transposition of the matrix\r\n         * @return {MatrixTransposeView}\r\n         */\r\n    transposeView() {\r\n      return new MatrixTransposeView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row vector with the given index\r\n         * @param {number} row - row index of the vector\r\n         * @return {MatrixRowView}\r\n         */\r\n    rowView(row) {\r\n      checkRowIndex(this, row);\r\n      return new MatrixRowView(this, row);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column vector with the given index\r\n         * @param {number} column - column index of the vector\r\n         * @return {MatrixColumnView}\r\n         */\r\n    columnView(column) {\r\n      checkColumnIndex(this, column);\r\n      return new MatrixColumnView(this, column);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the row axis\r\n         * @return {MatrixFlipRowView}\r\n         */\r\n    flipRowView() {\r\n      return new MatrixFlipRowView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the column axis\r\n         * @return {MatrixFlipColumnView}\r\n         */\r\n    flipColumnView() {\r\n      return new MatrixFlipColumnView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of a submatrix giving the index boundaries\r\n         * @param {number} startRow - first row index of the submatrix\r\n         * @param {number} endRow - last row index of the submatrix\r\n         * @param {number} startColumn - first column index of the submatrix\r\n         * @param {number} endColumn - last column index of the submatrix\r\n         * @return {MatrixSubView}\r\n         */\r\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\r\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the cross of the row indices and the column indices\r\n         * @example\r\n         * // resulting vector is [[2], [2]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\r\n         * @param {Array<number>} rowIndices\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixSelectionView}\r\n         */\r\n    selectionView(rowIndices, columnIndices) {\r\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row indices\r\n         * @example\r\n         * // resulting vector is [[1,2,3], [1,2,3]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\r\n         * @param {Array<number>} rowIndices\r\n         * @return {MatrixRowSelectionView}\r\n         */\r\n    rowSelectionView(rowIndices) {\r\n      return new MatrixRowSelectionView(this, rowIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column indices\r\n         * @example\r\n         * // resulting vector is [[2, 2], [5, 5]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixColumnSelectionView}\r\n         */\r\n    columnSelectionView(columnIndices) {\r\n      return new MatrixColumnSelectionView(this, columnIndices);\r\n    }\r\n\r\n\r\n    /**\r\n        * Calculates and returns the determinant of a matrix as a Number\r\n        * @example\r\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\r\n        * @return {number}\r\n        */\r\n    det() {\r\n      if (this.isSquare()) {\r\n        var a, b, c, d;\r\n        if (this.columns === 2) {\r\n          // 2 x 2 matrix\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(1, 0);\r\n          d = this.get(1, 1);\r\n\r\n          return a * d - (b * c);\r\n        } else if (this.columns === 3) {\r\n          // 3 x 3 matrix\r\n          var subMatrix0, subMatrix1, subMatrix2;\r\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\r\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\r\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(0, 2);\r\n\r\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\r\n        } else {\r\n          // general purpose determinant using the LU decomposition\r\n          return new LuDecomposition(this).determinant;\r\n        }\r\n      } else {\r\n        throw Error('Determinant can only be calculated for a square matrix.');\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns inverse of a matrix if it exists or the pseudoinverse\r\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\r\n         * @return {Matrix} the (pseudo)inverted matrix.\r\n         */\r\n    pseudoInverse(threshold) {\r\n      if (threshold === undefined) threshold = Number.EPSILON;\r\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\r\n\r\n      var U = svdSolution.leftSingularVectors;\r\n      var V = svdSolution.rightSingularVectors;\r\n      var s = svdSolution.diagonal;\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n        if (Math.abs(s[i]) > threshold) {\r\n          s[i] = 1.0 / s[i];\r\n        } else {\r\n          s[i] = 0.0;\r\n        }\r\n      }\r\n\r\n      // convert list to diagonal\r\n      s = this.constructor[Symbol.species].diag(s);\r\n      return V.mmul(s.mmul(U.transposeView()));\r\n    }\r\n\r\n    /**\r\n         * Creates an exact and independent copy of the matrix\r\n         * @return {Matrix}\r\n         */\r\n    clone() {\r\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\r\n      for (var row = 0; row < this.rows; row++) {\r\n        for (var column = 0; column < this.columns; column++) {\r\n          newMatrix.set(row, column, this.get(row, column));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n  }\r\n\r\n  Matrix.prototype.klass = 'Matrix';\r\n\r\n  function compareNumbers(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n     Synonyms\r\n     */\r\n\r\n  Matrix.random = Matrix.rand;\r\n  Matrix.diagonal = Matrix.diag;\r\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\r\n  Matrix.identity = Matrix.eye;\r\n  Matrix.prototype.negate = Matrix.prototype.neg;\r\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\r\n  Matrix.prototype.determinant = Matrix.prototype.det;\r\n\r\n  /*\r\n     Add dynamically instance and static methods for mathematical operations\r\n     */\r\n\r\n  var inplaceOperator = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var inplaceOperatorScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% value);\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceOperatorMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticOperator = `\r\n(function %name%(matrix, value) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(value);\r\n})\r\n`;\r\n\r\n  var inplaceMethod = `\r\n(function %name%() {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethod = `\r\n(function %name%(matrix) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%();\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithArgs = `\r\n(function %name%(%args%) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), %args%));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethodWithArgs = `\r\n(function %name%(matrix, %args%) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(%args%);\r\n})\r\n`;\r\n\r\n\r\n  var inplaceMethodWithOneArgScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), value));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n  var inplaceMethodWithOneArgMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithOneArg = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var staticMethodWithOneArg = staticMethodWithArgs;\r\n\r\n  var operators = [\r\n    // Arithmetic operators\r\n    ['+', 'add'],\r\n    ['-', 'sub', 'subtract'],\r\n    ['*', 'mul', 'multiply'],\r\n    ['/', 'div', 'divide'],\r\n    ['%', 'mod', 'modulus'],\r\n    // Bitwise operators\r\n    ['&', 'and'],\r\n    ['|', 'or'],\r\n    ['^', 'xor'],\r\n    ['<<', 'leftShift'],\r\n    ['>>', 'signPropagatingRightShift'],\r\n    ['>>>', 'rightShift', 'zeroFillRightShift']\r\n  ];\r\n\r\n  var i;\r\n  var eval2 = eval; // eslint-disable-line no-eval\r\n  for (var operator of operators) {\r\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\r\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\r\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\r\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\r\n    for (i = 1; i < operator.length; i++) {\r\n      Matrix.prototype[operator[i]] = inplaceOp;\r\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\r\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\r\n      Matrix[operator[i]] = staticOp;\r\n    }\r\n  }\r\n\r\n  var methods = [['~', 'not']];\r\n\r\n  [\r\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\r\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\r\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n  ].forEach(function (mathMethod) {\r\n    methods.push([`Math.${mathMethod}`, mathMethod]);\r\n  });\r\n\r\n  for (var method of methods) {\r\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\r\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\r\n    for (i = 1; i < method.length; i++) {\r\n      Matrix.prototype[method[i]] = inplaceMeth;\r\n      Matrix[method[i]] = staticMeth;\r\n    }\r\n  }\r\n\r\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\r\n\r\n  for (var methodWithArg of methodsWithArgs) {\r\n    var args = 'arg0';\r\n    for (i = 1; i < methodWithArg[1]; i++) {\r\n      args += `, arg${i}`;\r\n    }\r\n    if (methodWithArg[1] !== 1) {\r\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\r\n        name: methodWithArg[2],\r\n        method: methodWithArg[0],\r\n        args: args\r\n      }));\r\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\r\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\r\n      }\r\n    } else {\r\n      var tmplVar = {\r\n        name: methodWithArg[2],\r\n        args: args,\r\n        method: methodWithArg[0]\r\n      };\r\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\r\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\r\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\r\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\r\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\r\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\r\n        Matrix[methodWithArg[i]] = staticMethod2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function fillTemplateFunction(template, values) {\r\n    for (var value in values) {\r\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\r\n    }\r\n    return template;\r\n  }\r\n\r\n  return Matrix;\r\n}\r\n","import AbstractMatrix from './abstractMatrix';\r\nimport {\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRowIndex,\r\n  checkRowVector\r\n} from './util';\r\n\r\nexport default class Matrix extends AbstractMatrix(Array) {\r\n  constructor(nRows, nColumns) {\r\n    var i;\r\n    if (arguments.length === 1 && typeof nRows === 'number') {\r\n      return new Array(nRows);\r\n    }\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      super(nRows);\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (i = 0; i < nRows; i++) {\r\n          this[i] = new Array(nColumns);\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const matrix = nRows;\r\n      nRows = matrix.length;\r\n      nColumns = matrix[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element'\r\n        );\r\n      }\r\n      super(nRows);\r\n      for (i = 0; i < nRows; i++) {\r\n        if (matrix[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this[i] = [].concat(matrix[i]);\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array'\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this[rowIndex][columnIndex];\r\n  }\r\n\r\n  /**\r\n   * Removes a row from the given index\r\n   * @param {number} index - Row index\r\n   * @return {Matrix} this\r\n   */\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a row at the given index\r\n   * @param {number} [index = this.rows] - Row index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = checkRowVector(this, array, true);\r\n    this.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a column from the given index\r\n   * @param {number} index - Column index\r\n   * @return {Matrix} this\r\n   */\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 1);\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a column at the given index\r\n   * @param {number} [index = this.columns] - Column index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 0, array[i]);\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix1D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix1D\r\n   * @param {Array<number>} data\r\n   * @param {object} [options]\r\n   * @param {object} [options.rows = 1]\r\n   */\r\n  constructor(data, options = {}) {\r\n    const { rows = 1 } = options;\r\n\r\n    if (data.length % rows !== 0) {\r\n      throw new Error('the data length is not divisible by the number of rows');\r\n    }\r\n    super();\r\n    this.rows = rows;\r\n    this.columns = data.length / rows;\r\n    this.data = data;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    this.data[index] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    return this.data[index];\r\n  }\r\n\r\n  _calculateIndex(row, column) {\r\n    return row * this.columns + column;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix2D\r\n   * @param {Array<Array<number>>} data\r\n   */\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import WrapperMatrix1D from './WrapperMatrix1D';\r\nimport WrapperMatrix2D from './WrapperMatrix2D';\r\n\r\n/**\r\n * @param {Array<Array<number>>|Array<number>} array\r\n * @param {object} [options]\r\n * @param {object} [options.rows = 1]\r\n * @return {WrapperMatrix1D|WrapperMatrix2D}\r\n */\r\nexport function wrap(array, options) {\r\n  if (Array.isArray(array)) {\r\n    if (array[0] && Array.isArray(array[0])) {\r\n      return new WrapperMatrix2D(array);\r\n    } else {\r\n      return new WrapperMatrix1D(array, options);\r\n    }\r\n  } else {\r\n    throw new Error('the argument is not an array');\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse } from './util';\r\n\r\n/**\r\n * @class QrDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class QrDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var qr = value.clone();\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n    var rdiag = new Array(n);\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      var nrm = 0;\r\n      for (i = k; i < m; i++) {\r\n        nrm = hypotenuse(nrm, qr.get(i, k));\r\n      }\r\n      if (nrm !== 0) {\r\n        if (qr.get(k, k) < 0) {\r\n          nrm = -nrm;\r\n        }\r\n        for (i = k; i < m; i++) {\r\n          qr.set(i, k, qr.get(i, k) / nrm);\r\n        }\r\n        qr.set(k, k, qr.get(k, k) + 1);\r\n        for (j = k + 1; j < n; j++) {\r\n          s = 0;\r\n          for (i = k; i < m; i++) {\r\n            s += qr.get(i, k) * qr.get(i, j);\r\n          }\r\n          s = -s / qr.get(k, k);\r\n          for (i = k; i < m; i++) {\r\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\r\n          }\r\n        }\r\n      }\r\n      rdiag[k] = -nrm;\r\n    }\r\n\r\n    this.QR = qr;\r\n    this.Rdiag = rdiag;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var qr = QrDecomposition(A);\r\n   * var x = qr.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var qr = this.QR;\r\n    var m = qr.rows;\r\n\r\n    if (value.rows !== m) {\r\n      throw new Error('Matrix row dimensions must agree');\r\n    }\r\n    if (!this.isFullRank()) {\r\n      throw new Error('Matrix is rank deficient');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.clone();\r\n    var n = qr.columns;\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        s = 0;\r\n        for (i = k; i < m; i++) {\r\n          s += qr[i][k] * X[i][j];\r\n        }\r\n        s = -s / qr[k][k];\r\n        for (i = k; i < m; i++) {\r\n          X[i][j] += s * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = n - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= this.Rdiag[k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n\r\n    return X.subMatrix(0, n - 1, 0, count - 1);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isFullRank() {\r\n    var columns = this.QR.columns;\r\n    for (var i = 0; i < columns; i++) {\r\n      if (this.Rdiag[i] === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var qr = this.QR;\r\n    var n = qr.columns;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        if (i < j) {\r\n          X[i][j] = qr[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = this.Rdiag[i];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get orthogonalMatrix() {\r\n    var qr = this.QR;\r\n    var rows = qr.rows;\r\n    var columns = qr.columns;\r\n    var X = new Matrix(rows, columns);\r\n    var i, j, k, s;\r\n\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (i = 0; i < rows; i++) {\r\n        X[i][k] = 0;\r\n      }\r\n      X[k][k] = 1;\r\n      for (j = k; j < columns; j++) {\r\n        if (qr[k][k] !== 0) {\r\n          s = 0;\r\n          for (i = k; i < rows; i++) {\r\n            s += qr[i][k] * X[i][j];\r\n          }\r\n\r\n          s = -s / qr[k][k];\r\n\r\n          for (i = k; i < rows; i++) {\r\n            X[i][j] += s * qr[i][k];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n","import LuDecomposition from './dc/lu';\r\nimport QrDecomposition from './dc/qr';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\nimport { Matrix, WrapperMatrix2D } from './index';\r\n\r\n/**\r\n * Computes the inverse of a Matrix\r\n * @param {Matrix} matrix\r\n * @param {boolean} [useSVD=false]\r\n * @return {Matrix}\r\n */\r\nexport function inverse(matrix, useSVD = false) {\r\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(matrix).inverse();\r\n  } else {\r\n    return solve(matrix, Matrix.eye(matrix.rows));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Matrix} leftHandSide\r\n * @param {Matrix} rightHandSide\r\n * @param {boolean} [useSVD = false]\r\n * @return {Matrix}\r\n */\r\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\r\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\r\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\r\n  } else {\r\n    return leftHandSide.isSquare()\r\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\r\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\r\n  }\r\n}\r\n","import max from 'ml-array-max';\r\n\r\nimport Matrix from './matrix';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\n// function used by rowsDependencies\r\nfunction xrange(n, exception) {\r\n  var range = [];\r\n  for (var i = 0; i < n; i++) {\r\n    if (i !== exception) {\r\n      range.push(i);\r\n    }\r\n  }\r\n  return range;\r\n}\r\n\r\n// function used by rowsDependencies\r\nfunction dependenciesOneRow(\r\n  error,\r\n  matrix,\r\n  index,\r\n  thresholdValue = 10e-10,\r\n  thresholdError = 10e-10\r\n) {\r\n  if (error > thresholdError) {\r\n    return new Array(matrix.rows + 1).fill(0);\r\n  } else {\r\n    var returnArray = matrix.addRow(index, [0]);\r\n    for (var i = 0; i < returnArray.rows; i++) {\r\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\r\n        returnArray.set(i, 0, 0);\r\n      }\r\n    }\r\n    return returnArray.to1DArray();\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a matrix which represents the dependencies between rows.\r\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\r\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\r\n * @param {Matrix} matrix\r\n * @param {Object} [options] includes thresholdValue and thresholdError.\r\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\r\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\r\n * @return {Matrix} the matrix which represents the dependencies between rows.\r\n */\r\n\r\nexport function linearDependencies(matrix, options = {}) {\r\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\r\n\r\n  var n = matrix.rows;\r\n  var results = new Matrix(n, n);\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    var b = Matrix.columnVector(matrix.getRow(i));\r\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\r\n    var svd = new SingularValueDecomposition(Abis);\r\n    var x = svd.solve(b);\r\n    var error = max(\r\n      Matrix.sub(b, Abis.mmul(x))\r\n        .abs()\r\n        .to1DArray()\r\n    );\r\n    results.setRow(\r\n      i,\r\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\r\n    );\r\n  }\r\n  return results;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class EigenvalueDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\r\n * @param {Matrix} matrix\r\n * @param {object} [options]\r\n * @param {boolean} [options.assumeSymmetric=false]\r\n */\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    var n = matrix.columns;\r\n    var V = getFilled2DArray(n, n, 0);\r\n    var d = new Array(n);\r\n    var e = new Array(n);\r\n    var value = matrix;\r\n    var i, j;\r\n\r\n    var isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      var H = getFilled2DArray(n, n, 0);\r\n      var ort = new Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get realEigenvalues() {\r\n    return this.d;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get imaginaryEigenvalues() {\r\n    return this.e;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get eigenvectorMatrix() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    var n = this.n;\r\n    var e = this.e;\r\n    var d = this.d;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X[i][j] = 0;\r\n      }\r\n      X[i][i] = d[i];\r\n      if (e[i] > 0) {\r\n        X[i][i + 1] = e[i];\r\n      } else if (e[i] < 0) {\r\n        X[i][i - 1] = e[i];\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  var f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n        V[j][i] = 0;\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V[j][i] = f;\r\n        g = e[j] + V[j][j] * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V[k][j] * d[k];\r\n          e[k] += V[k][j] * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V[k][j] -= f * e[k] + g * d[k];\r\n        }\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V[n - 1][i] = V[i][i];\r\n    V[i][i] = 1;\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V[k][i + 1] / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V[k][i + 1] * V[k][j];\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V[k][j] -= g * d[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V[k][i + 1] = 0;\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n    V[n - 1][j] = 0;\r\n  }\r\n\r\n  V[n - 1][n - 1] = 1;\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  var f = 0;\r\n  var tst1 = 0;\r\n  var eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V[k][i + 1];\r\n            V[k][i + 1] = s * V[k][i] + c * h;\r\n            V[k][i] = c * V[k][i] - s * h;\r\n          }\r\n        }\r\n\r\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V[j][i];\r\n        V[j][i] = V[j][k];\r\n        V[j][k] = p;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  var low = 0;\r\n  var high = n - 1;\r\n  var f, g, h, i, j, m;\r\n  var scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H[i][m - 1]);\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H[i][m - 1] / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H[i][j] -= f * ort[i];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H[i][j] -= f * ort[j];\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H[m][m - 1] = scale * g;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V[i][j] = i === j ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H[m][m - 1] !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H[i][m - 1];\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V[i][j];\r\n        }\r\n\r\n        g = g / ort[m] / H[m][m - 1];\r\n        for (i = m; i <= high; i++) {\r\n          V[i][j] += g * ort[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  var n = nn - 1;\r\n  var low = 0;\r\n  var high = nn - 1;\r\n  var eps = Number.EPSILON;\r\n  var exshift = 0;\r\n  var norm = 0;\r\n  var p = 0;\r\n  var q = 0;\r\n  var r = 0;\r\n  var s = 0;\r\n  var z = 0;\r\n  var iter = 0;\r\n  var i, j, k, l, m, t, w, x, y;\r\n  var ra, sa, vr, vi;\r\n  var notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H[i][i];\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H[i][j]);\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H[l][l - 1]) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H[n][n] = H[n][n] + exshift;\r\n      d[n] = H[n][n];\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H[n][n - 1] * H[n - 1][n];\r\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H[n][n] = H[n][n] + exshift;\r\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\r\n      x = H[n][n];\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H[n][n - 1];\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H[n - 1][j];\r\n          H[n - 1][j] = q * z + p * H[n][j];\r\n          H[n][j] = q * H[n][j] - p * z;\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H[i][n - 1];\r\n          H[i][n - 1] = q * z + p * H[i][n];\r\n          H[i][n] = q * H[i][n] - p * z;\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V[i][n - 1];\r\n          V[i][n - 1] = q * z + p * V[i][n];\r\n          V[i][n] = q * V[i][n] - p * z;\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H[n][n];\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H[n - 1][n - 1];\r\n        w = H[n][n - 1] * H[n - 1][n];\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H[i][i] -= x;\r\n        }\r\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H[i][i] -= s;\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H[m][m];\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\r\n        q = H[m + 1][m + 1] - z - r - s;\r\n        r = H[m + 2][m + 1];\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H[m - 1][m - 1]) +\r\n                Math.abs(z) +\r\n                Math.abs(H[m + 1][m + 1])))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H[i][i - 2] = 0;\r\n        if (i > m + 2) {\r\n          H[i][i - 3] = 0;\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H[k][k - 1];\r\n          q = H[k + 1][k - 1];\r\n          r = notlast ? H[k + 2][k - 1] : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H[k][k - 1] = -s * x;\r\n          } else if (l !== m) {\r\n            H[k][k - 1] = -H[k][k - 1];\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H[k][j] + q * H[k + 1][j];\r\n            if (notlast) {\r\n              p = p + r * H[k + 2][j];\r\n              H[k + 2][j] = H[k + 2][j] - p * z;\r\n            }\r\n\r\n            H[k][j] = H[k][j] - p * x;\r\n            H[k + 1][j] = H[k + 1][j] - p * y;\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H[i][k] + y * H[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * H[i][k + 2];\r\n              H[i][k + 2] = H[i][k + 2] - p * r;\r\n            }\r\n\r\n            H[i][k] = H[i][k] - p;\r\n            H[i][k + 1] = H[i][k + 1] - p * q;\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V[i][k] + y * V[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * V[i][k + 2];\r\n              V[i][k + 2] = V[i][k + 2] - p * r;\r\n            }\r\n\r\n            V[i][k] = V[i][k] - p;\r\n            V[i][k + 1] = V[i][k + 1] - p * q;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H[n][n] = 1;\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H[i][i] - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H[i][j] * H[j][n];\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H[i][n] = t;\r\n            H[i + 1][n] =\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\r\n          }\r\n\r\n          t = Math.abs(H[i][n]);\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\r\n        H[n - 1][n - 1] = q / H[n][n - 1];\r\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\r\n      } else {\r\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\r\n        H[n - 1][n - 1] = cdivres[0];\r\n        H[n - 1][n] = cdivres[1];\r\n      }\r\n\r\n      H[n][n - 1] = 0;\r\n      H[n][n] = 1;\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H[i][j] * H[j][n - 1];\r\n          sa = sa + H[i][j] * H[j][n];\r\n        }\r\n\r\n        w = H[i][i] - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi\r\n            );\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\r\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\r\n            } else {\r\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\r\n              H[i + 1][n - 1] = cdivres[0];\r\n              H[i + 1][n] = cdivres[1];\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n - 1] = H[j][n - 1] / t;\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V[i][j] = H[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V[i][k] * H[k][j];\r\n      }\r\n      V[i][j] = z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  var r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class CholeskyDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class CholeskyDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n    if (!value.isSymmetric()) {\r\n      throw new Error('Matrix is not symmetric');\r\n    }\r\n\r\n    var a = value;\r\n    var dimension = a.rows;\r\n    var l = new Matrix(dimension, dimension);\r\n    var positiveDefinite = true;\r\n    var i, j, k;\r\n\r\n    for (j = 0; j < dimension; j++) {\r\n      var Lrowj = l[j];\r\n      var d = 0;\r\n      for (k = 0; k < j; k++) {\r\n        var Lrowk = l[k];\r\n        var s = 0;\r\n        for (i = 0; i < k; i++) {\r\n          s += Lrowk[i] * Lrowj[i];\r\n        }\r\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\r\n        d = d + s * s;\r\n      }\r\n\r\n      d = a.get(j, j) - d;\r\n\r\n      positiveDefinite &= d > 0;\r\n      l[j][j] = Math.sqrt(Math.max(d, 0));\r\n      for (k = j + 1; k < dimension; k++) {\r\n        l[j][k] = 0;\r\n      }\r\n    }\r\n\r\n    if (!positiveDefinite) {\r\n      throw new Error('Matrix is not positive definite');\r\n    }\r\n\r\n    this.L = l;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var l = this.L;\r\n    var dimension = l.rows;\r\n\r\n    if (value.rows !== dimension) {\r\n      throw new Error('Matrix dimensions do not match');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var B = value.clone();\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < dimension; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = 0; i < k; i++) {\r\n          B[k][j] -= B[i][j] * l[k][i];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    for (k = dimension - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = k + 1; i < dimension; i++) {\r\n          B[k][j] -= B[i][j] * l[i][k];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    return B;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    return this.L;\r\n  }\r\n}\r\n","export { default, default as Matrix } from './matrix';\r\nexport { default as abstractMatrix } from './abstractMatrix';\r\n\r\nexport { wrap } from './wrap/wrap';\r\nexport { default as WrapperMatrix2D } from './wrap/WrapperMatrix2D';\r\nexport { default as WrapperMatrix1D } from './wrap/WrapperMatrix1D';\r\n\r\nexport { solve, inverse } from './decompositions';\r\nexport { linearDependencies } from './linearDependencies';\r\nexport {\r\n  default as SingularValueDecomposition,\r\n  default as SVD\r\n} from './dc/svd.js';\r\nexport {\r\n  default as EigenvalueDecomposition,\r\n  default as EVD\r\n} from './dc/evd.js';\r\nexport {\r\n  default as CholeskyDecomposition,\r\n  default as CHO\r\n} from './dc/cholesky.js';\r\nexport { default as LuDecomposition, default as LU } from './dc/lu.js';\r\nexport { default as QrDecomposition, default as QR } from './dc/qr.js';\r\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nfunction squaredEuclidean(p, q) {\n    var d = 0;\n    for (var i = 0; i < p.length; i++) {\n        d += (p[i] - q[i]) * (p[i] - q[i]);\n    }\n    return d;\n}\n\nfunction euclidean(p, q) {\n    return Math.sqrt(squaredEuclidean(p, q));\n}\n\nmodule.exports = euclidean;\neuclidean.squared = squaredEuclidean;\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction mean(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sum = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sum += input[i];\n  }\n\n  return sum / input.length;\n}\n\nexport default mean;\n","module.exports = function(haystack, needle, comparator, low, high) {\n  var mid, cmp;\n\n  if(low === undefined)\n    low = 0;\n\n  else {\n    low = low|0;\n    if(low < 0 || low >= haystack.length)\n      throw new RangeError(\"invalid lower bound\");\n  }\n\n  if(high === undefined)\n    high = haystack.length - 1;\n\n  else {\n    high = high|0;\n    if(high < low || high >= haystack.length)\n      throw new RangeError(\"invalid upper bound\");\n  }\n\n  while(low <= high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle, mid, haystack);\n\n    /* Too low. */\n    if(cmp < 0.0)\n      low  = mid + 1;\n\n    /* Too high. */\n    else if(cmp > 0.0)\n      high = mid - 1;\n\n    /* Key found. */\n    else\n      return mid;\n  }\n\n  /* Key not found. */\n  return ~low;\n}\n","'use strict';\nvar numberIsNan = require('number-is-nan');\n\nfunction assertNum(x) {\n\tif (typeof x !== 'number' || numberIsNan(x)) {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.asc = function (a, b) {\n\tassertNum(a);\n\tassertNum(b);\n\treturn a - b;\n};\n\nexports.desc = function (a, b) {\n\tassertNum(a);\n\tassertNum(b);\n\treturn b - a;\n};\n","import Matrix from 'ml-matrix';\nimport meanArray from 'ml-array-mean';\n\n/**\n * @private\n * return an array of probabilities of each class\n * @param {Array} array - contains the classes\n * @param {number} numberOfClasses\n * @return {Matrix} - rowVector of probabilities.\n */\nexport function toDiscreteDistribution(array, numberOfClasses) {\n    var counts = new Array(numberOfClasses).fill(0);\n    for (var i = 0; i < array.length; ++i) {\n        counts[array[i]] += 1 / array.length;\n    }\n\n    return Matrix.rowVector(counts);\n}\n\n/**\n * @private\n * Retrieves the impurity of array of predictions\n * @param {Array} array - predictions.\n * @return {number} Gini impurity\n */\nexport function giniImpurity(array) {\n    if (array.length === 0) {\n        return 0;\n    }\n\n    var probabilities = toDiscreteDistribution(array, getNumberOfClasses(array))[0];\n\n    var sum = 0.0;\n    for (var i = 0; i < probabilities.length; ++i) {\n        sum += probabilities[i] * probabilities[i];\n    }\n\n    return 1 - sum;\n}\n\n/**\n * @private\n * Return the number of classes given the array of predictions.\n * @param {Array} array - predictions.\n * @return {number} Number of classes.\n */\nexport function getNumberOfClasses(array) {\n    return array.filter(function (val, i, arr) {\n        return arr.indexOf(val) === i;\n    }).length;\n}\n\n/**\n * @private\n * Calculates the Gini Gain of an array of predictions and those predictions splitted by a feature.\n * @para {Array} array - Predictions\n * @param {object} splitted - Object with elements \"greater\" and \"lesser\" that contains an array of predictions splitted.\n * @return {number} - Gini Gain.\n */\n\nexport function giniGain(array, splitted) {\n    var splitsImpurity = 0.0;\n    var splits = ['greater', 'lesser'];\n\n    for (var i = 0; i < splits.length; ++i) {\n        var currentSplit = splitted[splits[i]];\n        splitsImpurity += giniImpurity(currentSplit) * currentSplit.length / array.length;\n    }\n\n    return giniImpurity(array) - splitsImpurity;\n}\n\n/**\n * @private\n * Calculates the squared error of a predictions values.\n * @param {Array} array - predictions values\n * @return {number} squared error.\n */\nexport function squaredError(array) {\n    var l = array.length;\n\n    var m = meanArray(array);\n    var squaredError = 0.0;\n\n    for (var i = 0; i < l; ++i) {\n        var currentElement = array[i];\n        squaredError += (currentElement - m) * (currentElement - m);\n    }\n\n    return squaredError;\n}\n\n/**\n * @private\n * Calculates the sum of squared error of the two arrays that contains the splitted values.\n * @param {Array} array - this argument is no necessary but is used to fit with the main interface.\n * @param {object} splitted - Object with elements \"greater\" and \"lesser\" that contains an array of predictions splitted.\n * @return {number} - sum of squared errors.\n */\nexport function regressionError(array, splitted) {\n    var error = 0.0;\n    var splits = ['greater', 'lesser'];\n\n    for (var i = 0; i < splits.length; ++i) {\n        var currentSplit = splitted[splits[i]];\n        error += squaredError(currentSplit);\n    }\n    return error;\n}\n\n/**\n * @private\n * Split the training set and values from a given column of the training set if is less than a value\n * @param {Matrix} X - Training set.\n * @param {Array} y - Training values.\n * @param {number} column - Column to split.\n * @param {number} value - value to split the Training set and values.\n * @return {object} - Object that contains the splitted values.\n */\nexport function matrixSplitter(X, y, column, value) {\n    var lesserX = [];\n    var greaterX = [];\n    var lesserY = [];\n    var greaterY = [];\n\n    for (var i = 0; i < X.rows; ++i) {\n        if (X[i][column] < value) {\n            lesserX.push(X[i]);\n            lesserY.push(y[i]);\n        } else {\n            greaterX.push(X[i]);\n            greaterY.push(y[i]);\n        }\n    }\n\n    return {\n        greaterX: greaterX,\n        greaterY: greaterY,\n        lesserX: lesserX,\n        lesserY: lesserY\n    };\n}\n\n/**\n * @private\n * Calculates the mean between two values\n * @param {number} a\n * @param {number} b\n * @return {number}\n */\nexport function mean(a, b) {\n    return (a + b) / 2;\n}\n\n/**\n * @private\n * Returns a list of tuples that contains the i-th element of each array.\n * @param {Array} a\n * @param {Array} b\n * @return {Array} list of tuples.\n */\nexport function zip(a, b) {\n    if (a.length !== b.length) {\n        throw new TypeError('Error on zip: the size of a: ' + a.length + ' is different from b: ' + b.length);\n    }\n\n    var ret = new Array(a.length);\n    for (var i = 0; i < a.length; ++i) {\n        ret[i] = [a[i], b[i]];\n    }\n\n    return ret;\n}\n","import Matrix from 'ml-matrix';\nimport * as Utils from './utils';\nimport mean from 'ml-array-mean';\n\nconst gainFunctions = {\n    gini: Utils.giniGain,\n    regression: Utils.regressionError\n};\n\nconst splitFunctions = {\n    mean: Utils.mean\n};\n\nexport default class TreeNode {\n\n    /**\n     * @private\n     * Constructor for a tree node given the options received on the main classes (DecisionTreeClassifier, DecisionTreeRegression)\n     * @param {object|TreeNode} options for loading\n     * @constructor\n     */\n    constructor(options) {\n        // options parameters\n        this.kind = options.kind;\n        this.gainFunction = options.gainFunction;\n        this.splitFunction = options.splitFunction;\n        this.minNumSamples = options.minNumSamples;\n        this.maxDepth = options.maxDepth;\n    }\n\n    /**\n     * @private\n     * Function that retrieve the best feature to make the split.\n     * @param {Matrix} XTranspose - Training set transposed\n     * @param {Array} y - labels or values (depending of the decision tree)\n     * @return {object} - return tree values, the best gain, column and the split value.\n     */\n    bestSplit(XTranspose, y) {\n\n        // Depending in the node tree class, we set the variables to check information gain (to classify)\n        // or error (for regression)\n\n        var bestGain = this.kind === 'classifier' ? -Infinity : Infinity;\n        var check = this.kind === 'classifier' ? (a, b) => a > b : (a, b) => a < b;\n\n\n        var maxColumn;\n        var maxValue;\n\n        for (var i = 0; i < XTranspose.rows; ++i) {\n            var currentFeature = XTranspose[i];\n            var splitValues = this.featureSplit(currentFeature, y);\n            for (var j = 0; j < splitValues.length; ++j) {\n                var currentSplitVal = splitValues[j];\n                var splitted = this.split(currentFeature, y, currentSplitVal);\n\n                var gain = gainFunctions[this.gainFunction](y, splitted);\n                if (check(gain, bestGain)) {\n                    maxColumn = i;\n                    maxValue = currentSplitVal;\n                    bestGain = gain;\n                }\n            }\n        }\n\n        return {\n            maxGain: bestGain,\n            maxColumn: maxColumn,\n            maxValue: maxValue\n        };\n    }\n\n    /**\n     * @private\n     * Makes the split of the training labels or values from the training set feature given a split value.\n     * @param {Array} x - Training set feature\n     * @param {Array} y - Training set value or label\n     * @param {number} splitValue\n     * @return {object}\n     */\n\n    split(x, y, splitValue) {\n        var lesser = [];\n        var greater = [];\n\n        for (var i = 0; i < x.length; ++i) {\n            if (x[i] < splitValue) {\n                lesser.push(y[i]);\n            } else {\n                greater.push(y[i]);\n            }\n        }\n\n        return {\n            greater: greater,\n            lesser: lesser\n        };\n    }\n\n    /**\n     * @private\n     * Calculates the possible points to split over the tree given a training set feature and corresponding labels or values.\n     * @param {Array} x - Training set feature\n     * @param {Array} y - Training set value or label\n     * @return {Array} possible split values.\n     */\n    featureSplit(x, y) {\n        var splitValues = [];\n        var arr = Utils.zip(x, y);\n        arr.sort(function (a, b) {\n            return a[0] - b[0];\n        });\n\n        for (var i = 1; i < arr.length; ++i) {\n            if (arr[i - 1][1] !== arr[i][1]) {\n                splitValues.push(splitFunctions[this.splitFunction](arr[i - 1][0], arr[i][0]));\n            }\n        }\n\n        return splitValues;\n    }\n\n    /**\n     * @private\n     * Calculate the predictions of a leaf tree node given the training labels or values\n     * @param {Array} y\n     */\n    calculatePrediction(y) {\n        if (this.kind === 'classifier') {\n            this.distribution = Utils.toDiscreteDistribution(y, Utils.getNumberOfClasses(y));\n            if (this.distribution.columns === 0) {\n                throw new TypeError('Error on calculate the prediction');\n            }\n        } else {\n            this.distribution = mean(y);\n        }\n    }\n\n    /**\n     * @private\n     * Train a node given the training set and labels, because it trains recursively, it also receive\n     * the current depth of the node, parent gain to avoid infinite recursion and boolean value to check if\n     * the training set is transposed.\n     * @param {Matrix} X - Training set (could be transposed or not given transposed).\n     * @param {Array} y - Training labels or values.\n     * @param {number} currentDepth - Current depth of the node.\n     * @param {number} parentGain - parent node gain or error.\n     */\n    train(X, y, currentDepth, parentGain) {\n        if (X.rows <= this.minNumSamples) {\n            this.calculatePrediction(y);\n            return;\n        }\n        if (parentGain === undefined) parentGain = 0.0;\n\n        var XTranspose = X.transpose();\n        var split = this.bestSplit(XTranspose, y);\n\n        this.splitValue = split.maxValue;\n        this.splitColumn = split.maxColumn;\n        this.gain = split.maxGain;\n\n        var splittedMatrix = Utils.matrixSplitter(X, y, this.splitColumn, this.splitValue);\n\n        if (currentDepth < this.maxDepth &&\n            (this.gain > 0.01 && this.gain !== parentGain) &&\n            (splittedMatrix.lesserX.length > 0 && splittedMatrix.greaterX.length > 0)) {\n            this.left = new TreeNode(this);\n            this.right = new TreeNode(this);\n\n            var lesserX = new Matrix(splittedMatrix.lesserX);\n            var greaterX = new Matrix(splittedMatrix.greaterX);\n\n            this.left.train(lesserX, splittedMatrix.lesserY, currentDepth + 1, this.gain);\n            this.right.train(greaterX, splittedMatrix.greaterY, currentDepth + 1, this.gain);\n        } else {\n            this.calculatePrediction(y);\n        }\n    }\n\n    /**\n     * @private\n     * Calculates the prediction of a given element.\n     * @param {Array} row\n     * @return {number|Array} prediction\n     *          * if a node is a classifier returns an array of probabilities of each class.\n     *          * if a node is for regression returns a number with the prediction.\n     */\n    classify(row) {\n        if (this.right && this.left) {\n            if (row[this.splitColumn] < this.splitValue) {\n                return this.left.classify(row);\n            } else {\n                return this.right.classify(row);\n            }\n        }\n\n        return this.distribution;\n    }\n\n    /**\n     * @private\n     * Set the parameter of the current node and their children.\n     * @param {object} node - parameters of the current node and the children.\n     */\n    setNodeParameters(node) {\n        if (node.distribution !== undefined) {\n            this.distribution = node.distribution.constructor === Array ? new Matrix(node.distribution) :\n                                                                          node.distribution;\n        } else {\n            this.distribution = undefined;\n            this.splitValue = node.splitValue;\n            this.splitColumn = node.splitColumn;\n            this.gain = node.gain;\n\n            this.left = new TreeNode(this);\n            this.right = new TreeNode(this);\n\n            if (node.left !== {}) {\n                this.left.setNodeParameters(node.left);\n            }\n            if (node.right !== {}) {\n                this.right.setNodeParameters(node.right);\n            }\n        }\n    }\n}\n","import Matrix from 'ml-matrix';\nimport Tree from './TreeNode';\n\nconst defaultOptions = {\n    gainFunction: 'gini',\n    splitFunction: 'mean',\n    minNumSamples: 3,\n    maxDepth: Infinity\n};\n\nexport class DecisionTreeClassifier {\n\n    /**\n     * Create new Decision Tree Classifier with CART implementation with the given options\n     * @param {object} options\n     * @param {string} [options.gainFunction=\"gini\"] - gain function to get the best split, \"gini\" the only one supported.\n     * @param {string} [options.splitFunction=\"mean\"] - given two integers from a split feature, get the value to split, \"mean\" the only one supported.\n     * @param {number} [options.minNumSamples=3] - minimum number of samples to create a leaf node to decide a class.\n     * @param {number} [options.maxDepth=Infinity] - Max depth of the tree.\n     * @param {object} model - for load purposes.\n     * @constructor\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.options = model.options;\n            this.root = new Tree(model.options);\n            this.root.setNodeParameters(model.root);\n        } else {\n            this.options = Object.assign({}, defaultOptions, options);\n            this.options.kind = 'classifier';\n        }\n    }\n\n    /**\n     * Train the decision tree with the given training set and labels.\n     * @param {Matrix|MatrixTransposeView|Array} trainingSet\n     * @param {Array} trainingLabels\n     */\n    train(trainingSet, trainingLabels) {\n        this.root = new Tree(this.options);\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        this.root.train(trainingSet, trainingLabels, 0, null);\n    }\n\n    /**\n     * Predicts the output given the matrix to predict.\n     * @param {Matrix|MatrixTransposeView|Array} toPredict\n     * @return {Array} predictions\n     */\n    predict(toPredict) {\n        toPredict = Matrix.checkMatrix(toPredict);\n        var predictions = new Array(toPredict.rows);\n\n        for (var i = 0; i < toPredict.rows; ++i) {\n            predictions[i] = this.root.classify(toPredict.getRow(i)).maxRowIndex(0)[1];\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            options: this.options,\n            root: this.root,\n            name: 'DTClassifier'\n        };\n    }\n\n    /**\n     * Load a Decision tree classifier with the given model.\n     * @param {object} model\n     * @return {DecisionTreeClassifier}\n     */\n    static load(model) {\n        if (model.name !== 'DTClassifier') {\n            throw new RangeError('Invalid model: ' + model.name);\n        }\n\n        return new DecisionTreeClassifier(true, model);\n    }\n}\n","import Matrix from 'ml-matrix';\nimport Tree from './TreeNode';\n\nconst defaultOptions = {\n    gainFunction: 'regression',\n    splitFunction: 'mean',\n    minNumSamples: 3,\n    maxDepth: Infinity\n};\n\nexport class DecisionTreeRegression {\n\n    /**\n     * Create new Decision Tree Regression with CART implementation with the given options.\n     * @param {object} options\n     * @param {string} [options.gainFunction=\"regression\"] - gain function to get the best split, \"regression\" the only one supported.\n     * @param {string} [options.splitFunction=\"mean\"] - given two integers from a split feature, get the value to split, \"mean\" the only one supported.\n     * @param {number} [options.minNumSamples=3] - minimum number of samples to create a leaf node to decide a class.\n     * @param {number} [options.maxDepth=Infinity] - Max depth of the tree.\n     * @param {object} model - for load purposes.\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.options = model.options;\n            this.root = new Tree(model.options);\n            this.root.setNodeParameters(model.root);\n        } else {\n            this.options = Object.assign({}, defaultOptions, options);\n            this.options.kind = 'regression';\n        }\n    }\n\n    /**\n     * Train the decision tree with the given training set and values.\n     * @param {Matrix|MatrixTransposeView|Array} trainingSet\n     * @param {Array} trainingValues\n     */\n    train(trainingSet, trainingValues) {\n        this.root = new Tree(this.options);\n\n        if (trainingSet[0].length === undefined) trainingSet = Matrix.columnVector(trainingSet);\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        this.root.train(trainingSet, trainingValues, 0);\n    }\n\n    /**\n     * Predicts the values given the matrix to predict.\n     * @param {Matrix|MatrixTransposeView|Array} toPredict\n     * @return {Array} predictions\n     */\n    predict(toPredict) {\n        if (toPredict[0] !== undefined && toPredict[0].length === undefined) toPredict = Matrix.columnVector(toPredict);\n        toPredict = Matrix.checkMatrix(toPredict);\n\n        var predictions = new Array(toPredict.rows);\n        for (var i = 0; i < toPredict.rows; ++i) {\n            predictions[i] = this.root.classify(toPredict.getRow(i));\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            options: this.options,\n            root: this.root,\n            name: 'DTRegression'\n        };\n    }\n\n    /**\n     * Load a Decision tree regression with the given model.\n     * @param {object} model\n     * @return {DecisionTreeRegression}\n     */\n    static load(model) {\n        if (model.name !== 'DTRegression') {\n            throw new RangeError('Invalid model:' + model.name);\n        }\n\n        return new DecisionTreeRegression(true, model);\n    }\n}\n","export {DecisionTreeClassifier} from './DecisionTreeClassifier';\nexport {DecisionTreeRegression} from './DecisionTreeRegression';\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","'use strict';\n\nconst Matrix = require('ml-matrix').Matrix;\n\nconst GaussianKernel = require('ml-kernel-gaussian');\nconst PolynomialKernel = require('ml-kernel-polynomial');\nconst ANOVAKernel = require('./kernels/anova-kernel');\nconst CauchyKernel = require('./kernels/cauchy-kernel');\nconst ExponentialKernel = require('./kernels/exponential-kernel');\nconst HistogramKernel = require('./kernels/histogram-intersection-kernel');\nconst LaplacianKernel = require('./kernels/laplacian-kernel');\nconst MultiquadraticKernel = require('./kernels/multiquadratic-kernel');\nconst RationalKernel = require('./kernels/rational-quadratic-kernel');\nconst SigmoidKernel = require('ml-kernel-sigmoid');\n\nconst kernelType = {\n    gaussian: GaussianKernel,\n    rbf: GaussianKernel,\n    polynomial: PolynomialKernel,\n    poly: PolynomialKernel,\n    anova: ANOVAKernel,\n    cauchy: CauchyKernel,\n    exponential: ExponentialKernel,\n    histogram: HistogramKernel,\n    min: HistogramKernel,\n    laplacian: LaplacianKernel,\n    multiquadratic: MultiquadraticKernel,\n    rational: RationalKernel,\n    sigmoid: SigmoidKernel,\n    mlp: SigmoidKernel\n};\n\nclass Kernel {\n    constructor(type, options) {\n        this.kernelType = type;\n        if (type === 'linear') return;\n\n        if (typeof type === 'string') {\n            type = type.toLowerCase();\n\n            var KernelConstructor = kernelType[type];\n            if (KernelConstructor) {\n                this.kernelFunction = new KernelConstructor(options);\n            } else {\n                throw new Error('unsupported kernel type: ' + type);\n            }\n        } else if (typeof type === 'object' && typeof type.compute === 'function') {\n            this.kernelFunction = type;\n        } else {\n            throw new TypeError('first argument must be a valid kernel type or instance');\n        }\n    }\n\n    compute(inputs, landmarks) {\n        if (landmarks === undefined) {\n            landmarks = inputs;\n        }\n\n        if (this.kernelType === 'linear') {\n            var matrix = new Matrix(inputs);\n            return matrix.mmul(new Matrix(landmarks).transposeView());\n        }\n\n        const kernelMatrix = new Matrix(inputs.length, landmarks.length);\n        var i, j;\n        if (inputs === landmarks) { // fast path, matrix is symmetric\n            for (i = 0; i < inputs.length; i++) {\n                for (j = i; j < inputs.length; j++) {\n                    kernelMatrix[i][j] = kernelMatrix[j][i] = this.kernelFunction.compute(inputs[i], inputs[j]);\n                }\n            }\n        } else {\n            for (i = 0; i < inputs.length; i++) {\n                for (j = 0; j < landmarks.length; j++) {\n                    kernelMatrix[i][j] = this.kernelFunction.compute(inputs[i], landmarks[j]);\n                }\n            }\n        }\n        return kernelMatrix;\n    }\n}\n\nmodule.exports = Kernel;\n","const PROB_TOLERANCE = 0.00000001;\nfunction randomChoice(values, options = {}, random = Math.random) {\n    const { size = 1, replace = false, probabilities } = options;\n    let valuesArr;\n    let cumSum;\n    if (typeof values === 'number') {\n        valuesArr = getArray(values);\n    }\n    else {\n        valuesArr = values.slice();\n    }\n    if (probabilities) {\n        if (!replace) {\n            throw new Error('choice with probabilities and no replacement is not implemented');\n        }\n        // check input is sane\n        if (probabilities.length !== valuesArr.length) {\n            throw new Error('the length of probabilities option should be equal to the number of choices');\n        }\n        cumSum = [probabilities[0]];\n        for (let i = 1; i < probabilities.length; i++) {\n            cumSum[i] = cumSum[i - 1] + probabilities[i];\n        }\n        if (Math.abs(1 - cumSum[cumSum.length - 1]) > PROB_TOLERANCE) {\n            throw new Error(`probabilities should sum to 1, but instead sums to ${cumSum[cumSum.length - 1]}`);\n        }\n    }\n    if (replace === false && size > valuesArr.length) {\n        throw new Error('size option is too large');\n    }\n    const result = [];\n    for (let i = 0; i < size; i++) {\n        const index = randomIndex(valuesArr.length, random, cumSum);\n        result.push(valuesArr[index]);\n        if (!replace) {\n            valuesArr.splice(index, 1);\n        }\n    }\n    return result;\n}\nfunction getArray(n) {\n    const arr = [];\n    for (let i = 0; i < n; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nfunction randomIndex(n, random, cumSum) {\n    const rand = random();\n    if (!cumSum) {\n        return Math.floor(rand * n);\n    }\n    else {\n        let idx = 0;\n        while (rand > cumSum[idx]) {\n            idx++;\n        }\n        return idx;\n    }\n}\nexport default randomChoice;\n","// tslint:disable-next-line\nimport XSAdd from 'ml-xsadd';\nimport choice from './choice';\n/**\n * @classdesc Random class\n */\nexport default class Random {\n    /**\n     * @param [seedOrRandom=Math.random] - Control the random number generator used by the Random class instance. Pass a random number generator function with a uniform distribution over the half-open interval [0, 1[. If seed will pass it to ml-xsadd to create a seeded random number generator. If undefined will use Math.random.\n     */\n    constructor(seedOrRandom = Math.random) {\n        if (typeof seedOrRandom === 'number') {\n            const xsadd = new XSAdd(seedOrRandom);\n            this.randomGenerator = xsadd.random;\n        }\n        else {\n            this.randomGenerator = seedOrRandom;\n        }\n    }\n    choice(values, options) {\n        if (typeof values === 'number') {\n            return choice(values, options, this.randomGenerator);\n        }\n        return choice(values, options, this.randomGenerator);\n    }\n    /**\n     * Draw a random number from a uniform distribution on [0,1)\n     * @return The random number\n     */\n    random() {\n        return this.randomGenerator();\n    }\n    /**\n     * Draw a random integer from a uniform distribution on [low, high). If only low is specified, the number is drawn on [0, low)\n     * @param low - The lower bound of the uniform distribution interval.\n     * @param high - The higher bound of the uniform distribution interval.\n     */\n    randInt(low, high) {\n        if (high === undefined) {\n            high = low;\n            low = 0;\n        }\n        return low + Math.floor(this.randomGenerator() * (high - low));\n    }\n    /**\n     * Draw several random number from a uniform distribution on [0, 1)\n     * @param size - The number of number to draw\n     * @return - The list of drawn numbers.\n     */\n    randomSample(size) {\n        const result = [];\n        for (let i = 0; i < size; i++) {\n            result.push(this.random());\n        }\n        return result;\n    }\n}\n","/*jshint eqnull:true*/\n(function (root) {\n  \"use strict\";\n\n  var GLOBAL_KEY = \"Random\";\n\n  var imul = (typeof Math.imul !== \"function\" || Math.imul(0xffffffff, 5) !== -5 ?\n    function (a, b) {\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;\n    } :\n    Math.imul);\n\n  var stringRepeat = (typeof String.prototype.repeat === \"function\" && \"x\".repeat(3) === \"xxx\" ?\n    function (x, y) {\n      return x.repeat(y);\n    } : function (pattern, count) {\n      var result = \"\";\n      while (count > 0) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result;\n    });\n\n  function Random(engine) {\n    if (!(this instanceof Random)) {\n      return new Random(engine);\n    }\n\n    if (engine == null) {\n      engine = Random.engines.nativeMath;\n    } else if (typeof engine !== \"function\") {\n      throw new TypeError(\"Expected engine to be a function, got \" + typeof engine);\n    }\n    this.engine = engine;\n  }\n  var proto = Random.prototype;\n\n  Random.engines = {\n    nativeMath: function () {\n      return (Math.random() * 0x100000000) | 0;\n    },\n    mt19937: (function (Int32Array) {\n      // http://en.wikipedia.org/wiki/Mersenne_twister\n      function refreshData(data) {\n        var k = 0;\n        var tmp = 0;\n        for (;\n          (k | 0) < 227; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        for (;\n          (k | 0) < 623; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);\n        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n      }\n\n      function temper(value) {\n        value ^= value >>> 11;\n        value ^= (value << 7) & 0x9d2c5680;\n        value ^= (value << 15) & 0xefc60000;\n        return value ^ (value >>> 18);\n      }\n\n      function seedWithArray(data, source) {\n        var i = 1;\n        var j = 0;\n        var sourceLength = source.length;\n        var k = Math.max(sourceLength, 624) | 0;\n        var previous = data[0] | 0;\n        for (;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;\n          i = (i + 1) | 0;\n          ++j;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n          if (j >= sourceLength) {\n            j = 0;\n          }\n        }\n        for (k = 623;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;\n          i = (i + 1) | 0;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n        }\n        data[0] = 0x80000000;\n      }\n\n      function mt19937() {\n        var data = new Int32Array(624);\n        var index = 0;\n        var uses = 0;\n\n        function next() {\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n\n          var value = data[index];\n          index = (index + 1) | 0;\n          uses += 1;\n          return temper(value) | 0;\n        }\n        next.getUseCount = function() {\n          return uses;\n        };\n        next.discard = function (count) {\n          uses += count;\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n          while ((count - index) > 624) {\n            count -= 624 - index;\n            refreshData(data);\n            index = 0;\n          }\n          index = (index + count) | 0;\n          return next;\n        };\n        next.seed = function (initial) {\n          var previous = 0;\n          data[0] = previous = initial | 0;\n\n          for (var i = 1; i < 624; i = (i + 1) | 0) {\n            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;\n          }\n          index = 624;\n          uses = 0;\n          return next;\n        };\n        next.seedWithArray = function (source) {\n          next.seed(0x012bd6aa);\n          seedWithArray(data, source);\n          return next;\n        };\n        next.autoSeed = function () {\n          return next.seedWithArray(Random.generateEntropyArray());\n        };\n        return next;\n      }\n\n      return mt19937;\n    }(typeof Int32Array === \"function\" ? Int32Array : Array)),\n    browserCrypto: (typeof crypto !== \"undefined\" && typeof crypto.getRandomValues === \"function\" && typeof Int32Array === \"function\") ? (function () {\n      var data = null;\n      var index = 128;\n\n      return function () {\n        if (index >= 128) {\n          if (data === null) {\n            data = new Int32Array(128);\n          }\n          crypto.getRandomValues(data);\n          index = 0;\n        }\n\n        return data[index++] | 0;\n      };\n    }()) : null\n  };\n\n  Random.generateEntropyArray = function () {\n    var array = [];\n    var engine = Random.engines.nativeMath;\n    for (var i = 0; i < 16; ++i) {\n      array[i] = engine() | 0;\n    }\n    array.push(new Date().getTime() | 0);\n    return array;\n  };\n\n  function returnValue(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  // [-0x80000000, 0x7fffffff]\n  Random.int32 = function (engine) {\n    return engine() | 0;\n  };\n  proto.int32 = function () {\n    return Random.int32(this.engine);\n  };\n\n  // [0, 0xffffffff]\n  Random.uint32 = function (engine) {\n    return engine() >>> 0;\n  };\n  proto.uint32 = function () {\n    return Random.uint32(this.engine);\n  };\n\n  // [0, 0x1fffffffffffff]\n  Random.uint53 = function (engine) {\n    var high = engine() & 0x1fffff;\n    var low = engine() >>> 0;\n    return (high * 0x100000000) + low;\n  };\n  proto.uint53 = function () {\n    return Random.uint53(this.engine);\n  };\n\n  // [0, 0x20000000000000]\n  Random.uint53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x200000) {\n        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low;\n      }\n    }\n  };\n  proto.uint53Full = function () {\n    return Random.uint53Full(this.engine);\n  };\n\n  // [-0x20000000000000, 0x1fffffffffffff]\n  Random.int53 = function (engine) {\n    var high = engine() | 0;\n    var low = engine() >>> 0;\n    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n  };\n  proto.int53 = function () {\n    return Random.int53(this.engine);\n  };\n\n  // [-0x20000000000000, 0x20000000000000]\n  Random.int53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x400000) {\n        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n      }\n    }\n  };\n  proto.int53Full = function () {\n    return Random.int53Full(this.engine);\n  };\n\n  function add(generate, addend) {\n    if (addend === 0) {\n      return generate;\n    } else {\n      return function (engine) {\n        return generate(engine) + addend;\n      };\n    }\n  }\n\n  Random.integer = (function () {\n    function isPowerOfTwoMinusOne(value) {\n      return ((value + 1) & value) === 0;\n    }\n\n    function bitmask(masking) {\n      return function (engine) {\n        return engine() & masking;\n      };\n    }\n\n    function downscaleToLoopCheckedRange(range) {\n      var extendedRange = range + 1;\n      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);\n      return function (engine) {\n        var value = 0;\n        do {\n          value = engine() >>> 0;\n        } while (value >= maximum);\n        return value % extendedRange;\n      };\n    }\n\n    function downscaleToRange(range) {\n      if (isPowerOfTwoMinusOne(range)) {\n        return bitmask(range);\n      } else {\n        return downscaleToLoopCheckedRange(range);\n      }\n    }\n\n    function isEvenlyDivisibleByMaxInt32(value) {\n      return (value | 0) === 0;\n    }\n\n    function upscaleWithHighMasking(masking) {\n      return function (engine) {\n        var high = engine() & masking;\n        var low = engine() >>> 0;\n        return (high * 0x100000000) + low;\n      };\n    }\n\n    function upscaleToLoopCheckedRange(extendedRange) {\n      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() & 0x1fffff;\n          var low = engine() >>> 0;\n          ret = (high * 0x100000000) + low;\n        } while (ret >= maximum);\n        return ret % extendedRange;\n      };\n    }\n\n    function upscaleWithinU53(range) {\n      var extendedRange = range + 1;\n      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\n        var highRange = ((extendedRange / 0x100000000) | 0) - 1;\n        if (isPowerOfTwoMinusOne(highRange)) {\n          return upscaleWithHighMasking(highRange);\n        }\n      }\n      return upscaleToLoopCheckedRange(extendedRange);\n    }\n\n    function upscaleWithinI53AndLoopCheck(min, max) {\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() | 0;\n          var low = engine() >>> 0;\n          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n        } while (ret < min || ret > max);\n        return ret;\n      };\n    }\n\n    return function (min, max) {\n      min = Math.floor(min);\n      max = Math.floor(max);\n      if (min < -0x20000000000000 || !isFinite(min)) {\n        throw new RangeError(\"Expected min to be at least \" + (-0x20000000000000));\n      } else if (max > 0x20000000000000 || !isFinite(max)) {\n        throw new RangeError(\"Expected max to be at most \" + 0x20000000000000);\n      }\n\n      var range = max - min;\n      if (range <= 0 || !isFinite(range)) {\n        return returnValue(min);\n      } else if (range === 0xffffffff) {\n        if (min === 0) {\n          return Random.uint32;\n        } else {\n          return add(Random.int32, min + 0x80000000);\n        }\n      } else if (range < 0xffffffff) {\n        return add(downscaleToRange(range), min);\n      } else if (range === 0x1fffffffffffff) {\n        return add(Random.uint53, min);\n      } else if (range < 0x1fffffffffffff) {\n        return add(upscaleWithinU53(range), min);\n      } else if (max - 1 - min === 0x1fffffffffffff) {\n        return add(Random.uint53Full, min);\n      } else if (min === -0x20000000000000 && max === 0x20000000000000) {\n        return Random.int53Full;\n      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {\n        return Random.int53;\n      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {\n        return add(Random.int53, 1);\n      } else if (max === 0x20000000000000) {\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\n      } else {\n        return upscaleWithinI53AndLoopCheck(min, max);\n      }\n    };\n  }());\n  proto.integer = function (min, max) {\n    return Random.integer(min, max)(this.engine);\n  };\n\n  // [0, 1] (floating point)\n  Random.realZeroToOneInclusive = function (engine) {\n    return Random.uint53Full(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneInclusive = function () {\n    return Random.realZeroToOneInclusive(this.engine);\n  };\n\n  // [0, 1) (floating point)\n  Random.realZeroToOneExclusive = function (engine) {\n    return Random.uint53(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneExclusive = function () {\n    return Random.realZeroToOneExclusive(this.engine);\n  };\n\n  Random.real = (function () {\n    function multiply(generate, multiplier) {\n      if (multiplier === 1) {\n        return generate;\n      } else if (multiplier === 0) {\n        return function () {\n          return 0;\n        };\n      } else {\n        return function (engine) {\n          return generate(engine) * multiplier;\n        };\n      }\n    }\n\n    return function (left, right, inclusive) {\n      if (!isFinite(left)) {\n        throw new RangeError(\"Expected left to be a finite number\");\n      } else if (!isFinite(right)) {\n        throw new RangeError(\"Expected right to be a finite number\");\n      }\n      return add(\n        multiply(\n          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,\n          right - left),\n        left);\n    };\n  }());\n  proto.real = function (min, max, inclusive) {\n    return Random.real(min, max, inclusive)(this.engine);\n  };\n\n  Random.bool = (function () {\n    function isLeastBitTrue(engine) {\n      return (engine() & 1) === 1;\n    }\n\n    function lessThan(generate, value) {\n      return function (engine) {\n        return generate(engine) < value;\n      };\n    }\n\n    function probability(percentage) {\n      if (percentage <= 0) {\n        return returnValue(false);\n      } else if (percentage >= 1) {\n        return returnValue(true);\n      } else {\n        var scaled = percentage * 0x100000000;\n        if (scaled % 1 === 0) {\n          return lessThan(Random.int32, (scaled - 0x80000000) | 0);\n        } else {\n          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));\n        }\n      }\n    }\n\n    return function (numerator, denominator) {\n      if (denominator == null) {\n        if (numerator == null) {\n          return isLeastBitTrue;\n        }\n        return probability(numerator);\n      } else {\n        if (numerator <= 0) {\n          return returnValue(false);\n        } else if (numerator >= denominator) {\n          return returnValue(true);\n        }\n        return lessThan(Random.integer(0, denominator - 1), numerator);\n      }\n    };\n  }());\n  proto.bool = function (numerator, denominator) {\n    return Random.bool(numerator, denominator)(this.engine);\n  };\n\n  function toInteger(value) {\n    var number = +value;\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function convertSliceArgument(value, length) {\n    if (value < 0) {\n      return Math.max(value + length, 0);\n    } else {\n      return Math.min(value, length);\n    }\n  }\n  Random.pick = function (engine, array, begin, end) {\n    var length = array.length;\n    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\n    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\n    if (start >= finish) {\n      return void 0;\n    }\n    var distribution = Random.integer(start, finish - 1);\n    return array[distribution(engine)];\n  };\n  proto.pick = function (array, begin, end) {\n    return Random.pick(this.engine, array, begin, end);\n  };\n\n  function returnUndefined() {\n    return void 0;\n  }\n  var slice = Array.prototype.slice;\n  Random.picker = function (array, begin, end) {\n    var clone = slice.call(array, begin, end);\n    if (!clone.length) {\n      return returnUndefined;\n    }\n    var distribution = Random.integer(0, clone.length - 1);\n    return function (engine) {\n      return clone[distribution(engine)];\n    };\n  };\n\n  Random.shuffle = function (engine, array, downTo) {\n    var length = array.length;\n    if (length) {\n      if (downTo == null) {\n        downTo = 0;\n      }\n      for (var i = (length - 1) >>> 0; i > downTo; --i) {\n        var distribution = Random.integer(0, i);\n        var j = distribution(engine);\n        if (i !== j) {\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n      }\n    }\n    return array;\n  };\n  proto.shuffle = function (array) {\n    return Random.shuffle(this.engine, array);\n  };\n\n  Random.sample = function (engine, population, sampleSize) {\n    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {\n      throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\n    }\n\n    if (sampleSize === 0) {\n      return [];\n    }\n\n    var clone = slice.call(population);\n    var length = clone.length;\n    if (length === sampleSize) {\n      return Random.shuffle(engine, clone, 0);\n    }\n    var tailLength = length - sampleSize;\n    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);\n  };\n  proto.sample = function (population, sampleSize) {\n    return Random.sample(this.engine, population, sampleSize);\n  };\n\n  Random.die = function (sideCount) {\n    return Random.integer(1, sideCount);\n  };\n  proto.die = function (sideCount) {\n    return Random.die(sideCount)(this.engine);\n  };\n\n  Random.dice = function (sideCount, dieCount) {\n    var distribution = Random.die(sideCount);\n    return function (engine) {\n      var result = [];\n      result.length = dieCount;\n      for (var i = 0; i < dieCount; ++i) {\n        result[i] = distribution(engine);\n      }\n      return result;\n    };\n  };\n  proto.dice = function (sideCount, dieCount) {\n    return Random.dice(sideCount, dieCount)(this.engine);\n  };\n\n  // http://en.wikipedia.org/wiki/Universally_unique_identifier\n  Random.uuid4 = (function () {\n    function zeroPad(string, zeroCount) {\n      return stringRepeat(\"0\", zeroCount - string.length) + string;\n    }\n\n    return function (engine) {\n      var a = engine() >>> 0;\n      var b = engine() | 0;\n      var c = engine() | 0;\n      var d = engine() >>> 0;\n\n      return (\n        zeroPad(a.toString(16), 8) +\n        \"-\" +\n        zeroPad((b & 0xffff).toString(16), 4) +\n        \"-\" +\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\n        zeroPad(d.toString(16), 8));\n    };\n  }());\n  proto.uuid4 = function () {\n    return Random.uuid4(this.engine);\n  };\n\n  Random.string = (function () {\n    // has 2**x chars, for faster uniform distribution\n    var DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\n\n    return function (pool) {\n      if (pool == null) {\n        pool = DEFAULT_STRING_POOL;\n      }\n\n      var length = pool.length;\n      if (!length) {\n        throw new Error(\"Expected pool not to be an empty string\");\n      }\n\n      var distribution = Random.integer(0, length - 1);\n      return function (engine, length) {\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n          var j = distribution(engine);\n          result += pool.charAt(j);\n        }\n        return result;\n      };\n    };\n  }());\n  proto.string = function (length, pool) {\n    return Random.string(pool)(this.engine, length);\n  };\n\n  Random.hex = (function () {\n    var LOWER_HEX_POOL = \"0123456789abcdef\";\n    var lowerHex = Random.string(LOWER_HEX_POOL);\n    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());\n\n    return function (upper) {\n      if (upper) {\n        return upperHex;\n      } else {\n        return lowerHex;\n      }\n    };\n  }());\n  proto.hex = function (length, upper) {\n    return Random.hex(upper)(this.engine, length);\n  };\n\n  Random.date = function (start, end) {\n    if (!(start instanceof Date)) {\n      throw new TypeError(\"Expected start to be a Date, got \" + typeof start);\n    } else if (!(end instanceof Date)) {\n      throw new TypeError(\"Expected end to be a Date, got \" + typeof end);\n    }\n    var distribution = Random.integer(start.getTime(), end.getTime());\n    return function (engine) {\n      return new Date(distribution(engine));\n    };\n  };\n  proto.date = function (start, end) {\n    return Random.date(start, end)(this.engine);\n  };\n\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return Random;\n    });\n  } else if (typeof module !== \"undefined\" && typeof require === \"function\") {\n    module.exports = Random;\n  } else {\n    (function () {\n      var oldGlobal = root[GLOBAL_KEY];\n      Random.noConflict = function () {\n        root[GLOBAL_KEY] = oldGlobal;\n        return this;\n      };\n    }());\n    root[GLOBAL_KEY] = Random;\n  }\n}(this));","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","'use strict';\n\nconst newArray = require('new-array');\n\nconst primeFinder = require('./primeFinder');\nconst nextPrime = primeFinder.nextPrime;\nconst largestPrime = primeFinder.largestPrime;\n\nconst FREE = 0;\nconst FULL = 1;\nconst REMOVED = 2;\n\nconst defaultInitialCapacity = 150;\nconst defaultMinLoadFactor = 1 / 6;\nconst defaultMaxLoadFactor = 2 / 3;\n\nclass HashTable {\n    constructor(options = {}) {\n        if (options instanceof HashTable) {\n            this.table = options.table.slice();\n            this.values = options.values.slice();\n            this.state = options.state.slice();\n            this.minLoadFactor = options.minLoadFactor;\n            this.maxLoadFactor = options.maxLoadFactor;\n            this.distinct = options.distinct;\n            this.freeEntries = options.freeEntries;\n            this.lowWaterMark = options.lowWaterMark;\n            this.highWaterMark = options.maxLoadFactor;\n            return;\n        }\n\n        const initialCapacity = options.initialCapacity === undefined ? defaultInitialCapacity : options.initialCapacity;\n        if (initialCapacity < 0) {\n            throw new RangeError(`initial capacity must not be less than zero: ${initialCapacity}`);\n        }\n\n        const minLoadFactor = options.minLoadFactor === undefined ? defaultMinLoadFactor : options.minLoadFactor;\n        const maxLoadFactor = options.maxLoadFactor === undefined ? defaultMaxLoadFactor : options.maxLoadFactor;\n        if (minLoadFactor < 0 || minLoadFactor >= 1) {\n            throw new RangeError(`invalid minLoadFactor: ${minLoadFactor}`);\n        }\n        if (maxLoadFactor <= 0 || maxLoadFactor >= 1) {\n            throw new RangeError(`invalid maxLoadFactor: ${maxLoadFactor}`);\n        }\n        if (minLoadFactor >= maxLoadFactor) {\n            throw new RangeError(`minLoadFactor (${minLoadFactor}) must be smaller than maxLoadFactor (${maxLoadFactor})`);\n        }\n\n        let capacity = initialCapacity;\n        // User wants to put at least capacity elements. We need to choose the size based on the maxLoadFactor to\n        // avoid the need to rehash before this capacity is reached.\n        // actualCapacity * maxLoadFactor >= capacity\n        capacity = (capacity / maxLoadFactor) | 0;\n        capacity = nextPrime(capacity);\n        if (capacity === 0) capacity = 1;\n\n        this.table = newArray(capacity, 0);\n        this.values = newArray(capacity, 0);\n        this.state = newArray(capacity, 0);\n\n        this.minLoadFactor = minLoadFactor;\n        if (capacity === largestPrime) {\n            this.maxLoadFactor = 1;\n        } else {\n            this.maxLoadFactor = maxLoadFactor;\n        }\n\n        this.distinct = 0;\n        this.freeEntries = capacity;\n\n        this.lowWaterMark = 0;\n        this.highWaterMark = chooseHighWaterMark(capacity, this.maxLoadFactor);\n    }\n\n    clone() {\n        return new HashTable(this);\n    }\n\n    get size() {\n        return this.distinct;\n    }\n\n    get(key) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return 0;\n        return this.values[i];\n    }\n\n    set(key, value) {\n        let i = this.indexOfInsertion(key);\n        if (i < 0) {\n            i = -i - 1;\n            this.values[i] = value;\n            return false;\n        }\n\n        if (this.distinct > this.highWaterMark) {\n            const newCapacity = chooseGrowCapacity(this.distinct + 1, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n            return this.set(key, value);\n        }\n\n        this.table[i] = key;\n        this.values[i] = value;\n        if (this.state[i] === FREE) this.freeEntries--;\n        this.state[i] = FULL;\n        this.distinct++;\n\n        if (this.freeEntries < 1) {\n            const newCapacity = chooseGrowCapacity(this.distinct + 1, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n        }\n\n        return true;\n    }\n    \n    remove(key, noRehash) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return false;\n\n        this.state[i] = REMOVED;\n        this.distinct--;\n\n        if (!noRehash) this.maybeShrinkCapacity();\n\n        return true;\n    }\n\n    delete(key, noRehash) {\n        const i = this.indexOfKey(key);\n        if (i < 0) return false;\n\n        this.state[i] = FREE;\n        this.distinct--;\n\n        if (!noRehash) this.maybeShrinkCapacity();\n\n        return true;\n    }\n\n    maybeShrinkCapacity() {\n        if (this.distinct < this.lowWaterMark) {\n            const newCapacity = chooseShrinkCapacity(this.distinct, this.minLoadFactor, this.maxLoadFactor);\n            this.rehash(newCapacity);\n        }\n    }\n\n    containsKey(key) {\n        return this.indexOfKey(key) >= 0;\n    }\n\n    indexOfKey(key) {\n        const table = this.table;\n        const state = this.state;\n        const length = this.table.length;\n\n        const hash = key & 0x7fffffff;\n        let i = hash % length;\n        let decrement = hash % (length - 2);\n        if (decrement === 0) decrement = 1;\n\n        while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n            i -= decrement;\n            if (i < 0) i += length;\n        }\n\n        if (state[i] === FREE) return -1;\n        return i;\n    }\n\n    containsValue(value) {\n        return this.indexOfValue(value) >= 0;\n    }\n\n    indexOfValue(value) {\n        const values = this.values;\n        const state = this.state;\n\n        for (var i = 0; i < state.length; i++) {\n            if (state[i] === FULL && values[i] === value) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    indexOfInsertion(key) {\n        const table = this.table;\n        const state = this.state;\n        const length = table.length;\n\n\n        const hash = key & 0x7fffffff;\n        let i = hash % length;\n        let decrement = hash % (length - 2);\n        if (decrement === 0) decrement = 1;\n\n        while (state[i] === FULL && table[i] !== key) {\n            i -= decrement;\n            if (i < 0) i += length;\n        }\n\n        if (state[i] === REMOVED) {\n            const j = i;\n            while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n                i -= decrement;\n                if (i < 0) i += length;\n            }\n            if (state[i] === FREE) i = j;\n        }\n\n        if (state[i] === FULL) {\n            return -i - 1;\n        }\n\n        return i;\n    }\n\n    ensureCapacity(minCapacity) {\n        if (this.table.length < minCapacity) {\n            const newCapacity = nextPrime(minCapacity);\n            this.rehash(newCapacity);\n        }\n    }\n\n    rehash(newCapacity) {\n        const oldCapacity = this.table.length;\n\n        if (newCapacity <= this.distinct) throw new Error('Unexpected');\n\n        const oldTable = this.table;\n        const oldValues = this.values;\n        const oldState = this.state;\n\n        const newTable = newArray(newCapacity, 0);\n        const newValues = newArray(newCapacity, 0);\n        const newState = newArray(newCapacity, 0);\n\n        this.lowWaterMark = chooseLowWaterMark(newCapacity, this.minLoadFactor);\n        this.highWaterMark = chooseHighWaterMark(newCapacity, this.maxLoadFactor);\n\n        this.table = newTable;\n        this.values = newValues;\n        this.state = newState;\n        this.freeEntries = newCapacity - this.distinct;\n\n        for (var i = 0; i < oldCapacity; i++) {\n            if (oldState[i] === FULL) {\n                var element = oldTable[i];\n                var index = this.indexOfInsertion(element);\n                newTable[index] = element;\n                newValues[index] = oldValues[i];\n                newState[index] = FULL;\n            }\n        }\n    }\n\n    forEachKey(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.table[i])) return false;\n            }\n        }\n        return true;\n    }\n\n    forEachValue(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.values[i])) return false;\n            }\n        }\n        return true;\n    }\n\n    forEachPair(callback) {\n        for (var i = 0; i < this.state.length; i++) {\n            if (this.state[i] === FULL) {\n                if (!callback(this.table[i], this.values[i])) return false;\n            }\n        }\n        return true;\n    }\n}\n\nmodule.exports = HashTable;\n\nfunction chooseLowWaterMark(capacity, minLoad) {\n    return (capacity * minLoad) | 0;\n}\n\nfunction chooseHighWaterMark(capacity, maxLoad) {\n    return Math.min(capacity - 2, (capacity * maxLoad) | 0);\n}\n\nfunction chooseGrowCapacity(size, minLoad, maxLoad) {\n    return nextPrime(Math.max(size + 1, (4 * size / (3 * minLoad + maxLoad)) | 0));\n}\n\nfunction chooseShrinkCapacity(size, minLoad, maxLoad) {\n    return nextPrime(Math.max(size + 1, (4 * size / (minLoad + 3 * maxLoad)) | 0));\n}\n","'use strict';\n\nconst Heap = require('heap');\n\nfunction Cluster() {\n    this.children = [];\n    this.distance = -1;\n    this.index = [];\n}\n\n/**\n * Creates an array of values where maximum distance smaller than the threshold\n * @param {number} threshold\n * @return {Array <Cluster>}\n */\nCluster.prototype.cut = function (threshold) {\n    if (threshold < 0) throw new RangeError('Threshold too small');\n    var root = new Cluster();\n    root.children = this.children;\n    root.distance = this.distance;\n    root.index = this.index;\n    var list = [root];\n    var ans = [];\n    while (list.length > 0) {\n        var aux = list.shift();\n        if (threshold >= aux.distance) {\n            ans.push(aux);\n        } else {\n            list = list.concat(aux.children);\n        }\n    }\n    return ans;\n};\n\n/**\n * Merge the leaves in the minimum way to have 'minGroups' number of clusters\n * @param {number} minGroups - Them minimum number of children the first level of the tree should have\n * @return {Cluster}\n */\nCluster.prototype.group = function (minGroups) {\n    if (!Number.isInteger(minGroups) || minGroups < 1) throw new RangeError('Number of groups must be a positive integer');\n\n    const heap = new Heap(function (a, b) {\n        return b.distance - a.distance;\n    });\n\n    heap.push(this);\n\n    while (heap.size() < minGroups) {\n        var first = heap.pop();\n        if (first.children.length === 0) {\n            break;\n        }\n        first.children.forEach(child => heap.push(child));\n    }\n\n    var root = new Cluster();\n    root.children = heap.toArray();\n    root.distance = this.distance;\n\n    return root;\n};\n\n/**\n * Traverses the tree depth-first and provide callback to be called on each individual node\n * @param {function} cb - The callback to be called on each node encounter\n * @type {Cluster}\n */\nCluster.prototype.traverse = function (cb) {\n    function visit(root, callback) {\n        callback(root);\n        if (root.children) {\n            for (var i = root.children.length - 1; i >= 0; i--) {\n                visit(root.children[i], callback);\n            }\n        }\n    }\n    visit(this, cb);\n};\n\nmodule.exports = Cluster;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import quickSelectMedian from 'median-quickselect';\nimport isArray from 'is-any-array';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","const LOOP = 8;\nconst FLOAT_MUL = 1 / 16777216;\nconst sh1 = 15;\nconst sh2 = 18;\nconst sh3 = 11;\nfunction multiply_uint32(n, m) {\n    n >>>= 0;\n    m >>>= 0;\n    const nlo = n & 0xffff;\n    const nhi = n - nlo;\n    return (((nhi * m) >>> 0) + nlo * m) >>> 0;\n}\nexport default class XSadd {\n    constructor(seed = Date.now()) {\n        this.state = new Uint32Array(4);\n        this.init(seed);\n        this.random = this.getFloat.bind(this);\n    }\n    /**\n     * Returns a 32-bit integer r (0 <= r < 2^32)\n     */\n    getUint32() {\n        this.nextState();\n        return (this.state[3] + this.state[2]) >>> 0;\n    }\n    /**\n     * Returns a floating point number r (0.0 <= r < 1.0)\n     */\n    getFloat() {\n        return (this.getUint32() >>> 8) * FLOAT_MUL;\n    }\n    init(seed) {\n        if (!Number.isInteger(seed)) {\n            throw new TypeError('seed must be an integer');\n        }\n        this.state[0] = seed;\n        this.state[1] = 0;\n        this.state[2] = 0;\n        this.state[3] = 0;\n        for (let i = 1; i < LOOP; i++) {\n            this.state[i & 3] ^=\n                (i +\n                    multiply_uint32(1812433253, this.state[(i - 1) & 3] ^ ((this.state[(i - 1) & 3] >>> 30) >>> 0))) >>>\n                    0;\n        }\n        this.periodCertification();\n        for (let i = 0; i < LOOP; i++) {\n            this.nextState();\n        }\n    }\n    periodCertification() {\n        if (this.state[0] === 0 &&\n            this.state[1] === 0 &&\n            this.state[2] === 0 &&\n            this.state[3] === 0) {\n            this.state[0] = 88; // X\n            this.state[1] = 83; // S\n            this.state[2] = 65; // A\n            this.state[3] = 68; // D\n        }\n    }\n    nextState() {\n        let t = this.state[0];\n        t ^= t << sh1;\n        t ^= t >>> sh2;\n        t ^= this.state[3] << sh3;\n        this.state[0] = this.state[1];\n        this.state[1] = this.state[2];\n        this.state[2] = this.state[3];\n        this.state[3] = t;\n    }\n}\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","import arrayMean from 'ml-array-mean';\nimport isArray from 'is-any-array';\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {object} [options]\n * @param {boolean} [options.unbiased = true] - if true, divide by (n-1); if false, divide by n.\n * @param {number} [options.mean = arrayMean] - precalculated mean, if any.\n * @return {number}\n */\n\nfunction variance(values) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(values)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options$unbiased = options.unbiased,\n      unbiased = _options$unbiased === void 0 ? true : _options$unbiased,\n      _options$mean = options.mean,\n      mean = _options$mean === void 0 ? arrayMean(values) : _options$mean;\n  var sqrError = 0;\n\n  for (var i = 0; i < values.length; i++) {\n    var x = values[i] - mean;\n    sqrError += x * x;\n  }\n\n  if (unbiased) {\n    return sqrError / (values.length - 1);\n  } else {\n    return sqrError / values.length;\n  }\n}\n\nexport default variance;\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nconst Cluster = require('./Cluster');\nconst util = require('util');\n\nfunction ClusterLeaf(index) {\n    Cluster.call(this);\n    this.index = index;\n    this.distance = 0;\n    this.children = [];\n}\n\nutil.inherits(ClusterLeaf, Cluster);\n\nmodule.exports = ClusterLeaf;\n","'use strict';\n\n\n/**\n * Computes a distance/similarity matrix given an array of data and a distance/similarity function.\n * @param {Array} data An array of data\n * @param {function} distanceFn  A function that accepts two arguments and computes a distance/similarity between them\n * @return {Array<Array>} The similarity matrix. The similarity matrix is square and has a size equal to the length of\n * the data array\n */\nfunction distanceMatrix(data, distanceFn) {\n    const length = data.length;\n    let result = Array.from({length}).map(() => Array.from({length}));\n\n    // Compute upper distance matrix\n    for (let i = 0; i < length; i++) {\n        for (let j = 0; j <= i; j++) {\n            result[i][j] = distanceFn(data[i], data[j]);\n        }\n    }\n\n    // Copy to lower distance matrix\n    for (let i = 0; i < length; i++) {\n        for (let j = i + 1; j < length; j++) {\n            result[i][j] = result[j][i];\n        }\n    }\n\n    return result;\n}\n\nmodule.exports = distanceMatrix;\n","/**\n *  Constructs a confusion matrix\n * @class ConfusionMatrix\n * @example\n * const CM = new ConfusionMatrix([[13, 2], [10, 5]], ['cat', 'dog'])\n * @param {Array<Array<number>>} matrix - The confusion matrix, a 2D Array. Rows represent the actual label and columns\n *     the predicted label.\n * @param {Array<any>} labels - Labels of the confusion matrix, a 1D Array\n */\nclass ConfusionMatrix {\n    constructor(matrix, labels) {\n        if (matrix.length !== matrix[0].length) {\n            throw new Error('Confusion matrix must be square');\n        }\n        if (labels.length !== matrix.length) {\n            throw new Error('Confusion matrix and labels should have the same length');\n        }\n        this.labels = labels;\n        this.matrix = matrix;\n    }\n\n\n    /**\n     * Construct confusion matrix from the predicted and actual labels (classes). Be sure to provide the arguments in\n     * the correct order!\n     * @param {Array<any>} actual  - The predicted labels of the classification\n     * @param {Array<any>} predicted     - The actual labels of the classification. Has to be of same length as\n     *     predicted.\n     * @param {object} [options] - Additional options\n     * @param {Array<any>} [options.labels] - The list of labels that should be used. If not provided the distinct set\n     *     of labels present in predicted and actual is used. Labels are compared using the strict equality operator\n     *     '==='\n     * @return {ConfusionMatrix} - Confusion matrix\n     */\n    static fromLabels(actual, predicted, options = {}) {\n        if (predicted.length !== actual.length) {\n            throw new Error('predicted and actual must have the same length');\n        }\n        let distinctLabels;\n        if (options.labels) {\n            distinctLabels = new Set(options.labels);\n        } else {\n            distinctLabels = new Set([...actual, ...predicted]);\n        }\n        distinctLabels = Array.from(distinctLabels);\n        if (options.sort) {\n            distinctLabels.sort(options.sort);\n        }\n\n        // Create confusion matrix and fill with 0's\n        const matrix = Array.from({length: distinctLabels.length});\n        for (let i = 0; i < matrix.length; i++) {\n            matrix[i] = new Array(matrix.length);\n            matrix[i].fill(0);\n        }\n\n        for (let i = 0; i < predicted.length; i++) {\n            const actualIdx = distinctLabels.indexOf(actual[i]);\n            const predictedIdx = distinctLabels.indexOf(predicted[i]);\n            if (actualIdx >= 0 && predictedIdx >= 0) {\n                matrix[actualIdx][predictedIdx]++;\n            }\n        }\n\n        return new ConfusionMatrix(matrix, distinctLabels);\n    }\n\n    /**\n     * Get the confusion matrix\n     * @return {Array<Array<number> >}\n     */\n    getMatrix() {\n        return this.matrix;\n    }\n\n    getLabels() {\n        return this.labels;\n    }\n\n    /**\n     * Get the total number of samples\n     * @return {number}\n     */\n    getTotalCount() {\n        let predicted = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            for (var j = 0; j < this.matrix.length; j++) {\n                predicted += this.matrix[i][j];\n            }\n        }\n        return predicted;\n    }\n\n    /**\n     * Get the total number of true predictions\n     * @return {number}\n     */\n    getTrueCount() {\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            count += this.matrix[i][i];\n        }\n        return count;\n    }\n\n    /**\n     * Get the total number of false predictions.\n     * @return {number}\n     */\n    getFalseCount() {\n        return this.getTotalCount() - this.getTrueCount();\n    }\n\n    /**\n     * Get the number of true positive predictions.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getTruePositiveCount(label) {\n        const index = this.getIndex(label);\n        return this.matrix[index][index];\n    }\n\n    /**\n     * Get the number of true negative predictions\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getTrueNegativeCount(label) {\n        const index = this.getIndex(label);\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            for (var j = 0; j < this.matrix.length; j++) {\n                if (i !== index && j !== index) {\n                    count += this.matrix[i][j];\n                }\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of false positive predictions.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalsePositiveCount(label) {\n        const index = this.getIndex(label);\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            if (i !== index) {\n                count += this.matrix[i][index];\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of false negative predictions.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseNegativeCount(label) {\n        const index = this.getIndex(label);\n        var count = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            if (i !== index) {\n                count += this.matrix[index][i];\n            }\n        }\n        return count;\n    }\n\n    /**\n     * Get the number of real positive samples.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getPositiveCount(label) {\n        return this.getTruePositiveCount(label) + this.getFalseNegativeCount(label);\n    }\n\n    /**\n     * Get the number of real negative samples.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getNegativeCount(label) {\n        return this.getTrueNegativeCount(label) + this.getFalsePositiveCount(label);\n    }\n\n    /**\n     * Get the index in the confusion matrix that corresponds to the given label\n     * @param {any} label - The label to search for\n     * @throws if the label is not found\n     * @return {number}\n     */\n    getIndex(label) {\n        const index = this.labels.indexOf(label);\n        if (index === -1) throw new Error('The label does not exist');\n        return index;\n    }\n\n    /**\n     * Get the true positive rate a.k.a. sensitivity. Computes the ratio between the number of true positive predictions and the total number of positive samples.\n     * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number} - The true positive rate [0-1]\n     */\n    getTruePositiveRate(label) {\n        return this.getTruePositiveCount(label) / this.getPositiveCount(label);\n    }\n\n    /**\n     * Get the true negative rate a.k.a. specificity. Computes the ration between the number of true negative predictions and the total number of negative samples.\n     * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getTrueNegativeRate(label) {\n        return this.getTrueNegativeCount(label) / this.getNegativeCount(label);\n    }\n\n    /**\n     * Get the positive predictive value a.k.a. precision. Computes TP / (TP + FP)\n     * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getPositivePredictiveValue(label) {\n        const TP = this.getTruePositiveCount(label);\n        return TP / (TP + this.getFalsePositiveCount(label));\n    }\n\n    /**\n     * Negative predictive value\n     * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getNegativePredictiveValue(label) {\n        const TN = this.getTrueNegativeCount(label);\n        return TN / (TN + this.getFalseNegativeCount(label));\n    }\n\n    /**\n     * False negative rate a.k.a. miss rate.\n     * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseNegativeRate(label) {\n        return 1 - this.getTruePositiveRate(label);\n    }\n\n    /**\n     * False positive rate a.k.a. fall-out rate.\n     * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalsePositiveRate(label) {\n        return 1 - this.getTrueNegativeRate(label);\n    }\n\n    /**\n     * False discovery rate (FDR)\n     * {@link https://en.wikipedia.org/wiki/False_discovery_rate}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseDiscoveryRate(label) {\n        const FP = this.getFalsePositiveCount(label);\n        return FP / (FP + this.getTruePositiveCount(label));\n    }\n\n    /**\n     * False omission rate (FOR)\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getFalseOmissionRate(label) {\n        const FN = this.getFalseNegativeCount(label);\n        return FN / (FN + this.getTruePositiveCount(label));\n    }\n\n    /**\n     * F1 score\n     * {@link https://en.wikipedia.org/wiki/F1_score}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getF1Score(label) {\n        const TP = this.getTruePositiveCount(label);\n        return 2 * TP / (2 * TP + this.getFalsePositiveCount(label) + this.getFalseNegativeCount(label));\n    }\n\n    /**\n     * Matthews correlation coefficient (MCC)\n     * {@link https://en.wikipedia.org/wiki/Matthews_correlation_coefficient}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getMatthewsCorrelationCoefficient(label) {\n        const TP = this.getTruePositiveCount(label);\n        const TN = this.getTrueNegativeCount(label);\n        const FP = this.getFalsePositiveCount(label);\n        const FN = this.getFalseNegativeCount(label);\n        return (TP * TN - FP * FN) / Math.sqrt((TP + FP) * (TP + FN) * (TN + FP) * (TN + FN));\n    }\n\n    /**\n     * Informedness\n     * {@link https://en.wikipedia.org/wiki/Youden%27s_J_statistic}\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getInformedness(label) {\n        return this.getTruePositiveRate(label) + this.getTrueNegativeRate(label) - 1;\n    }\n\n    /**\n     * Markedness\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {number}\n     */\n    getMarkedness(label) {\n        return this.getPositivePredictiveValue(label) + this.getNegativePredictiveValue(label) - 1;\n    }\n\n    /**\n     * Get the confusion table.\n     * @param {any} label - The label that should be considered \"positive\"\n     * @return {Array<Array<number> >} - The 2x2 confusion table. [[TP, FN], [FP, TN]]\n     */\n    getConfusionTable(label) {\n        return [\n            [\n                this.getTruePositiveCount(label),\n                this.getFalseNegativeCount(label)\n            ],\n            [\n                this.getFalsePositiveCount(label),\n                this.getTrueNegativeCount(label)\n            ]\n        ];\n    }\n\n    /**\n     * Get total accuracy.\n     * @return {number} - The ratio between the number of true predictions and total number of classifications ([0-1])\n     */\n    getAccuracy() {\n        let correct = 0;\n        let incorrect = 0;\n        for (var i = 0; i < this.matrix.length; i++) {\n            for (var j = 0; j < this.matrix.length; j++) {\n                if (i === j) correct += this.matrix[i][j];\n                else incorrect += this.matrix[i][j];\n            }\n        }\n        return correct / (correct + incorrect);\n    }\n\n\n    /**\n     * Returns the element in the confusion matrix that corresponds to the given actual and predicted labels.\n     * @param {any} actual - The true label\n     * @param {any} predicted - The predicted label\n     * @return {number} - The element in the confusion matrix\n     */\n    getCount(actual, predicted) {\n        const actualIndex = this.getIndex(actual);\n        const predictedIndex = this.getIndex(predicted);\n        return this.matrix[actualIndex][predictedIndex];\n    }\n\n    /**\n     * Compute the general prediction accuracy\n     * @deprecated Use getAccuracy\n     * @return {number} - The prediction accuracy ([0-1]\n     */\n    get accuracy() {\n        return this.getAccuracy();\n    }\n\n    /**\n     * Compute the number of predicted observations\n     * @deprecated Use getTotalCount\n     * @return {number}\n     */\n    get total() {\n        return this.getTotalCount();\n    }\n}\n\nmodule.exports = ConfusionMatrix;\n","'use strict';\n\nvar Matrix = require('ml-matrix').Matrix;\n\nvar Utils = require('./utils');\nconst ACTIVATION_FUNCTIONS = require('./activationFunctions');\n\nclass Layer {\n    /**\n     * @private\n     * Create a new layer with the given options\n     * @param {object} options\n     * @param {number} [options.inputSize] - Number of conections that enter the neurons.\n     * @param {number} [options.outputSize] - Number of conections that leave the neurons.\n     * @param {number} [options.regularization] - Regularization parameter.\n     * @param {number} [options.epsilon] - Learning rate parameter.\n     * @param {string} [options.activation] - Activation function parameter from the FeedForwardNeuralNetwork class.\n     * @param {number} [options.activationParam] - Activation parameter if needed.\n     */\n    constructor(options) {\n        this.inputSize = options.inputSize;\n        this.outputSize = options.outputSize;\n        this.regularization = options.regularization;\n        this.epsilon = options.epsilon;\n        this.activation = options.activation;\n        this.activationParam = options.activationParam;\n\n        var selectedFunction = ACTIVATION_FUNCTIONS[options.activation];\n        var params = selectedFunction.activation.length;\n\n        var actFunction = params > 1 ? val => selectedFunction.activation(val, options.activationParam) : selectedFunction.activation;\n        var derFunction = params > 1 ? val => selectedFunction.derivate(val, options.activationParam) : selectedFunction.derivate;\n\n        this.activationFunction = function (i, j) {\n            this[i][j] = actFunction(this[i][j]);\n        };\n        this.derivate = function (i, j) {\n            this[i][j] = derFunction(this[i][j]);\n        };\n\n        if (options.model) {\n            // load model\n            this.W = Matrix.checkMatrix(options.W);\n            this.b = Matrix.checkMatrix(options.b);\n\n        } else {\n            // default constructor\n\n            this.W = Matrix.rand(this.inputSize, this.outputSize);\n            this.b = Matrix.zeros(1, this.outputSize);\n\n            this.W.apply(function (i, j) {\n                this[i][j] /= Math.sqrt(options.inputSize);\n            });\n        }\n    }\n\n    /**\n     * @private\n     * propagate the given input through the current layer.\n     * @param {Matrix} X - input.\n     * @return {Matrix} output at the current layer.\n     */\n    forward(X) {\n        var z = X.mmul(this.W).addRowVector(this.b);\n        z.apply(this.activationFunction);\n        this.a = z.clone();\n        return z;\n    }\n\n    /**\n     * @private\n     * apply backpropagation algorithm at the current layer\n     * @param {Matrix} delta - delta values estimated at the following layer.\n     * @param {Matrix} a - 'a' values from the following layer.\n     * @return {Matrix} the new delta values for the next layer.\n     */\n    backpropagation(delta, a) {\n        this.dW = a.transposeView().mmul(delta);\n        this.db = Utils.sumCol(delta);\n\n        var aCopy = a.clone();\n        return delta.mmul(this.W.transposeView()).mul(aCopy.apply(this.derivate));\n    }\n\n    /**\n     * @private\n     * Function that updates the weights at the current layer with the derivatives.\n     */\n    update() {\n        this.dW.add(this.W.clone().mul(this.regularization));\n        this.W.add(this.dW.mul(-this.epsilon));\n        this.b.add(this.db.mul(-this.epsilon));\n    }\n\n    /**\n     * @private\n     * Export the current layer to JSON.\n     * @return {object} model\n     */\n    toJSON() {\n        return {\n            model: 'Layer',\n            inputSize: this.inputSize,\n            outputSize: this.outputSize,\n            regularization: this.regularization,\n            epsilon: this.epsilon,\n            activation: this.activation,\n            W: this.W,\n            b: this.b\n        };\n    }\n\n    /**\n     * @private\n     * Creates a new Layer with the given model.\n     * @param {object} model\n     * @return {Layer}\n     */\n    static load(model) {\n        if (model.model !== 'Layer') {\n            throw new RangeError('the current model is not a Layer model');\n        }\n        return new Layer(model);\n    }\n\n}\n\nmodule.exports = Layer;\n","'use strict';\n\nvar Matrix = require('ml-matrix').Matrix;\n\n/**\n * @private\n * Retrieves the sum at each row of the given matrix.\n * @param {Matrix} matrix\n * @return {Matrix}\n */\nfunction sumRow(matrix) {\n    var sum = Matrix.zeros(matrix.rows, 1);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum[i][0] += matrix[i][j];\n        }\n    }\n    return sum;\n}\n\n/**\n * @private\n * Retrieves the sum at each column of the given matrix.\n * @param {Matrix} matrix\n * @return {Matrix}\n */\nfunction sumCol(matrix) {\n    var sum = Matrix.zeros(1, matrix.columns);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum[0][j] += matrix[i][j];\n        }\n    }\n    return sum;\n}\n\n/**\n * @private\n * Method that given an array of labels(predictions), returns two dictionaries, one to transform from labels to\n * numbers and other in the reverse way\n * @param {Array} array\n * @return {object}\n */\nfunction dictOutputs(array) {\n    var inputs = {};\n    var outputs = {};\n    var index = 0;\n    for (var i = 0; i < array.length; i += 1) {\n        if (inputs[array[i]] === undefined) {\n            inputs[array[i]] = index;\n            outputs[index] = array[i];\n            index++;\n        }\n    }\n\n    return {\n        inputs: inputs,\n        outputs: outputs\n    };\n}\n\nmodule.exports = {\n    dictOutputs: dictOutputs,\n    sumCol: sumCol,\n    sumRow: sumRow\n};\n","'use strict';\n\nfunction logistic(val) {\n    return 1 / (1 + Math.exp(-val));\n}\n\nfunction expELU(val, param) {\n    return val < 0 ? param * (Math.exp(val) - 1) : val;\n}\n\nfunction softExponential(val, param) {\n    if (param < 0) {\n        return -Math.log(1 - param * (val + param)) / param;\n    }\n    if (param > 0) {\n        return ((Math.exp(param * val) - 1) / param) + param;\n    }\n    return val;\n}\n\nfunction softExponentialPrime(val, param) {\n    if (param < 0) {\n        return 1 / (1 - param * (param + val));\n    } else {\n        return Math.exp(param * val);\n    }\n}\n\nconst ACTIVATION_FUNCTIONS = {\n    tanh: {\n        activation: Math.tanh,\n        derivate: val => 1 - (val * val)\n    },\n    identity: {\n        activation: val => val,\n        derivate: () => 1\n    },\n    logistic: {\n        activation: logistic,\n        derivate: val => logistic(val) * (1 - logistic(val))\n    },\n    arctan: {\n        activation: Math.atan,\n        derivate: val => 1 / (val * val + 1)\n    },\n    softsign: {\n        activation: val => val / (1 + Math.abs(val)),\n        derivate: val => 1 / ((1 + Math.abs(val)) * (1 + Math.abs(val)))\n    },\n    relu: {\n        activation: val => val < 0 ? 0 : val,\n        derivate: val => val < 0 ? 0 : 1\n    },\n    softplus: {\n        activation: val => Math.log(1 + Math.exp(val)),\n        derivate: val => 1 / (1 + Math.exp(-val))\n    },\n    bent: {\n        activation: val => ((Math.sqrt(val * val + 1) - 1) / 2) + val,\n        derivate: val => (val / (2 * Math.sqrt(val * val + 1))) + 1\n    },\n    sinusoid: {\n        activation: Math.sin,\n        derivate: Math.cos\n    },\n    sinc: {\n        activation: val => val === 0 ? 1 : Math.sin(val) / val,\n        derivate: val => val === 0 ? 0 : (Math.cos(val) / val) - (Math.sin(val) / (val * val))\n    },\n    gaussian: {\n        activation: val => Math.exp(-(val * val)),\n        derivate: val => -2 * val * Math.exp(-(val * val))\n    },\n    'parametric-relu': {\n        activation: (val, param) => val < 0 ? param * val : val,\n        derivate: (val, param) => val < 0 ? param : 1\n    },\n    'exponential-elu': {\n        activation: expELU,\n        derivate: (val, param) => val < 0 ? expELU(val, param) + param : 1\n    },\n    'soft-exponential': {\n        activation: softExponential,\n        derivate: softExponentialPrime\n    }\n};\n\nmodule.exports = ACTIVATION_FUNCTIONS;\n","function NodeSquare(x, y, weights, som) {\n    this.x = x;\n    this.y = y;\n    this.weights = weights;\n    this.som = som;\n    this.neighbors = {};\n}\n\nNodeSquare.prototype.adjustWeights = function adjustWeights(target, learningRate, influence) {\n    for (var i = 0, ii = this.weights.length; i < ii; i++) {\n        this.weights[i] += learningRate * influence * (target[i] - this.weights[i]);\n    }\n};\n\nNodeSquare.prototype.getDistance = function getDistance(otherNode) {\n    return Math.max(Math.abs(this.x - otherNode.x), Math.abs(this.y - otherNode.y));\n};\n\nNodeSquare.prototype.getDistanceTorus = function getDistanceTorus(otherNode) {\n    var distX = Math.abs(this.x - otherNode.x),\n        distY = Math.abs(this.y - otherNode.y);\n    return Math.max(Math.min(distX, this.som.gridDim.x - distX), Math.min(distY, this.som.gridDim.y - distY));\n};\n\nNodeSquare.prototype.getNeighbors = function getNeighbors(xy) {\n    if (!this.neighbors[xy]) {\n        this.neighbors[xy] = new Array(2);\n\n        // left or bottom neighbor\n        var v;\n        if (this[xy] > 0) {\n            v = this[xy] - 1;\n        } else if (this.som.torus) {\n            v = this.som.gridDim[xy] - 1\n        }\n        if (typeof v !== 'undefined') {\n            var x, y;\n            if (xy === 'x') {\n                x = v;\n                y = this.y;\n            } else {\n                x = this.x;\n                y = v;\n            }\n            this.neighbors[xy][0] = this.som.nodes[x][y];\n        }\n\n        // top or right neighbor\n        var w;\n        if (this[xy] < (this.som.gridDim[xy] - 1)) {\n            w = this[xy] + 1;\n        } else if (this.som.torus) {\n            w = 0;\n        }\n        if (typeof w !== 'undefined') {\n            if (xy === 'x') {\n                x = w;\n                y = this.y;\n            } else {\n                x = this.x;\n                y = w;\n            }\n            this.neighbors[xy][1] = this.som.nodes[x][y];\n        }\n    }\n    return this.neighbors[xy];\n};\n\nNodeSquare.prototype.getPos = function getPos(xy, element) {\n    var neighbors = this.getNeighbors(xy),\n        distance = this.som.distance,\n        bestNeighbor,\n        direction;\n    if(neighbors[0]) {\n        if (neighbors[1]) {\n            var dist1 = distance(element, neighbors[0].weights),\n                dist2 = distance(element, neighbors[1].weights);\n            if(dist1 < dist2) {\n                bestNeighbor = neighbors[0];\n                direction = -1;\n            } else {\n                bestNeighbor = neighbors[1];\n                direction = 1;\n            }\n        } else {\n            bestNeighbor = neighbors[0];\n            direction = -1;\n        }\n    } else {\n        bestNeighbor = neighbors[1];\n        direction = 1;\n    }\n    var simA = 1 - distance(element, this.weights),\n        simB = 1 - distance(element, bestNeighbor.weights);\n    var factor = ((simA - simB) / (2 - simA - simB));\n    return 0.5 + 0.5 * factor * direction;\n};\n\nNodeSquare.prototype.getPosition = function getPosition(element) {\n    return [\n        this.getPos('x', element),\n        this.getPos('y', element)\n    ];\n};\n\nmodule.exports = NodeSquare;","'use strict';\n\nexports.distance = require('./distances');\nexports.similarity = require('./similarities');","'use strict';\n\nmodule.exports = function czekanowskiSimilarity(a, b) {\n    var up = 0;\n    var down = 0;\n    for (var i = 0; i < a.length; i++) {\n        up += Math.min(a[i], b[i]);\n        down += a[i] + b[i];\n    }\n    return 2 * up / down;\n};\n","module.exports = function dice(a, b) {\n    var ii = a.length,\n        p = 0,\n        q1 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * a[i];\n        q1 += b[i] * b[i];\n        q2 += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return q2 / (p + q1);\n};\n","module.exports = function intersection(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.min(a[i], b[i]);\n    }\n    return 1 - ans;\n};\n","module.exports = function jaccard(a, b) {\n    var ii = a.length,\n        p1 = 0,\n        p2 = 0,\n        q1 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p1 += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q1 += b[i] * b[i];\n        q2 += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return q2 / (p2 + q1 - p1);\n};\n","module.exports = function kulczynski(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += Math.min(a[i],b[i]);\n    }\n    return up / down;\n};\n","module.exports = function motyka(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.min(a[i], b[i]);\n        down += a[i] + b[i];\n    }\n    return 1 - (up / down);\n};\n","module.exports = function squaredChord(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (Math.sqrt(a[i]) - Math.sqrt(b[i])) * (Math.sqrt(a[i]) - Math.sqrt(b[i]));\n    }\n    return ans;\n};\n","module.exports = function tanimoto(a, b, bitvector) {\n    if (bitvector) {\n        var inter = 0,\n            union = 0;\n        for (var j = 0; j < a.length; j++) {\n            inter += a[j] && b[j];\n            union += a[j] || b[j];\n        }\n        if (union === 0)\n            return 1;\n        return inter / union;\n    }\n    else {\n        var ii = a.length,\n            p = 0,\n            q = 0,\n            m = 0;\n        for (var i = 0; i < ii ; i++) {\n            p += a[i];\n            q += b[i];\n            m += Math.min(a[i],b[i]);\n        }\n        return 1 - (p + q - 2 * m) / (p + q - m);\n    }\n};\n","module.exports = function cosine(a, b) {\n    var ii = a.length,\n        p = 0,\n        p2 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q2 += b[i] * b[i];\n    }\n    return p / (Math.sqrt(p2) * Math.sqrt(q2));\n};\n","'use strict';\n\nvar extend = require('extend');\n\nvar defaultOptions = {\n    size: 1,\n    value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n    var len = data.length;\n    if (typeof options.size === 'number')\n        options.size = [options.size, options.size];\n\n    var cond = len + options.size[0] + options.size[1];\n\n    var output;\n    if (options.output) {\n        if (options.output.length !== cond)\n            throw new RangeError('Wrong output size');\n        output = options.output;\n    }\n    else\n        output = new Array(cond);\n\n    var i;\n\n    // circular option\n    if (options.value === 'circular') {\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = data[((len - (options.size[0] % len)) + i) % len];\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = data[(i - options.size[0]) % len];\n        }\n    }\n\n    // replicate option\n    else if (options.value === 'replicate') {\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = data[0];\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = data[len - 1];\n        }\n    }\n\n    // symmetric option\n    else if (options.value === 'symmetric') {\n        if ((options.size[0] > len) || (options.size[1] > len))\n            throw new RangeError('expanded value should not be bigger than the data length');\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = data[options.size[0] - 1 - i];\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = data[2*len + options.size[0] - i - 1];\n        }\n    }\n\n    // default option\n    else {\n        for (i = 0; i < cond; i++) {\n            if (i < options.size[0])\n                output[i] = options.value;\n            else if (i < (options.size[0] + len))\n                output[i] = data[i - options.size[0]];\n            else\n                output[i] = options.value;\n        }\n    }\n\n    return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n    var row = data.length;\n    var col = data[0].length;\n    if (options.size[0] === undefined)\n        options.size = [options.size, options.size, options.size, options.size];\n    throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray (data, options) {\n    options = extend({}, defaultOptions, options);\n\n    if (Array.isArray(data)) {\n        if (Array.isArray(data[0]))\n            return matrixCase(data, options);\n        else\n            return arrayCase(data, options);\n    }\n    else\n        throw new TypeError('data should be an array');\n}\n\nmodule.exports = padArray;\n","export default function maybeToPrecision(value, digits) {\n    if (value < 0) {\n        value = 0 - value;\n        if (typeof digits === 'number') {\n            return '- ' + value.toPrecision(digits);\n        } else {\n            return '- ' + value.toString();\n        }\n    } else {\n        if (typeof digits === 'number') {\n            return value.toPrecision(digits);\n        } else {\n            return value.toString();\n        }\n    }\n}\n","export default function checkArraySize(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y)) {\n        throw new TypeError('x and y must be arrays');\n    }\n    if (x.length !== y.length) {\n        throw new RangeError('x and y arrays must have the same length');\n    }\n}\n","export {default as maybeToPrecision} from './maybeToPrecision';\nexport {default as checkArrayLength} from './checkArrayLength';\n\nexport default class BaseRegression {\n    constructor() {\n        if (new.target === BaseRegression) {\n            throw new Error('BaseRegression must be subclassed');\n        }\n    }\n\n    predict(x) {\n        if (typeof x === 'number') {\n            return this._predict(x);\n        } else if (Array.isArray(x)) {\n            const y = new Array(x.length);\n            for (let i = 0; i < x.length; i++) {\n                y[i] = this._predict(x[i]);\n            }\n            return y;\n        } else {\n            throw new TypeError('x must be a number or array');\n        }\n    }\n\n    _predict() {\n        throw new Error('_predict must be implemented');\n    }\n\n    train() {\n        //Do nothing for this package\n    }\n\n    toString() {\n        return '';\n    }\n\n    toLaTeX() {\n        return '';\n    }\n\n    /**\n     * Return the correlation coefficient of determination (r) and chi-square.\n     * @param {Array<number>} x\n     * @param {Array<number>} y\n     * @return {object}\n     */\n    score(x, y) {\n        if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n            throw new Error('x and y must be arrays of the same length');\n        }\n\n        const n = x.length;\n        const y2 = new Array(n);\n        for (let i = 0; i < n; i++) {\n            y2[i] = this._predict(x[i]);\n        }\n\n        let xSum = 0;\n        let ySum = 0;\n        let chi2 = 0;\n        let rmsd = 0;\n        let xSquared = 0;\n        let ySquared = 0;\n        let xY = 0;\n        for (let i = 0; i < n; i++) {\n            xSum += y2[i];\n            ySum += y[i];\n            xSquared += y2[i] * y2[i];\n            ySquared += y[i] * y[i];\n            xY += y2[i] * y[i];\n            if (y[i] !== 0) {\n                chi2 += (y[i] - y2[i]) * (y[i] - y2[i]) / y[i];\n            }\n            rmsd = (y[i] - y2[i]) * (y[i] - y2[i]);\n        }\n\n        const r = (n * xY - xSum * ySum) / Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n        return {\n            r: r,\n            r2: r * r,\n            chi2: chi2,\n            rmsd: rmsd * rmsd / n\n        };\n    }\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n    constructor(x, y) {\n        super();\n        if (x === true) {\n            this.slope = y.slope;\n            this.intercept = y.intercept;\n            this.coefficients = [y.intercept, y.slope];\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y);\n        }\n    }\n\n    toJSON() {\n        return {\n            name: 'simpleLinearRegression',\n            slope: this.slope,\n            intercept: this.intercept\n        };\n    }\n\n    _predict(x) {\n        return this.slope * x + this.intercept;\n    }\n\n    computeX(y) {\n        return (y - this.intercept) / this.slope;\n    }\n\n    toString(precision) {\n        let result = 'f(x) = ';\n        if (this.slope !== 0) {\n            const xFactor = maybeToPrecision(this.slope, precision);\n            result += (xFactor === '1' ? '' : xFactor + ' * ') + 'x';\n            if (this.intercept) {\n                const absIntercept = Math.abs(this.intercept);\n                const operator = absIntercept === this.intercept ? '+' : '-';\n                result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n            }\n        } else {\n            result += maybeToPrecision(this.intercept, precision);\n        }\n        return result;\n    }\n\n    toLaTeX(precision) {\n        return this.toString(precision);\n    }\n\n    static load(json) {\n        if (json.name !== 'simpleLinearRegression') {\n            throw new TypeError('not a SLR model');\n        }\n        return new SimpleLinearRegression(true, json);\n    }\n}\n\nfunction regress(slr, x, y) {\n    const n = x.length;\n    let xSum = 0;\n    let ySum = 0;\n\n    let xSquared = 0;\n    let xY = 0;\n\n    for (let i = 0; i < n; i++) {\n        xSum += x[i];\n        ySum += y[i];\n        xSquared += x[i] * x[i];\n        xY += x[i] * y[i];\n    }\n\n    const numerator = (n * xY - xSum * ySum);\n    slr.slope = numerator / (n * xSquared - xSum * xSum);\n    slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n    slr.coefficients = [slr.intercept, slr.slope];\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport Matrix, {solve} from 'ml-matrix';\n\nexport default class PolynomialRegression extends BaseRegression {\n    constructor(x, y, degree) {\n        super();\n        if (x === true) {\n            this.degree = y.degree;\n            this.powers = y.powers;\n            this.coefficients = y.coefficients;\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y, degree);\n        }\n    }\n\n    _predict(x) {\n        let y = 0;\n        for (let k = 0; k < this.powers.length; k++) {\n            y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n        }\n        return y;\n    }\n\n    toJSON() {\n        return {\n            name: 'polynomialRegression',\n            degree: this.degree,\n            powers: this.powers,\n            coefficients: this.coefficients\n        };\n    }\n\n    toString(precision) {\n        return this._toFormula(precision, false);\n    }\n\n    toLaTeX(precision) {\n        return this._toFormula(precision, true);\n    }\n\n    _toFormula(precision, isLaTeX) {\n        let sup = '^';\n        let closeSup = '';\n        let times = ' * ';\n        if (isLaTeX) {\n            sup = '^{';\n            closeSup = '}';\n            times = '';\n        }\n\n        let fn = '';\n        let str = '';\n        for (let k = 0; k < this.coefficients.length; k++) {\n            str = '';\n            if (this.coefficients[k] !== 0) {\n                if (this.powers[k] === 0) {\n                    str = maybeToPrecision(this.coefficients[k], precision);\n                } else {\n                    if (this.powers[k] === 1) {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x';\n                    } else {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x' + sup + this.powers[k] + closeSup;\n                    }\n                }\n\n                if (this.coefficients[k] > 0 && k !== (this.coefficients.length - 1)) {\n                    str = ' + ' + str;\n                } else if (k !== (this.coefficients.length - 1)) {\n                    str = ' ' + str;\n                }\n            }\n            fn = str + fn;\n        }\n        if (fn.charAt(0) === '+') {\n            fn = fn.slice(1);\n        }\n\n        return 'f(x) = ' + fn;\n    }\n\n    static load(json) {\n        if (json.name !== 'polynomialRegression') {\n            throw new TypeError('not a polynomial regression model');\n        }\n        return new PolynomialRegression(true, json);\n    }\n}\n\nfunction regress(pr, x, y, degree) {\n    const n = x.length;\n    let powers;\n    if (Array.isArray(degree)) {\n        powers = degree;\n        degree = powers.length;\n    } else {\n        degree++;\n        powers = new Array(degree);\n        for (let k = 0; k < degree; k++) {\n            powers[k] = k;\n        }\n    }\n    const F = new Matrix(n, degree);\n    const Y = new Matrix([y]);\n    for (let k = 0; k < degree; k++) {\n        for (let i = 0; i < n; i++) {\n            if (powers[k] === 0) {\n                F[i][k] = 1;\n            } else {\n                F[i][k] = Math.pow(x[i], powers[k]);\n            }\n        }\n    }\n\n    const FT = F.transposeView();\n    const A = FT.mmul(F);\n    const B = FT.mmul(Y.transposeView());\n\n    pr.degree = degree - 1;\n    pr.powers = powers;\n    pr.coefficients = solve(A, B).to1DArray();\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class ExponentialRegression extends BaseRegression {\n    constructor(x, y) {\n        super();\n        if (x === true) {\n            this.A = y.A;\n            this.B = y.B;\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y);\n        }\n    }\n\n    _predict(input) {\n        return this.B * Math.exp(input * this.A);\n    }\n\n    toJSON() {\n        return {\n            name: 'exponentialRegression',\n            A: this.A,\n            B: this.B\n        };\n    }\n\n    toString(precision) {\n        return 'f(x) = ' + maybeToPrecision(this.B, precision) + ' * e^(' + maybeToPrecision(this.A, precision) + ' * x)';\n    }\n\n    toLaTeX(precision) {\n        if (this.A >= 0) {\n            return 'f(x) = ' + maybeToPrecision(this.B, precision) + 'e^{' + maybeToPrecision(this.A, precision) + 'x}';\n        } else {\n            return 'f(x) = \\\\frac{' + maybeToPrecision(this.B, precision) + '}{e^{' + maybeToPrecision(-this.A, precision) + 'x}}';\n        }\n\n    }\n\n    static load(json) {\n        if (json.name !== 'exponentialRegression') {\n            throw new TypeError('not a exponential regression model');\n        }\n        return new ExponentialRegression(true, json);\n    }\n}\n\nfunction regress(er, x, y) {\n    const n = x.length;\n    const yl = new Array(n);\n    for (let i = 0; i < n; i++) {\n        yl[i] = Math.log(y[i]);\n    }\n\n    const linear = new SimpleLinearRegression(x, yl);\n    er.A = linear.slope;\n    er.B = Math.exp(linear.intercept);\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class PowerRegression extends BaseRegression {\n    constructor(x, y) {\n        super();\n        if (x === true) { // reloading model\n            this.A = y.A;\n            this.B = y.B;\n        } else {\n            checkArrayLength(x, y);\n            regress(this, x, y);\n        }\n    }\n\n    _predict(newInputs) {\n        return this.A * Math.pow(newInputs, this.B);\n    }\n\n    toJSON() {\n        return {\n            name: 'powerRegression',\n            A: this.A,\n            B: this.B\n        };\n    }\n\n    toString(precision) {\n        return 'f(x) = ' + maybeToPrecision(this.A, precision) + ' * x^' + maybeToPrecision(this.B, precision);\n    }\n\n    toLaTeX(precision) {\n        if (this.B >= 0) {\n            return 'f(x) = ' + maybeToPrecision(this.A, precision) + 'x^{' + maybeToPrecision(this.B, precision) + '}';\n        } else {\n            return 'f(x) = \\\\frac{' + maybeToPrecision(this.A, precision) + '}{x^{' + maybeToPrecision(-this.B, precision) + '}}';\n        }\n    }\n\n    static load(json) {\n        if (json.name !== 'powerRegression') {\n            throw new TypeError('not a power regression model');\n        }\n        return new PowerRegression(true, json);\n    }\n}\n\nfunction regress(pr, x, y) {\n    const n = x.length;\n    const xl = new Array(n);\n    const yl = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xl[i] = Math.log(x[i]);\n        yl[i] = Math.log(y[i]);\n    }\n\n    const linear = new SimpleLinearRegression(xl, yl);\n    pr.A = Math.exp(linear.intercept);\n    pr.B = linear.slope;\n}\n","import Matrix, { SVD } from 'ml-matrix';\nimport BaseRegression from 'ml-regression-base';\n\nexport default class MultivariateLinearRegression extends BaseRegression {\n  constructor(x, y, options = {}) {\n    const { intercept = true, statistics = true } = options;\n    super();\n    this.statistics = statistics;\n    if (x === true) {\n      this.weights = y.weights;\n      this.inputs = y.inputs;\n      this.outputs = y.outputs;\n      this.intercept = y.intercept;\n    } else {\n      x = new Matrix(x);\n      if (intercept) {\n        x.addColumn(new Array(x.length).fill(1));\n      }\n      const beta = new SVD(x, { autoTranspose: true }).solve(y);\n      this.weights = beta.to2DArray();\n      this.inputs = x[0].length;\n      this.outputs = y[0].length;\n      if (intercept) this.inputs--;\n      this.intercept = intercept;\n      if (statistics) {\n        /*\n         * Let's add some basic statistics about the beta's to be able to interpret them.\n         * source: http://dept.stat.lsa.umich.edu/~kshedden/Courses/Stat401/Notes/401-multreg.pdf\n         * validated against Excel Regression AddIn\n         * test: \"datamining statistics test\"\n         */\n        const fittedValues = x.mmul(beta);\n        const residuals = new Matrix(y).addM(fittedValues.neg());\n        const variance =\n          residuals\n            .to2DArray()\n            .map((ri) => Math.pow(ri[0], 2))\n            .reduce((a, b) => a + b) /\n          (y.length - x.columns);\n        this.stdError = Math.sqrt(variance);\n        this.stdErrorMatrix = x\n          .transposeView()\n          .mmul(x)\n          .pseudoInverse()\n          .mul(variance);\n        this.stdErrors = this.stdErrorMatrix.diagonal().map((d) => Math.sqrt(d));\n        this.tStats = this.weights.map(\n          (d, i) => (this.stdErrors[i] === 0 ? 0 : d[0] / this.stdErrors[i])\n        );\n      }\n    }\n  }\n\n  predict(x) {\n    if (Array.isArray(x)) {\n      if (typeof x[0] === 'number') {\n        return this._predict(x);\n      } else if (Array.isArray(x[0])) {\n        const y = new Array(x.length);\n        for (let i = 0; i < x.length; i++) {\n          y[i] = this._predict(x[i]);\n        }\n        return y;\n      }\n    }\n    throw new TypeError('x must be a matrix or array of numbers');\n  }\n\n  _predict(x) {\n    const result = new Array(this.outputs);\n    if (this.intercept) {\n      for (let i = 0; i < this.outputs; i++) {\n        result[i] = this.weights[this.inputs][i];\n      }\n    } else {\n      result.fill(0);\n    }\n    for (let i = 0; i < this.inputs; i++) {\n      for (let j = 0; j < this.outputs; j++) {\n        result[j] += this.weights[i][j] * x[i];\n      }\n    }\n    return result;\n  }\n\n  score() {\n    throw new Error('score method is not implemented yet');\n  }\n\n  toJSON() {\n    return {\n      name: 'multivariateLinearRegression',\n      weights: this.weights,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      intercept: this.intercept,\n      summary: (this.statistics)\n        ? {\n          regressionStatistics: {\n            standardError: this.stdError,\n            observations: this.outputs\n          },\n          variables: this.weights.map((d, i) => {\n            return {\n              label:\n                i === this.weights.length - 1\n                  ? 'Intercept'\n                  : `X Variable ${i + 1}`,\n              coefficients: d,\n              standardError: this.stdErrors[i],\n              tStat: this.tStats[i]\n            };\n          })\n        }\n        : undefined,\n    };\n  }\n\n  static load(model) {\n    if (model.name !== 'multivariateLinearRegression') {\n      throw new Error('not a MLR model');\n    }\n    return new MultivariateLinearRegression(true, model);\n  }\n}\n","import {maybeToPrecision} from 'ml-regression-base';\nimport PolynomialRegression from 'ml-regression-polynomial';\nimport BaseRegression from 'ml-regression-base';\n\n/*\n * Function that calculate the potential fit in the form f(x) = A*x^M\n * with a given M and return de A coefficient.\n *\n * @param {Vector} X - Vector of the x positions of the points.\n * @param {Vector} Y - Vector of the x positions of the points.\n * @param {Number} M - The exponent of the potential fit.\n * @return {Number} A - The A coefficient of the potential fit.\n */\nexport default class PotentialRegression extends BaseRegression {\n    /**\n     * @constructor\n     * @param x: Independent variable\n     * @param y: Dependent variable\n     * @param M\n     */\n    constructor(x, y, M) {\n        super();\n        if (x === true) { // reloading model\n            this.A = y.A;\n            this.M = y.M;\n        } else {\n            var n = x.length;\n            if (n !== y.length) {\n                throw new RangeError('input and output array have a different length');\n            }\n\n            var linear = new PolynomialRegression(x, y, [M]);\n            this.A = linear.coefficients[0];\n            this.M = M;\n        }\n    }\n\n    _predict(x) {\n        return this.A * Math.pow(x, this.M);\n    }\n\n    toJSON() {\n        return {\n            name: 'potentialRegression',\n            A: this.A,\n            M: this.M\n        };\n    }\n\n    toString(precision) {\n        return 'f(x) = ' + maybeToPrecision(this.A, precision) + ' * x^' + this.M;\n    }\n\n    toLaTeX(precision) {\n        if (this.M >= 0) {\n            return 'f(x) = ' + maybeToPrecision(this.A, precision) + 'x^{' + this.M + '}';\n        } else {\n            return 'f(x) = \\\\frac{' + maybeToPrecision(this.A, precision) + '}{x^{' + (-this.M) + '}}';\n        }\n    }\n\n    static load(json) {\n        if (json.name !== 'potentialRegression') {\n            throw new TypeError('not a potential regression model');\n        }\n        return new PotentialRegression(true, json);\n    }\n}\n","import {Matrix, solve} from 'ml-matrix';\nimport Kernel from 'ml-kernel';\n\nimport BaseRegression from 'ml-regression-base';\n\nconst defaultOptions = {\n    lambda: 0.1,\n    kernelType: 'gaussian',\n    kernelOptions: {},\n    computeCoefficient: false\n};\n\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport default class KernelRidgeRegression extends BaseRegression {\n    constructor(inputs, outputs, options) {\n        super();\n        if (inputs === true) { // reloading model\n            this.alpha = outputs.alpha;\n            this.inputs = outputs.inputs;\n            this.kernelType = outputs.kernelType;\n            this.kernelOptions = outputs.kernelOptions;\n            this.kernel = new Kernel(outputs.kernelType, outputs.kernelOptions);\n        } else {\n            options = Object.assign({}, defaultOptions, options);\n\n            const kernelFunction = new Kernel(options.kernelType, options.kernelOptions);\n            const K = kernelFunction.compute(inputs);\n            const n = inputs.length;\n            K.add(Matrix.eye(n, n).mul(options.lambda));\n\n            this.alpha = solve(K, outputs);\n            this.inputs = inputs;\n            this.kernelType = options.kernelType;\n            this.kernelOptions = options.kernelOptions;\n            this.kernel = kernelFunction;\n        }\n    }\n\n    _predict(newInputs) {\n        return this.kernel.compute([newInputs], this.inputs).mmul(this.alpha)[0];\n    }\n\n    toJSON() {\n        return {\n            name: 'kernelRidgeRegression',\n            alpha: this.alpha,\n            inputs: this.inputs,\n            kernelType: this.kernelType,\n            kernelOptions: this.kernelOptions\n        };\n    }\n\n    static load(json) {\n        if (json.name !== 'kernelRidgeRegression') {\n            throw new TypeError('not a KRR model');\n        }\n        return new KernelRidgeRegression(true, json);\n    }\n}\n","import {Matrix, SVD} from 'ml-matrix';\nimport BaseRegression from 'ml-regression-base';\n\nconst defaultOptions = {\n    order: 2\n};\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport default class PolynomialFitRegression2D extends BaseRegression {\n    /**\n     * Constructor for the 2D polynomial fitting\n     *\n     * @param inputs\n     * @param outputs\n     * @param options\n     * @constructor\n     */\n    constructor(inputs, outputs, options) {\n        super();\n        if (inputs === true) { // reloading model\n            this.coefficients = Matrix.columnVector(outputs.coefficients);\n            this.order = outputs.order;\n            if (outputs.r) {\n                this.r = outputs.r;\n                this.r2 = outputs.r2;\n            }\n            if (outputs.chi2) {\n                this.chi2 = outputs.chi2;\n            }\n        } else {\n            options = Object.assign({}, defaultOptions, options);\n            this.order = options.order;\n            this.coefficients = [];\n            this.X = inputs;\n            this.y = outputs;\n\n            this.train(this.X, this.y, options);\n        }\n    }\n\n    /**\n     * Function that fits the model given the data(X) and predictions(y).\n     * The third argument is an object with the following options:\n     * * order: order of the polynomial to fit.\n     *\n     * @param {Matrix} X - A matrix with n rows and 2 columns.\n     * @param {Matrix} y - A vector of the prediction values.\n     */\n    train(X, y) {\n        if (!Matrix.isMatrix(X)) X = new Matrix(X);\n        if (!Matrix.isMatrix(y)) y = Matrix.columnVector(y);\n\n        if (y.rows !== X.rows) {\n            y = y.transpose();\n        }\n\n        if (X.columns !== 2) {\n            throw new RangeError('You give X with ' + X.columns + ' columns and it must be 2');\n        }\n        if (X.rows !== y.rows) {\n            throw new RangeError('X and y must have the same rows');\n        }\n\n        var examples = X.rows;\n        var coefficients = ((this.order + 2) * (this.order + 1)) / 2;\n        this.coefficients = new Array(coefficients);\n\n        var x1 = X.getColumnVector(0);\n        var x2 = X.getColumnVector(1);\n\n        var scaleX1 = 1.0 / x1.clone().apply(abs).max();\n        var scaleX2 = 1.0 / x2.clone().apply(abs).max();\n        var scaleY = 1.0 / y.clone().apply(abs).max();\n\n        x1.mulColumn(0, scaleX1);\n        x2.mulColumn(0, scaleX2);\n        y.mulColumn(0, scaleY);\n\n        var A = new Matrix(examples, coefficients);\n        var col = 0;\n\n        for (var i = 0; i <= this.order; ++i) {\n            var limit = this.order - i;\n            for (var j = 0; j <= limit; ++j) {\n                var result = powColVector(x1, i).mulColumnVector(powColVector(x2, j));\n                A.setColumn(col, result);\n                col++;\n            }\n        }\n\n        var svd = new SVD(A.transpose(), {\n            computeLeftSingularVectors: true,\n            computeRightSingularVectors: true,\n            autoTranspose: false\n        });\n\n        var qqs = Matrix.rowVector(svd.diagonal);\n        qqs = qqs.apply(function (i, j) {\n            if (this[i][j] >= 1e-15) this[i][j] = 1 / this[i][j];\n            else this[i][j] = 0;\n        });\n\n        var qqs1 = Matrix.zeros(examples, coefficients);\n        for (i = 0; i < coefficients; ++i) {\n            qqs1[i][i] = qqs[0][i];\n        }\n\n        qqs = qqs1;\n\n        var U = svd.rightSingularVectors;\n        var V = svd.leftSingularVectors;\n\n        this.coefficients = V.mmul(qqs.transpose()).mmul(U.transpose()).mmul(y);\n\n        col = 0;\n\n        for (i = 0; i <= coefficients; ++i) {\n            limit = this.order - i;\n            for (j = 0; j <= limit; ++j) {\n                this.coefficients[col][0] = (this.coefficients[col][0] * Math.pow(scaleX1, i) * Math.pow(scaleX2, j)) / scaleY;\n                col++;\n            }\n        }\n    }\n\n    _predict(newInputs) {\n        var x1 = newInputs[0];\n        var x2 = newInputs[1];\n\n        var y = 0;\n        var column = 0;\n\n        for (var i = 0; i <= this.order; i++) {\n            for (var j = 0; j <= this.order - i; j++) {\n                y += Math.pow(x1, i) * (Math.pow(x2, j)) * this.coefficients[column][0];\n                column++;\n            }\n        }\n\n        return y;\n    }\n\n    toJSON() {\n        return {\n            name: 'polyfit2D',\n            order: this.order,\n            coefficients: this.coefficients\n        };\n    }\n\n    static load(json) {\n        if (json.name !== 'polyfit2D') {\n            throw new TypeError('not a polyfit2D model');\n        }\n        return new PolynomialFitRegression2D(true, json);\n    }\n}\n\n/**\n * Function that given a column vector return this: vector^power\n *\n * @param x - Column vector.\n * @param power - Pow number.\n * @return {Suite|Matrix}\n */\nfunction powColVector(x, power) {\n    var result = x.clone();\n    for (var i = 0; i < x.rows; ++i) {\n        result[i][0] = Math.pow(result[i][0], power);\n    }\n    return result;\n}\n\n/**\n * Function to use in the apply method to get the absolute value\n * of each element of the matrix\n *\n * @param i - current row.\n * @param j - current column.\n */\nfunction abs(i, j) {\n    this[i][j] = Math.abs(this[i][j]);\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport {array} from 'ml-stat';\nconst median = array.median;\n\nexport default class TheilSenRegression extends BaseRegression {\n\n    /**\n     * Theil–Sen estimator\n     * https://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator\n     * @param {Array<number>|boolean} x\n     * @param {Array<number>|object} y\n     * @constructor\n     */\n    constructor(x, y) {\n        super();\n        if (x === true) {\n            // loads the model\n            this.slope = y.slope;\n            this.intercept = y.intercept;\n            this.coefficients = y.coefficients;\n        } else {\n            // creates the model\n            checkArrayLength(x, y);\n            theilSen(this, x, y);\n        }\n\n    }\n\n    toJSON() {\n        return {\n            name: 'TheilSenRegression',\n            slope: this.slope,\n            intercept: this.intercept\n        };\n    }\n\n    _predict(input) {\n        return this.slope * input + this.intercept;\n    }\n\n    computeX(input) {\n        return (input - this.intercept) / this.slope;\n    }\n\n    toString(precision) {\n        var result = 'f(x) = ';\n        if (this.slope) {\n            var xFactor = maybeToPrecision(this.slope, precision);\n            result += (Math.abs(xFactor - 1) < 1e-5 ? '' : xFactor + ' * ') + 'x';\n            if (this.intercept) {\n                var absIntercept = Math.abs(this.intercept);\n                var operator = absIntercept === this.intercept ? '+' : '-';\n                result += ' ' + operator + ' ' + maybeToPrecision(absIntercept, precision);\n            }\n        } else {\n            result += maybeToPrecision(this.intercept, precision);\n        }\n        return result;\n    }\n\n    toLaTeX(precision) {\n        return this.toString(precision);\n    }\n\n    static load(json) {\n        if (json.name !== 'TheilSenRegression') {\n            throw new TypeError('not a Theil-Sen model');\n        }\n        return new TheilSenRegression(true, json);\n    }\n}\n\nfunction theilSen(regression, x, y) {\n    let len = x.length;\n    let slopes = new Array(len * len);\n    let count = 0;\n    for (let i = 0; i < len; ++i) {\n        for (let j = i + 1; j < len; ++j) {\n            if (x[i] !== x[j]) {\n                slopes[count++] = (y[j] - y[i]) / (x[j] - x[i]);\n            }\n        }\n    }\n    slopes.length = count;\n    let medianSlope = median(slopes);\n\n    let cuts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n        cuts[i] = y[i] - medianSlope * x[i];\n    }\n\n    regression.slope = medianSlope;\n    regression.intercept = median(cuts);\n    regression.coefficients = [regression.intercept, regression.slope];\n}\n","import BaseRegression, {checkArrayLength, maybeToPrecision} from 'ml-regression-base';\nimport {solve} from 'ml-matrix';\n\nexport default class RobustPolynomialRegression extends BaseRegression {\n    constructor(x, y, degree) {\n        super();\n        if (x === true) {\n            this.degree = y.degree;\n            this.powers = y.powers;\n            this.coefficients = y.coefficients;\n        } else {\n            checkArrayLength(x, y);\n            robustPolynomial(this, x, y, degree);\n        }\n    }\n\n    toJSON() {\n        return {\n            name: 'robustPolynomialRegression',\n            degree: this.degree,\n            powers: this.powers,\n            coefficients: this.coefficients\n        };\n    }\n\n    _predict(x) {\n        return predict(x, this.powers, this.coefficients);\n    }\n\n    toString(precision) {\n        return this._toFormula(precision, false);\n    }\n\n    toLaTeX(precision) {\n        return this._toFormula(precision, true);\n    }\n\n    _toFormula(precision, isLaTeX) {\n        let sup = '^';\n        let closeSup = '';\n        let times = ' * ';\n        if (isLaTeX) {\n            sup = '^{';\n            closeSup = '}';\n            times = '';\n        }\n\n        let fn = '';\n        let str = '';\n        for (let k = 0; k < this.coefficients.length; k++) {\n            str = '';\n            if (this.coefficients[k] !== 0) {\n                if (this.powers[k] === 0) {\n                    str = maybeToPrecision(this.coefficients[k], precision);\n                } else {\n                    if (this.powers[k] === 1) {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x';\n                    } else {\n                        str = maybeToPrecision(this.coefficients[k], precision) + times + 'x' + sup + this.powers[k] + closeSup;\n                    }\n                }\n\n                if (this.coefficients[k] > 0 && k !== (this.coefficients.length - 1)) {\n                    str = ' + ' + str;\n                } else if (k !== (this.coefficients.length - 1)) {\n                    str = ' ' + str;\n                }\n            }\n            fn = str + fn;\n        }\n        if (fn.charAt(0) === '+') {\n            fn = fn.slice(1);\n        }\n\n        return 'f(x) = ' + fn;\n    }\n\n    static load(json) {\n        if (json.name !== 'robustPolynomialRegression') {\n            throw new TypeError('not a RobustPolynomialRegression model');\n        }\n        return new RobustPolynomialRegression(true, json);\n    }\n}\n\nfunction robustPolynomial(regression, x, y, degree) {\n    let powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n        powers[k] = k;\n    }\n\n    const tuples = getRandomTuples(x, y, degree);\n    var min;\n\n    for (var i = 0; i < tuples.length; i++) {\n        var tuple = tuples[i];\n        var coefficients = calcCoefficients(tuple, powers);\n\n        var residuals = x.slice();\n        for (var j = 0; j < x.length; j++) {\n            residuals[j] = y[j] - predict(x[j], powers, coefficients);\n            residuals[j] = {\n                residual: residuals[j] * residuals[j],\n                coefficients\n            };\n        }\n\n        var median = residualsMedian(residuals);\n        if (!min || median.residual < min.residual) {\n            min = median;\n        }\n    }\n\n    regression.degree = degree;\n    regression.powers = powers;\n    regression.coefficients = min.coefficients;\n}\n\n/**\n * @ignore\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} degree\n * @return {Array<{x:number,y:number}>}\n */\nfunction getRandomTuples(x, y, degree) {\n    var len = Math.floor(x.length / degree);\n    var tuples = new Array(len);\n\n    for (var i = 0; i < x.length; i++) {\n        var pos = Math.floor(Math.random() * len);\n\n        var counter = 0;\n        while (counter < x.length) {\n            if (!tuples[pos]) {\n                tuples[pos] = [{\n                    x: x[i],\n                    y: y[i]\n                }];\n                break;\n            } else if (tuples[pos].length < degree) {\n                tuples[pos].push({\n                    x: x[i],\n                    y: y[i]\n                });\n                break;\n            } else {\n                counter++;\n                pos = (pos + 1) % len;\n            }\n        }\n\n        if (counter === x.length) {\n            return tuples;\n        }\n    }\n    return tuples;\n}\n\n/**\n * @ignore\n * @param {{x:number,y:number}} tuple\n * @param {Array<number>} powers\n * @return {Array<number>}\n */\nfunction calcCoefficients(tuple, powers) {\n    var X = tuple.slice();\n    var Y = tuple.slice();\n    for (var i = 0; i < X.length; i++) {\n        Y[i] = [tuple[i].y];\n        X[i] = new Array(powers.length);\n        for (var j = 0; j < powers.length; j++) {\n            X[i][j] = Math.pow(tuple[i].x, powers[j]);\n        }\n    }\n\n    return solve(X, Y).to1DArray();\n}\n\nfunction predict(x, powers, coefficients) {\n    let y = 0;\n    for (let k = 0; k < powers.length; k++) {\n        y += coefficients[k] * Math.pow(x, powers[k]);\n    }\n    return y;\n}\n\nfunction residualsMedian(residuals) {\n    residuals.sort((a, b) => a.residual - b.residual);\n\n    var l = residuals.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return residuals[half - 1];\n    } else {\n        return residuals[half];\n    }\n}\n","export {default as SimpleLinearRegression, default as SLR} from 'ml-regression-simple-linear';\nexport {default as PolynomialRegression} from 'ml-regression-polynomial';\nexport {default as ExponentialRegression} from 'ml-regression-exponential';\nexport {default as PowerRegression} from 'ml-regression-power';\nexport {default as MultivariateLinearRegression} from 'ml-regression-multivariate-linear';\n\nimport PotentialRegression from './regression/potential-regression';\nconst NLR = {\n    PotentialRegression\n};\nexport {NLR, NLR as NonLinearRegression};\n\nexport {default as KernelRidgeRegression, default as KRR} from './regression/kernel-ridge-regression';\nexport {default as PolinomialFitting2D} from './regression/poly-fit-regression2d';\n\n// robust regressions\nexport {default as TheilSenRegression} from 'ml-regression-theil-sen';\nexport {default as RobustPolynomialRegression} from 'ml-regression-robust-polynomial';\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","'use strict';\n\nconst mlCart = require('ml-cart');\nconst mlRandomForest = require('ml-random-forest');\n\nconst ML = exports;\n\n// Try to keep this list in the same structure as the README.\n\n// Unsupervised learning\nML.PCA = require('ml-pca');\nML.HClust = require('ml-hclust');\nML.KMeans = require('ml-kmeans');\n\n// Supervised learning\nML.SVM = require('ml-svm');\nML.NaiveBayes = require('ml-naivebayes');\nML.KNN = require('ml-knn');\nML.PLS = require('ml-pls');\nML.CrossValidation = require('ml-cross-validation');\nML.ConfusionMatrix = require('ml-confusion-matrix');\nML.DecisionTreeClassifier = mlCart.DecisionTreeClassifier;\nML.RandomForestClassifier = mlRandomForest.RandomForestClassifier;\n\n// Artificial neural networks\nML.FNN = require('ml-fnn');\nML.SOM = require('ml-som');\n\n// Regression\nconst Regression = require('ml-regression');\nML.SimpleLinearRegression = Regression.SimpleLinearRegression;\nML.PolynomialRegression = Regression.PolynomialRegression;\nML.MultivariateLinearRegression = Regression.MultivariateLinearRegression;\nML.PowerRegression = Regression.PowerRegression;\nML.ExponentialRegression = Regression.ExponentialRegression;\nML.TheilSenRegression = Regression.TheilSenRegression;\nML.RobustPolynomialRegression = Regression.RobustPolynomialRegression;\nML.DecisionTreeRegression = mlCart.DecisionTreeRegression;\nML.RandomForestRegression = mlRandomForest.RandomForestRegression;\n\n// Optimization\nML.levenbergMarquardt = require('ml-levenberg-marquardt');\n\n// Math\nconst Matrix = require('ml-matrix');\nML.Matrix = Matrix.Matrix;\nML.SVD = Matrix.SVD;\nML.EVD = Matrix.EVD;\nML.CholeskyDecomposition = Matrix.CholeskyDecomposition;\nML.LuDecomposition = Matrix.LuDecomposition;\nML.QrDecomposition = Matrix.QrDecomposition;\n\nML.SparseMatrix = require('ml-sparse-matrix');\nML.Kernel = require('ml-kernel');\nML.Distance = require('ml-distance').distance;\nML.Similarity = require('ml-distance').similarity;\nML.distanceMatrix = require('ml-distance-matrix');\nML.XSadd = require('ml-xsadd').default;\n\n// Statistics\nML.Performance = require('ml-performance');\n\n// Data preprocessing\nML.savitzkyGolay = require('ml-savitzky-golay');\nML.savitzkyGolayGeneralized = require('ml-savitzky-golay-generalized');\n\n// Utility\nML.BitArray = require('ml-bit-array');\nML.HashTable = require('ml-hash-table');\nML.padArray = require('ml-pad-array');\nML.binarySearch = require('binary-search');\nML.numSort = require('num-sort');\nML.Random = require('ml-random').default;\n\n// Undocumented/deprecated packages\nML.ArrayUtils = require('ml-array-utils');\nML.Regression = require('ml-regression');\nML.MatrixUtil = require('ml-matrix');\nML.ArrayStat = require('ml-stat').array;\nML.MatrixStat = require('ml-stat').matrix;\n\nML.Array = {\n  min: require('ml-array-min').default,\n  max: require('ml-array-max').default,\n  median: require('ml-array-median').default,\n  mean: require('ml-array-mean').default,\n  mode: require('ml-array-mode').default,\n  normed: require('ml-array-normed').default,\n  rescale: require('ml-array-rescale').default,\n  sequentialFill: require('ml-array-sequential-fill').default,\n  standardDeviation: require('ml-array-standard-deviation').default,\n  variance: require('ml-array-variance').default\n};\n\nML.ArrayXY = {\n  centroidsMerge: require('ml-array-xy-centroids-merge').default,\n  closestX: require('ml-arrayxy-closestx').default,\n  maxMerge: require('ml-array-xy-max-merge').default,\n  maxY: require('ml-array-xy-max-y').default,\n  sortX: require('ml-array-xy-sort-x').default,\n  uniqueX: require('ml-arrayxy-uniquex').default,\n  weightedMerge: require('ml-array-xy-weighted-merge').default,\n  equallySpaced: require('ml-array-xy-equally-spaced').default,\n  filterX: require('ml-array-xy-filter-x').default\n};\n","'use strict';\n\nconst matrixLib = require('ml-matrix');\nconst Matrix = matrixLib.Matrix;\nconst EVD = matrixLib.EVD;\nconst SVD = matrixLib.SVD;\nconst Stat = require('ml-stat/matrix');\nconst mean = Stat.mean;\nconst stdev = Stat.standardDeviation;\n\nconst defaultOptions = {\n    isCovarianceMatrix: false,\n    center: true,\n    scale: false\n};\n\n/**\n * Creates new PCA (Principal Component Analysis) from the dataset\n * @param {Matrix} dataset - dataset or covariance matrix\n * @param {Object} options\n * @param {boolean} [options.isCovarianceMatrix=false] - true if the dataset is a covariance matrix\n * @param {boolean} [options.center=true] - should the data be centered (subtract the mean)\n * @param {boolean} [options.scale=false] - should the data be scaled (divide by the standard deviation)\n * */\nclass PCA {\n    constructor(dataset, options) {\n        if (dataset === true) {\n            const model = options;\n            this.center = model.center;\n            this.scale = model.scale;\n            this.means = model.means;\n            this.stdevs = model.stdevs;\n            this.U = Matrix.checkMatrix(model.U);\n            this.S = model.S;\n            return;\n        }\n\n        options = Object.assign({}, defaultOptions, options);\n\n        this.center = false;\n        this.scale = false;\n        this.means = null;\n        this.stdevs = null;\n\n        if (options.isCovarianceMatrix) { // user provided a covariance matrix instead of dataset\n            this._computeFromCovarianceMatrix(dataset);\n            return;\n        }\n\n        var useCovarianceMatrix;\n        if (typeof options.useCovarianceMatrix === 'boolean') {\n            useCovarianceMatrix = options.useCovarianceMatrix;\n        } else {\n            useCovarianceMatrix = dataset.length > dataset[0].length;\n        }\n\n        if (useCovarianceMatrix) { // user provided a dataset but wants us to compute and use the covariance matrix\n            dataset = this._adjust(dataset, options);\n            const covarianceMatrix = dataset.transposeView().mmul(dataset).div(dataset.rows - 1);\n            this._computeFromCovarianceMatrix(covarianceMatrix);\n        } else {\n            dataset = this._adjust(dataset, options);\n            var svd = new SVD(dataset, {\n                computeLeftSingularVectors: false,\n                computeRightSingularVectors: true,\n                autoTranspose: true\n            });\n\n            this.U = svd.rightSingularVectors;\n\n            const singularValues = svd.diagonal;\n            const eigenvalues = new Array(singularValues.length);\n            for (var i = 0; i < singularValues.length; i++) {\n                eigenvalues[i] = singularValues[i] * singularValues[i] / (dataset.length - 1);\n            }\n            this.S = eigenvalues;\n        }\n    }\n\n    /**\n     * Load a PCA model from JSON\n     * @param {Object} model\n     * @return {PCA}\n     */\n    static load(model) {\n        if (model.name !== 'PCA')\n            throw new RangeError('Invalid model: ' + model.name);\n        return new PCA(true, model);\n    }\n\n\n    /**\n     * Project the dataset into the PCA space\n     * @param {Matrix} dataset\n     * @param {Object} options\n     * @return {Matrix} dataset projected in the PCA space\n     */\n    predict(dataset, options = {}) {\n        const {\n           nComponents = this.U.columns\n        } = options;\n\n        dataset = new Matrix(dataset);\n        if (this.center) {\n            dataset.subRowVector(this.means);\n            if (this.scale) {\n                dataset.divRowVector(this.stdevs);\n            }\n        }\n\n        var predictions = dataset.mmul(this.U);\n        return predictions.subMatrix(0, predictions.rows - 1, 0, nComponents - 1);\n    }\n\n    /**\n     * Returns the proportion of variance for each component\n     * @return {[number]}\n     */\n    getExplainedVariance() {\n        var sum = 0;\n        for (var i = 0; i < this.S.length; i++) {\n            sum += this.S[i];\n        }\n        return this.S.map(value => value / sum);\n    }\n\n    /**\n     * Returns the cumulative proportion of variance\n     * @return {[number]}\n     */\n    getCumulativeVariance() {\n        var explained = this.getExplainedVariance();\n        for (var i = 1; i < explained.length; i++) {\n            explained[i] += explained[i - 1];\n        }\n        return explained;\n    }\n\n    /**\n     * Returns the Eigenvectors of the covariance matrix\n     * @returns {Matrix}\n     */\n    getEigenvectors() {\n        return this.U;\n    }\n\n    /**\n     * Returns the Eigenvalues (on the diagonal)\n     * @returns {[number]}\n     */\n    getEigenvalues() {\n        return this.S;\n    }\n\n    /**\n     * Returns the standard deviations of the principal components\n     * @returns {[number]}\n     */\n    getStandardDeviations() {\n        return this.S.map(x => Math.sqrt(x));\n    }\n\n    /**\n     * Returns the loadings matrix\n     * @return {Matrix}\n     */\n    getLoadings() {\n        return this.U.transpose();\n    }\n\n    /**\n     * Export the current model to a JSON object\n     * @return {Object} model\n     */\n    toJSON() {\n        return {\n            name: 'PCA',\n            center: this.center,\n            scale: this.scale,\n            means: this.means,\n            stdevs: this.stdevs,\n            U: this.U,\n            S: this.S,\n        };\n    }\n\n    _adjust(dataset, options) {\n        this.center = !!options.center;\n        this.scale = !!options.scale;\n\n        dataset = new Matrix(dataset);\n\n        if (this.center) {\n            const means = mean(dataset);\n            const stdevs = this.scale ? stdev(dataset, means, true) : null;\n            this.means = means;\n            dataset.subRowVector(means);\n            if (this.scale) {\n                for (var i = 0; i < stdevs.length; i++) {\n                    if (stdevs[i] === 0) {\n                        throw new RangeError('Cannot scale the dataset (standard deviation is zero at index ' + i);\n                    }\n                }\n                this.stdevs = stdevs;\n                dataset.divRowVector(stdevs);\n            }\n        }\n\n        return dataset;\n    }\n\n    _computeFromCovarianceMatrix(dataset) {\n        const evd = new EVD(dataset, {assumeSymmetric: true});\n        this.U = evd.eigenvectorMatrix;\n        for (var i = 0; i < this.U.length; i++) {\n            this.U[i].reverse();\n        }\n        this.S = evd.realEigenvalues.reverse();\n    }\n}\n\nmodule.exports = PCA;\n","'use strict';\n\nexports.agnes = require('./agnes');\nexports.diana = require('./diana');\n//exports.birch = require('./birch');\n//exports.cure = require('./cure');\n//exports.chameleon = require('./chameleon');\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\nconst ClusterLeaf = require('./ClusterLeaf');\nconst Cluster = require('./Cluster');\nconst distanceMatrix = require('ml-distance-matrix');\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction simpleLink(cluster1, cluster2, disFun) {\n    var m = 10e100;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            var d = disFun[cluster1[i]][ cluster2[j]];\n            m = Math.min(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction completeLink(cluster1, cluster2, disFun) {\n    var m = -1;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            var d = disFun[cluster1[i]][ cluster2[j]];\n            m = Math.max(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction averageLink(cluster1, cluster2, disFun) {\n    var m = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            m += disFun[cluster1[i]][ cluster2[j]];\n        }\n    }\n    return m / (cluster1.length * cluster2.length);\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {*}\n */\nfunction centroidLink(cluster1, cluster2, disFun) {\n    var dist = new Array(cluster1.length * cluster2.length);\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            dist[i * cluster2.length + j] = (disFun[cluster1[i]][ cluster2[j]]);\n        }\n    }\n    return median(dist);\n}\n\n/**\n * @private\n * @param cluster1\n * @param cluster2\n * @param disFun\n * @returns {number}\n */\nfunction wardLink(cluster1, cluster2, disFun) {\n    return centroidLink(cluster1, cluster2, disFun)\n        * cluster1.length * cluster2.length / (cluster1.length + cluster2.length);\n}\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nfunction median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n}\n\nvar defaultOptions = {\n    disFunc: euclidean,\n    kind: 'single',\n    isDistanceMatrix: false\n\n};\n\n/**\n * Continuously merge nodes that have the least dissimilarity\n * @param {Array <Array <number>>} distance - Array of points to be clustered\n * @param {json} options\n * @option isDistanceMatrix: Is the input a distance matrix?\n * @constructor\n */\nfunction agnes(data, options) {\n    options = Object.assign({}, defaultOptions, options);\n    var len = data.length;\n    var distance = data;//If source\n    if (!options.isDistanceMatrix) {\n        distance = distanceMatrix(data, options.disFunc);\n    }\n\n\n    // allows to use a string or a given function\n    if (typeof options.kind === 'string') {\n        switch (options.kind) {\n            case 'single':\n                options.kind = simpleLink;\n                break;\n            case 'complete':\n                options.kind = completeLink;\n                break;\n            case 'average':\n                options.kind = averageLink;\n                break;\n            case 'centroid':\n                options.kind = centroidLink;\n                break;\n            case 'ward':\n                options.kind = wardLink;\n                break;\n            default:\n                throw new RangeError('Unknown kind of similarity');\n        }\n    } else if (typeof options.kind !== 'function') {\n        throw new TypeError('Undefined kind of similarity');\n    }\n\n    var list = new Array(len);\n    for (var i = 0; i < distance.length; i++) {\n        list[i] = new ClusterLeaf(i);\n    }\n    var min = 10e5,\n        d = {},\n        dis = 0;\n\n    while (list.length > 1) {\n        // calculates the minimum distance\n        d = {};\n        min = 10e5;\n        for (var j = 0; j < list.length; j++) {\n            for (var k = j + 1; k < list.length; k++) {\n                var fdistance, sdistance;\n                if (list[j] instanceof ClusterLeaf) {\n                    fdistance = [list[j].index];\n                } else {\n                    fdistance = new Array(list[j].index.length);\n                    for (var e = 0; e < fdistance.length; e++) {\n                        fdistance[e] = list[j].index[e].index;\n                    }\n                }\n                if (list[k] instanceof ClusterLeaf) {\n                    sdistance = [list[k].index];\n                } else {\n                    sdistance = new Array(list[k].index.length);\n                    for (var f = 0; f < sdistance.length; f++) {\n                        sdistance[f] = list[k].index[f].index;\n                    }\n                }\n                dis = options.kind(fdistance, sdistance, distance).toFixed(4);\n                if (dis in d) {\n                    d[dis].push([list[j], list[k]]);\n                } else {\n                    d[dis] = [[list[j], list[k]]];\n                }\n                min = Math.min(dis, min);\n            }\n        }\n        // cluster dots\n        var dmin = d[min.toFixed(4)];\n        var clustered = new Array(dmin.length);\n        var aux,\n            count = 0;\n        while (dmin.length > 0) {\n            aux = dmin.shift();\n            for (var q = 0; q < dmin.length; q++) {\n                var int = dmin[q].filter(function (n) {\n                    //noinspection JSReferencingMutableVariableFromClosure\n                    return aux.indexOf(n) !== -1;\n                });\n                if (int.length > 0) {\n                    var diff = dmin[q].filter(function (n) {\n                        //noinspection JSReferencingMutableVariableFromClosure\n                        return aux.indexOf(n) === -1;\n                    });\n                    aux = aux.concat(diff);\n                    dmin.splice(q--, 1);\n                }\n            }\n            clustered[count++] = aux;\n        }\n        clustered.length = count;\n\n        for (var ii = 0; ii < clustered.length; ii++) {\n            var obj = new Cluster();\n            obj.children = clustered[ii].concat();\n            obj.distance = min;\n            obj.index = new Array(len);\n            var indCount = 0;\n            for (var jj = 0; jj < clustered[ii].length; jj++) {\n                if (clustered[ii][jj] instanceof ClusterLeaf) {\n                    obj.index[indCount++] = clustered[ii][jj];\n                } else {\n                    indCount += clustered[ii][jj].index.length;\n                    obj.index = clustered[ii][jj].index.concat(obj.index);\n                }\n                list.splice((list.indexOf(clustered[ii][jj])), 1);\n            }\n            obj.index.length = indCount;\n            list.push(obj);\n        }\n    }\n    return list[0];\n}\n\nmodule.exports = agnes;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\nconst ClusterLeaf = require('./ClusterLeaf');\nconst Cluster = require('./Cluster');\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction simpleLink(cluster1, cluster2, disFun) {\n    var m = 10e100;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = i; j < cluster2.length; j++) {\n            var d = disFun(cluster1[i], cluster2[j]);\n            m = Math.min(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction completeLink(cluster1, cluster2, disFun) {\n    var m = -1;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = i; j < cluster2.length; j++) {\n            var d = disFun(cluster1[i], cluster2[j]);\n            m = Math.max(d, m);\n        }\n    }\n    return m;\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction averageLink(cluster1, cluster2, disFun) {\n    var m = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        for (var j = 0; j < cluster2.length; j++) {\n            m += disFun(cluster1[i], cluster2[j]);\n        }\n    }\n    return m / (cluster1.length * cluster2.length);\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction centroidLink(cluster1, cluster2, disFun) {\n    var x1 = 0,\n        y1 = 0,\n        x2 = 0,\n        y2 = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        x1 += cluster1[i][0];\n        y1 += cluster1[i][1];\n    }\n    for (var j = 0; j < cluster2.length; j++) {\n        x2 += cluster2[j][0];\n        y2 += cluster2[j][1];\n    }\n    x1 /= cluster1.length;\n    y1 /= cluster1.length;\n    x2 /= cluster2.length;\n    y2 /= cluster2.length;\n    return disFun([x1, y1], [x2, y2]);\n}\n\n/**\n * @private\n * @param {Array <Array <number>>} cluster1\n * @param {Array <Array <number>>} cluster2\n * @param {function} disFun\n * @returns {number}\n */\nfunction wardLink(cluster1, cluster2, disFun) {\n    var x1 = 0,\n        y1 = 0,\n        x2 = 0,\n        y2 = 0;\n    for (var i = 0; i < cluster1.length; i++) {\n        x1 += cluster1[i][0];\n        y1 += cluster1[i][1];\n    }\n    for (var j = 0; j < cluster2.length; j++) {\n        x2 += cluster2[j][0];\n        y2 += cluster2[j][1];\n    }\n    x1 /= cluster1.length;\n    y1 /= cluster1.length;\n    x2 /= cluster2.length;\n    y2 /= cluster2.length;\n    return disFun([x1, y1], [x2, y2]) * cluster1.length * cluster2.length / (cluster1.length + cluster2.length);\n}\n\n/**\n * @private\n * Returns the most distant point and his distance\n * @param {Array <Array <number>>} splitting - Clusters to split\n * @param {Array <Array <number>>} data - Original data\n * @param {function} disFun - Distance function\n * @returns {{d: number, p: number}} - d: maximum difference between points, p: the point more distant\n */\nfunction diff(splitting, data, disFun) {\n    var ans = {\n        d: 0,\n        p: 0\n    };\n\n    var Ci = new Array(splitting[0].length);\n    for (var e = 0; e < splitting[0].length; e++) {\n        Ci[e] = data[splitting[0][e]];\n    }\n    var Cj = new Array(splitting[1].length);\n    for (var f = 0; f < splitting[1].length; f++) {\n        Cj[f] = data[splitting[1][f]];\n    }\n\n    var dist, ndist;\n    for (var i = 0; i < Ci.length; i++) {\n        dist = 0;\n        for (var j = 0; j < Ci.length; j++) {\n            if (i !== j) {\n                dist += disFun(Ci[i], Ci[j]);\n            }\n        }\n        dist /= (Ci.length - 1);\n        ndist = 0;\n        for (var k = 0; k < Cj.length; k++) {\n            ndist += disFun(Ci[i], Cj[k]);\n        }\n        ndist /= Cj.length;\n        if ((dist - ndist) > ans.d) {\n            ans.d = (dist - ndist);\n            ans.p = i;\n        }\n    }\n    return ans;\n}\n\nvar defaultOptions = {\n    dist: euclidean,\n    kind: 'single'\n};\n\n/**\n * @private\n * Intra-cluster distance\n * @param {Array} index\n * @param {Array} data\n * @param {function} disFun\n * @returns {number}\n */\nfunction intrDist(index, data, disFun) {\n    var dist = 0,\n        count = 0;\n    for (var i = 0; i < index.length; i++) {\n        for (var j = i; j < index.length; j++) {\n            dist += disFun(data[index[i].index], data[index[j].index]);\n            count++;\n        }\n    }\n    return dist / count;\n}\n\n/**\n * Splits the higher level clusters\n * @param {Array <Array <number>>} data - Array of points to be clustered\n * @param {json} options\n * @constructor\n */\nfunction diana(data, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (typeof options.kind === 'string') {\n        switch (options.kind) {\n            case 'single':\n                options.kind = simpleLink;\n                break;\n            case 'complete':\n                options.kind = completeLink;\n                break;\n            case 'average':\n                options.kind = averageLink;\n                break;\n            case 'centroid':\n                options.kind = centroidLink;\n                break;\n            case 'ward':\n                options.kind = wardLink;\n                break;\n            default:\n                throw new RangeError('Unknown kind of similarity');\n        }\n    } else if (typeof options.kind !== 'function') {\n        throw new TypeError('Undefined kind of similarity');\n    }\n    var tree = new Cluster();\n    tree.children = new Array(data.length);\n    tree.index = new Array(data.length);\n    for (var ind = 0; ind < data.length; ind++) {\n        tree.children[ind] = new ClusterLeaf(ind);\n        tree.index[ind] = new ClusterLeaf(ind);\n    }\n\n    tree.distance = intrDist(tree.index, data, options.dist);\n    var m, M, clId,\n        dist, rebel;\n    var list = [tree];\n    while (list.length > 0) {\n        M = 0;\n        clId = 0;\n        for (var i = 0; i < list.length; i++) {\n            m = 0;\n            for (var j = 0; j < list[i].length; j++) {\n                for (var l = (j + 1); l < list[i].length; l++) {\n                    m = Math.max(options.dist(data[list[i].index[j].index], data[list[i].index[l].index]), m);\n                }\n            }\n            if (m > M) {\n                M = m;\n                clId = i;\n            }\n        }\n        M = 0;\n        if (list[clId].index.length === 2) {\n            list[clId].children = [list[clId].index[0], list[clId].index[1]];\n            list[clId].distance = options.dist(data[list[clId].index[0].index], data[list[clId].index[1].index]);\n        } else if (list[clId].index.length === 3) {\n            list[clId].children = [list[clId].index[0], list[clId].index[1], list[clId].index[2]];\n            var d = [\n                options.dist(data[list[clId].index[0].index], data[list[clId].index[1].index]),\n                options.dist(data[list[clId].index[1].index], data[list[clId].index[2].index])\n            ];\n            list[clId].distance = (d[0] + d[1]) / 2;\n        } else {\n            var C = new Cluster();\n            var sG = new Cluster();\n            var splitting = [new Array(list[clId].index.length), []];\n            for (var spl = 0; spl < splitting[0].length; spl++) {\n                splitting[0][spl] = spl;\n            }\n            for (var ii = 0; ii < splitting[0].length; ii++) {\n                dist = 0;\n                for (var jj = 0; jj < splitting[0].length; jj++) {\n                    if (ii !== jj) {\n                        dist += options.dist(data[list[clId].index[splitting[0][jj]].index], data[list[clId].index[splitting[0][ii]].index]);\n                    }\n                }\n                dist /= (splitting[0].length - 1);\n                if (dist > M) {\n                    M = dist;\n                    rebel = ii;\n                }\n            }\n            splitting[1] = [rebel];\n            splitting[0].splice(rebel, 1);\n            dist = diff(splitting, data, options.dist);\n            while (dist.d > 0) {\n                splitting[1].push(splitting[0][dist.p]);\n                splitting[0].splice(dist.p, 1);\n                dist = diff(splitting, data, options.dist);\n            }\n            var fData = new Array(splitting[0].length);\n            C.index = new Array(splitting[0].length);\n            for (var e = 0; e < fData.length; e++) {\n                fData[e] = data[list[clId].index[splitting[0][e]].index];\n                C.index[e] = list[clId].index[splitting[0][e]];\n                C.children[e] = list[clId].index[splitting[0][e]];\n            }\n            var sData = new Array(splitting[1].length);\n            sG.index = new Array(splitting[1].length);\n            for (var f = 0; f < sData.length; f++) {\n                sData[f] = data[list[clId].index[splitting[1][f]].index];\n                sG.index[f] = list[clId].index[splitting[1][f]];\n                sG.children[f] = list[clId].index[splitting[1][f]];\n            }\n            C.distance = intrDist(C.index, data, options.dist);\n            sG.distance = intrDist(sG.index, data, options.dist);\n            list.push(C);\n            list.push(sG);\n            list[clId].children = [C, sG];\n        }\n        list.splice(clId, 1);\n    }\n    return tree;\n}\n\nmodule.exports = diana;\n","'use strict';\nconst Kernel = require('ml-kernel');\nconst stat = require('ml-stat').array;\n\nvar defaultOptions = {\n    C: 1,\n    tol: 1e-4,\n    maxPasses: 10,\n    maxIterations: 10000,\n    kernel: 'linear',\n    alphaTol: 1e-6,\n    random: Math.random,\n    whitening: true\n};\n\n/**\n * Simplified version of the Sequential Minimal Optimization algorithm for training\n * support vector machines\n * @param {{Object}} options - SVM options\n * @param {Number} [options.C=1] - regularization parameter\n * @param {Number} [options.tol=1e-4] - numerical tolerance\n * @param {Number} [options.alphaTol=1e-6] - alpha tolerance, threshold to decide support vectors\n * @param {Number} [options.maxPasses=10] - max number of times to iterate over alphas without changing\n * @param {Number} [options.maxIterations=10000] - max number of iterations\n * @param {String} [options.kernel=linear] - the kind of kernel. {@link https://github.com/mljs/kernel/tree/1252de5f9012776e6e0eb06c7b434b8631fb21f0 List of kernels}\n * @param {Function} [options.random=Math.random] - custom random number generator\n * @constructor\n */\nfunction SVM(options) {\n    this.options = Object.assign({}, defaultOptions, options);\n\n    this.kernel = new Kernel(this.options.kernel, this.options.kernelOptions);\n    this.b = 0;\n}\n\n/**\n * Train the SVM model\n * @param {Array <Array <number>>} features - training data features\n * @param {Array <number>} labels - training data labels in the domain {1,-1}\n */\nSVM.prototype.train = function (features, labels) {\n    if (features.length !== labels.length) {\n        throw new Error('Features and labels should have the same length');\n    }\n    if (features.length < 2) {\n        throw new Error('Cannot train with less than 2 observations');\n    }\n    this._trained = false;\n    this._loaded = false;\n    this.N = labels.length;\n    this.D = features[0].length;\n    if (this.options.whitening) {\n        this.X = new Array(this.N);\n        for (var i = 0; i < this.N; i++) {\n            this.X[i] = new Array(this.D);\n        }\n        this.minMax = new Array(this.D);\n        // Apply normalization and keep normalization parameters\n        for (var j = 0; j < this.D; j++) {\n            var d = new Array(this.N);\n            for (i = 0; i < this.N; i++) {\n                d[i] = features[i][j];\n            }\n            this.minMax[j] = stat.minMax(d);\n            for (i = 0; i < this.N; i++) {\n                this.X[i][j] = (features[i][j] - this.minMax[j].min) / (this.minMax[j].max - this.minMax[j].min);\n            }\n        }\n    } else {\n        this.X = features;\n    }\n    this.Y = labels;\n    this.b = 0;\n    this.W = undefined;\n\n    var kernel = this.kernel.compute(this.X);\n    var m = labels.length;\n    var alpha = new Array(m).fill(0);\n    this.alphas = alpha;\n    for (var a = 0; a < m; a++)\n        alpha[a] = 0;\n\n    var b1 = 0,\n        b2 = 0,\n        iter = 0,\n        passes = 0,\n        Ei = 0,\n        Ej = 0,\n        ai = 0,\n        aj = 0,\n        L = 0,\n        H = 0,\n        eta = 0;\n\n    while (passes < this.options.maxPasses && iter < this.options.maxIterations) {\n        var numChange = 0;\n        for (i = 0; i < m; i++) {\n            Ei = this._marginOnePrecomputed(i, kernel) - labels[i];\n            if (labels[i] * Ei < -this.options.tol && alpha[i] < this.options.C || labels[i] * Ei > this.options.tol && alpha[i] > 0) {\n                j = i;\n                while (j === i) j = Math.floor(this.options.random() * m);\n                Ej = this._marginOnePrecomputed(j, kernel) - labels[j];\n                ai = alpha[i];\n                aj = alpha[j];\n                if (labels[i] === labels[j]) {\n                    L = Math.max(0, ai + aj - this.options.C);\n                    H = Math.min(this.options.C, ai + aj);\n                } else  {\n                    L = Math.max(0, aj - ai);\n                    H = Math.min(this.options.C, this.options.C + aj + ai);\n                }\n                if (Math.abs(L - H) < 1e-4) continue;\n\n                eta = 2 * kernel[i][j] - kernel[i][i] - kernel[j][j];\n                if (eta >= 0) continue;\n                var newaj = alpha[j] - labels[j] * (Ei - Ej) / eta;\n                if (newaj > H)\n                    newaj = H;\n                else if (newaj < L)\n                    newaj = L;\n                if (Math.abs(aj - newaj) < 10e-4) continue;\n                alpha[j] = newaj;\n                alpha[i] = alpha[i] + labels[i] * labels[j] * (aj - newaj);\n                b1 = this.b - Ei - labels[i] * (alpha[i] - ai) * kernel[i][i] - labels[j] * (alpha[j] - aj) * kernel[i][j];\n                b2 = this.b - Ej - labels[i] * (alpha[i] - ai) * kernel[i][j] - labels[j] * (alpha[j] - aj) * kernel[j][j];\n                this.b = (b1 + b2) / 2;\n                if (alpha[i] < this.options.C && alpha[i] > 0) this.b = b1;\n                if (alpha[j] < this.options.C && alpha[j] > 0) this.b = b2;\n                numChange += 1;\n            }\n        }\n        iter++;\n        if (numChange === 0)\n            passes += 1;\n        else\n            passes = 0;\n    }\n    if (iter === this.options.maxIterations) {\n        throw new Error('max iterations reached');\n    }\n\n    this.iterations = iter;\n\n    // Compute the weights (useful for fast decision on new test instances when linear SVM)\n    if (this.options.kernel === 'linear') {\n        this.W = new Array(this.D);\n        for (var r = 0; r < this.D; r++) {\n            this.W[r] = 0;\n            for (var w = 0; w < m; w++)\n                this.W[r] += labels[w] * alpha[w] * this.X[w][r];\n        }\n    }\n\n    // Keep only support vectors\n    // It will compute decision on new test instances faster\n    // We also keep the index of the support vectors\n    // in the original data\n    var nX = [];\n    var nY = [];\n    var nAlphas = [];\n    this._supportVectorIdx = [];\n    for (i = 0; i < this.N; i++) {\n        if (this.alphas[i] > this.options.alphaTol) {\n            nX.push(this.X[i]);\n            nY.push(labels[i]);\n            nAlphas.push(this.alphas[i]);\n            this._supportVectorIdx.push(i);\n\n        }\n    }\n    this.X = nX;\n    this.Y = nY;\n    this.N = nX.length;\n    this.alphas = nAlphas;\n\n\n    // A flag to say this SVM has been trained\n    this._trained = true;\n};\n\n/**\n * Get prediction ({-1,1}) given one observation's features.\n * @private\n * @param p The observation's features.\n * @returns {number} Classification result ({-1,1})\n */\nSVM.prototype.predictOne = function (p) {\n    var margin = this.marginOne(p);\n    return margin > 0 ? 1 : -1;\n};\n\n/**\n * Predict the classification outcome of a trained svm given one or several observations' features.\n * @param {Array} features - The observation(s)' features\n * @returns {Array<Number>|Number} An array of {-1, 1} if several observations are given or a number if one observation\n * is given\n */\nSVM.prototype.predict = function (features) {\n    if (!this._trained && !this._loaded) throw new Error('Cannot predict, you need to train the SVM first');\n    if (Array.isArray(features) && Array.isArray(features[0])) {\n        return features.map(this.predictOne.bind(this));\n    } else {\n        return this.predictOne(features);\n    }\n};\n\n/**\n * Get margin given one observation's features\n * @private\n * @param {Array<Number>} features - Features\n * @returns {Number} - The computed margin\n */\nSVM.prototype.marginOne = function (features, noWhitening) {\n    // Apply normalization\n    if (this.options.whitening && !noWhitening) {\n        features = this._applyWhitening(features);\n    }\n    var ans = this.b, i;\n    if (this.options.kernel === 'linear' && this.W) {\n        // Use weights, it's faster\n        for (i = 0; i < this.W.length; i++) {\n            ans += this.W[i] * features[i];\n        }\n    } else {\n        for (i = 0; i < this.N; i++) {\n            ans += this.alphas[i] * this.Y[i] * this.kernel.compute([features], [this.X[i]])[0][0];\n        }\n    }\n    return ans;\n};\n\n\n/**\n * Get a margin using the precomputed kernel. Much faster than normal margin computation\n * @private\n * @param {Number} index - Train data index\n * @param {Array< Array<Number> >} kernel - The precomputed kernel\n * @returns {number} Computed margin\n * @private\n */\nSVM.prototype._marginOnePrecomputed = function (index, kernel) {\n    var ans = this.b, i;\n    for (i = 0; i < this.N; i++) {\n        ans += this.alphas[i] * this.Y[i] * kernel[index][i];\n    }\n    return ans;\n};\n\n\n/**\n * Returns the margin of one or several observations given its features\n * @param {Array <Array<Number> >|Array<Number>} features - Features from on or several observations.\n * @returns {Number|Array} The computed margin. Is an Array if several observations' features given, or a Number if\n * only one observation's features given\n */\nSVM.prototype.margin = function (features) {\n    if (Array.isArray(features)) {\n        return features.map(this.marginOne.bind(this));\n    } else {\n        return this.marginOne(features);\n    }\n};\n\n/**\n * Get support vectors indexes of the trained classifier. WARINNG: this method does not work for svm instances\n * created from {@link #SVM.load load} if linear kernel\n * @returns {Array<Number>} The indices in the training vector of the support vectors\n */\nSVM.prototype.supportVectors = function () {\n    if (!this._trained && !this._loaded) throw new Error('Cannot get support vectors, you need to train the SVM first');\n    if (this._loaded && this.options.kernel === 'linear') throw new Error('Cannot get support vectors from saved linear model, you need to train the SVM to have them');\n    return this._supportVectorIdx;\n};\n\n/**\n * Create a SVM instance from a saved model\n * @param {Object} model -  Object such as returned by a trained SVM instance with {@link #SVM#toJSON toJSON}\n * @returns {SVM} Instance of svm classifier\n */\nSVM.load = function (model) {\n    this._loaded = true;\n    this._trained = false;\n    var svm = new SVM(model.options);\n    if (model.options.kernel === 'linear') {\n        svm.W = model.W.slice();\n        svm.D = svm.W.length;\n    } else {\n        svm.X = model.X.slice();\n        svm.Y = model.Y.slice();\n        svm.alphas = model.alphas.slice();\n        svm.N = svm.X.length;\n        svm.D = svm.X[0].length;\n    }\n    svm.minMax = model.minMax;\n    svm.b = model.b;\n    svm._loaded = true;\n    svm._trained = false;\n    return svm;\n};\n\n/**\n * Export the minimal object that enables to reload the model\n * @returns {Object} Model object that can be reused with {@link #SVM.load load}\n */\nSVM.prototype.toJSON = function () {\n    if (!this._trained && !this._loaded) throw new Error('Cannot export, you need to train the SVM first');\n    var model = {};\n    model.options = Object.assign({}, this.options);\n    model.b = this.b;\n    model.minMax = this.minMax;\n    if (model.options.kernel === 'linear') {\n        model.W = this.W.slice();\n    } else {\n        // Exporting non-linear models is heavier\n        model.X = this.X.slice();\n        model.Y = this.Y.slice();\n        model.alphas = this.alphas.slice();\n    }\n    return model;\n};\n\nSVM.prototype._applyWhitening = function (features) {\n    if (!this.minMax) throw new Error('Could not apply whitening');\n    var whitened = new Array(features.length);\n    for (var j = 0; j < features.length; j++) {\n        whitened[j] = (features[j] - this.minMax[j].min) / (this.minMax[j].max - this.minMax[j].min);\n    }\n    return whitened;\n};\n\nmodule.exports = SVM;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass GaussianKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n        this.divisor = 2 * options.sigma * options.sigma;\n    }\n\n    compute(x, y) {\n        const distance = squaredEuclidean(x, y);\n        return Math.exp(-distance / this.divisor);\n    }\n}\n\nmodule.exports = GaussianKernel;\n","'use strict';\n\nconst defaultOptions = {\n    degree: 1,\n    constant: 1,\n    scale: 1\n};\n\nclass PolynomialKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n\n        this.degree = options.degree;\n        this.constant = options.constant;\n        this.scale = options.scale;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        for (var i = 0; i < x.length; i++) {\n            sum += x[i] * y[i];\n        }\n        return Math.pow(this.scale * sum + this.constant, this.degree);\n    }\n}\n\nmodule.exports = PolynomialKernel;\n","'use strict';\n\nconst defaultOptions = {\n    sigma: 1,\n    degree: 1\n};\n\nclass ANOVAKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n        this.degree = options.degree;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        var len = Math.min(x.length, y.length);\n        for (var i = 1; i <= len; ++i) {\n            sum += Math.pow(Math.exp(-this.sigma * Math.pow(Math.pow(x[i - 1], i) -\n                    Math.pow(y[i - 1], i), 2)), this.degree);\n        }\n        return sum;\n    }\n}\n\nmodule.exports = ANOVAKernel;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass CauchyKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n    }\n\n    compute(x, y) {\n        return 1 / (1 + squaredEuclidean(x, y) / (this.sigma * this.sigma));\n    }\n}\n\nmodule.exports = CauchyKernel;\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass ExponentialKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n        this.divisor = 2 * options.sigma * options.sigma;\n    }\n\n    compute(x, y) {\n        const distance = euclidean(x, y);\n        return Math.exp(-distance / this.divisor);\n    }\n}\n\nmodule.exports = ExponentialKernel;\n","'use strict';\n\nclass HistogramIntersectionKernel {\n    compute(x, y) {\n        var min = Math.min(x.length, y.length);\n        var sum = 0;\n        for (var i = 0; i < min; ++i) {\n            sum += Math.min(x[i], y[i]);\n        }\n\n        return sum;\n    }\n}\n\nmodule.exports = HistogramIntersectionKernel;\n","'use strict';\n\nconst euclidean = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n    sigma: 1\n};\n\nclass LaplacianKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.sigma = options.sigma;\n    }\n\n    compute(x, y) {\n        const distance = euclidean(x, y);\n        return Math.exp(-distance / this.sigma);\n    }\n}\n\nmodule.exports = LaplacianKernel;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    constant: 1\n};\n\nclass MultiquadraticKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.constant = options.constant;\n    }\n\n    compute(x, y) {\n        return Math.sqrt(squaredEuclidean(x, y) + this.constant * this.constant);\n    }\n}\n\nmodule.exports = MultiquadraticKernel;\n","'use strict';\n\nconst squaredEuclidean = require('ml-distance-euclidean').squared;\n\nconst defaultOptions = {\n    constant: 1\n};\n\nclass RationalQuadraticKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.constant = options.constant;\n    }\n\n    compute(x, y) {\n        const distance = squaredEuclidean(x, y);\n        return 1 - (distance / (distance + this.constant));\n    }\n}\n\nmodule.exports = RationalQuadraticKernel;\n","'use strict';\n\nconst defaultOptions = {\n    alpha: 0.01,\n    constant: -Math.E\n};\n\nclass SigmoidKernel {\n    constructor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.alpha = options.alpha;\n        this.constant = options.constant;\n    }\n\n    compute(x, y) {\n        var sum = 0;\n        for (var i = 0; i < x.length; i++) {\n            sum += x[i] * y[i];\n        }\n        return Math.tanh(this.alpha * sum + this.constant);\n    }\n}\n\nmodule.exports = SigmoidKernel;\n","'use strict';\n\nconst ConfusionMatrix = require('ml-confusion-matrix');\n\nconst CV = {};\nconst combinations = require('ml-combinations');\n\n/**\n * Performs a leave-one-out cross-validation (LOO-CV) of the given samples. In LOO-CV, 1 observation is used as the\n * validation set while the rest is used as the training set. This is repeated once for each observation. LOO-CV is a\n * special case of LPO-CV. @see leavePout\n * @param {function} Classifier - The classifier's constructor to use for the cross validation. Expect ml-classifier\n *     api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nCV.leaveOneOut = function (Classifier, features, labels, classifierOptions) {\n    if (typeof labels === 'function') {\n        var callback = labels;\n        labels = features;\n        features = Classifier;\n        return CV.leavePOut(features, labels, 1, callback);\n    }\n    return CV.leavePOut(Classifier, features, labels, classifierOptions, 1);\n};\n\n\n/**\n * Performs a leave-p-out cross-validation (LPO-CV) of the given samples. In LPO-CV, p observations are used as the\n * validation set while the rest is used as the training set. This is repeated as many times as there are possible\n * ways to combine p observations from the set (unordered without replacement). Be aware that for relatively small\n * data-set size this can require a very large number of training and testing to do!\n * @param {function} Classifier - The classifier's constructor to use for the cross validation. Expect ml-classifier\n *     api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @param {number} p - The size of the validation sub-samples' set\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nCV.leavePOut = function (Classifier, features, labels, classifierOptions, p) {\n    if (typeof classifierOptions === 'function') {\n        var callback = classifierOptions;\n        p = labels;\n        labels = features;\n        features = Classifier;\n    }\n    check(features, labels);\n    const distinct = getDistinct(labels);\n    const confusionMatrix = initMatrix(distinct.length, distinct.length);\n\n    var N = features.length;\n    var gen = combinations(p, N);\n    var allIdx = new Array(N);\n    for (let i = 0; i < N; i++) {\n        allIdx[i] = i;\n    }\n    for (const testIdx of gen) {\n        var trainIdx = allIdx.slice();\n\n        for (let i = testIdx.length - 1; i >= 0; i--) {\n            trainIdx.splice(testIdx[i], 1);\n        }\n\n        if (callback) {\n            validateWithCallback(features, labels, testIdx, trainIdx, confusionMatrix, distinct, callback);\n        } else {\n            validate(Classifier, features, labels, classifierOptions, testIdx, trainIdx, confusionMatrix, distinct);\n        }\n\n    }\n\n    return new ConfusionMatrix(confusionMatrix, distinct);\n};\n\n/**\n * Performs k-fold cross-validation (KF-CV). KF-CV separates the data-set into k random equally sized partitions, and\n * uses each as a validation set, with all other partitions used in the training set. Observations left over from if k\n * does not divide the number of observations are left out of the cross-validation process.\n * @param {function} Classifier - The classifier's to use for the cross validation. Expect ml-classifier api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @param {number} k - The number of partitions to create\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nCV.kFold = function (Classifier, features, labels, classifierOptions, k) {\n    if (typeof classifierOptions === 'function') {\n        var callback = classifierOptions;\n        k = labels;\n        labels = features;\n        features = Classifier;\n    }\n    check(features, labels);\n    const distinct = getDistinct(labels);\n    const confusionMatrix = initMatrix(distinct.length, distinct.length);\n    var N = features.length;\n    var allIdx = new Array(N);\n    for (var i = 0; i < N; i++) {\n        allIdx[i] = i;\n    }\n\n    var l = Math.floor(N / k);\n    // create random k-folds\n    var current = [];\n    var folds = [];\n    while (allIdx.length) {\n        var randi = Math.floor(Math.random() * allIdx.length);\n        current.push(allIdx[randi]);\n        allIdx.splice(randi, 1);\n        if (current.length === l) {\n            folds.push(current);\n            current = [];\n        }\n    }\n    if (current.length) folds.push(current);\n    folds = folds.slice(0, k);\n\n\n    for (i = 0; i < folds.length; i++) {\n        var testIdx = folds[i];\n        var trainIdx = [];\n        for (var j = 0; j < folds.length; j++) {\n            if (j !== i) trainIdx = trainIdx.concat(folds[j]);\n        }\n\n        if (callback) {\n            validateWithCallback(features, labels, testIdx, trainIdx, confusionMatrix, distinct, callback);\n        } else {\n            validate(Classifier, features, labels, classifierOptions, testIdx, trainIdx, confusionMatrix, distinct);\n        }\n    }\n\n    return new ConfusionMatrix(confusionMatrix, distinct);\n};\n\nfunction check(features, labels) {\n    if (features.length !== labels.length) {\n        throw new Error('features and labels should have the same length');\n    }\n}\n\nfunction initMatrix(rows, columns) {\n    return new Array(rows).fill(0).map(() => new Array(columns).fill(0));\n}\n\nfunction getDistinct(arr) {\n    var s = new Set();\n    for (let i = 0; i < arr.length; i++) {\n        s.add(arr[i]);\n    }\n    return Array.from(s);\n}\n\nfunction validate(Classifier, features, labels, classifierOptions, testIdx, trainIdx, confusionMatrix, distinct) {\n    const {testFeatures, trainFeatures, testLabels, trainLabels} = getTrainTest(features, labels, testIdx, trainIdx);\n\n    var classifier;\n    if (Classifier.prototype.train) {\n        classifier = new Classifier(classifierOptions);\n        classifier.train(trainFeatures, trainLabels);\n    } else {\n        classifier = new Classifier(trainFeatures, trainLabels, classifierOptions);\n    }\n\n    var predictedLabels = classifier.predict(testFeatures);\n    updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct);\n}\n\nfunction validateWithCallback(features, labels, testIdx, trainIdx, confusionMatrix, distinct, callback) {\n    const {testFeatures, trainFeatures, testLabels, trainLabels} = getTrainTest(features, labels, testIdx, trainIdx);\n    const predictedLabels = callback(trainFeatures, trainLabels, testFeatures);\n    updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct);\n}\n\nfunction updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct) {\n\n    for (var i = 0; i < predictedLabels.length; i++) {\n        const actualIdx = distinct.indexOf(testLabels[i]);\n        const predictedIdx = distinct.indexOf(predictedLabels[i]);\n        if (actualIdx < 0 || predictedIdx < 0) {\n            // eslint-disable-next-line no-console\n            console.warn(`ignore unknown predicted label ${predictedLabels[i]}`);\n        }\n        confusionMatrix[actualIdx][predictedIdx]++;\n    }\n}\n\n\nfunction getTrainTest(features, labels, testIdx, trainIdx) {\n    return {\n        testFeatures: testIdx.map(function (index) {\n            return features[index];\n        }),\n        trainFeatures: trainIdx.map(function (index) {\n            return features[index];\n        }),\n        testLabels: testIdx.map(function (index) {\n            return labels[index];\n        }),\n        trainLabels: trainIdx.map(function (index) {\n            return labels[index];\n        })\n    };\n}\n\nmodule.exports = CV;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar runtime = createCommonjsModule(function (module) {\n\t/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t!(function(global) {\n\n\t  var Op = Object.prototype;\n\t  var hasOwn = Op.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = module.exports;\n\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t    var generator = Object.create(protoGenerator.prototype);\n\t    var context = new Context(tryLocsList || []);\n\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\n\t  // This is a polyfill for %IteratorPrototype% for environments that\n\t  // don't natively support it.\n\t  var IteratorPrototype = {};\n\t  IteratorPrototype[iteratorSymbol] = function () {\n\t    return this;\n\t  };\n\n\t  var getProto = Object.getPrototypeOf;\n\t  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\t  if (NativeIteratorPrototype &&\n\t      NativeIteratorPrototype !== Op &&\n\t      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t    // This environment has a native %IteratorPrototype%; use it instead\n\t    // of the polyfill.\n\t    IteratorPrototype = NativeIteratorPrototype;\n\t  }\n\n\t  var Gp = GeneratorFunctionPrototype.prototype =\n\t    Generator.prototype = Object.create(IteratorPrototype);\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] =\n\t    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t  // meant to be awaited.\n\t  runtime.awrap = function(arg) {\n\t    return { __await: arg };\n\t  };\n\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value &&\n\t            typeof value === \"object\" &&\n\t            hasOwn.call(value, \"__await\")) {\n\t          return Promise.resolve(value.__await).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\n\t    var previousPromise;\n\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t    return this;\n\t  };\n\t  runtime.AsyncIterator = AsyncIterator;\n\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\n\t      context.method = method;\n\t      context.arg = arg;\n\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          var delegateResult = maybeInvokeDelegate(delegate, context);\n\t          if (delegateResult) {\n\t            if (delegateResult === ContinueSentinel) continue;\n\t            return delegateResult;\n\t          }\n\t        }\n\n\t        if (context.method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = context.arg;\n\n\t        } else if (context.method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw context.arg;\n\t          }\n\n\t          context.dispatchException(context.arg);\n\n\t        } else if (context.method === \"return\") {\n\t          context.abrupt(\"return\", context.arg);\n\t        }\n\n\t        state = GenStateExecuting;\n\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\n\t          if (record.arg === ContinueSentinel) {\n\t            continue;\n\t          }\n\n\t          return {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(context.arg) call above.\n\t          context.method = \"throw\";\n\t          context.arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\n\t  // Call delegate.iterator[context.method](context.arg) and handle the\n\t  // result, either by returning a { value, done } result from the\n\t  // delegate iterator, or by modifying context.method and context.arg,\n\t  // setting context.delegate to null, and returning the ContinueSentinel.\n\t  function maybeInvokeDelegate(delegate, context) {\n\t    var method = delegate.iterator[context.method];\n\t    if (method === undefined) {\n\t      // A .throw or .return when the delegate iterator has no .throw\n\t      // method always terminates the yield* loop.\n\t      context.delegate = null;\n\n\t      if (context.method === \"throw\") {\n\t        if (delegate.iterator.return) {\n\t          // If the delegate iterator has a return method, give it a\n\t          // chance to clean up.\n\t          context.method = \"return\";\n\t          context.arg = undefined;\n\t          maybeInvokeDelegate(delegate, context);\n\n\t          if (context.method === \"throw\") {\n\t            // If maybeInvokeDelegate(context) changed context.method from\n\t            // \"return\" to \"throw\", let that override the TypeError below.\n\t            return ContinueSentinel;\n\t          }\n\t        }\n\n\t        context.method = \"throw\";\n\t        context.arg = new TypeError(\n\t          \"The iterator does not provide a 'throw' method\");\n\t      }\n\n\t      return ContinueSentinel;\n\t    }\n\n\t    var record = tryCatch(method, delegate.iterator, context.arg);\n\n\t    if (record.type === \"throw\") {\n\t      context.method = \"throw\";\n\t      context.arg = record.arg;\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\n\t    var info = record.arg;\n\n\t    if (! info) {\n\t      context.method = \"throw\";\n\t      context.arg = new TypeError(\"iterator result is not an object\");\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\n\t    if (info.done) {\n\t      // Assign the result of the finished delegate to the temporary\n\t      // variable specified by delegate.resultName (see delegateYield).\n\t      context[delegate.resultName] = info.value;\n\n\t      // Resume execution at the desired location (see delegateYield).\n\t      context.next = delegate.nextLoc;\n\n\t      // If context.method was \"throw\" but the delegate handled the\n\t      // exception, let the outer generator proceed normally. If\n\t      // context.method was \"next\", forget context.arg since it has been\n\t      // \"consumed\" by the delegate iterator. If context.method was\n\t      // \"return\", allow the original .return call to continue in the\n\t      // outer generator.\n\t      if (context.method !== \"return\") {\n\t        context.method = \"next\";\n\t        context.arg = undefined;\n\t      }\n\n\t    } else {\n\t      // Re-yield the result returned by the delegate method.\n\t      return info;\n\t    }\n\n\t    // The delegate iterator is finished, so forget it and continue with\n\t    // the outer generator.\n\t    context.delegate = null;\n\t    return ContinueSentinel;\n\t  }\n\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\n\t  // A Generator should always return itself as the iterator object when the\n\t  // @@iterator function is called on it. Some browsers' implementations of the\n\t  // iterator prototype chain incorrectly implement this, causing the Generator\n\t  // object to not be returned from this call. This ensures that doesn't happen.\n\t  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\n\t    this.tryEntries.push(entry);\n\t  }\n\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\n\t          next.value = undefined;\n\t          next.done = true;\n\n\t          return next;\n\t        };\n\n\t        return next.next = next;\n\t      }\n\t    }\n\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\n\t  Context.prototype = {\n\t    constructor: Context,\n\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\n\t      this.method = \"next\";\n\t      this.arg = undefined;\n\n\t      this.tryEntries.forEach(resetTryEntry);\n\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\n\t    stop: function() {\n\t      this.done = true;\n\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\n\t      return this.rval;\n\t    },\n\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\n\t        if (caught) {\n\t          // If the dispatched exception was caught by a catch block,\n\t          // then let that catch block handle the exception normally.\n\t          context.method = \"next\";\n\t          context.arg = undefined;\n\t        }\n\n\t        return !! caught;\n\t      }\n\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\n\t      if (finallyEntry) {\n\t        this.method = \"next\";\n\t        this.next = finallyEntry.finallyLoc;\n\t        return ContinueSentinel;\n\t      }\n\n\t      return this.complete(record);\n\t    },\n\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = this.arg = record.arg;\n\t        this.method = \"return\";\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\n\t      return ContinueSentinel;\n\t    },\n\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\n\t      if (this.method === \"next\") {\n\t        // Deliberately forget the last sent value so that we don't\n\t        // accidentally pass it on to the delegate.\n\t        this.arg = undefined;\n\t      }\n\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // In sloppy mode, unbound `this` refers to the global object, fallback to\n\t  // Function constructor if we're in global strict mode. That is sadly a form\n\t  // of indirect eval which violates Content Security Policy.\n\t  (function() { return this })() || Function(\"return this\")()\n\t);\n\t});\n\n\t/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t// This method of obtaining a reference to the global object needs to be\n\t// kept identical to the way it is obtained in runtime.js\n\tvar g = (function() { return this })() || Function(\"return this\")();\n\n\t// Use `getOwnPropertyNames` because not all browsers support calling\n\t// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\tvar hadRuntime = g.regeneratorRuntime &&\n\t  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n\t// Save the old regeneratorRuntime in case it needs to be restored later.\n\tvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n\t// Force reevalutation of runtime.js.\n\tg.regeneratorRuntime = undefined;\n\n\tvar runtimeModule = runtime;\n\n\tif (hadRuntime) {\n\t  // Restore the original runtime.\n\t  g.regeneratorRuntime = oldRuntime;\n\t} else {\n\t  // Remove the global property added by runtime.js.\n\t  try {\n\t    delete g.regeneratorRuntime;\n\t  } catch(e) {\n\t    g.regeneratorRuntime = undefined;\n\t  }\n\t}\n\n\tvar regenerator = runtimeModule;\n\n\tvar defaultOptions = {\n\t  mode: 'index'\n\t};\n\n\tmodule.exports = /*#__PURE__*/regenerator.mark(function _callee(M, N, options) {\n\t  var a, c, b, p, x, y, z, i, twiddle;\n\t  return regenerator.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          twiddle = function twiddle() {\n\t            var i, j, k;\n\t            j = 1;\n\t            while (p[j] <= 0) {\n\t              j++;\n\t            }\n\t            if (p[j - 1] === 0) {\n\t              for (i = j - 1; i !== 1; i--) {\n\t                p[i] = -1;\n\t              }\n\t              p[j] = 0;\n\t              x = z = 0;\n\t              p[1] = 1;\n\t              y = j - 1;\n\t            } else {\n\t              if (j > 1) {\n\t                p[j - 1] = 0;\n\t              }\n\t              do {\n\t                j++;\n\t              } while (p[j] > 0);\n\t              k = j - 1;\n\t              i = j;\n\t              while (p[i] === 0) {\n\t                p[i++] = -1;\n\t              }\n\t              if (p[i] === -1) {\n\t                p[i] = p[k];\n\t                z = p[k] - 1;\n\t                x = i - 1;\n\t                y = k - 1;\n\t                p[k] = -1;\n\t              } else {\n\t                if (i === p[0]) {\n\t                  return 0;\n\t                } else {\n\t                  p[j] = p[i];\n\t                  z = p[i] - 1;\n\t                  p[i] = 0;\n\t                  x = j - 1;\n\t                  y = i - 1;\n\t                }\n\t              }\n\t            }\n\t            return 1;\n\t          };\n\n\t          options = Object.assign({}, defaultOptions, options);\n\t          a = new Array(N);\n\t          c = new Array(M);\n\t          b = new Array(N);\n\t          p = new Array(N + 2);\n\n\n\t          // init a and b\n\t          for (i = 0; i < N; i++) {\n\t            a[i] = i;\n\t            if (i < N - M) b[i] = 0;else b[i] = 1;\n\t          }\n\n\t          // init c\n\t          for (i = 0; i < M; i++) {\n\t            c[i] = N - M + i;\n\t          }\n\n\t          // init p\n\t          for (i = 0; i < p.length; i++) {\n\t            if (i === 0) p[i] = N + 1;else if (i <= N - M) p[i] = 0;else if (i <= N) p[i] = i - N + M;else p[i] = -2;\n\t          }\n\n\t          if (!(options.mode === 'index')) {\n\t            _context.next = 20;\n\t            break;\n\t          }\n\n\t          _context.next = 12;\n\t          return c.slice();\n\n\t        case 12:\n\t          if (!twiddle()) {\n\t            _context.next = 18;\n\t            break;\n\t          }\n\n\t          c[z] = a[x];\n\t          _context.next = 16;\n\t          return c.slice();\n\n\t        case 16:\n\t          _context.next = 12;\n\t          break;\n\n\t        case 18:\n\t          _context.next = 33;\n\t          break;\n\n\t        case 20:\n\t          if (!(options.mode === 'mask')) {\n\t            _context.next = 32;\n\t            break;\n\t          }\n\n\t          _context.next = 23;\n\t          return b.slice();\n\n\t        case 23:\n\t          if (!twiddle()) {\n\t            _context.next = 30;\n\t            break;\n\t          }\n\n\t          b[x] = 1;\n\t          b[y] = 0;\n\t          _context.next = 28;\n\t          return b.slice();\n\n\t        case 28:\n\t          _context.next = 23;\n\t          break;\n\n\t        case 30:\n\t          _context.next = 33;\n\t          break;\n\n\t        case 32:\n\t          throw new Error('Invalid mode');\n\n\t        case 33:\n\t        case 'end':\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t});\n\n})));\n","'use strict';\n\nconst Matrix = require('ml-matrix').Matrix;\n\nconst Layer = require('./Layer');\nconst OutputLayer = require('./OutputLayer');\nconst Utils = require('./utils');\nconst ACTIVATION_FUNCTIONS = require('./activationFunctions');\n\nclass FeedForwardNeuralNetworks {\n\n    /**\n     * Create a new Feedforword neural network model.\n     * @class FeedForwardNeuralNetworks\n     * @param {object} [options]\n     * @param {Array} [options.hiddenLayers=[10]] - Array that contains the sizes of the hidden layers.\n     * @param {number} [options.iterations=50] - Number of iterations at the training step.\n     * @param {number} [options.learningRate=0.01] - Learning rate of the neural net (also known as epsilon).\n     * @param {number} [options.regularization=0.01] - Regularization parameter af the neural net.\n     * @param {string} [options.activation='tanh'] - activation function to be used. (options: 'tanh'(default),\n     * 'identity', 'logistic', 'arctan', 'softsign', 'relu', 'softplus', 'bent', 'sinusoid', 'sinc', 'gaussian').\n     * (single-parametric options: 'parametric-relu', 'exponential-relu', 'soft-exponential').\n     * @param {number} [options.activationParam=1] - if the selected activation function needs a parameter.\n     */\n    constructor(options) {\n        options = options || {};\n        if (options.model) {\n            // load network\n            this.hiddenLayers = options.hiddenLayers;\n            this.iterations = options.iterations;\n            this.learningRate = options.learningRate;\n            this.regularization = options.regularization;\n            this.dicts = options.dicts;\n            this.activation = options.activation;\n            this.activationParam = options.activationParam;\n            this.model = new Array(options.layers.length);\n\n            for (var i = 0; i < this.model.length - 1; ++i) {\n                this.model[i] = Layer.load(options.layers[i]);\n            }\n            this.model[this.model.length - 1] = OutputLayer.load(options.layers[this.model.length - 1]);\n        } else {\n            // default constructor\n            this.hiddenLayers = options.hiddenLayers || [10];\n            this.iterations = options.iterations || 50;\n\n            this.learningRate = options.learningRate || 0.01;\n            this.regularization = options.regularization || 0.01;\n\n            this.activation = options.activation || 'tanh';\n            this.activationParam = options.activationParam || 1;\n            if (!(this.activation in Object.keys(ACTIVATION_FUNCTIONS))) {\n                this.activation = 'tanh';\n            }\n        }\n    }\n\n    /**\n     * @private\n     * Function that build and initialize the neural net.\n     * @param {number} inputSize - total of features to fit.\n     * @param {number} outputSize - total of labels of the prediction set.\n     */\n    buildNetwork(inputSize, outputSize) {\n        var size = 2 + (this.hiddenLayers.length - 1);\n        this.model = new Array(size);\n\n        // input layer\n        this.model[0] = new Layer({\n            inputSize: inputSize,\n            outputSize: this.hiddenLayers[0],\n            activation: this.activation,\n            activationParam: this.activationParam,\n            regularization: this.regularization,\n            epsilon: this.learningRate\n        });\n\n        // hidden layers\n        for (var i = 1; i < this.hiddenLayers.length; ++i) {\n            this.model[i] = new Layer({\n                inputSize: this.hiddenLayers[i - 1],\n                outputSize: this.hiddenLayers[i],\n                activation: this.activation,\n                activationParam: this.activationParam,\n                regularization: this.regularization,\n                epsilon: this.learningRate\n            });\n        }\n\n        // output layer\n        this.model[size - 1] = new OutputLayer({\n            inputSize: this.hiddenLayers[this.hiddenLayers.length - 1],\n            outputSize: outputSize,\n            activation: this.activation,\n            activationParam: this.activationParam,\n            regularization: this.regularization,\n            epsilon: this.learningRate\n        });\n    }\n\n    /**\n     * Train the neural net with the given features and labels.\n     * @param {Matrix|Array} features\n     * @param {Matrix|Array} labels\n     */\n    train(features, labels) {\n        features = Matrix.checkMatrix(features);\n        this.dicts = Utils.dictOutputs(labels);\n\n        var inputSize = features.columns;\n        var outputSize = Object.keys(this.dicts.inputs).length;\n\n        this.buildNetwork(inputSize, outputSize);\n\n        for (var i = 0; i < this.iterations; ++i) {\n            var probabilities = this.propagate(features);\n            this.backpropagation(features, labels, probabilities);\n        }\n    }\n\n    /**\n     * @private\n     * Propagate the input(training set) and retrives the probabilities of each class.\n     * @param {Matrix} X\n     * @return {Matrix} probabilities of each class.\n     */\n    propagate(X) {\n        var input = X;\n        for (var i = 0; i < this.model.length; ++i) {\n            //console.log(i);\n            input = this.model[i].forward(input);\n        }\n\n        // get probabilities\n        return input.divColumnVector(Utils.sumRow(input));\n    }\n\n    /**\n     * @private\n     * Function that applies the backpropagation algorithm on each layer of the network\n     * in order to fit the features and labels.\n     * @param {Matrix} features\n     * @param {Array} labels\n     * @param {Matrix} probabilities - probabilities of each class of the feature set.\n     */\n    backpropagation(features, labels, probabilities) {\n        for (var i = 0; i < probabilities.length; ++i) {\n            probabilities[i][this.dicts.inputs[labels[i]]] -= 1;\n        }\n\n        // remember, the last delta doesn't matter\n        var delta = probabilities;\n        for (i = this.model.length - 1; i >= 0; --i) {\n            var a = i > 0 ? this.model[i - 1].a : features;\n            delta = this.model[i].backpropagation(delta, a);\n        }\n\n        for (i = 0; i < this.model.length; ++i) {\n            this.model[i].update();\n        }\n    }\n\n    /**\n     * Predict the output given the feature set.\n     * @param {Array|Matrix} features\n     * @return {Array}\n     */\n    predict(features) {\n        features = Matrix.checkMatrix(features);\n        var outputs = new Array(features.rows);\n        var probabilities = this.propagate(features);\n        for (var i = 0; i < features.rows; ++i) {\n            outputs[i] = this.dicts.outputs[probabilities.maxRowIndex(i)[1]];\n        }\n\n        return outputs;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} model\n     */\n    toJSON() {\n        var model = {\n            model: 'FNN',\n            hiddenLayers: this.hiddenLayers,\n            iterations: this.iterations,\n            learningRate: this.learningRate,\n            regularization: this.regularization,\n            activation: this.activation,\n            activationParam: this.activationParam,\n            dicts: this.dicts,\n            layers: new Array(this.model.length)\n        };\n\n        for (var i = 0; i < this.model.length; ++i) {\n            model.layers[i] = this.model[i].toJSON();\n        }\n\n        return model;\n    }\n\n    /**\n     * Load a Feedforward Neural Network with the current model.\n     * @param {object} model\n     * @return {FeedForwardNeuralNetworks}\n     */\n    static load(model) {\n        if (model.model !== 'FNN') {\n            throw new RangeError('the current model is not a feed forward network');\n        }\n\n        return new FeedForwardNeuralNetworks(model);\n    }\n}\n\nmodule.exports = FeedForwardNeuralNetworks;\n","'use strict';\n\nvar Layer = require('./Layer');\n\nclass OutputLayer extends Layer {\n    constructor(options) {\n        super(options);\n\n        this.activationFunction = function (i, j) {\n            this[i][j] = Math.exp(this[i][j]);\n        };\n    }\n\n    static load(model) {\n        if (model.model !== 'Layer') {\n            throw new RangeError('the current model is not a Layer model');\n        }\n\n        return new OutputLayer(model);\n    }\n}\n\nmodule.exports = OutputLayer;\n","'use strict';\n\nvar NodeSquare = require('./node-square'),\n    NodeHexagonal = require('./node-hexagonal');\n\nvar defaultOptions = {\n    fields: 3,\n    randomizer: Math.random,\n    distance: squareEuclidean,\n    iterations: 10,\n    learningRate: 0.1,\n    gridType: 'rect',\n    torus: true,\n    method: 'random'\n};\n\nfunction SOM(x, y, options, reload) {\n\n    this.x = x;\n    this.y = y;\n\n    options = options || {};\n    this.options = {};\n    for (var i in defaultOptions) {\n        if (options.hasOwnProperty(i)) {\n            this.options[i] = options[i];\n        } else {\n            this.options[i] = defaultOptions[i];\n        }\n    }\n\n    if (typeof this.options.fields === 'number') {\n        this.numWeights = this.options.fields;\n    } else if (Array.isArray(this.options.fields)) {\n        this.numWeights = this.options.fields.length;\n        var converters = getConverters(this.options.fields);\n        this.extractor = converters.extractor;\n        this.creator = converters.creator;\n    } else {\n        throw new Error('Invalid fields definition');\n    }\n\n    if (this.options.gridType === 'rect') {\n        this.nodeType = NodeSquare;\n        this.gridDim = {\n            x: x,\n            y: y\n        };\n    } else {\n        this.nodeType = NodeHexagonal;\n        var hx = this.x - Math.floor(this.y / 2);\n        this.gridDim = {\n            x: hx,\n            y: this.y,\n            z: -(0 - hx - this.y)\n        };\n    }\n\n    this.torus = this.options.torus;\n    this.distanceMethod = this.torus ? 'getDistanceTorus' : 'getDistance';\n\n    this.distance = this.options.distance;\n\n    this.maxDistance = getMaxDistance(this.distance, this.numWeights);\n\n    if (reload === true) { // For model loading\n        this.done = true;\n        return;\n    }\n    if (!(x > 0 && y > 0)) {\n        throw new Error('x and y must be positive');\n    }\n\n    this.times = {\n        findBMU: 0,\n        adjust: 0\n    };\n\n    this.randomizer = this.options.randomizer;\n\n    this.iterationCount = 0;\n    this.iterations = this.options.iterations;\n\n    this.startLearningRate = this.learningRate = this.options.learningRate;\n\n    this.mapRadius = Math.floor(Math.max(x, y) / 2);\n\n    this.algorithmMethod = this.options.method;\n\n    this._initNodes();\n\n    this.done = false;\n}\n\nSOM.load = function loadModel(model, distance) {\n    if (model.name === 'SOM') {\n        var x = model.data.length,\n            y = model.data[0].length;\n        if (distance) {\n            model.options.distance = distance;\n        } else if (model.options.distance) {\n            model.options.distance = eval('(' + model.options.distance + ')');\n        }\n        var som = new SOM(x, y, model.options, true);\n        som.nodes = new Array(x);\n        for (var i = 0; i < x; i++) {\n            som.nodes[i] = new Array(y);\n            for (var j = 0; j < y; j++) {\n                som.nodes[i][j] = new som.nodeType(i, j, model.data[i][j], som);\n            }\n        }\n        return som;\n    } else {\n        throw new Error('expecting a SOM model');\n    }\n};\n\nSOM.prototype.export = function exportModel(includeDistance) {\n    if (!this.done) {\n        throw new Error('model is not ready yet');\n    }\n    var model = {\n        name: 'SOM'\n    };\n    model.options = {\n        fields: this.options.fields,\n        gridType: this.options.gridType,\n        torus: this.options.torus\n    };\n    model.data = new Array(this.x);\n    for (var i = 0; i < this.x; i++) {\n        model.data[i] = new Array(this.y);\n        for (var j = 0; j < this.y; j++) {\n            model.data[i][j] = this.nodes[i][j].weights;\n        }\n    }\n    if (includeDistance) {\n        model.options.distance = this.distance.toString();\n    }\n    return model;\n};\n\nSOM.prototype._initNodes = function initNodes() {\n    var now = Date.now(),\n        i, j, k;\n    this.nodes = new Array(this.x);\n    for (i = 0; i < this.x; i++) {\n        this.nodes[i] = new Array(this.y);\n        for (j = 0; j < this.y; j++) {\n            var weights = new Array(this.numWeights);\n            for (k = 0; k < this.numWeights; k++) {\n                weights[k] = this.randomizer();\n            }\n            this.nodes[i][j] = new this.nodeType(i, j, weights, this);\n        }\n    }\n    this.times.initNodes = Date.now() - now;\n};\n\nSOM.prototype.setTraining = function setTraining(trainingSet) {\n    if (this.trainingSet) {\n        throw new Error('training set has already been set');\n    }\n    var now = Date.now();\n    var convertedSet = trainingSet;\n    var i, l = trainingSet.length;\n    if (this.extractor) {\n        convertedSet = new Array(l);\n        for (i = 0; i < l; i++) {\n            convertedSet[i] = this.extractor(trainingSet[i]);\n        }\n    }\n    this.numIterations = this.iterations * l;\n\n    if (this.algorithmMethod === 'random') {\n        this.timeConstant = this.numIterations / Math.log(this.mapRadius);\n    } else {\n        this.timeConstant = l / Math.log(this.mapRadius);\n    }\n    this.trainingSet = convertedSet;\n    this.times.setTraining = Date.now() - now;\n};\n\nSOM.prototype.trainOne = function trainOne() {\n    if (this.done) {\n\n        return false;\n\n    } else if (this.numIterations-- > 0) {\n\n        var neighbourhoodRadius,\n            trainingValue,\n            trainingSetFactor;\n\n        if (this.algorithmMethod === 'random') { // Pick a random value of the training set at each step\n            neighbourhoodRadius = this.mapRadius * Math.exp(-this.iterationCount / this.timeConstant);\n            trainingValue = getRandomValue(this.trainingSet, this.randomizer);\n            this._adjust(trainingValue, neighbourhoodRadius);\n            this.learningRate = this.startLearningRate * Math.exp(-this.iterationCount / this.numIterations);\n        } else { // Get next input vector\n            trainingSetFactor = -Math.floor(this.iterationCount / this.trainingSet.length);\n            neighbourhoodRadius = this.mapRadius * Math.exp(trainingSetFactor / this.timeConstant);\n            trainingValue = this.trainingSet[this.iterationCount % this.trainingSet.length];\n            this._adjust(trainingValue, neighbourhoodRadius);\n            if (((this.iterationCount + 1) % this.trainingSet.length) === 0) {\n                this.learningRate = this.startLearningRate * Math.exp(trainingSetFactor / Math.floor(this.numIterations / this.trainingSet.length));\n            }\n        }\n\n        this.iterationCount++;\n\n        return true;\n\n    } else {\n\n        this.done = true;\n        return false;\n\n    }\n};\n\nSOM.prototype._adjust = function adjust(trainingValue, neighbourhoodRadius) {\n    var now = Date.now(),\n        x, y, dist, influence;\n\n    var bmu = this._findBestMatchingUnit(trainingValue);\n\n    var now2 = Date.now();\n    this.times.findBMU += now2 - now;\n\n    var radiusLimit = Math.floor(neighbourhoodRadius);\n    var xMin = bmu.x - radiusLimit,\n        xMax = bmu.x + radiusLimit,\n        yMin = bmu.y - radiusLimit,\n        yMax = bmu.y + radiusLimit;\n\n    for (x = xMin; x <= xMax; x++) {\n        var theX = x;\n        if (x < 0) {\n            theX += this.x;\n        } else if (x >= this.x) {\n            theX -= this.x;\n        }\n        for (y = yMin; y <= yMax; y++) {\n            var theY = y;\n            if (y < 0) {\n                theY += this.y;\n            } else if (y >= this.y) {\n                theY -= this.y;\n            }\n\n            dist = bmu[this.distanceMethod](this.nodes[theX][theY]);\n\n            if (dist < neighbourhoodRadius) {\n                influence = Math.exp(-dist / (2 * neighbourhoodRadius));\n                this.nodes[theX][theY].adjustWeights(trainingValue, this.learningRate, influence);\n            }\n\n        }\n    }\n\n    this.times.adjust += (Date.now() - now2);\n\n};\n\nSOM.prototype.train = function train(trainingSet) {\n    if (!this.done) {\n        this.setTraining(trainingSet);\n        while (this.trainOne()) {\n        }\n    }\n};\n\nSOM.prototype.getConvertedNodes = function getConvertedNodes() {\n    var result = new Array(this.x);\n    for (var i = 0; i < this.x; i++) {\n        result[i] = new Array(this.y);\n        for (var j = 0; j < this.y; j++) {\n            var node = this.nodes[i][j];\n            result[i][j] = this.creator ? this.creator(node.weights) : node.weights;\n        }\n    }\n    return result;\n};\n\nSOM.prototype._findBestMatchingUnit = function findBestMatchingUnit(candidate) {\n\n    var bmu,\n        lowest = Infinity,\n        dist;\n\n    for (var i = 0; i < this.x; i++) {\n        for (var j = 0; j < this.y; j++) {\n            dist = this.distance(this.nodes[i][j].weights, candidate);\n            if (dist < lowest) {\n                lowest = dist;\n                bmu = this.nodes[i][j];\n            }\n        }\n    }\n\n    return bmu;\n\n};\n\nSOM.prototype.predict = function predict(data, computePosition) {\n    if (typeof data === 'boolean') {\n        computePosition = data;\n        data = null;\n    }\n    if (!data) {\n        data = this.trainingSet;\n    }\n    if (Array.isArray(data) && (Array.isArray(data[0]) || (typeof data[0] === 'object'))) { // predict a dataset\n        var self = this;\n        return data.map(function (element) {\n            return self._predict(element, computePosition);\n        });\n    } else { // predict a single element\n        return this._predict(data, computePosition);\n    }\n};\n\nSOM.prototype._predict = function _predict(element, computePosition) {\n    if (!Array.isArray(element)) {\n        element = this.extractor(element);\n    }\n    var bmu = this._findBestMatchingUnit(element);\n    var result = [bmu.x, bmu.y];\n    if (computePosition) {\n        result[2] = bmu.getPosition(element);\n    }\n    return result;\n};\n\n// As seen in http://www.scholarpedia.org/article/Kohonen_network\nSOM.prototype.getQuantizationError = function getQuantizationError() {\n    var fit = this.getFit(),\n        l = fit.length,\n        sum = 0;\n    for (var i = 0; i < l; i++) {\n        sum += fit[i];\n    }\n    return sum / l;\n};\n\nSOM.prototype.getFit = function getFit(dataset) {\n    if (!dataset) {\n        dataset = this.trainingSet;\n    }\n    var l = dataset.length,\n        bmu,\n        result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        bmu = this._findBestMatchingUnit(dataset[i]);\n        result[i] = Math.sqrt(this.distance(dataset[i], bmu.weights));\n    }\n    return result;\n};\n\nfunction getConverters(fields) {\n    var l = fields.length,\n        normalizers = new Array(l),\n        denormalizers = new Array(l);\n    for (var i = 0; i < l; i++) {\n        normalizers[i] = getNormalizer(fields[i].range);\n        denormalizers[i] = getDenormalizer(fields[i].range);\n    }\n    return {\n        extractor: function extractor(value) {\n            var result = new Array(l);\n            for (var i = 0; i < l; i++) {\n                result[i] = normalizers[i](value[fields[i].name]);\n            }\n            return result;\n        },\n        creator: function creator(value) {\n            var result = {};\n            for (var i = 0; i < l; i++) {\n                result[fields[i].name] = denormalizers[i](value[i]);\n            }\n            return result;\n        }\n    };\n}\n\nfunction getNormalizer(minMax) {\n    return function normalizer(value) {\n        return (value - minMax[0]) / (minMax[1] - minMax[0]);\n    };\n}\n\nfunction getDenormalizer(minMax) {\n    return function denormalizer(value) {\n        return (minMax[0] + value * (minMax[1] - minMax[0]));\n    };\n}\n\nfunction squareEuclidean(a, b) {\n    var d = 0;\n    for (var i = 0, ii = a.length; i < ii; i++) {\n        d += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return d;\n}\n\nfunction getRandomValue(arr, randomizer) {\n    return arr[Math.floor(randomizer() * arr.length)];\n}\n\nfunction getMaxDistance(distance, numWeights) {\n    var zero = new Array(numWeights),\n        one = new Array(numWeights);\n    for (var i = 0; i < numWeights; i++) {\n        zero[i] = 0;\n        one[i] = 1;\n    }\n    return distance(zero, one);\n}\n\nmodule.exports = SOM;","var NodeSquare = require('./node-square');\n\nfunction NodeHexagonal(x, y, weights, som) {\n\n    NodeSquare.call(this, x, y, weights, som);\n\n    this.hX = x - Math.floor(y / 2);\n    this.z = 0 - this.hX - y;\n\n}\n\nNodeHexagonal.prototype = new NodeSquare;\nNodeHexagonal.prototype.constructor = NodeHexagonal;\n\nNodeHexagonal.prototype.getDistance = function getDistanceHexagonal(otherNode) {\n    return Math.max(Math.abs(this.hX - otherNode.hX), Math.abs(this.y - otherNode.y), Math.abs(this.z - otherNode.z));\n};\n\nNodeHexagonal.prototype.getDistanceTorus = function getDistanceTorus(otherNode) {\n    var distX = Math.abs(this.hX - otherNode.hX),\n        distY = Math.abs(this.y - otherNode.y),\n        distZ = Math.abs(this.z - otherNode.z);\n    return Math.max(Math.min(distX, this.som.gridDim.x - distX), Math.min(distY, this.som.gridDim.y - distY), Math.min(distZ, this.som.gridDim.z - distZ));\n};\n\nNodeHexagonal.prototype.getPosition = function getPosition() {\n    throw new Error('Unimplemented : cannot get position of the points for hexagonal grid');\n};\n\nmodule.exports = NodeHexagonal;","import HashTable from 'ml-hash-table';\n\nexport class SparseMatrix {\n    constructor(rows, columns, options = {}) {\n        if (rows instanceof SparseMatrix) { // clone\n            const other = rows;\n            this._init(other.rows, other.columns, other.elements.clone(), other.threshold);\n            return;\n        }\n\n        if (Array.isArray(rows)) {\n            const matrix = rows;\n            rows = matrix.length;\n            options = columns || {};\n            columns = matrix[0].length;\n            this._init(rows, columns, new HashTable(options), options.threshold);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = matrix[i][j];\n                    if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n                    if (value !== 0) {\n                        this.elements.set(i * columns + j, matrix[i][j]);\n                    }\n                }\n            }\n        } else {\n            this._init(rows, columns, new HashTable(options), options.threshold);\n        }\n    }\n\n    _init(rows, columns, elements, threshold) {\n        this.rows = rows;\n        this.columns = columns;\n        this.elements = elements;\n        this.threshold = threshold || 0;\n    }\n\n    static eye(rows = 1, columns = rows) {\n        const min = Math.min(rows, columns);\n        const matrix = new SparseMatrix(rows, columns, {initialCapacity: min});\n        for (var i = 0; i < min; i++) {\n            matrix.set(i, i, 1);\n        }\n        return matrix;\n    }\n\n    clone() {\n        return new SparseMatrix(this);\n    }\n\n    to2DArray() {\n        const copy = new Array(this.rows);\n        for (var i = 0; i < this.rows; i++) {\n            copy[i] = new Array(this.columns);\n            for (var j = 0; j < this.columns; j++) {\n                copy[i][j] = this.get(i, j);\n            }\n        }\n        return copy;\n    }\n\n    isSquare() {\n        return this.rows === this.columns;\n    }\n\n    isSymmetric() {\n        if (!this.isSquare()) return false;\n\n        var symmetric = true;\n        this.forEachNonZero((i, j, v) => {\n            if (this.get(j, i) !== v) {\n                symmetric = false;\n                return false;\n            }\n            return v;\n        });\n        return symmetric;\n    }\n\n    /**\n     * Search for the wither band in the main diagonals\n     * @return {number}\n     */\n    bandWidth() {\n        let min = this.columns;\n        let max = -1;\n        this.forEachNonZero((i, j, v) => {\n            let diff = i - j;\n            min = Math.min(min, diff);\n            max = Math.max(max, diff);\n            return v;\n        });\n        return max - min;\n    }\n\n    /**\n     * Test if a matrix is consider banded using a threshold\n     * @param {number} width\n     * @return {boolean}\n     */\n    isBanded(width) {\n        let bandWidth = this.bandWidth();\n        return bandWidth <= width;\n    }\n\n    get cardinality() {\n        return this.elements.size;\n    }\n\n    get size() {\n        return this.rows * this.columns;\n    }\n\n    get(row, column) {\n        return this.elements.get(row * this.columns + column);\n    }\n\n    set(row, column, value) {\n        if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n        if (value === 0) {\n            this.elements.remove(row * this.columns + column);\n        } else {\n            this.elements.set(row * this.columns + column, value);\n        }\n        return this;\n    }\n\n    mmul(other) {\n        if (this.columns !== other.rows) {\n            // eslint-disable-next-line no-console\n            console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n        }\n\n        const m = this.rows;\n        const p = other.columns;\n\n        const result = new SparseMatrix(m, p);\n        this.forEachNonZero((i, j, v1) => {\n            other.forEachNonZero((k, l, v2) => {\n                if (j === k) {\n                    result.set(i, l, result.get(i, l) + v1 * v2);\n                }\n                return v2;\n            });\n            return v1;\n        });\n        return result;\n    }\n\n    kroneckerProduct(other) {\n        const m = this.rows;\n        const n = this.columns;\n        const p = other.rows;\n        const q = other.columns;\n\n        const result = new SparseMatrix(m * p, n * q, {\n            initialCapacity: this.cardinality * other.cardinality\n        });\n        this.forEachNonZero((i, j, v1) => {\n            other.forEachNonZero((k, l, v2) => {\n                result.set(p * i + k, q * j + l, v1 * v2);\n                return v2;\n            });\n            return v1;\n        });\n        return result;\n    }\n\n    forEachNonZero(callback) {\n        this.elements.forEachPair((key, value) => {\n            const i = (key / this.columns) | 0;\n            const j = key % this.columns;\n            let r = callback(i, j, value);\n            if (r === false) return false; // stop iteration\n            if (this.threshold && Math.abs(r) < this.threshold) r = 0;\n            if (r !== value) {\n                if (r === 0) {\n                    this.elements.remove(key, true);\n                } else {\n                    this.elements.set(key, r);\n                }\n            }\n            return true;\n        });\n        this.elements.maybeShrinkCapacity();\n        return this;\n    }\n\n    getNonZeros() {\n        const cardinality = this.cardinality;\n        const rows = new Array(cardinality);\n        const columns = new Array(cardinality);\n        const values = new Array(cardinality);\n        var idx = 0;\n        this.forEachNonZero((i, j, value) => {\n            rows[idx] = i;\n            columns[idx] = j;\n            values[idx] = value;\n            idx++;\n            return value;\n        });\n        return {rows, columns, values};\n    }\n\n    setThreshold(newThreshold) {\n        if (newThreshold !== 0 && newThreshold !== this.threshold) {\n            this.threshold = newThreshold;\n            this.forEachNonZero((i, j, v) => v);\n        }\n        return this;\n    }\n\n    /**\n     * @return {SparseMatrix} - New transposed sparse matrix\n     */\n    transpose() {\n        let trans = new SparseMatrix(this.columns, this.rows, {initialCapacity: this.cardinality});\n        this.forEachNonZero((i, j, value) => {\n            trans.set(j, i, value);\n            return value;\n        });\n        return trans;\n    }\n}\n\nSparseMatrix.prototype.klass = 'Matrix';\n\nSparseMatrix.identity = SparseMatrix.eye;\nSparseMatrix.prototype.tensorProduct = SparseMatrix.prototype.kroneckerProduct;\n\n/*\n Add dynamically instance and static methods for mathematical operations\n */\n\nvar inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\nvar inplaceOperatorScalar = `\n(function %name%S(value) {\n    this.forEachNonZero((i, j, v) => v %op% value);\n    return this;\n})\n`;\n\nvar inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix.forEachNonZero((i, j, v) => {\n        this.set(i, j, this.get(i, j) %op% v);\n        return v;\n    });\n    return this;\n})\n`;\n\nvar staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\nvar inplaceMethod = `\n(function %name%() {\n    this.forEachNonZero((i, j, v) => %method%(v));\n    return this;\n})\n`;\n\nvar staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%();\n})\n`;\n\nconst operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n];\n\nfor (const operator of operators) {\n    for (let i = 1; i < operator.length; i++) {\n        SparseMatrix.prototype[operator[i]] = eval(fillTemplateFunction(inplaceOperator, {name: operator[i], op: operator[0]}));\n        SparseMatrix.prototype[operator[i] + 'S'] = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[i] + 'S', op: operator[0]}));\n        SparseMatrix.prototype[operator[i] + 'M'] = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[i] + 'M', op: operator[0]}));\n\n        SparseMatrix[operator[i]] = eval(fillTemplateFunction(staticOperator, {name: operator[i]}));\n    }\n}\n\nvar methods = [\n    ['~', 'not']\n];\n\n[\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n].forEach(function (mathMethod) {\n    methods.push(['Math.' + mathMethod, mathMethod]);\n});\n\nfor (const method of methods) {\n    for (let i = 1; i < method.length; i++) {\n        SparseMatrix.prototype[method[i]] = eval(fillTemplateFunction(inplaceMethod, {name: method[i], method: method[0]}));\n        SparseMatrix[method[i]] = eval(fillTemplateFunction(staticMethod, {name: method[i]}));\n    }\n}\n\nfunction fillTemplateFunction(template, values) {\n    for (const i in values) {\n        template = template.replace(new RegExp('%' + i + '%', 'g'), values[i]);\n    }\n    return template;\n}\n","module.exports = newArray\n\nfunction newArray (n, value) {\n  n = n || 0\n  var array = new Array(n)\n  for (var i = 0; i < n; i++) {\n    array[i] = value\n  }\n  return array\n}\n","const binarySearch = require('binary-search');\nconst sortAsc = require('num-sort').asc;\n\nconst largestPrime = 0x7fffffff;\n\nconst primeNumbers = [\n    //chunk #0\n    largestPrime, // 2^31-1\n\n    //chunk #1\n    5, 11, 23, 47, 97, 197, 397, 797, 1597, 3203, 6421, 12853, 25717, 51437, 102877, 205759,\n    411527, 823117, 1646237, 3292489, 6584983, 13169977, 26339969, 52679969, 105359939,\n    210719881, 421439783, 842879579, 1685759167,\n\n    //chunk #2\n    433, 877, 1759, 3527, 7057, 14143, 28289, 56591, 113189, 226379, 452759, 905551, 1811107,\n    3622219, 7244441, 14488931, 28977863, 57955739, 115911563, 231823147, 463646329, 927292699,\n    1854585413,\n\n    //chunk #3\n    953, 1907, 3821, 7643, 15287, 30577, 61169, 122347, 244703, 489407, 978821, 1957651, 3915341,\n    7830701, 15661423, 31322867, 62645741, 125291483, 250582987, 501165979, 1002331963,\n    2004663929,\n\n    //chunk #4\n    1039, 2081, 4177, 8363, 16729, 33461, 66923, 133853, 267713, 535481, 1070981, 2141977, 4283963,\n    8567929, 17135863, 34271747, 68543509, 137087021, 274174111, 548348231, 1096696463,\n\n    //chunk #5\n    31, 67, 137, 277, 557, 1117, 2237, 4481, 8963, 17929, 35863, 71741, 143483, 286973, 573953,\n    1147921, 2295859, 4591721, 9183457, 18366923, 36733847, 73467739, 146935499, 293871013,\n    587742049, 1175484103,\n\n    //chunk #6\n    599, 1201, 2411, 4831, 9677, 19373, 38747, 77509, 155027, 310081, 620171, 1240361, 2480729,\n    4961459, 9922933, 19845871, 39691759, 79383533, 158767069, 317534141, 635068283, 1270136683,\n\n    //chunk #7\n    311, 631, 1277, 2557, 5119, 10243, 20507, 41017, 82037, 164089, 328213, 656429, 1312867,\n    2625761, 5251529, 10503061, 21006137, 42012281, 84024581, 168049163, 336098327, 672196673,\n    1344393353,\n\n    //chunk #8\n    3, 7, 17, 37, 79, 163, 331, 673, 1361, 2729, 5471, 10949, 21911, 43853, 87719, 175447, 350899,\n    701819, 1403641, 2807303, 5614657, 11229331, 22458671, 44917381, 89834777, 179669557,\n    359339171, 718678369, 1437356741,\n\n    //chunk #9\n    43, 89, 179, 359, 719, 1439, 2879, 5779, 11579, 23159, 46327, 92657, 185323, 370661, 741337,\n    1482707, 2965421, 5930887, 11861791, 23723597, 47447201, 94894427, 189788857, 379577741,\n    759155483, 1518310967,\n\n    //chunk #10\n    379, 761, 1523, 3049, 6101, 12203, 24407, 48817, 97649, 195311, 390647, 781301, 1562611,\n    3125257, 6250537, 12501169, 25002389, 50004791, 100009607, 200019221, 400038451, 800076929,\n    1600153859,\n\n    //chunk #11\n    13, 29, 59, 127, 257, 521, 1049, 2099, 4201, 8419, 16843, 33703, 67409, 134837, 269683,\n    539389, 1078787, 2157587, 4315183, 8630387, 17260781, 34521589, 69043189, 138086407,\n    276172823, 552345671, 1104691373,\n\n    //chunk #12\n    19, 41, 83, 167, 337, 677,\n    1361, 2729, 5471, 10949, 21911, 43853, 87719, 175447, 350899,\n    701819, 1403641, 2807303, 5614657, 11229331, 22458671, 44917381, 89834777, 179669557,\n    359339171, 718678369, 1437356741,\n\n    //chunk #13\n    53, 107, 223, 449, 907, 1823, 3659, 7321, 14653, 29311, 58631, 117269,\n    234539, 469099, 938207, 1876417, 3752839, 7505681, 15011389, 30022781,\n    60045577, 120091177, 240182359, 480364727, 960729461, 1921458943\n];\n\nprimeNumbers.sort(sortAsc);\n\nfunction nextPrime(value) {\n    let index = binarySearch(primeNumbers, value, sortAsc);\n    if (index < 0) {\n        index = ~index;\n    }\n    return primeNumbers[index];\n}\n\nexports.nextPrime = nextPrime;\nexports.largestPrime = largestPrime;\n","'use strict';\nmodule.exports = Number.isNaN || function (x) {\n\treturn x !== x;\n};\n","\"use strict\";\n\nexports.additiveSymmetric = require('./distances/additiveSymmetric');\nexports.avg = require('./distances/avg');\nexports.bhattacharyya = require('./distances/bhattacharyya');\nexports.canberra = require('./distances/canberra');\nexports.chebyshev = require('./distances/chebyshev');\nexports.clark = require('./distances/clark');\nexports.czekanowski = require('./distances/czekanowski');\nexports.dice = require('./distances/dice');\nexports.divergence = require('./distances/divergence');\nexports.euclidean = require('ml-distance-euclidean');\nexports.fidelity = require('./distances/fidelity');\nexports.gower = require('./distances/gower');\nexports.harmonicMean = require('./distances/harmonicMean');\nexports.hellinger = require('./distances/hellinger');\nexports.innerProduct = require('./distances/innerProduct');\nexports.intersection = require('./distances/intersection');\nexports.jaccard = require('./distances/jaccard');\nexports.jeffreys = require('./distances/jeffreys');\nexports.jensenDifference = require('./distances/jensenDifference');\nexports.jensenShannon = require('./distances/jensenShannon');\nexports.kdivergence = require('./distances/kdivergence');\nexports.kulczynski = require('./distances/kulczynski');\nexports.kullbackLeibler = require('./distances/kullbackLeibler');\nexports.kumarHassebrook = require('./distances/kumarHassebrook');\nexports.kumarJohnson = require('./distances/kumarJohnson');\nexports.lorentzian = require('./distances/lorentzian');\nexports.manhattan = require('./distances/manhattan');\nexports.matusita = require('./distances/matusita');\nexports.minkowski = require('./distances/minkowski');\nexports.motyka = require('./distances/motyka');\nexports.neyman = require('./distances/neyman');\nexports.pearson = require('./distances/pearson');\nexports.probabilisticSymmetric = require('./distances/probabilisticSymmetric');\nexports.ruzicka = require('./distances/ruzicka');\nexports.soergel = require('./distances/soergel');\nexports.sorensen = require('./distances/sorensen');\nexports.squared = require('./distances/squared');\nexports.squaredChord = require('./distances/squaredChord');\nexports.squaredEuclidean = require('ml-distance-euclidean').squared;\nexports.taneja = require('./distances/taneja');\nexports.tanimoto = require('./distances/tanimoto');\nexports.topsoe = require('./distances/topsoe');\nexports.tree = require('ml-tree-similarity');\nexports.waveHedges = require('./distances/waveHedges');\n","module.exports = function additiveSymmetric(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i]) * (a[i] + b[i])) / (a[i] * b[i]);\n    }\n    return 2 * d;\n};\n","module.exports = function avg(a, b) {\n    var ii = a.length,\n        max = 0,\n        ans = 0,\n        aux = 0;\n    for (var i = 0; i < ii ; i++) {\n        aux = Math.abs(a[i] - b[i]);\n        ans += aux;\n        if (max < aux) {\n            max = aux;\n        }\n    }\n    return (max + ans) / 2;\n};\n","module.exports = function bhattacharyya(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return - Math.log(ans);\n};\n","module.exports = function canberra(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.abs(a[i] - b[i]) / (a[i] + b[i]);\n    }\n    return ans;\n};\n","module.exports = function chebyshev(a, b) {\n    var ii = a.length,\n        max = 0,\n        aux = 0;\n    for (var i = 0; i < ii ; i++) {\n        aux = Math.abs(a[i] - b[i]);\n        if (max < aux) {\n            max = aux;\n        }\n    }\n    return max;\n};\n","module.exports = function clark(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.sqrt(((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i])));\n    }\n    return 2 * d;\n};\n","'use strict';\n\nconst czekanowskiSimilarity = require('../similarities/czekanowski');\n\nmodule.exports = function czekanowskiDistance(a, b) {\n    return 1 - czekanowskiSimilarity(a, b);\n};\n","module.exports = function divergence(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i]));\n    }\n    return 2 * d;\n};\n","module.exports = function fidelity(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return ans;\n};\n","module.exports = function gower(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.abs(a[i] - b[i]);\n    }\n    return ans / ii;\n};\n","module.exports = function harmonicMean(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] * b[i]) / (a[i] + b[i]);\n    }\n    return 2 * ans;\n};\n","module.exports = function hellinger(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return 2 * Math.sqrt(1 - ans);\n};\n","module.exports = function innerProduct(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * b[i];\n    }\n    return ans;\n};\n","module.exports = function jeffreys(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] - b[i]) * Math.log(a[i] / b[i]);\n    }\n    return ans;\n};\n","module.exports = function jensenDifference(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += ((a[i] * Math.log(a[i]) + b[i] * Math.log(b[i])) / 2) - ((a[i] + b[i]) / 2) * Math.log((a[i] + b[i]) / 2);\n    }\n    return ans;\n};\n","module.exports = function jensenShannon(a, b) {\n    var ii = a.length,\n        p = 0,\n        q = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * Math.log(2 * a[i] / (a[i] + b[i]));\n        q += b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n    }\n    return (p + q) / 2;\n};\n","module.exports = function kdivergence(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(2 * a[i] / (a[i] + b[i]));\n    }\n    return ans;\n};\n","module.exports = function kullbackLeibler(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(a[i] / b[i]);\n    }\n    return ans;\n};\n","module.exports = function kumarHassebrook(a, b) {\n    var ii = a.length,\n        p = 0,\n        p2 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q2 += b[i] * b[i];\n    }\n    return p / (p2 + q2 - p);\n};\n","module.exports = function kumarJohnson(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.pow(a[i] * a[i] - b[i] * b[i],2) / (2 * Math.pow(a[i] * b[i],1.5));\n    }\n    return ans;\n};\n","module.exports = function lorentzian(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.log(Math.abs(a[i] - b[i]) + 1);\n    }\n    return ans;\n};\n","module.exports = function manhattan(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.abs(a[i] - b[i]);\n    }\n    return d;\n};\n","module.exports = function matusita(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return Math.sqrt(2 - 2 * ans);\n};\n","module.exports = function minkowski(a, b, p) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.pow(Math.abs(a[i] - b[i]),p);\n    }\n    return Math.pow(d,(1/p));\n};\n","module.exports = function neyman(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / a[i];\n    }\n    return d;\n};\n","module.exports = function pearson(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / b[i];\n    }\n    return d;\n};\n","module.exports = function probabilisticSymmetric(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n    }\n    return 2 * d;\n};\n","module.exports = function ruzicka(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.min(a[i],b[i]);\n        down += Math.max(a[i],b[i]);\n    }\n    return up / down;\n};\n","module.exports = function soergel(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += Math.max(a[i],b[i]);\n    }\n    return up / down;\n};\n","module.exports = function sorensen(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += a[i] + b[i];\n    }\n    return up / down;\n};\n","module.exports = function squared(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n    }\n    return d;\n};\n","module.exports = function taneja(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] + b[i]) / 2 * Math.log((a[i] + b[i]) / (2 * Math.sqrt(a[i] * b[i])));\n    }\n    return ans;\n};\n","var tanimotoS = require('./../similarities/tanimoto');\n\nmodule.exports = function tanimoto(a, b, bitvector) {\n    if (bitvector)\n        return 1 - tanimotoS(a, b, bitvector);\n    else {\n        var ii = a.length,\n            p = 0,\n            q = 0,\n            m = 0;\n        for (var i = 0; i < ii ; i++) {\n            p += a[i];\n            q += b[i];\n            m += Math.min(a[i],b[i]);\n        }\n        return (p + q - 2 * m) / (p + q - m);\n    }\n};\n","module.exports = function topsoe(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(2 * a[i] / (a[i] + b[i])) + b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n    }\n    return ans;\n};\n","\"use strict\";\n\n/**\n * Function that creates the tree\n * @param {Array <number>} X - chemical shifts of the signal\n * @param {Array <number>} Y - intensity of the signal\n * @param {number} from - the low limit of x\n * @param {number} to - the top limit of x\n * @param {number} minWindow - smallest range to accept in x\n * @param {number} threshold - smallest range to accept in y\n * @returns {{sum: number, center: number, left: {json}, right: {json}}}\n * left and right have the same structure than the parent, or have a\n * undefined value if are leafs\n */\nfunction createTree (X, Y, from, to, minWindow, threshold) {\n    minWindow = minWindow || 0.16;\n    threshold = threshold || 0.01;\n    if ((to - from) < minWindow)\n        return undefined;\n    var sum = 0;\n    for (var i = 0; X[i] < to; i++) {\n        if (X[i] > from)\n            sum += Y[i];\n    }\n    if (sum < threshold) {\n        return undefined;\n    }\n    var center = 0;\n    for (var j = 0; X[j] < to; j++) {\n        if (X[i] > from)\n            center += X[j] * Y[j];\n    }\n    center = center / sum;\n    if (((center - from) < 10e-6) || ((to - center) < 10e-6)) return undefined;\n    if ((center - from) < (minWindow /4)) {\n        return createTree(X, Y, center, to, minWindow, threshold);\n    }\n    else {\n        if ((to - center) < (minWindow / 4)) {\n            return createTree(X, Y, from, center, minWindow, threshold);\n        }\n        else {\n            return {\n                'sum': sum,\n                'center': center,\n                'left': createTree(X, Y, from, center, minWindow, threshold),\n                'right': createTree(X, Y, center, to, minWindow, threshold)\n            };\n        }\n    }\n}\n\n/**\n * Similarity between two nodes\n * @param {{sum: number, center: number, left: {json}, right: {json}}} a - tree A node\n * @param {{sum: number, center: number, left: {json}, right: {json}}} b - tree B node\n * @param {number} alpha - weights the relative importance of intensity vs. shift match\n * @param {number} beta - weights the relative importance of node matching and children matching\n * @param {number} gamma - controls the attenuation of the effect of chemical shift differences\n * @returns {number} similarity measure between tree nodes\n */\nfunction S(a, b, alpha, beta, gamma) {\n    if (a === undefined || b === undefined) {\n        return 0;\n    }\n    else {\n        var C = (alpha*Math.min(a.sum, b.sum)/Math.max(a.sum, b.sum)+ (1-alpha)*Math.exp(-gamma*Math.abs(a.center - b.center)));\n    }\n    return beta*C + (1-beta)*(S(a.left, b.left, alpha, beta, gamma)+S(a.right, b.right, alpha, beta, gamma));\n}\n\n/**\n * @type {number} alpha - weights the relative importance of intensity vs. shift match\n * @type {number} beta - weights the relative importance of node matching and children matching\n * @type {number} gamma - controls the attenuation of the effect of chemical shift differences\n * @type {number} minWindow - smallest range to accept in x\n * @type {number} threshold - smallest range to accept in y\n */\nvar defaultOptions = {\n    minWindow: 0.16,\n    threshold : 0.01,\n    alpha: 0.1,\n    beta: 0.33,\n    gamma: 0.001\n};\n\n/**\n * Builds a tree based in the spectra and compares this trees\n * @param {{x: Array<number>, y: Array<number>}} A - first spectra to be compared\n * @param {{x: Array<number>, y: Array<number>}} B - second spectra to be compared\n * @param {number} from - the low limit of x\n * @param {number} to - the top limit of x\n * @param {{minWindow: number, threshold: number, alpha: number, beta: number, gamma: number}} options\n * @returns {number} similarity measure between the spectra\n */\nfunction tree(A, B, from, to, options) {\n    options = options || {};\n    for (var o in defaultOptions)\n        if (!options.hasOwnProperty(o)) {\n            options[o] = defaultOptions[o];\n        }\n    var Atree, Btree;\n    if (A.sum)\n        Atree = A;\n    else\n        Atree = createTree(A.x, A.y, from, to, options.minWindow, options.threshold);\n    if (B.sum)\n        Btree = B;\n    else\n        Btree = createTree(B.x, B.y, from, to, options.minWindow, options.threshold);\n    return S(Atree, Btree, options.alpha, options.beta, options.gamma);\n}\n\nmodule.exports = {\n    calc: tree,\n    createTree: createTree\n};","module.exports = function waveHedges(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += 1 - (Math.min(a[i], b[i]) / Math.max(a[i], b[i]));\n    }\n    return ans;\n};\n","\"use strict\";\n\nexports.cosine = require('./similarities/cosine');\nexports.czekanowski = require('./similarities/czekanowski');\nexports.dice = require('./similarities/dice');\nexports.intersection = require('./similarities/intersection');\nexports.jaccard = require('./similarities/jaccard');\nexports.kulczynski = require('./similarities/kulczynski');\nexports.motyka = require('./similarities/motyka');\nexports.pearson = require('./similarities/pearson');\nexports.squaredChord = require('./similarities/squaredChord');\nexports.tanimoto = require('./similarities/tanimoto');\n","var diceD = require('./../distances/dice');\n\nmodule.exports = function dice(a, b) {\n    return 1 - diceD(a,b);\n};\n","var intersectionD = require('./../distances/intersection');\n\nmodule.exports = function intersection(a, b) {\n    return 1 - intersectionD(a,b);\n};\n","var jaccardD = require('./../distances/jaccard');\n\nmodule.exports = function jaccard(a, b) {\n    return 1 - jaccardD(a, b);\n};\n","var kulczynskiD = require('./../distances/kulczynski');\n\nmodule.exports = function kulczynski(a, b) {\n    return 1 / kulczynskiD(a, b);\n};\n","var motykaD = require('./../distances/motyka');\n\nmodule.exports = function motyka(a, b) {\n    return 1 - motykaD(a,b);\n};\n","'use strict';\n\nvar stat=require('ml-stat').array;\nvar cosine=require('./cosine');\n\nmodule.exports = function pearson(a, b) {\n    var avgA=stat.mean(a);\n    var avgB=stat.mean(b);\n\n    var newA=new Array(a.length);\n    var newB=new Array(b.length);\n    for (var i=0; i<newA.length; i++) {\n        newA[i]=a[i]-avgA;\n        newB[i]=b[i]-avgB;\n    }\n\n    return cosine(newA, newB);\n};\n","var squaredChordD = require('./../distances/squaredChord');\n\nmodule.exports = function squaredChord(a, b) {\n    return 1 - squaredChordD(a, b);\n};\n","'use strict';\n\nconst measures = require('./measures');\n\nclass Performance {\n    /**\n     *\n     * @param prediction - The prediction matrix\n     * @param target - The target matrix (values: truthy for same class, falsy for different class)\n     * @param options\n     *\n     * @option    all    True if the entire matrix must be used. False to ignore the diagonal and lower part (default is false, for similarity/distance matrices)\n     * @option    max    True if the max value corresponds to a perfect match (like in similarity matrices), false if it is the min value (default is false, like in distance matrices. All values will be multiplied by -1)\n     */\n    constructor(prediction, target, options) {\n        options = options || {};\n        if (prediction.length !== target.length || prediction[0].length !== target[0].length) {\n            throw new Error('dimensions of prediction and target do not match');\n        }\n        const rows = prediction.length;\n        const columns = prediction[0].length;\n        const isDistance = !options.max;\n\n        const predP = [];\n\n        if (options.all) {\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    predP.push({\n                        pred: prediction[i][j],\n                        targ: target[i][j]\n                    });\n                }\n            }\n        } else {\n            if (rows < 3 || rows !== columns) {\n                throw new Error('When \"all\" option is false, the prediction matrix must be square and have at least 3 columns');\n            }\n            for (var i = 0; i < rows - 1; i++) {\n                for (var j = i + 1; j < columns; j++) {\n                    predP.push({\n                        pred: prediction[i][j],\n                        targ: target[i][j]\n                    });\n                }\n            }\n        }\n\n        if (isDistance) {\n            predP.sort((a, b) => a.pred - b.pred);\n        } else {\n            predP.sort((a, b) => b.pred - a.pred);\n        }\n        \n        const cutoffs = this.cutoffs = [isDistance ? Number.MIN_VALUE : Number.MAX_VALUE];\n        const fp = this.fp = [0];\n        const tp = this.tp = [0];\n\n        var nPos = 0;\n        var nNeg = 0;\n\n        var currentPred = predP[0].pred;\n        var nTp = 0;\n        var nFp = 0;\n        for (var i = 0; i < predP.length; i++) {\n            if (predP[i].pred !== currentPred) {\n                cutoffs.push(currentPred);\n                fp.push(nFp);\n                tp.push(nTp);\n                currentPred = predP[i].pred;\n            }\n            if (predP[i].targ) {\n                nPos++;\n                nTp++;\n            } else {\n                nNeg++;\n                nFp++;\n            }\n        }\n        cutoffs.push(currentPred);\n        fp.push(nFp);\n        tp.push(nTp);\n\n        const l = cutoffs.length;\n        const fn = this.fn = new Array(l);\n        const tn = this.tn = new Array(l);\n        const nPosPred = this.nPosPred = new Array(l);\n        const nNegPred = this.nNegPred = new Array(l);\n\n        for (var i = 0; i < l; i++) {\n            fn[i] = nPos - tp[i];\n            tn[i] = nNeg - fp[i];\n\n            nPosPred[i] = tp[i] + fp[i];\n            nNegPred[i] = tn[i] + fn[i];\n        }\n\n        this.nPos = nPos;\n        this.nNeg = nNeg;\n        this.nSamples = nPos + nNeg;\n    }\n\n    /**\n     * Computes a measure from the prediction object.\n     *\n     * Many measures are available and can be combined :\n     * To create a ROC curve, you need fpr and tpr\n     * To create a DET curve, you need fnr and fpr\n     * To create a Lift chart, you need rpp and lift\n     *\n     * Possible measures are : threshold (Threshold), acc (Accuracy), err (Error rate),\n     * fpr (False positive rate), tpr (True positive rate), fnr (False negative rate), tnr (True negative rate), ppv (Positive predictive value),\n     * npv (Negative predictive value), pcfall (Prediction-conditioned fallout), pcmiss (Prediction-conditioned miss), lift (Lift value), rpp (Rate of positive predictions), rnp (Rate of negative predictions)\n     *\n     * @param measure - The short name of the measure\n     *\n     * @return [number]\n     */\n    getMeasure(measure) {\n        if (typeof measure !== 'string') {\n            throw new Error('No measure specified');\n        }\n        if (!measures[measure]) {\n            throw new Error(`The specified measure (${measure}) does not exist`);\n        }\n        return measures[measure](this);\n    }\n\n    /**\n     * Returns the area under the ROC curve\n     */\n    getAURC() {\n        const l = this.cutoffs.length;\n        const x = new Array(l);\n        const y = new Array(l);\n        for (var i = 0; i < l; i++) {\n            x[i] = this.fp[i] / this.nNeg;\n            y[i] = this.tp[i] / this.nPos;\n        }\n        var auc = 0;\n        for (i = 1; i < l; i++) {\n            auc += 0.5 * (x[i] - x[i - 1]) * (y[i] + y[i - 1]);\n        }\n        return auc;\n    }\n\n    /**\n     * Returns the area under the DET curve\n     */\n    getAUDC() {\n        const l = this.cutoffs.length;\n        const x = new Array(l);\n        const y = new Array(l);\n        for (var i = 0; i < l; i++) {\n            x[i] = this.fn[i] / this.nPos;\n            y[i] = this.fp[i] / this.nNeg;\n        }\n        var auc = 0;\n        for (i = 1; i < l; i++) {\n            auc += 0.5 * (x[i] + x[i - 1]) * (y[i] - y[i - 1]);\n        }\n        return auc;\n    }\n\n    getDistribution(options) {\n        options = options || {};\n        var cutLength = this.cutoffs.length;\n        var cutLow = options.xMin || Math.floor(this.cutoffs[cutLength - 1] * 100) / 100;\n        var cutHigh = options.xMax || Math.ceil(this.cutoffs[1] * 100) / 100;\n        var interval = options.interval || Math.floor(((cutHigh - cutLow) / 20 * 10000000) - 1) / 10000000; // Trick to avoid the precision problem of float numbers\n\n        var xLabels = [];\n        var interValues = [];\n        var intraValues = [];\n        var interCumPercent = [];\n        var intraCumPercent = [];\n\n        var nTP = this.tp[cutLength - 1], currentTP = 0;\n        var nFP = this.fp[cutLength - 1], currentFP = 0;\n\n        for (var i = cutLow, j = (cutLength - 1); i <= cutHigh; i += interval) {\n            while (this.cutoffs[j] < i)\n                j--;\n\n            xLabels.push(i);\n\n            var thisTP = nTP - currentTP - this.tp[j];\n            var thisFP = nFP - currentFP - this.fp[j];\n\n            currentTP += thisTP;\n            currentFP += thisFP;\n\n            interValues.push(thisFP);\n            intraValues.push(thisTP);\n\n            interCumPercent.push(100 - (nFP - this.fp[j]) / nFP * 100);\n            intraCumPercent.push(100 - (nTP - this.tp[j]) / nTP * 100);\n        }\n\n        return {\n            xLabels: xLabels,\n            interValues: interValues,\n            intraValues: intraValues,\n            interCumPercent: interCumPercent,\n            intraCumPercent: intraCumPercent\n        };\n    }\n}\n\nPerformance.names = {\n    acc: 'Accuracy',\n    err: 'Error rate',\n    fpr: 'False positive rate',\n    tpr: 'True positive rate',\n    fnr: 'False negative rate',\n    tnr: 'True negative rate',\n    ppv: 'Positive predictive value',\n    npv: 'Negative predictive value',\n    pcfall: 'Prediction-conditioned fallout',\n    pcmiss: 'Prediction-conditioned miss',\n    lift: 'Lift value',\n    rpp: 'Rate of positive predictions',\n    rnp: 'Rate of negative predictions',\n    threshold: 'Threshold'\n};\n\nmodule.exports = Performance;\n","'use strict';\n\n// Accuracy\nexports.acc = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.tn[i] + pred.tp[i]) / (l - 1);\n    }\n    return result;\n};\n\n// Error rate\nexports.err = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.fp[i] / (l - 1));\n    }\n    return result;\n};\n\n// False positive rate\nexports.fpr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.fp[i] / pred.nNeg;\n    }\n    return result;\n};\n\n// True positive rate\nexports.tpr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.tp[i] / pred.nPos;\n    }\n    return result;\n};\n\n// False negative rate\nexports.fnr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.fn[i] / pred.nPos;\n    }\n    return result;\n};\n\n// True negative rate\nexports.tnr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.tn[i] / pred.nNeg;\n    }\n    return result;\n};\n\n// Positive predictive value\nexports.ppv = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fp[i] + pred.tp[i] !== 0) ? (pred.tp[i] / (pred.fp[i] + pred.tp[i])) : 0;\n    }\n    return result;\n};\n\n// Negative predictive value\nexports.npv = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.tn[i] !== 0) ? (pred.tn[i] / (pred.fn[i] + pred.tn[i])) : 0;\n    }\n    return result;\n};\n\n// Prediction conditioned fallout\nexports.pcfall = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fp[i] + pred.tp[i] !== 0) ? 1 - (pred.tp[i] / (pred.fp[i] + pred.tp[i])) : 1;\n    }\n    return result;\n};\n\n// Prediction conditioned miss\nexports.pcmiss = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.tn[i] !== 0) ? 1 - (pred.tn[i] / (pred.fn[i] + pred.tn[i])) : 1;\n    }\n    return result;\n};\n\n// Lift value\nexports.lift = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.nPosPred[i] !== 0) ? ((pred.tp[i] / pred.nPos) / (pred.nPosPred[i] / pred.nSamples)) : 0;\n    }\n    return result;\n};\n\n// Rate of positive predictions\nexports.rpp = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.nPosPred[i] / pred.nSamples;\n    }\n    return result;\n};\n\n// Rate of negative predictions\nexports.rnp = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.nNegPred[i] / pred.nSamples;\n    }\n    return result;\n};\n\n// Threshold\nexports.threshold = pred => {\n    const clone = pred.cutoffs.slice();\n    clone[0] = clone[1]; // Remove the infinite value\n    return clone;\n};\n","'use strict';\n\nvar matrixLib = require('ml-matrix');\nvar Matrix = matrixLib.Matrix;\nvar inverse = matrixLib.inverse;\nvar padArray = require('ml-pad-array');\nvar extend = require('extend');\n\nvar defaultOptions = {\n    windowSize: 5,\n    derivative: 1,\n    polynomial: 2,\n    pad: 'none',\n    padValue: 'replicate'\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nfunction SavitzkyGolay (data, h, options) {\n    options = extend({}, defaultOptions, options);\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n        throw new RangeError('Invalid window size (should be odd and at least 5 integer number)');\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n\n    var C, norm;\n    var step = Math.floor(options.windowSize / 2);\n\n    if (options.pad === 'pre') {\n        data = padArray(data, {size: step, value: options.padValue});\n    }\n\n    var ans =  new Array(data.length - 2*step);\n\n    if ((options.windowSize === 5) && (options.polynomial === 2) && ((options.derivative === 1) || (options.derivative === 2))) {\n        if (options.derivative === 1) {\n            C = [-2,-1,0,1,2];\n            norm = 10;\n        }\n        else {\n            C = [2, -1, -2, -1, 2];\n            norm = 7;\n        }\n    }\n    else {\n        var J = Matrix.ones(options.windowSize, options.polynomial + 1);\n        var inic = -(options.windowSize - 1) / 2;\n        for (var i = 0; i < J.length; i++) {\n            for (var j = 0; j < J[i].length; j++) {\n                if ((inic + 1 !== 0) || (j !== 0))\n                    J[i][j] = Math.pow((inic + i), j);\n            }\n        }\n        var Jtranspose = J.transposeView();\n        var Jinv = inverse(Jtranspose.mmul(J));\n        C = Jinv.mmul(Jtranspose);\n        C = C[options.derivative];\n        norm = 1;\n    }\n    var det = norm * Math.pow(h, options.derivative);\n    for (var k = step; k < (data.length - step); k++) {\n        var d = 0;\n        for (var l = 0; l < C.length; l++)\n            d += C[l] * data[l + k - step] / det;\n        ans[k - step] = d;\n    }\n\n    if (options.pad === 'post') {\n        ans = padArray(ans, {size: step, value: options.padValue});\n    }\n\n    return ans;\n}\n\nmodule.exports = SavitzkyGolay;\n","//Code translate from Pascal source in http://pubs.acs.org/doi/pdf/10.1021/ac00205a007\nvar extend = require('extend');\nvar stat = require('ml-stat');\n\nvar defaultOptions = {\n    windowSize: 9,\n    derivative: 0,\n    polynomial: 3,\n};\n\n\nfunction SavitzkyGolay(data, h, options) {\n    options = extend({}, defaultOptions, options);\n\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n            throw new RangeError('Invalid window size (should be odd and at least 5 integer number)')\n\n\n    if (options.windowSize>data.length)\n        throw new RangeError('Window size is higher than the data length '+options.windowSize+\">\"+data.length);\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n    if (options.polynomial >= 6)\n        console.warn('You should not use polynomial grade higher than 5 if you are' +\n            ' not sure that your data arises from such a model. Possible polynomial oscillation problems');\n\n    var windowSize = options.windowSize;\n\n    var half = Math.floor(windowSize/2);\n    var np = data.length;\n    var ans = new Array(np);\n    var weights = fullWeights(windowSize,options.polynomial,options.derivative);\n    var hs = 0;\n    var constantH = true;\n    if( Object.prototype.toString.call( h ) === '[object Array]' ) {\n        constantH = false;\n    }\n    else{\n        hs = Math.pow(h, options.derivative);\n    }\n    //console.log(\"Constant h: \"+constantH);\n    //For the borders\n    for(var i=0;i<half;i++){\n        var wg1=weights[half-i-1];\n        var wg2=weights[half+i+1];\n        var d1 = 0,d2=0;\n        for (var l = 0; l < windowSize; l++){\n            d1 += wg1[l] * data[l];\n            d2 += wg2[l] * data[np-windowSize+l-1];\n        }\n        if(constantH){\n            ans[half-i-1] = d1/hs;\n            ans[np-half+i] = d2/hs;\n        }\n        else{\n            hs = getHs(h,half-i-1,half, options.derivative);\n            ans[half-i-1] = d1/hs;\n            hs = getHs(h,np-half+i,half, options.derivative);\n            ans[np-half+i] = d2/hs;\n        }\n    }\n    //For the internal points\n    var wg = weights[half];\n    for(var i=windowSize;i<np+1;i++){\n        var d = 0;\n        for (var l = 0; l < windowSize; l++)\n            d += wg[l] * data[l+i-windowSize];\n        if(!constantH)\n            hs = getHs(h,i-half-1,half, options.derivative);\n        ans[i-half-1] = d/hs;\n    }\n    return ans;\n}\n\nfunction getHs(h,center,half,derivative){\n    var hs = 0;\n    var count = 0;\n    for(var i=center-half;i<center+half;i++){\n        if(i>=0 && i < h.length-1){\n            hs+= (h[i+1]-h[i]);\n            count++;\n        }\n    }\n    return Math.pow(hs/count,derivative);\n}\n\nfunction GramPoly(i,m,k,s){\n    var Grampoly = 0;\n    if(k>0){\n        Grampoly = (4*k-2)/(k*(2*m-k+1))*(i*GramPoly(i,m,k-1,s) +\n            s*GramPoly(i,m,k-1,s-1)) - ((k-1)*(2*m+k))/(k*(2*m-k+1))*GramPoly(i,m,k-2,s);\n    }\n    else{\n        if(k==0&&s==0){\n            Grampoly=1;\n        }\n        else{\n            Grampoly=0;\n        }\n    }\n    //console.log(Grampoly);\n    return Grampoly;\n}\n\nfunction GenFact(a,b){\n    var gf=1;\n    if(a>=b){\n        for(var j=a-b+1;j<=a;j++){\n            gf*=j;\n        }\n    }\n    return gf;\n}\n\nfunction Weight(i,t,m,n,s){\n    var sum=0;\n    for(var k=0;k<=n;k++){\n        //console.log(k);\n        sum+=(2*k+1)*(GenFact(2*m,k)/GenFact(2*m+k+1,k+1))*GramPoly(i,m,k,0)*GramPoly(t,m,k,s)\n    }\n    return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m,n,s){\n    var weights = new Array(m);\n    var np = Math.floor(m/2);\n    for(var t=-np;t<=np;t++){\n        weights[t+np] = new Array(m);\n        for(var j=-np;j<=np;j++){\n            weights[t+np][j+np]=Weight(j,t,np,n,s);\n        }\n    }\n    return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\nmodule.exports = SavitzkyGolay;\n \n","'use strict';\n\nvar eightBits = require('./creator');\n\n/**\n * Count the number of true values in an array\n * @param {Array} arr\n * @return {number}\n */\nfunction count(arr) {\n    var c = 0;\n    for (var i = 0; i < arr.length; i++) {\n        c += eightBits[arr[i] & 0xff] + eightBits[(arr[i] >> 8) & 0xff] + eightBits[(arr[i] >> 16) & 0xff] + eightBits[(arr[i] >> 24) & 0xff];\n    }\n    return c;\n}\n\n/**\n * Logical AND operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction and(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] & arr2[i];\n    return ans;\n}\n\n/**\n * Logical OR operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction or(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] | arr2[i];\n    return ans;\n}\n\n/**\n * Logical XOR operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction xor(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] ^ arr2[i];\n    return ans;\n}\n\n/**\n * Logical NOT operation\n * @param {Array} arr\n * @return {Array}\n */\nfunction not(arr) {\n    var ans = new Array(arr.length);\n    for (var i = 0; i < ans.length; i++)\n        ans[i] = ~arr[i];\n    return ans;\n}\n\n/**\n * Gets the n value of array arr\n * @param {Array} arr\n * @param {number} n\n * @return {boolean}\n */\nfunction getBit(arr, n) {\n    var index = n >> 5; // Same as Math.floor(n/32)\n    var mask = 1 << (31 - n % 32);\n    return Boolean(arr[index] & mask);\n}\n\n/**\n * Sets the n value of array arr to the value val\n * @param {Array} arr\n * @param {number} n\n * @param {boolean} val\n * @return {Array}\n */\nfunction setBit(arr, n, val) {\n    var index = n >> 5; // Same as Math.floor(n/32)\n    var mask = 1 << (31 - n % 32);\n    if (val)\n        arr[index] = mask | arr[index];\n    else\n        arr[index] = ~mask & arr[index];\n    return arr;\n}\n\n/**\n * Translates an array of numbers to a string of bits\n * @param {Array} arr\n * @returns {string}\n */\nfunction toBinaryString(arr) {\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        var obj = (arr[i] >>> 0).toString(2);\n        str += '00000000000000000000000000000000'.substr(obj.length) + obj;\n    }\n    return str;\n}\n\n/**\n * Creates an array of numbers based on a string of bits\n * @param {string} str\n * @returns {Array}\n */\nfunction parseBinaryString(str) {\n    var len = str.length / 32;\n    var ans = new Array(len);\n    for (var i = 0; i < len; i++) {\n        ans[i] = parseInt(str.substr(i*32, 32), 2) | 0;\n    }\n    return ans;\n}\n\n/**\n * Translates an array of numbers to a hex string\n * @param {Array} arr\n * @returns {string}\n */\nfunction toHexString(arr) {\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        var obj = (arr[i] >>> 0).toString(16);\n        str += '00000000'.substr(obj.length) + obj;\n    }\n    return str;\n}\n\n/**\n * Creates an array of numbers based on a hex string\n * @param {string} str\n * @returns {Array}\n */\nfunction parseHexString(str) {\n    var len = str.length / 8;\n    var ans = new Array(len);\n    for (var i = 0; i < len; i++) {\n        ans[i] = parseInt(str.substr(i*8, 8), 16) | 0;\n    }\n    return ans;\n}\n\n/**\n * Creates a human readable string of the array\n * @param {Array} arr\n * @returns {string}\n */\nfunction toDebug(arr) {\n    var binary = toBinaryString(arr);\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        str += '0000'.substr((i * 32).toString(16).length) + (i * 32).toString(16) + ':';\n        for (var j = 0; j < 32; j += 4) {\n            str += ' ' + binary.substr(i * 32 + j, 4);\n        }\n        if (i < arr.length - 1) str += '\\n';\n    }\n    return str\n}\n\nmodule.exports = {\n    count: count,\n    and: and,\n    or: or,\n    xor: xor,\n    not: not,\n    getBit: getBit,\n    setBit: setBit,\n    toBinaryString: toBinaryString,\n    parseBinaryString: parseBinaryString,\n    toHexString: toHexString,\n    parseHexString: parseHexString,\n    toDebug: toDebug\n};\n","// auxiliary file to create the 256 look at table elements\n\nvar ans = new Array(256);\nfor (var i = 0; i < 256; i++) {\n    var num = i;\n    var c = 0;\n    while (num) {\n        num = num & (num - 1);\n        c++;\n    }\n    ans[i] = c;\n}\n\nmodule.exports = ans;","'use strict';\n\nmodule.exports = exports = require('./ArrayUtils');\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for (var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for (var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for (i = 0; i < array.length; i += dimensions) {\n        for (var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for (var i = 0; i < coordMatrix[0].length; ++i) {\n        for (var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for (var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for (var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for (var i = 0; i < points.length; ++i) {\n        for (var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if (firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options = {}) {\n    const {\n        min,\n        max\n    } = options;\n\n    var y = options.inPlace ? input : (new Array(input.length));\n    var minMax = Stat.minMax(input);\n\n    if (typeof max === 'number') {\n        if (typeof min === 'number') {\n            let factor = (max - min) / (minMax.max - minMax.min);\n            for (let i = 0; i < y.length; i++) {\n                y[i] = (input[i] - minMax.min) * factor + min;\n            }\n        } else if (minMax.max !== 0) {\n            let factor = max / minMax.max;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n        } else {\n            options.min = minMax.min;\n            y = scale(input, options);\n        }\n    } else if (typeof min === 'number') {\n        if (minMax.min !== 0) {\n            let factor = min / minMax.min;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n\n        } else {\n            options.max = minMax.max;\n            y = scale(input, options);\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale: scale\n};\n\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options = {}) {\n    var xLength = x.length;\n    if (x.length > 1 && x[0] > x[1]) {\n        x = x.slice().reverse();\n        y = y.slice().reverse();\n    }\n\n    var {\n        from = x[0],\n        to = x[xLength - 1],\n        variant = 'smooth',\n        numberOfPoints = 100\n    } = options;\n\n    if (xLength !== y.length) {\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n    }\n\n    if (typeof from !== 'number' || isNaN(from)) {\n        throw new RangeError(\"'from' option must be a number\");\n    }\n\n    if (typeof to !== 'number' || isNaN(to)) {\n        throw new RangeError(\"'to' option must be a number\");\n    }\n\n    var reverse = from > to;\n    if (reverse) {\n        [from, to] = [to, from];\n    }\n\n    if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n        throw new RangeError(\"'numberOfPoints' option must be a number\");\n    }\n    if (numberOfPoints < 1) {\n        throw new RangeError('the number of points must be at least 1');\n    }\n\n    var output = variant === 'slot' ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n    // Init main variables\n    var min = from - halfStep;\n    var max = from + halfStep;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while (true) {\n\n        if (previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j++] = (sumAtMax - sumAtMin) / step;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope * previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while (true) {\n        if (previousX >= nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if (backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if (previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n            currentPoints--;\n        }\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;\n","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mode of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction mode(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = 0;\n  var maxCount = 0;\n  var count = 0;\n  var counts = {};\n\n  for (var i = 0; i < input.length; ++i) {\n    var element = input[i];\n    count = counts[element];\n\n    if (count) {\n      counts[element]++;\n      count++;\n    } else {\n      counts[element] = count = 1;\n    }\n\n    if (count > maxCount) {\n      maxCount = count;\n      maxValue = input[i];\n    }\n  }\n\n  return maxValue;\n}\n\nexport default mode;\n","/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [algorithm='absolute']\n * @return {number}\n */\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm;\n\n  if (!Array.isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      var sum = absoluteSum(input);\n      if (sum === 0) return input.slice(0);\n      return input.map(function (element) {\n        return element / sum;\n      });\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sum = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sum += Math.abs(input[i]);\n  }\n\n  return sum;\n}\n\nexport default norm;\n","import variance from 'ml-array-variance';\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {object} [options]\n * @param {boolean} [options.unbiased = true] - if true, divide by (n-1); if false, divide by n.\n * @param {number} [options.mean = arrayMean] - precalculated mean, if any.\n * @return {number}\n */\n\nfunction standardDeviation(values) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Math.sqrt(variance(values, options));\n}\n\nexport default standardDeviation;\n","/**\n * Merge abscissa values if the ordinate value is in a list of centroids\n * @param {object} originalPoints\n * @param {Array<number>} originalPoints.x\n * @param {Array<number>} originalPoints.y\n * @param {Array<number>} centroids\n * @param {object} [options]\n * @param {number} [options.window = 0.01] - has to be a positive number\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function mergeByCentroids(\n  originalPoints,\n  centroids,\n  options = {}\n) {\n  const { window = 0.01 } = options;\n\n  var mergedPoints = {\n    x: centroids.slice(),\n    y: new Array(centroids.length).fill(0)\n  };\n\n  var originalIndex = 0;\n  var mergedIndex = 0;\n  while (\n    originalIndex < originalPoints.x.length &&\n    mergedIndex < centroids.length\n  ) {\n    var diff = originalPoints.x[originalIndex] - centroids[mergedIndex];\n    if (Math.abs(diff) < window) {\n      mergedPoints.y[mergedIndex] += originalPoints.y[originalIndex++];\n    } else if (diff < 0) {\n      originalIndex++;\n    } else {\n      mergedIndex++;\n    }\n  }\n\n  return mergedPoints;\n}\n","import binarySearch from 'binary-search';\nimport { asc, desc } from 'num-sort';\n\n/**\n *\n * @param {object} points\n * @param {Array<number>} originalPoints.x\n * @param {Array<number>} originalPoints.y\n * @param {*} options\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function closestX(points, options) {\n  const { x, y } = points;\n  const { target = x[0], reverse = false } = options;\n\n  let index;\n  if (reverse) {\n    index = binarySearch(x, target, desc);\n  } else {\n    index = binarySearch(x, target, asc);\n  }\n\n  if (index >= 0) {\n    return {\n      x: x[index],\n      y: y[index]\n    };\n  } else {\n    index = ~index;\n    if (\n      (index !== 0 && Math.abs(x[index] - target) > 0.5) ||\n      index === x.length\n    ) {\n      return {\n        x: x[index - 1],\n        y: y[index - 1]\n      };\n    } else {\n      return {\n        x: x[index],\n        y: y[index]\n      };\n    }\n  }\n}\n","/**\n * Merge abscissas values on similar ordinates and weight the group of abscissas\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {number} [options.groupWidth = 0.001] - window for abscissas to merge\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function maxMerge(points, options = {}) {\n  const { x, y } = points;\n  const { groupWidth = 0.001 } = options;\n\n  var merged = { x: [], y: [] };\n  var maxAbscissa = { x: [], y: [] };\n  var size = 0;\n  var index = 0;\n\n  while (index < x.length) {\n    if (size === 0 || x[index] - merged.x[size - 1] > groupWidth) {\n      maxAbscissa.x.push(x[index]);\n      maxAbscissa.y.push(y[index]);\n      merged.x.push(x[index]);\n      merged.y.push(y[index]);\n      index++;\n      size++;\n    } else {\n      if (y[index] > maxAbscissa.y[size - 1]) {\n        maxAbscissa.x[size - 1] = x[index];\n        maxAbscissa.y[size - 1] = y[index];\n      }\n      merged.x[size - 1] = x[index];\n      merged.y[size - 1] += y[index];\n      index++;\n    }\n  }\n\n  merged.x = maxAbscissa.x.slice();\n\n  return merged;\n}\n","import binarySearch from 'binary-search';\nimport { asc, desc } from 'num-sort';\n\n/**\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {object} [options.from = {index: 0}]\n * @param {object} [options.to = {index: x.length-1}]\n * @param {boolean} [options.reverse = false]\n * @return {{index: number, value: number}}\n */\nexport default function maxY(points, options = {}) {\n  const { x, y } = points;\n  let {\n    from = { index: 0 },\n    to = { index: x.length },\n    reverse = false\n  } = options;\n\n  if (from.value !== undefined && from.index === undefined) {\n    from.index = calculateIndex(from.value, x, reverse);\n  }\n\n  if (to.value !== undefined && to.index === undefined) {\n    to.index = calculateIndex(to.value, x, reverse);\n  }\n\n  var currentMax = Number.MIN_VALUE;\n  var currentIndex;\n  for (var i = from.index; i < to.index; i++) {\n    if (currentMax < y[i]) {\n      currentMax = y[i];\n      currentIndex = i;\n    }\n  }\n\n  return {\n    index: currentIndex,\n    value: currentMax\n  };\n}\n\n/**\n * @param {number} value\n * @param {Array<number>} x\n * @param {boolean} reverse\n * @return {number} index of the value in the array\n */\nfunction calculateIndex(value, x, reverse) {\n  let index;\n  if (reverse) {\n    index = binarySearch(x, value, desc);\n  } else {\n    index = binarySearch(x, value, asc);\n  }\n\n  if (index < 0) {\n    throw new Error(`the value ${value} doesn't belongs to the abscissa value`);\n  }\n\n  return index;\n}\n","export default function sortX(points, options = {}) {\n  const { x, y } = points;\n  const { reverse = false } = options;\n\n  var sortFunc;\n  if (!reverse) {\n    sortFunc = (a, b) => a.x - b.x;\n  } else {\n    sortFunc = (a, b) => b.x - a.x;\n  }\n\n  var grouped = x\n    .map((val, index) => ({\n      x: val,\n      y: y[index]\n    }))\n    .sort(sortFunc);\n\n  var response = { x: x.slice(), y: y.slice() };\n  for (var i = 0; i < x.length; i++) {\n    response.x[i] = grouped[i].x;\n    response.y[i] = grouped[i].y;\n  }\n\n  return response;\n}\n","\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","/**\n * Merge abscissas values on similar ordinates and weight the group of abscissas\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {number} [options.groupWidth = 0.001] - window for abscissas to merge\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function weightedMerge(points, options = {}) {\n  const { x, y } = points;\n  const { groupWidth = 0.001 } = options;\n\n  var merged = { x: [], y: [] };\n  var weightedAbscissa = { x: [], y: [] };\n  var size = 0;\n  var index = 0;\n\n  while (index < x.length) {\n    if (size === 0 || x[index] - merged.x[size - 1] > groupWidth) {\n      weightedAbscissa.x.push(x[index] * y[index]);\n      weightedAbscissa.y.push(y[index]);\n      merged.x.push(x[index]);\n      merged.y.push(y[index]);\n      index++;\n      size++;\n    } else {\n      weightedAbscissa.x[size - 1] += x[index] * y[index];\n      weightedAbscissa.y[size - 1] += y[index];\n      merged.x[size - 1] = x[index];\n      merged.y[size - 1] += y[index];\n      index++;\n    }\n  }\n\n  for (var i = 0; i < merged.x.length; i++) {\n    merged.x[i] = weightedAbscissa.x[i] / weightedAbscissa.y[i];\n  }\n\n  return merged;\n}\n","export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n","export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n","'use strict';\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nconst defaultOptions = {\n    distanceFunction: squaredEuclidean\n};\nexport default function nearestVector(listVectors, vector, options = defaultOptions) {\n    const distanceFunction = options.distanceFunction || defaultOptions.distanceFunction;\n    const similarityFunction = options.similarityFunction || defaultOptions.similarityFunction;\n    let vectorIndex = -1;\n    if (typeof similarityFunction === 'function') {\n        // maximum similarity\n        let maxSim = Number.MIN_VALUE;\n        for (let j = 0; j < listVectors.length; j++) {\n            const sim = similarityFunction(vector, listVectors[j]);\n            if (sim > maxSim) {\n                maxSim = sim;\n                vectorIndex = j;\n            }\n        }\n    }\n    else if (typeof distanceFunction === 'function') {\n        // minimum distance\n        let minDist = Number.MAX_VALUE;\n        for (let i = 0; i < listVectors.length; i++) {\n            const dist = distanceFunction(vector, listVectors[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                vectorIndex = i;\n            }\n        }\n    }\n    else {\n        throw new Error(\"A similarity or distance function it's required\");\n    }\n    return vectorIndex;\n}\nexport function findNearestVector(vectorList, vector, options = defaultOptions) {\n    const index = nearestVector(vectorList, vector, options);\n    return vectorList[index];\n}\n","import nearestVector from 'ml-nearest-vector';\n\n/**\n * Calculates the distance matrix for a given array of points\n * @ignore\n * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n * @param {function} distance - Distance function to use between the points\n * @return {Array<Array<number>>} - matrix with the distance values\n */\nexport function calculateDistanceMatrix(data, distance) {\n  var distanceMatrix = new Array(data.length);\n  for (var i = 0; i < data.length; ++i) {\n    for (var j = i; j < data.length; ++j) {\n      if (!distanceMatrix[i]) {\n        distanceMatrix[i] = new Array(data.length);\n      }\n      if (!distanceMatrix[j]) {\n        distanceMatrix[j] = new Array(data.length);\n      }\n      const dist = distance(data[i], data[j]);\n      distanceMatrix[i][j] = dist;\n      distanceMatrix[j][i] = dist;\n    }\n  }\n  return distanceMatrix;\n}\n\n/**\n * Updates the cluster identifier based in the new data\n * @ignore\n * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n * @param {Array<Array<number>>} centers - the K centers in format [x,y,z,...]\n * @param {Array <number>} clusterID - the cluster identifier for each data dot\n * @param {function} distance - Distance function to use between the points\n * @return {Array} the cluster identifier for each data dot\n */\nexport function updateClusterID(data, centers, clusterID, distance) {\n  for (var i = 0; i < data.length; i++) {\n    clusterID[i] = nearestVector(centers, data[i], {\n      distanceFunction: distance\n    });\n  }\n  return clusterID;\n}\n\n/**\n * Update the center values based in the new configurations of the clusters\n * @ignore\n * @param {Array<Array<number>>} prevCenters - Centroids from the previous iteration\n * @param {Array <Array <number>>} data - the [x,y,z,...] points to cluster\n * @param {Array <number>} clusterID - the cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @return {Array} he K centers in format [x,y,z,...]\n */\nexport function updateCenters(prevCenters, data, clusterID, K) {\n  const nDim = data[0].length;\n\n  // copy previous centers\n  var centers = new Array(K);\n  var centersLen = new Array(K);\n  for (var i = 0; i < K; i++) {\n    centers[i] = new Array(nDim);\n    centersLen[i] = 0;\n    for (var j = 0; j < nDim; j++) {\n      centers[i][j] = 0;\n    }\n  }\n\n  // add the value for all dimensions of the point\n  for (var l = 0; l < data.length; l++) {\n    centersLen[clusterID[l]]++;\n    for (var dim = 0; dim < nDim; dim++) {\n      centers[clusterID[l]][dim] += data[l][dim];\n    }\n  }\n\n  // divides by length\n  for (var id = 0; id < K; id++) {\n    for (var d = 0; d < nDim; d++) {\n      if (centersLen[id]) {\n        centers[id][d] /= centersLen[id];\n      } else {\n        centers[id][d] = prevCenters[id][d];\n      }\n    }\n  }\n  return centers;\n}\n\n/**\n * The centers have moved more than the tolerance value?\n * @ignore\n * @param {Array<Array<number>>} centers - the K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} oldCenters - the K old centers in format [x,y,z,...]\n * @param {function} distanceFunction - Distance function to use between the points\n * @param {number} tolerance - Allowed distance for the centroids to move\n * @return {boolean}\n */\nexport function hasConverged(centers, oldCenters, distanceFunction, tolerance) {\n  for (var i = 0; i < centers.length; i++) {\n    if (distanceFunction(centers[i], oldCenters[i]) > tolerance) {\n      return false;\n    }\n  }\n  return true;\n}\n","import Random from 'ml-random';\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nimport { Matrix } from 'ml-matrix';\n\n/**\n * Choose K different random points from the original data\n * @ignore\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - number of clusters\n * @param {number} seed - seed for random number generation\n * @return {Array<Array<number>>} - Initial random points\n */\nexport function random(data, K, seed) {\n  const random = new Random(seed);\n  return random.choice(data, { size: K });\n}\n\n/**\n * Chooses the most distant points to a first random pick\n * @ignore\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - number of clusters\n * @param {Array<Array<number>>} distanceMatrix - matrix with the distance values\n * @param {number} seed - seed for random number generation\n * @return {Array<Array<number>>} - Initial random points\n */\nexport function mostDistant(data, K, distanceMatrix, seed) {\n  const random = new Random(seed);\n  var ans = new Array(K);\n  // chooses a random point as initial cluster\n  ans[0] = Math.floor(random.random() * data.length);\n\n  if (K > 1) {\n    // chooses the more distant point\n    var maxDist = { dist: -1, index: -1 };\n    for (var l = 0; l < data.length; ++l) {\n      if (distanceMatrix[ans[0]][l] > maxDist.dist) {\n        maxDist.dist = distanceMatrix[ans[0]][l];\n        maxDist.index = l;\n      }\n    }\n    ans[1] = maxDist.index;\n\n    if (K > 2) {\n      // chooses the set of points that maximises the min distance\n      for (var k = 2; k < K; ++k) {\n        var center = { dist: -1, index: -1 };\n        for (var m = 0; m < data.length; ++m) {\n          // minimum distance to centers\n          var minDistCent = { dist: Number.MAX_VALUE, index: -1 };\n          for (var n = 0; n < k; ++n) {\n            if (\n              distanceMatrix[n][m] < minDistCent.dist &&\n              ans.indexOf(m) === -1\n            ) {\n              minDistCent = {\n                dist: distanceMatrix[n][m],\n                index: m\n              };\n            }\n          }\n\n          if (\n            minDistCent.dist !== Number.MAX_VALUE &&\n            minDistCent.dist > center.dist\n          ) {\n            center = Object.assign({}, minDistCent);\n          }\n        }\n\n        ans[k] = center.index;\n      }\n    }\n  }\n\n  return ans.map((index) => data[index]);\n}\n\n// Implementation inspired from scikit\nexport function kmeanspp(X, K, options = {}) {\n  X = new Matrix(X);\n  const nSamples = X.length;\n  const random = new Random(options.seed);\n  // Set the number of trials\n  const centers = [];\n  const localTrials = options.localTrials || 2 + Math.floor(Math.log(K));\n\n  // Pick the first center at random from the dataset\n  const firstCenterIdx = random.randInt(nSamples);\n  centers.push(X[firstCenterIdx].slice());\n\n  // Init closest distances\n  let closestDistSquared = [X.map((x) => squaredEuclidean(x, centers[0]))];\n  let cumSumClosestDistSquared = [cumSum(closestDistSquared[0])];\n  const factor = 1 / cumSumClosestDistSquared[0][nSamples - 1];\n  let probabilities = Matrix.mul(closestDistSquared, factor);\n\n  // Iterate over the remaining centers\n  for (let i = 1; i < K; i++) {\n    const candidateIdx = random.choice(nSamples, {\n      replace: true,\n      size: localTrials,\n      probabilities: probabilities[0]\n    });\n\n    const candidates = X.selection(candidateIdx, range(X[0].length));\n    const distanceToCandidates = euclidianDistances(candidates, X);\n\n    let bestCandidate;\n    let bestPot;\n    let bestDistSquared;\n\n    for (let j = 0; j < localTrials; j++) {\n      const newDistSquared = Matrix.min(closestDistSquared, [distanceToCandidates[j]]);\n      const newPot = newDistSquared.sum();\n      if (bestCandidate === undefined || newPot < bestPot) {\n        bestCandidate = candidateIdx[j];\n        bestPot = newPot;\n        bestDistSquared = newDistSquared;\n      }\n    }\n    centers[i] = X[bestCandidate].slice();\n    closestDistSquared = bestDistSquared;\n    cumSumClosestDistSquared = [cumSum(closestDistSquared[0])];\n    probabilities = Matrix.mul(\n      closestDistSquared,\n      1 / cumSumClosestDistSquared[0][nSamples - 1]\n    );\n  }\n  return centers;\n}\n\nfunction euclidianDistances(A, B) {\n  const result = new Matrix(A.length, B.length);\n  for (let i = 0; i < A.length; i++) {\n    for (let j = 0; j < B.length; j++) {\n      result.set(i, j, squaredEuclidean(A.getRow(i), B.getRow(j)));\n    }\n  }\n  return result;\n}\n\nfunction range(l) {\n  let r = [];\n  for (let i = 0; i < l; i++) {\n    r.push(i);\n  }\n  return r;\n}\n\nfunction cumSum(arr) {\n  let cumSum = [arr[0]];\n  for (let i = 1; i < arr.length; i++) {\n    cumSum[i] = cumSum[i - 1] + arr[i];\n  }\n  return cumSum;\n}\n","import { updateClusterID } from './utils';\n\nconst distanceSymbol = Symbol('distance');\n\nexport default class KMeansResult {\n  /**\n   * Result of the kmeans algorithm\n   * @param {Array<number>} clusters - the cluster identifier for each data dot\n   * @param {Array<Array<object>>} centroids - the K centers in format [x,y,z,...], the error and size of the cluster\n   * @param {boolean} converged - Converge criteria satisfied\n   * @param {number} iterations - Current number of iterations\n   * @param {function} distance - (*Private*) Distance function to use between the points\n   * @constructor\n   */\n  constructor(clusters, centroids, converged, iterations, distance) {\n    this.clusters = clusters;\n    this.centroids = centroids;\n    this.converged = converged;\n    this.iterations = iterations;\n    this[distanceSymbol] = distance;\n  }\n\n  /**\n   * Allows to compute for a new array of points their cluster id\n   * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n   * @return {Array<number>} - cluster id for each point\n   */\n  nearest(data) {\n    const clusterID = new Array(data.length);\n    const centroids = this.centroids.map(function (centroid) {\n      return centroid.centroid;\n    });\n    return updateClusterID(data, centroids, clusterID, this[distanceSymbol]);\n  }\n\n  /**\n   * Returns a KMeansResult with the error and size of the cluster\n   * @ignore\n   * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n   * @return {KMeansResult}\n   */\n  computeInformation(data) {\n    var enrichedCentroids = this.centroids.map(function (centroid) {\n      return {\n        centroid: centroid,\n        error: 0,\n        size: 0\n      };\n    });\n\n    for (var i = 0; i < data.length; i++) {\n      enrichedCentroids[this.clusters[i]].error += this[distanceSymbol](\n        data[i],\n        this.centroids[this.clusters[i]]\n      );\n      enrichedCentroids[this.clusters[i]].size++;\n    }\n\n    for (var j = 0; j < this.centroids.length; j++) {\n      if (enrichedCentroids[j].size) {\n        enrichedCentroids[j].error /= enrichedCentroids[j].size;\n      } else {\n        enrichedCentroids[j].error = null;\n      }\n    }\n\n    return new KMeansResult(\n      this.clusters,\n      enrichedCentroids,\n      this.converged,\n      this.iterations,\n      this[distanceSymbol]\n    );\n  }\n}\n","import { squaredEuclidean } from 'ml-distance-euclidean';\n\nimport {\n  updateClusterID,\n  updateCenters,\n  hasConverged,\n  calculateDistanceMatrix\n} from './utils';\nimport { mostDistant, random, kmeanspp } from './initialization';\nimport KMeansResult from './KMeansResult';\n\nconst defaultOptions = {\n  maxIterations: 100,\n  tolerance: 1e-6,\n  withIterations: false,\n  initialization: 'kmeans++',\n  distanceFunction: squaredEuclidean\n};\n\n/**\n * Each step operation for kmeans\n * @ignore\n * @param {Array<Array<number>>} centers - K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} data - Points [x,y,z,...] to cluster\n * @param {Array<number>} clusterID - Cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n * @param {number} iterations - Current number of iterations\n * @return {KMeansResult}\n */\nfunction step(centers, data, clusterID, K, options, iterations) {\n  clusterID = updateClusterID(\n    data,\n    centers,\n    clusterID,\n    options.distanceFunction\n  );\n  var newCenters = updateCenters(centers, data, clusterID, K);\n  var converged = hasConverged(\n    newCenters,\n    centers,\n    options.distanceFunction,\n    options.tolerance\n  );\n  return new KMeansResult(\n    clusterID,\n    newCenters,\n    converged,\n    iterations,\n    options.distanceFunction\n  );\n}\n\n/**\n * Generator version for the algorithm\n * @ignore\n * @param {Array<Array<number>>} centers - K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} data - Points [x,y,z,...] to cluster\n * @param {Array<number>} clusterID - Cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n */\nfunction* kmeansGenerator(centers, data, clusterID, K, options) {\n  var converged = false;\n  var stepNumber = 0;\n  var stepResult;\n  while (!converged && stepNumber < options.maxIterations) {\n    stepResult = step(centers, data, clusterID, K, options, ++stepNumber);\n    yield stepResult.computeInformation(data);\n    converged = stepResult.converged;\n    centers = stepResult.centroids;\n  }\n}\n\n/**\n * K-means algorithm\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n * @param {number} [options.maxIterations = 100] - Maximum of iterations allowed\n * @param {number} [options.tolerance = 1e-6] - Error tolerance\n * @param {boolean} [options.withIterations = false] - Store clusters and centroids for each iteration\n * @param {function} [options.distanceFunction = squaredDistance] - Distance function to use between the points\n * @param {number} [options.seed] - Seed for random initialization.\n * @param {string|Array<Array<number>>} [options.initialization = 'kmeans++'] - K centers in format [x,y,z,...] or a method for initialize the data:\n *  * You can either specify your custom start centroids, or select one of the following initialization method:\n *  * `'kmeans++'` will use the kmeans++ method as described by http://ilpubs.stanford.edu:8090/778/1/2006-13.pdf\n *  * `'random'` will choose K random different values.\n *  * `'mostDistant'` will choose the more distant points to a first random pick\n * @return {KMeansResult} - Cluster identifier for each data dot and centroids with the following fields:\n *  * `'clusters'`: Array of indexes for the clusters.\n *  * `'centroids'`: Array with the resulting centroids.\n *  * `'iterations'`: Number of iterations that took to converge\n */\nexport default function kmeans(data, K, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  if (K <= 0 || K > data.length || !Number.isInteger(K)) {\n    throw new Error(\n      'K should be a positive integer smaller than the number of points'\n    );\n  }\n\n  var centers;\n  if (Array.isArray(options.initialization)) {\n    if (options.initialization.length !== K) {\n      throw new Error('The initial centers should have the same length as K');\n    } else {\n      centers = options.initialization;\n    }\n  } else {\n    switch (options.initialization) {\n      case 'kmeans++':\n        centers = kmeanspp(data, K, options);\n        break;\n      case 'random':\n        centers = random(data, K, options.seed);\n        break;\n      case 'mostDistant':\n        centers = mostDistant(\n          data,\n          K,\n          calculateDistanceMatrix(data, options.distanceFunction),\n          options.seed\n        );\n        break;\n      default:\n        throw new Error(\n          `Unknown initialization method: \"${options.initialization}\"`\n        );\n    }\n  }\n\n  // infinite loop until convergence\n  if (options.maxIterations === 0) {\n    options.maxIterations = Number.MAX_VALUE;\n  }\n\n  var clusterID = new Array(data.length);\n  if (options.withIterations) {\n    return kmeansGenerator(centers, data, clusterID, K, options);\n  } else {\n    var converged = false;\n    var stepNumber = 0;\n    var stepResult;\n    while (!converged && stepNumber < options.maxIterations) {\n      stepResult = step(centers, data, clusterID, K, options, ++stepNumber);\n      converged = stepResult.converged;\n      centers = stepResult.centroids;\n    }\n    return stepResult.computeInformation(data);\n  }\n}\n","import Random from 'random-js';\nimport Matrix from 'ml-matrix';\n\nexport function checkFloat(n) {\n  return n > 0.0 && n <= 1.0;\n}\n\n/**\n * Select n with replacement elements on the training set and values, where n is the size of the training set.\n * @ignore\n * @param {Matrix} trainingSet\n * @param {Array} trainingValue\n * @param {number} seed - seed for the random selection, must be a 32-bit integer.\n * @return {object} with new X and y.\n */\nexport function examplesBaggingWithReplacement(trainingSet, trainingValue, seed) {\n  var engine = Random.engines.mt19937();\n  var distribution = Random.integer(0, trainingSet.rows - 1);\n  if (seed === undefined) {\n    engine = engine.autoSeed();\n  } else if (Number.isInteger(seed)) {\n    engine = engine.seed(seed);\n  } else {\n    throw new RangeError(`Expected seed must be undefined or integer not ${seed}`);\n  }\n\n  var Xr = new Array(trainingSet.rows);\n  var yr = new Array(trainingSet.rows);\n\n  for (var i = 0; i < trainingSet.rows; ++i) {\n    var index = distribution(engine);\n    Xr[i] = trainingSet[index];\n    yr[i] = trainingValue[index];\n  }\n\n  return {\n    X: new Matrix(Xr),\n    y: yr\n  };\n}\n\n/**\n * selects n features from the training set with or without replacement, returns the new training set and the indexes used.\n * @ignore\n * @param {Matrix} trainingSet\n * @param {number} n - features.\n * @param {boolean} replacement\n * @param {number} seed - seed for the random selection, must be a 32-bit integer.\n * @return {object}\n */\nexport function featureBagging(trainingSet, n, replacement, seed) {\n  if (trainingSet.columns < n) {\n    throw new RangeError('N should be less or equal to the number of columns of X');\n  }\n\n  var distribution = Random.integer(0, trainingSet.columns - 1);\n  var engine = Random.engines.mt19937();\n  if (seed === undefined) {\n    engine = engine.autoSeed();\n  } else if (Number.isInteger(seed)) {\n    engine = engine.seed(seed);\n  } else {\n    throw new RangeError(`Expected seed must be undefined or integer not ${seed}`);\n  }\n\n  var toRet = new Matrix(trainingSet.rows, n);\n\n  if (replacement) {\n    var usedIndex = new Array(n);\n    for (var i = 0; i < n; ++i) {\n      var index = distribution(engine);\n      usedIndex[i] = index;\n      toRet.setColumn(i, trainingSet.getColumn(index));\n    }\n  } else {\n    usedIndex = new Set();\n    index = distribution(engine);\n    for (i = 0; i < n; ++i) {\n      while (usedIndex.has(index)) {\n        index = distribution(engine);\n      }\n      toRet.setColumn(i, trainingSet.getColumn(index));\n      usedIndex.add(index);\n    }\n    usedIndex = Array.from(usedIndex);\n  }\n\n  return {\n    X: toRet,\n    usedIndex: usedIndex\n  };\n}\n","import {\n  DecisionTreeClassifier as DTClassifier,\n  DecisionTreeRegression as DTRegression\n} from 'ml-cart';\nimport { Matrix, WrapperMatrix2D } from 'ml-matrix';\n\nimport * as Utils from './utils';\n\n/**\n * @class RandomForestBase\n */\nexport class RandomForestBase {\n  /**\n   * Create a new base random forest for a classifier or regression model.\n   * @constructor\n   * @param {object} options\n   * @param {number|String} [options.maxFeatures] - the number of features used on each estimator.\n   *        * if is an integer it selects maxFeatures elements over the sample features.\n   *        * if is a float between (0, 1), it takes the percentage of features.\n   * @param {boolean} [options.replacement] - use replacement over the sample features.\n   * @param {number} [options.seed] - seed for feature and samples selection, must be a 32-bit integer.\n   * @param {number} [options.nEstimators] - number of estimator to use.\n   * @param {object} [options.treeOptions] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n   * @param {boolean} [options.isClassifier] - boolean to check if is a classifier or regression model (used by subclasses).\n   * @param {boolean} [options.useSampleBagging] - use bagging over training samples.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.replacement = model.replacement;\n      this.maxFeatures = model.maxFeatures;\n      this.nEstimators = model.nEstimators;\n      this.treeOptions = model.treeOptions;\n      this.isClassifier = model.isClassifier;\n      this.seed = model.seed;\n      this.n = model.n;\n      this.indexes = model.indexes;\n      this.useSampleBagging = model.useSampleBagging;\n\n      var Estimator = this.isClassifier ? DTClassifier : DTRegression;\n      this.estimators = model.estimators.map((est) => Estimator.load(est));\n    } else {\n      this.replacement = options.replacement;\n      this.maxFeatures = options.maxFeatures;\n      this.nEstimators = options.nEstimators;\n      this.treeOptions = options.treeOptions;\n      this.isClassifier = options.isClassifier;\n      this.seed = options.seed;\n      this.useSampleBagging = options.useSampleBagging;\n    }\n  }\n\n  /**\n   * Train the decision tree with the given training set and labels.\n   * @param {Matrix|Array} trainingSet\n   * @param {Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n\n    this.maxFeatures = this.maxFeatures || trainingSet.columns;\n\n    if (Utils.checkFloat(this.maxFeatures)) {\n      this.n = Math.floor(trainingSet.columns * this.maxFeatures);\n    } else if (Number.isInteger(this.maxFeatures)) {\n      if (this.maxFeatures > trainingSet.columns) {\n        throw new RangeError(`The maxFeatures parameter should be less than ${trainingSet.columns}`);\n      } else {\n        this.n = this.maxFeatures;\n      }\n    } else {\n      throw new RangeError(`Cannot process the maxFeatures parameter ${this.maxFeatures}`);\n    }\n\n\n    if (this.isClassifier) {\n      var Estimator = DTClassifier;\n    } else {\n      Estimator = DTRegression;\n    }\n\n    this.estimators = new Array(this.nEstimators);\n    this.indexes = new Array(this.nEstimators);\n\n    for (var i = 0; i < this.nEstimators; ++i) {\n      var res = this.useSampleBagging ? Utils.examplesBaggingWithReplacement(trainingSet, trainingValues, this.seed) : { X: trainingSet, y: trainingValues };\n      var X = res.X;\n      var y = res.y;\n\n      res = Utils.featureBagging(X, this.n, this.replacement, this.seed);\n      X = res.X;\n\n      this.indexes[i] = res.usedIndex;\n      this.estimators[i] = new Estimator(this.treeOptions);\n      this.estimators[i].train(X, y);\n    }\n  }\n\n  /**\n   * Method that returns the way the algorithm generates the predictions, for example, in classification\n   * you can return the mode of all predictions retrieved by the trees, or in case of regression you can\n   * use the mean or the median.\n   * @abstract\n   * @param {Array} values - predictions of the estimators.\n   * @return {number} prediction.\n   */\n  // eslint-disable-next-line no-unused-vars\n  selection(values) {\n    throw new Error('Abstract method \\'selection\\' not implemented!');\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Matrix|Array} toPredict\n   * @return {Array} predictions\n   */\n  predict(toPredict) {\n    var predictionValues = new Array(this.nEstimators);\n    toPredict = Matrix.checkMatrix(toPredict);\n    for (var i = 0; i < this.nEstimators; ++i) {\n      var X = toPredict.columnSelectionView(this.indexes[i]); // get features for estimator\n      predictionValues[i] = this.estimators[i].predict(X);\n    }\n\n    predictionValues = new WrapperMatrix2D(predictionValues).transposeView();\n    var predictions = new Array(predictionValues.rows);\n    for (i = 0; i < predictionValues.rows; ++i) {\n      predictions[i] = this.selection(predictionValues.getRow(i));\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      indexes: this.indexes,\n      n: this.n,\n      replacement: this.replacement,\n      maxFeatures: this.maxFeatures,\n      nEstimators: this.nEstimators,\n      treeOptions: this.treeOptions,\n      isClassifier: this.isClassifier,\n      seed: this.seed,\n      estimators: this.estimators.map((est) => est.toJSON()),\n      useSampleBagging: this.useSampleBagging\n    };\n  }\n}\n","import { RandomForestBase } from './RandomForestBase';\n\nconst defaultOptions = {\n  maxFeatures: 1.0,\n  replacement: true,\n  nEstimators: 10,\n  seed: 42,\n  useSampleBagging: false\n};\n\n/**\n * @class RandomForestClassifier\n * @augments RandomForestBase\n */\nexport class RandomForestClassifier extends RandomForestBase {\n  /**\n     * Create a new base random forest for a classifier or regression model.\n     * @constructor\n     * @param {object} options\n     * @param {number} [options.maxFeatures=1.0] - the number of features used on each estimator.\n     *        * if is an integer it selects maxFeatures elements over the sample features.\n     *        * if is a float between (0, 1), it takes the percentage of features.\n     * @param {boolean} [options.replacement=true] - use replacement over the sample features.\n     * @param {number} [options.seed=42] - seed for feature and samples selection, must be a 32-bit integer.\n     * @param {number} [options.nEstimators=10] - number of estimator to use.\n     * @param {object} [options.treeOptions={}] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n     * @param {boolean} [options.useSampleBagging=false] - use bagging over training samples.\n     * @param {object} model - for load purposes.\n     */\n  constructor(options, model) {\n    if (options === true) {\n      super(true, model.baseModel);\n    } else {\n      options = Object.assign({}, defaultOptions, options);\n      options.isClassifier = true;\n      super(options);\n    }\n  }\n\n  /**\n     * retrieve the prediction given the selection method.\n     * @param {Array} values - predictions of the estimators.\n     * @return {number} prediction\n     */\n  selection(values) {\n    return mode(values);\n  }\n\n  /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n  toJSON() {\n    var baseModel = super.toJSON();\n    return {\n      baseModel: baseModel,\n      name: 'RFClassifier'\n    };\n  }\n\n  /**\n     * Load a Decision tree classifier with the given model.\n     * @param {object} model\n     * @return {RandomForestClassifier}\n     */\n  static load(model) {\n    if (model.name !== 'RFClassifier') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    return new RandomForestClassifier(true, model);\n  }\n}\n\n/**\n * Return the most repeated element on the array.\n * @param {Array} arr\n * @return {number} mode\n */\nfunction mode(arr) {\n  return arr.sort((a, b) =>\n    arr.filter((v) => v === a).length\n        - arr.filter((v) => v === b).length\n  ).pop();\n}\n","import arrayMean from 'ml-array-mean';\nimport arrayMedian from 'ml-array-median';\n\nimport { RandomForestBase } from './RandomForestBase';\n\nconst selectionMethods = {\n  mean: arrayMean,\n  median: arrayMedian\n};\n\nconst defaultOptions = {\n  maxFeatures: 1.0,\n  replacement: false,\n  nEstimators: 10,\n  treeOptions: {},\n  selectionMethod: 'mean',\n  seed: 42,\n  useSampleBagging: false\n};\n\n/**\n * @class RandomForestRegression\n * @augments RandomForestBase\n */\nexport class RandomForestRegression extends RandomForestBase {\n  /**\n     * Create a new base random forest for a classifier or regression model.\n     * @constructor\n     * @param {object} options\n     * @param {number} [options.maxFeatures=1.0] - the number of features used on each estimator.\n     *        * if is an integer it selects maxFeatures elements over the sample features.\n     *        * if is a float between (0, 1), it takes the percentage of features.\n     * @param {boolean} [options.replacement=true] - use replacement over the sample features.\n     * @param {number} [options.seed=42] - seed for feature and samples selection, must be a 32-bit integer.\n     * @param {number} [options.nEstimators=10] - number of estimator to use.\n     * @param {object} [options.treeOptions={}] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n     * @param {string} [options.selectionMethod=\"mean\"] - the way to calculate the prediction from estimators, \"mean\" and \"median\" are supported.\n     * @param {boolean} [options.useSampleBagging=false] - use bagging over training samples.\n     * @param {object} model - for load purposes.\n     */\n  constructor(options, model) {\n    if (options === true) {\n      super(true, model.baseModel);\n      this.selectionMethod = model.selectionMethod;\n    } else {\n      options = Object.assign({}, defaultOptions, options);\n\n      if (!(options.selectionMethod === 'mean' || options.selectionMethod === 'median')) {\n        throw new RangeError(`Unsupported selection method ${options.selectionMethod}`);\n      }\n\n      options.isClassifier = false;\n\n      super(options);\n      this.selectionMethod = options.selectionMethod;\n    }\n  }\n\n  /**\n     * retrieve the prediction given the selection method.\n     * @param {Array} values - predictions of the estimators.\n     * @return {number} prediction\n     */\n  selection(values) {\n    return selectionMethods[this.selectionMethod](values);\n  }\n\n  /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n  toJSON() {\n    var baseModel = super.toJSON();\n    return {\n      baseModel: baseModel,\n      selectionMethod: this.selectionMethod,\n      name: 'RFRegression'\n    };\n  }\n\n  /**\n     * Load a Decision tree classifier with the given model.\n     * @param {object} model\n     * @return {RandomForestRegression}\n     */\n  static load(model) {\n    if (model.name !== 'RFRegression') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    return new RandomForestRegression(true, model);\n  }\n}\n","export { RandomForestClassifier } from './RandomForestClassifier';\nexport { RandomForestRegression } from './RandomForestRegression';\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\nimport getZones from './getZones';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  let zones = getZones(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse\n    );\n    xResult.push(...zoneResult.x);\n    yResult.push(...zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n","export default function getZones(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import Matrix from 'ml-matrix';\n\n/**\n * @private\n * Function that retuns an array of matrices of the cases that belong to each class.\n * @param {Matrix} X - dataset\n * @param {Array} y - predictions\n * @return {Array}\n */\nexport function separateClasses(X, y) {\n    var features = X.columns;\n\n    var classes = 0;\n    var totalPerClasses = new Array(10000); // max upperbound of classes\n    for (var i = 0; i < y.length; i++) {\n        if (totalPerClasses[y[i]] === undefined) {\n            totalPerClasses[y[i]] = 0;\n            classes++;\n        }\n        totalPerClasses[y[i]]++;\n    }\n    var separatedClasses = new Array(classes);\n    var currentIndex = new Array(classes);\n    for (i = 0; i < classes; ++i) {\n        separatedClasses[i] = new Matrix(totalPerClasses[i], features);\n        currentIndex[i] = 0;\n    }\n    for (i = 0; i < X.rows; ++i) {\n        separatedClasses[y[i]].setRow(currentIndex[y[i]], X.getRow(i));\n        currentIndex[y[i]]++;\n    }\n    return separatedClasses;\n}\n","import Matrix from 'ml-matrix';\nimport Stat from 'ml-stat';\nimport {separateClasses} from './utils';\n\n/**\n * @class GaussianNB\n */\nexport class GaussianNB {\n\n    /**\n     * @constructor\n     * Constructor for the Gaussian Naive Bayes classifier, the parameters here is just for loading purposes.\n     *\n     * @param {boolean} reload\n     * @param {object} model\n     */\n    constructor(reload, model) {\n        if (reload) {\n            this.means = model.means;\n            this.calculateProbabilities = model.calculateProbabilities;\n        }\n    }\n\n    /**\n     * Function that trains the classifier with a matrix that represents the training set and an array that\n     * represents the label of each row in the training set. the labels must be numbers between 0 to n-1 where\n     * n represents the number of classes.\n     *\n     * WARNING: in the case that one class, all the cases in one or more features have the same value, the\n     * Naive Bayes classifier will not work well.\n     * @param {Matrix|Array} trainingSet\n     * @param {Matrix|Array} trainingLabels\n     */\n    train(trainingSet, trainingLabels) {\n        var C1 = Math.sqrt(2 * Math.PI); // constant to precalculate the squared root\n        trainingSet = Matrix.checkMatrix(trainingSet);//if (!Matrix.isMatrix(trainingSet)) trainingSet = new Matrix(trainingSet);\n\n        if (trainingSet.rows !== trainingLabels.length) {\n            throw new RangeError('the size of the training set and the training labels must be the same.');\n        }\n\n        var separatedClasses = separateClasses(trainingSet, trainingLabels);\n        var calculateProbabilities = new Array(separatedClasses.length);\n        this.means = new Array(separatedClasses.length);\n        for (var i = 0; i < separatedClasses.length; ++i) {\n            var means = Stat.matrix.mean(separatedClasses[i]);\n            var std = Stat.matrix.standardDeviation(separatedClasses[i], means);\n\n            var logPriorProbability = Math.log(separatedClasses[i].rows / trainingSet.rows);\n            calculateProbabilities[i] = new Array(means.length + 1);\n\n            calculateProbabilities[i][0] = logPriorProbability;\n            for (var j = 1; j < means.length + 1; ++j) {\n                var currentStd = std[j - 1];\n                calculateProbabilities[i][j] = [(1 / (C1 * currentStd)), -2 * currentStd * currentStd];\n            }\n\n            this.means[i] = means;\n        }\n\n        this.calculateProbabilities = calculateProbabilities;\n    }\n\n    /**\n     * function that predicts each row of the dataset (must be a matrix).\n     *\n     * @param {Matrix|Array} dataset\n     * @return {Array}\n     */\n    predict(dataset) {\n        if (dataset[0].length === this.calculateProbabilities[0].length) {\n            throw new RangeError('the dataset must have the same features as the training set');\n        }\n\n        var predictions = new Array(dataset.length);\n\n        for (var i = 0; i < predictions.length; ++i) {\n            predictions[i] = getCurrentClass(dataset[i], this.means, this.calculateProbabilities);\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Function that export the NaiveBayes model.\n     * @return {object}\n     */\n    toJSON() {\n        return {\n            modelName: 'NaiveBayes',\n            means: this.means,\n            calculateProbabilities: this.calculateProbabilities\n        };\n    }\n\n    /**\n     * Function that create a GaussianNB classifier with the given model.\n     * @param {object} model\n     * @return {GaussianNB}\n     */\n    static load(model) {\n        if (model.modelName !== 'NaiveBayes') {\n            throw new RangeError('The current model is not a Multinomial Naive Bayes, current model:', model.name);\n        }\n\n        return new GaussianNB(true, model);\n    }\n}\n\n/**\n * @private\n * Function the retrieves a prediction with one case.\n *\n * @param {Array} currentCase\n * @param {Array} mean - Precalculated means of each class trained\n * @param {Array} classes - Precalculated value of each class (Prior probability and probability function of each feature)\n * @return {number}\n */\nfunction getCurrentClass(currentCase, mean, classes) {\n    var maxProbability = 0;\n    var predictedClass = -1;\n\n    // going through all precalculated values for the classes\n    for (var i = 0; i < classes.length; ++i) {\n        var currentProbability = classes[i][0]; // initialize with the prior probability\n        for (var j = 1; j < classes[0][1].length + 1; ++j) {\n            currentProbability += calculateLogProbability(currentCase[j - 1], mean[i][j - 1], classes[i][j][0], classes[i][j][1]);\n        }\n\n        currentProbability = Math.exp(currentProbability);\n        if (currentProbability > maxProbability) {\n            maxProbability = currentProbability;\n            predictedClass = i;\n        }\n    }\n\n    return predictedClass;\n}\n\n/**\n * @private\n * function that retrieves the probability of the feature given the class.\n * @param {number} value - value of the feature.\n * @param {number} mean - mean of the feature for the given class.\n * @param {number} C1 - precalculated value of (1 / (sqrt(2*pi) * std)).\n * @param {number} C2 - precalculated value of (2 * std^2) for the denominator of the exponential.\n * @return {number}\n */\nfunction calculateLogProbability(value, mean, C1, C2) {\n    value = value - mean;\n    return Math.log(C1 * Math.exp((value * value) / C2));\n}\n","import Matrix from 'ml-matrix';\nimport {separateClasses} from './utils';\n\n/**\n * @class MultinomialNB\n */\nexport class MultinomialNB {\n\n    /**\n     * @constructor\n     * Constructor for Multinomial Naive Bayes, the model parameter is for load purposes.\n     *\n     * @param {object} model - for load purposes.\n     */\n    constructor(model) {\n        if (model) {\n            this.conditionalProbability = Matrix.checkMatrix(model.conditionalProbability);\n            this.priorProbability = Matrix.checkMatrix(model.priorProbability);\n        }\n    }\n\n    /**\n     * Train the classifier with the current training set and labels, the labels must be numbers between 0 and n.\n     * @param {Matrix|Array} trainingSet\n     * @param {Array} trainingLabels\n     */\n    train(trainingSet, trainingLabels) {\n        trainingSet = Matrix.checkMatrix(trainingSet);\n\n        if (trainingSet.rows !== trainingLabels.length) {\n            throw new RangeError('the size of the training set and the training labels must be the same.');\n        }\n\n        var separateClass = separateClasses(trainingSet, trainingLabels);\n        this.priorProbability = new Matrix(separateClass.length, 1);\n\n        for (var i = 0; i < separateClass.length; ++i) {\n            this.priorProbability[i][0] = Math.log(separateClass[i].length / trainingSet.rows);\n        }\n\n        var features = trainingSet.columns;\n        this.conditionalProbability = new Matrix(separateClass.length, features);\n        for (i = 0; i < separateClass.length; ++i) {\n            var classValues = Matrix.checkMatrix(separateClass[i]);\n            var total = classValues.sum();\n            var divisor = total + features;\n            this.conditionalProbability.setRow(i, classValues.sum('column').add(1).div(divisor).apply(matrixLog));\n        }\n    }\n\n    /**\n     * Retrieves the predictions for the dataset with the current model.\n     * @param {Matrix|Array} dataset\n     * @return {Array} - predictions from the dataset.\n     */\n    predict(dataset) {\n        dataset = Matrix.checkMatrix(dataset);\n        var predictions = new Array(dataset.rows);\n        for (var i = 0; i < dataset.rows; ++i) {\n            var currentElement = dataset.getRowVector(i);\n            predictions[i] = this.conditionalProbability.clone().mulRowVector(currentElement).sum('row')\n                .add(this.priorProbability).maxIndex()[0];\n        }\n\n        return predictions;\n    }\n\n    /**\n     * Function that saves the current model.\n     * @return {object} - model in JSON format.\n     */\n    toJSON() {\n        return {\n            name: 'MultinomialNB',\n            priorProbability: this.priorProbability,\n            conditionalProbability: this.conditionalProbability\n        };\n    }\n\n    /**\n     * Creates a new MultinomialNB from the given model\n     * @param {object} model\n     * @return {MultinomialNB}\n     */\n    static load(model) {\n        if (model.name !== 'MultinomialNB') {\n            throw new RangeError(`${model.name} is not a Multinomial Naive Bayes`);\n        }\n\n        return new MultinomialNB(model);\n    }\n}\n\nfunction matrixLog(i, j) {\n    this[i][j] = Math.log(this[i][j]);\n}\n","export {GaussianNB} from './GaussianNB';\nexport {MultinomialNB} from './MultinomialNB';\n","import Matrix from 'ml-matrix';\nimport Stat from 'ml-stat/matrix';\n\n/**\n * @private\n * Function that given vector, returns his norm\n * @param {Vector} X\n * @return {number} Norm of the vector\n */\nexport function norm(X) {\n    return Math.sqrt(X.clone().apply(pow2array).sum());\n}\n\n/**\n * @private\n * Function that pow 2 each element of a Matrix or a Vector,\n * used in the apply method of the Matrix object\n * @param {number} i - index i.\n * @param {number} j - index j.\n * @return {Matrix} The Matrix object modified at the index i, j.\n * */\nexport function pow2array(i, j) {\n    this[i][j] = this[i][j] * this[i][j];\n    return this;\n}\n\n/**\n * @private\n * Function that normalize the dataset and return the means and\n * standard deviation of each feature.\n * @param {Matrix} dataset\n * @return {object} dataset normalized, means and standard deviations\n */\nexport function featureNormalize(dataset) {\n    var means = Stat.mean(dataset);\n    var std = Stat.standardDeviation(dataset, means, true);\n    var result = Matrix.checkMatrix(dataset).subRowVector(means);\n    return {result: result.divRowVector(std), means: means, std: std};\n}\n\n/**\n * @private\n * Function that initialize an array of matrices.\n * @param {Array} array\n * @param {boolean} isMatrix\n * @return {Array} array with the matrices initialized.\n */\nexport function initializeMatrices(array, isMatrix) {\n    if (isMatrix) {\n        for (var i = 0; i < array.length; ++i) {\n            for (var j = 0; j < array[i].length; ++j) {\n                var elem = array[i][j];\n                array[i][j] = elem !== null ? new Matrix(array[i][j]) : undefined;\n            }\n        }\n    } else {\n        for (i = 0; i < array.length; ++i) {\n            array[i] = new Matrix(array[i]);\n        }\n    }\n\n    return array;\n}\n","import Matrix from 'ml-matrix';\nimport Stat from 'ml-stat/matrix';\nimport * as Utils from './utils';\n\n/**\n * @class PLS\n */\nexport class PLS {\n\n    /**\n     * Constructor for Partial Least Squares (PLS)\n     * @param {object} options\n     * @param {number} [options.latentVectors] - Number of latent vector to get (if the algorithm doesn't find a good model below the tolerance)\n     * @param {number} [options.tolerance=1e-5]\n     * @param {boolean} [options.scale=true] - rescale dataset using mean.\n     * @param {object} model - for load purposes.\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.meanX = model.meanX;\n            this.stdDevX = model.stdDevX;\n            this.meanY = model.meanY;\n            this.stdDevY = model.stdDevY;\n            this.PBQ = Matrix.checkMatrix(model.PBQ);\n            this.R2X = model.R2X;\n            this.scale = model.scale;\n            this.scaleMethod = model.scaleMethod;\n            this.tolerance = model.tolerance;\n        } else {\n            var {\n                tolerance = 1e-5,\n                scale = true,\n            } = options;\n            this.tolerance = tolerance;\n            this.scale = scale;\n            this.latentVectors = options.latentVectors;\n        }\n    }\n\n    /**\n     * Fits the model with the given data and predictions, in this function is calculated the\n     * following outputs:\n     *\n     * T - Score matrix of X\n     * P - Loading matrix of X\n     * U - Score matrix of Y\n     * Q - Loading matrix of Y\n     * B - Matrix of regression coefficient\n     * W - Weight matrix of X\n     *\n     * @param {Matrix|Array} trainingSet\n     * @param {Matrix|Array} trainingValues\n     */\n    train(trainingSet, trainingValues) {\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        trainingValues = Matrix.checkMatrix(trainingValues);\n\n        if (trainingSet.length !== trainingValues.length) {\n            throw new RangeError('The number of X rows must be equal to the number of Y rows');\n        }\n\n        this.meanX = Stat.mean(trainingSet);\n        this.stdDevX = Stat.standardDeviation(trainingSet, this.meanX, true);\n        this.meanY = Stat.mean(trainingValues);\n        this.stdDevY = Stat.standardDeviation(trainingValues, this.meanY, true);\n\n        if (this.scale) { // here should be the ml-preprocess project\n            trainingSet = trainingSet.clone().subRowVector(this.meanX).divRowVector(this.stdDevX);\n            trainingValues = trainingValues.clone().subRowVector(this.meanY).divRowVector(this.stdDevY);\n        }\n\n        if (this.latentVectors === undefined) {\n            this.latentVectors = Math.min(trainingSet.length - 1, trainingSet[0].length);\n        }\n\n        var rx = trainingSet.rows;\n        var cx = trainingSet.columns;\n        var ry = trainingValues.rows;\n        var cy = trainingValues.columns;\n\n        var ssqXcal = trainingSet.clone().mul(trainingSet).sum(); // for the r²\n        var sumOfSquaresY = trainingValues.clone().mul(trainingValues).sum();\n\n        var tolerance = this.tolerance;\n        var n = this.latentVectors;\n        var T = Matrix.zeros(rx, n);\n        var P = Matrix.zeros(cx, n);\n        var U = Matrix.zeros(ry, n);\n        var Q = Matrix.zeros(cy, n);\n        var B = Matrix.zeros(n, n);\n        var W = P.clone();\n        var k = 0;\n\n        while (Utils.norm(trainingValues) > tolerance && k < n) {\n            var transposeX = trainingSet.transpose();\n            var transposeY = trainingValues.transpose();\n\n            var tIndex = maxSumColIndex(trainingSet.clone().mulM(trainingSet));\n            var uIndex = maxSumColIndex(trainingValues.clone().mulM(trainingValues));\n\n            var t1 = trainingSet.getColumnVector(tIndex);\n            var u = trainingValues.getColumnVector(uIndex);\n            var t = Matrix.zeros(rx, 1);\n\n            while (Utils.norm(t1.clone().sub(t)) > tolerance) {\n                var w = transposeX.mmul(u);\n                w.div(Utils.norm(w));\n                t = t1;\n                t1 = trainingSet.mmul(w);\n                var q = transposeY.mmul(t1);\n                q.div(Utils.norm(q));\n                u = trainingValues.mmul(q);\n            }\n\n            t = t1;\n            var num = transposeX.mmul(t);\n            var den = (t.transpose().mmul(t))[0][0];\n            var p = num.div(den);\n            var pnorm = Utils.norm(p);\n            p.div(pnorm);\n            t.mul(pnorm);\n            w.mul(pnorm);\n\n            num = u.transpose().mmul(t);\n            den = (t.transpose().mmul(t))[0][0];\n            var b = (num.div(den))[0][0];\n            trainingSet.sub(t.mmul(p.transpose()));\n            trainingValues.sub(t.clone().mul(b).mmul(q.transpose()));\n\n            T.setColumn(k, t);\n            P.setColumn(k, p);\n            U.setColumn(k, u);\n            Q.setColumn(k, q);\n            W.setColumn(k, w);\n\n            B[k][k] = b;\n            k++;\n        }\n\n        k--;\n        T = T.subMatrix(0, T.rows - 1, 0, k);\n        P = P.subMatrix(0, P.rows - 1, 0, k);\n        U = U.subMatrix(0, U.rows - 1, 0, k);\n        Q = Q.subMatrix(0, Q.rows - 1, 0, k);\n        W = W.subMatrix(0, W.rows - 1, 0, k);\n        B = B.subMatrix(0, k, 0, k);\n\n        // TODO: review of R2Y\n        //this.R2Y = t.transpose().mmul(t).mul(q[k][0]*q[k][0]).divS(ssqYcal)[0][0];\n        //\n        this.ssqYcal = sumOfSquaresY;\n        this.E = trainingSet;\n        this.F = trainingValues;\n        this.T = T;\n        this.P = P;\n        this.U = U;\n        this.Q = Q;\n        this.W = W;\n        this.B = B;\n        this.PBQ = P.mmul(B).mmul(Q.transpose());\n        this.R2X = t.transpose().mmul(t).mmul(p.transpose().mmul(p)).div(ssqXcal)[0][0];\n    }\n\n    /**\n     * Predicts the behavior of the given dataset.\n     * @param {Matrix|Array} dataset - data to be predicted.\n     * @return {Matrix} - predictions of each element of the dataset.\n     */\n    predict(dataset) {\n        var X = Matrix.checkMatrix(dataset);\n        if (this.scale) {\n            X = X.subRowVector(this.meanX).divRowVector(this.stdDevX);\n        }\n        var Y = X.mmul(this.PBQ);\n        Y = Y.mulRowVector(this.stdDevY).addRowVector(this.meanY);\n        return Y;\n    }\n\n    /**\n     * Returns the explained variance on training of the PLS model\n     * @return {number}\n     */\n    getExplainedVariance() {\n        return this.R2X;\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            name: 'PLS',\n            R2X: this.R2X,\n            meanX: this.meanX,\n            stdDevX: this.stdDevX,\n            meanY: this.meanY,\n            stdDevY: this.stdDevY,\n            PBQ: this.PBQ,\n            tolerance: this.tolerance,\n            scale: this.scale,\n        };\n    }\n\n    /**\n     * Load a PLS model from a JSON Object\n     * @param {object} model\n     * @return {PLS} - PLS object from the given model\n     */\n    static load(model) {\n        if (model.name !== 'PLS') {\n            throw new RangeError('Invalid model: ' + model.name);\n        }\n        return new PLS(true, model);\n    }\n}\n\n/**\n * @private\n * Function that returns the index where the sum of each\n * column vector is maximum.\n * @param {Matrix} data\n * @return {number} index of the maximum\n */\nfunction maxSumColIndex(data) {\n    return data.sum('column').maxIndex()[0];\n}\n","import {Matrix, SingularValueDecomposition, inverse} from 'ml-matrix';\nimport {initializeMatrices} from './utils';\n\n/**\n * @class KOPLS\n */\nexport class KOPLS {\n\n    /**\n     * Constructor for Kernel-based Orthogonal Projections to Latent Structures (K-OPLS)\n     * @param {object} options\n     * @param {number} [options.predictiveComponents] - Number of predictive components to use.\n     * @param {number} [options.orthogonalComponents] - Number of Y-Orthogonal components.\n     * @param {Kernel} [options.kernel] - Kernel object to apply, see [ml-kernel](https://github.com/mljs/kernel).\n     * @param {object} model - for load purposes.\n     */\n    constructor(options, model) {\n        if (options === true) {\n            this.trainingSet = new Matrix(model.trainingSet);\n            this.YLoadingMat = new Matrix(model.YLoadingMat);\n            this.SigmaPow = new Matrix(model.SigmaPow);\n            this.YScoreMat = new Matrix(model.YScoreMat);\n            this.predScoreMat = initializeMatrices(model.predScoreMat, false);\n            this.YOrthLoadingVec = initializeMatrices(model.YOrthLoadingVec, false);\n            this.YOrthEigen = model.YOrthEigen;\n            this.YOrthScoreMat = initializeMatrices(model.YOrthScoreMat, false);\n            this.toNorm = initializeMatrices(model.toNorm, false);\n            this.TURegressionCoeff = initializeMatrices(model.TURegressionCoeff, false);\n            this.kernelX = initializeMatrices(model.kernelX, true);\n            this.kernel = model.kernel;\n            this.orthogonalComp = model.orthogonalComp;\n            this.predictiveComp = model.predictiveComp;\n        } else {\n            if (options.predictiveComponents === undefined) {\n                throw new RangeError('no predictive components found!');\n            }\n            if (options.orthogonalComponents === undefined) {\n                throw new RangeError('no orthogonal components found!');\n            }\n            if (options.kernel === undefined) {\n                throw new RangeError('no kernel found!');\n            }\n\n            this.orthogonalComp = options.orthogonalComponents;\n            this.predictiveComp = options.predictiveComponents;\n            this.kernel = options.kernel;\n        }\n    }\n\n    /**\n     * Train the K-OPLS model with the given training set and labels.\n     * @param {Matrix|Array} trainingSet\n     * @param {Matrix|Array} trainingValues\n     */\n    train(trainingSet, trainingValues) {\n        trainingSet = Matrix.checkMatrix(trainingSet);\n        trainingValues = Matrix.checkMatrix(trainingValues);\n\n        // to save and compute kernel with the prediction dataset.\n        this.trainingSet = trainingSet.clone();\n\n        var kernelX = this.kernel.compute(trainingSet);\n\n        var Identity = Matrix.eye(kernelX.rows, kernelX.rows, 1);\n        var temp = kernelX;\n        kernelX = new Matrix(this.orthogonalComp + 1, this.orthogonalComp + 1);\n        kernelX[0][0] = temp;\n\n        var result = new SingularValueDecomposition(trainingValues.transpose().mmul(kernelX[0][0]).mmul(trainingValues), {\n            computeLeftSingularVectors: true,\n            computeRightSingularVectors: false\n        });\n        var YLoadingMat = result.leftSingularVectors;\n        var Sigma = result.diagonalMatrix;\n\n        YLoadingMat = YLoadingMat.subMatrix(0, YLoadingMat.rows - 1, 0, this.predictiveComp - 1);\n        Sigma = Sigma.subMatrix(0, this.predictiveComp - 1, 0, this.predictiveComp - 1);\n\n        var YScoreMat = trainingValues.mmul(YLoadingMat);\n\n        var predScoreMat = new Array(this.orthogonalComp + 1);\n        var TURegressionCoeff = new Array(this.orthogonalComp + 1);\n        var YOrthScoreMat = new Array(this.orthogonalComp);\n        var YOrthLoadingVec = new Array(this.orthogonalComp);\n        var YOrthEigen = new Array(this.orthogonalComp);\n        var YOrthScoreNorm = new Array(this.orthogonalComp);\n\n        var SigmaPow = Matrix.pow(Sigma, -0.5);\n        // to avoid errors, check infinity\n        SigmaPow.apply(function (i, j) {\n            if (this[i][j] === Infinity) {\n                this[i][j] = 0.0;\n            }\n        });\n\n        for (var i = 0; i < this.orthogonalComp; ++i) {\n            predScoreMat[i] = kernelX[0][i].transpose().mmul(YScoreMat).mmul(SigmaPow);\n\n            var TpiPrime = predScoreMat[i].transpose();\n            TURegressionCoeff[i] = inverse(TpiPrime.mmul(predScoreMat[i])).mmul(TpiPrime).mmul(YScoreMat);\n\n            result = new SingularValueDecomposition(TpiPrime.mmul(Matrix.sub(kernelX[i][i], predScoreMat[i].mmul(TpiPrime))).mmul(predScoreMat[i]), {\n                computeLeftSingularVectors: true,\n                computeRightSingularVectors: false\n            });\n            var CoTemp = result.leftSingularVectors;\n            var SoTemp = result.diagonalMatrix;\n\n            YOrthLoadingVec[i] = CoTemp.subMatrix(0, CoTemp.rows - 1, 0, 0);\n            YOrthEigen[i] = SoTemp[0][0];\n\n            YOrthScoreMat[i] = Matrix.sub(kernelX[i][i], predScoreMat[i].mmul(TpiPrime)).mmul(predScoreMat[i]).mmul(YOrthLoadingVec[i]).mul(Math.pow(YOrthEigen[i], -0.5));\n\n            var toiPrime = YOrthScoreMat[i].transpose();\n            YOrthScoreNorm[i] = Matrix.sqrt(toiPrime.mmul(YOrthScoreMat[i]));\n\n            YOrthScoreMat[i] = YOrthScoreMat[i].divRowVector(YOrthScoreNorm[i]);\n\n            var ITo = Matrix.sub(Identity, YOrthScoreMat[i].mmul(YOrthScoreMat[i].transpose()));\n\n            kernelX[0][i + 1] = kernelX[0][i].mmul(ITo);\n            kernelX[i + 1][i + 1] = ITo.mmul(kernelX[i][i]).mmul(ITo);\n        }\n\n        var lastScoreMat = predScoreMat[this.orthogonalComp] = kernelX[0][this.orthogonalComp].transpose().mmul(YScoreMat).mmul(SigmaPow);\n\n        var lastTpPrime = lastScoreMat.transpose();\n        TURegressionCoeff[this.orthogonalComp] = inverse(lastTpPrime.mmul(lastScoreMat)).mmul(lastTpPrime).mmul(YScoreMat);\n\n        this.YLoadingMat = YLoadingMat;\n        this.SigmaPow = SigmaPow;\n        this.YScoreMat = YScoreMat;\n        this.predScoreMat = predScoreMat;\n        this.YOrthLoadingVec = YOrthLoadingVec;\n        this.YOrthEigen = YOrthEigen;\n        this.YOrthScoreMat = YOrthScoreMat;\n        this.toNorm = YOrthScoreNorm;\n        this.TURegressionCoeff = TURegressionCoeff;\n        this.kernelX = kernelX;\n    }\n\n    /**\n     * Predicts the output given the matrix to predict.\n     * @param {Matrix|Array} toPredict\n     * @return {{y: Matrix, predScoreMat: Array<Matrix>, predYOrthVectors: Array<Matrix>}} predictions\n     */\n    predict(toPredict) {\n\n        var KTestTrain = this.kernel.compute(toPredict, this.trainingSet);\n\n        var temp = KTestTrain;\n        KTestTrain = new Matrix(this.orthogonalComp + 1, this.orthogonalComp + 1);\n        KTestTrain[0][0] = temp;\n\n        var YOrthScoreVector = new Array(this.orthogonalComp);\n        var predScoreMat = new Array(this.orthogonalComp);\n\n        var i;\n        for (i = 0; i < this.orthogonalComp; ++i) {\n            predScoreMat[i] = KTestTrain[i][0].mmul(this.YScoreMat).mmul(this.SigmaPow);\n\n            YOrthScoreVector[i] = Matrix.sub(KTestTrain[i][i], predScoreMat[i].mmul(this.predScoreMat[i].transpose())).mmul(this.predScoreMat[i]).mmul(this.YOrthLoadingVec[i]).mul(Math.pow(this.YOrthEigen[i], -0.5));\n\n            YOrthScoreVector[i] = YOrthScoreVector[i].divRowVector(this.toNorm[i]);\n\n            var scoreMatPrime = this.YOrthScoreMat[i].transpose();\n            KTestTrain[i + 1][0] = Matrix.sub(KTestTrain[i][0], YOrthScoreVector[i].mmul(scoreMatPrime).mmul(this.kernelX[0][i].transpose()));\n\n            var p1 = Matrix.sub(KTestTrain[i][0], KTestTrain[i][i].mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime));\n            var p2 = YOrthScoreVector[i].mmul(scoreMatPrime).mmul(this.kernelX[i][i]);\n            var p3 = p2.mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime);\n\n            KTestTrain[i + 1][i + 1] = p1.sub(p2).add(p3);\n        }\n\n        predScoreMat[i] = KTestTrain[i][0].mmul(this.YScoreMat).mmul(this.SigmaPow);\n        var prediction = predScoreMat[i].mmul(this.TURegressionCoeff[i]).mmul(this.YLoadingMat.transpose());\n\n        return {\n            prediction: prediction,\n            predScoreMat: predScoreMat,\n            predYOrthVectors: YOrthScoreVector\n        };\n    }\n\n    /**\n     * Export the current model to JSON.\n     * @return {object} - Current model.\n     */\n    toJSON() {\n        return {\n            name: 'K-OPLS',\n            YLoadingMat: this.YLoadingMat,\n            SigmaPow: this.SigmaPow,\n            YScoreMat: this.YScoreMat,\n            predScoreMat: this.predScoreMat,\n            YOrthLoadingVec: this.YOrthLoadingVec,\n            YOrthEigen: this.YOrthEigen,\n            YOrthScoreMat: this.YOrthScoreMat,\n            toNorm: this.toNorm,\n            TURegressionCoeff: this.TURegressionCoeff,\n            kernelX: this.kernelX,\n            trainingSet: this.trainingSet,\n            orthogonalComp: this.orthogonalComp,\n            predictiveComp: this.predictiveComp\n        };\n    }\n\n    /**\n     * Load a K-OPLS with the given model.\n     * @param {object} model\n     * @param {Kernel} kernel - kernel used on the model, see [ml-kernel](https://github.com/mljs/kernel).\n     * @return {KOPLS}\n     */\n    static load(model, kernel) {\n        if (model.name !== 'K-OPLS') {\n            throw new RangeError('Invalid model: ' + model.name);\n        }\n\n        if (!kernel) {\n            throw new RangeError('You must provide a kernel for the model!');\n        }\n\n        model.kernel = kernel;\n        return new KOPLS(true, model);\n    }\n}\n","export {PLS} from './pls';\nexport {KOPLS} from './kopls';\n","/**\n * Calculate current error\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} parameters - Array of current parameter values\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {number}\n */\nexport default function errorCalculation(\n  data,\n  parameters,\n  parameterizedFunction\n) {\n  var error = 0;\n  const func = parameterizedFunction(parameters);\n\n  for (var i = 0; i < data.x.length; i++) {\n    error += Math.abs(data.y[i] - func(data.x[i]));\n  }\n\n  return error;\n}\n","import { inverse, Matrix } from 'ml-matrix';\n\n/**\n * Difference of the matrix function over the parameters\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} paramFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Matrix}\n */\nfunction gradientFunction(\n  data,\n  evaluatedData,\n  params,\n  gradientDifference,\n  paramFunction\n) {\n  const n = params.length;\n  const m = data.x.length;\n\n  var ans = new Array(n);\n\n  for (var param = 0; param < n; param++) {\n    ans[param] = new Array(m);\n    var auxParams = params.concat();\n    auxParams[param] += gradientDifference;\n    var funcParam = paramFunction(auxParams);\n\n    for (var point = 0; point < m; point++) {\n      ans[param][point] = evaluatedData[point] - funcParam(data.x[point]);\n    }\n  }\n  return new Matrix(ans);\n}\n\n/**\n * Matrix function over the samples\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @return {Matrix}\n */\nfunction matrixFunction(data, evaluatedData) {\n  const m = data.x.length;\n\n  var ans = new Array(m);\n\n  for (var point = 0; point < m; point++) {\n    ans[point] = [data.y[point] - evaluatedData[point]];\n  }\n\n  return new Matrix(ans);\n}\n\n/**\n * Iteration for Levenberg-Marquardt\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} damping - Levenberg-Marquardt parameter\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Array<number>}\n */\nexport default function step(\n  data,\n  params,\n  damping,\n  gradientDifference,\n  parameterizedFunction\n) {\n  var value = damping * gradientDifference * gradientDifference;\n  var identity = Matrix.eye(params.length, params.length, value);\n\n  const func = parameterizedFunction(params);\n  var evaluatedData = data.x.map((e) => func(e));\n\n  var gradientFunc = gradientFunction(\n    data,\n    evaluatedData,\n    params,\n    gradientDifference,\n    parameterizedFunction\n  );\n  var matrixFunc = matrixFunction(data, evaluatedData);\n  var inverseMatrix = inverse(\n    identity.add(gradientFunc.mmul(gradientFunc.transpose()))\n  );\n\n  params = new Matrix([params]);\n  params = params.sub(\n    inverseMatrix\n      .mmul(gradientFunc)\n      .mmul(matrixFunc)\n      .mul(gradientDifference)\n      .transpose()\n  );\n\n  return params.to1DArray();\n}\n","import errorCalculation from './errorCalculation';\nimport step from './step';\n\n/**\n * Curve fitting algorithm\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {object} [options] - Options object\n * @param {number} [options.damping] - Levenberg-Marquardt parameter\n * @param {number} [options.gradientDifference = 10e-2] - Adjustment for decrease the damping parameter\n * @param {Array<number>} [options.minValues] - Minimum allowed values for parameters\n * @param {Array<number>} [options.maxValues] - Maximum allowed values for parameters\n * @param {Array<number>} [options.initialValues] - Array of initial parameter values\n * @param {number} [options.maxIterations = 100] - Maximum of allowed iterations\n * @param {number} [options.errorTolerance = 10e-3] - Minimum uncertainty allowed for each point\n * @return {{parameterValues: Array<number>, parameterError: number, iterations: number}}\n */\nexport default function levenbergMarquardt(\n  data,\n  parameterizedFunction,\n  options = {}\n) {\n  let {\n    maxIterations = 100,\n    gradientDifference = 10e-2,\n    damping = 0,\n    errorTolerance = 10e-3,\n    minValues,\n    maxValues,\n    initialValues\n  } = options;\n\n  if (damping <= 0) {\n    throw new Error('The damping option must be a positive number');\n  } else if (!data.x || !data.y) {\n    throw new Error('The data parameter must have x and y elements');\n  } else if (\n    !Array.isArray(data.x) ||\n    data.x.length < 2 ||\n    !Array.isArray(data.y) ||\n    data.y.length < 2\n  ) {\n    throw new Error(\n      'The data parameter elements must be an array with more than 2 points'\n    );\n  } else if (data.x.length !== data.y.length) {\n    throw new Error('The data parameter elements must have the same size');\n  }\n\n  var parameters =\n    initialValues || new Array(parameterizedFunction.length).fill(1);\n  let parLen = parameters.length;\n  maxValues = maxValues || new Array(parLen).fill(Number.MAX_SAFE_INTEGER);\n  minValues = minValues || new Array(parLen).fill(Number.MIN_SAFE_INTEGER);\n\n  if (maxValues.length !== minValues.length) {\n    throw new Error('minValues and maxValues must be the same size');\n  }\n\n  if (!Array.isArray(parameters)) {\n    throw new Error('initialValues must be an array');\n  }\n\n  var error = errorCalculation(data, parameters, parameterizedFunction);\n\n  var converged = error <= errorTolerance;\n\n  for (\n    var iteration = 0;\n    iteration < maxIterations && !converged;\n    iteration++\n  ) {\n    parameters = step(\n      data,\n      parameters,\n      damping,\n      gradientDifference,\n      parameterizedFunction\n    );\n\n    for (let k = 0; k < parLen; k++) {\n      parameters[k] = Math.min(\n        Math.max(minValues[k], parameters[k]),\n        maxValues[k]\n      );\n    }\n\n    error = errorCalculation(data, parameters, parameterizedFunction);\n    if (isNaN(error)) break;\n    converged = error <= errorTolerance;\n  }\n\n  return {\n    parameterValues: parameters,\n    parameterError: error,\n    iterations: iteration\n  };\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","/*\n * Original code from:\n *\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */\n\nfunction Node(obj, dimension, parent) {\n    this.obj = obj;\n    this.left = null;\n    this.right = null;\n    this.parent = parent;\n    this.dimension = dimension;\n}\n\nexport default class KDTree {\n    constructor(points, metric) {\n        // If points is not an array, assume we're loading a pre-built tree\n        if (!Array.isArray(points)) {\n            this.dimensions = points.dimensions;\n            this.root = points;\n            restoreParent(this.root);\n        } else {\n            this.dimensions = new Array(points[0].length);\n            for (var i = 0; i < this.dimensions.length; i++) {\n                this.dimensions[i] = i;\n            }\n            this.root = buildTree(points, 0, null, this.dimensions);\n        }\n        this.metric = metric;\n    }\n\n    // Convert to a JSON serializable structure; this just requires removing\n    // the `parent` property\n    toJSON() {\n        const result = toJSONImpl(this.root, true);\n        result.dimensions = this.dimensions;\n        return result;\n    }\n\n    nearest(point, maxNodes, maxDistance) {\n        const metric = this.metric;\n        const dimensions = this.dimensions;\n        var i;\n\n        const bestNodes = new BinaryHeap(\n            function (e) {\n                return -e[1];\n            }\n        );\n\n        function nearestSearch(node) {\n            const dimension = dimensions[node.dimension];\n            const ownDistance = metric(point, node.obj);\n            const linearPoint = {};\n            var bestChild,\n                linearDistance,\n                otherChild,\n                i;\n\n            function saveNode(node, distance) {\n                bestNodes.push([node, distance]);\n                if (bestNodes.size() > maxNodes) {\n                    bestNodes.pop();\n                }\n            }\n\n            for (i = 0; i < dimensions.length; i += 1) {\n                if (i === node.dimension) {\n                    linearPoint[dimensions[i]] = point[dimensions[i]];\n                } else {\n                    linearPoint[dimensions[i]] = node.obj[dimensions[i]];\n                }\n            }\n\n            linearDistance = metric(linearPoint, node.obj);\n\n            if (node.right === null && node.left === null) {\n                if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n                    saveNode(node, ownDistance);\n                }\n                return;\n            }\n\n            if (node.right === null) {\n                bestChild = node.left;\n            } else if (node.left === null) {\n                bestChild = node.right;\n            } else {\n                if (point[dimension] < node.obj[dimension]) {\n                    bestChild = node.left;\n                } else {\n                    bestChild = node.right;\n                }\n            }\n\n            nearestSearch(bestChild);\n\n            if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n                saveNode(node, ownDistance);\n            }\n\n            if (bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[1]) {\n                if (bestChild === node.left) {\n                    otherChild = node.right;\n                } else {\n                    otherChild = node.left;\n                }\n                if (otherChild !== null) {\n                    nearestSearch(otherChild);\n                }\n            }\n        }\n\n        if (maxDistance) {\n            for (i = 0; i < maxNodes; i += 1) {\n                bestNodes.push([null, maxDistance]);\n            }\n        }\n\n        if (this.root) {\n            nearestSearch(this.root);\n        }\n\n        const result = [];\n        for (i = 0; i < Math.min(maxNodes, bestNodes.content.length); i += 1) {\n            if (bestNodes.content[i][0]) {\n                result.push([bestNodes.content[i][0].obj, bestNodes.content[i][1]]);\n            }\n        }\n        return result;\n    }\n}\n\nfunction toJSONImpl(src) {\n    const dest = new Node(src.obj, src.dimension, null);\n    if (src.left) dest.left = toJSONImpl(src.left);\n    if (src.right) dest.right = toJSONImpl(src.right);\n    return dest;\n}\n\nfunction buildTree(points, depth, parent, dimensions) {\n    const dim = depth % dimensions.length;\n\n    if (points.length === 0) {\n        return null;\n    }\n    if (points.length === 1) {\n        return new Node(points[0], dim, parent);\n    }\n\n    points.sort((a, b) => a[dimensions[dim]] - b[dimensions[dim]]);\n\n    const median = Math.floor(points.length / 2);\n    const node = new Node(points[median], dim, parent);\n    node.left = buildTree(points.slice(0, median), depth + 1, node, dimensions);\n    node.right = buildTree(points.slice(median + 1), depth + 1, node, dimensions);\n\n    return node;\n}\n\nfunction restoreParent(root) {\n    if (root.left) {\n        root.left.parent = root;\n        restoreParent(root.left);\n    }\n\n    if (root.right) {\n        root.right.parent = root;\n        restoreParent(root.right);\n    }\n}\n\n// Binary heap implementation from:\n// http://eloquentjavascript.net/appendix2.html\nclass BinaryHeap {\n    constructor(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n\n    push(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n        // Allow it to bubble up.\n        this.bubbleUp(this.content.length - 1);\n    }\n\n    pop() {\n        // Store the first element so we can return it later.\n        var result = this.content[0];\n        // Get the element at the end of the array.\n        var end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it sink down.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.sinkDown(0);\n        }\n        return result;\n    }\n\n    peek() {\n        return this.content[0];\n    }\n\n    size() {\n        return this.content.length;\n    }\n\n    bubbleUp(n) {\n        // Fetch the element that has to be moved.\n        var element = this.content[n];\n        // When at 0, an element can not go up any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = Math.floor((n + 1) / 2) - 1;\n            const parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            } else { // Found a parent that is less, no need to move it further.\n                break;\n            }\n        }\n    }\n\n    sinkDown(n) {\n        // Look up the target element and its score.\n        var length = this.content.length;\n        var element = this.content[n];\n        var elemScore = this.scoreFunction(element);\n\n        while (true) {\n            // Compute the indices of the child elements.\n            var child2N = (n + 1) * 2;\n            var child1N = child2N - 1;\n            // This is used to store the new position of the element,\n            // if any.\n            var swap = null;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                var child1 = this.content[child1N];\n                var child1Score = this.scoreFunction(child1);\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                var child2 = this.content[child2N];\n                var child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            } else {\n                // Otherwise, we are done.\n                break;\n            }\n        }\n    }\n}\n","import KDTree from './KDTree';\nimport euclideanDistance from 'ml-distance-euclidean';\n\nexport default class KNN {\n\n    /**\n     * @param {Array} dataset\n     * @param {Array} labels\n     * @param {object} options\n     * @param {number} [options.k=numberOfClasses + 1] - Number of neighbors to classify.\n     * @param {function} [options.distance=euclideanDistance] - Distance function that takes two parameters.\n     */\n    constructor(dataset, labels, options = {}) {\n        if (dataset === true) {\n            const model = labels;\n            this.kdTree = new KDTree(model.kdTree, options);\n            this.k = model.k;\n            this.classes = new Set(model.classes);\n            this.isEuclidean = model.isEuclidean;\n            return;\n        }\n\n        const classes = new Set(labels);\n\n        const {\n            distance = euclideanDistance,\n            k = classes.size + 1\n        } = options;\n\n        const points = new Array(dataset.length);\n        for (var i = 0; i < points.length; ++i) {\n            points[i] = dataset[i].slice();\n        }\n\n        for (i = 0; i < labels.length; ++i) {\n            points[i].push(labels[i]);\n        }\n\n        this.kdTree = new KDTree(points, distance);\n        this.k = k;\n        this.classes = classes;\n        this.isEuclidean = distance === euclideanDistance;\n    }\n\n    /**\n     * Create a new KNN instance with the given model.\n     * @param {object} model\n     * @param {function} distance=euclideanDistance - distance function must be provided if the model wasn't trained with euclidean distance.\n     * @return {KNN}\n     */\n    static load(model, distance = euclideanDistance) {\n        if (model.name !== 'KNN') {\n            throw new Error('invalid model: ' + model.name);\n        }\n        if (!model.isEuclidean && distance === euclideanDistance) {\n            throw new Error('a custom distance function was used to create the model. Please provide it again');\n        }\n        if (model.isEuclidean && distance !== euclideanDistance) {\n            throw new Error('the model was created with the default distance function. Do not load it with another one');\n        }\n        return new KNN(true, model, distance);\n    }\n\n    /**\n     * Return a JSON containing the kd-tree model.\n     * @return {object} JSON KNN model.\n     */\n    toJSON() {\n        return {\n            name: 'KNN',\n            kdTree: this.kdTree,\n            k: this.k,\n            classes: Array.from(this.classes),\n            isEuclidean: this.isEuclidean\n        };\n    }\n\n    /**\n     * Predicts the output given the matrix to predict.\n     * @param {Array} dataset\n     * @return {Array} predictions\n     */\n    predict(dataset) {\n        if (Array.isArray(dataset)) {\n            if (typeof dataset[0] === 'number') {\n                return getSinglePrediction(this, dataset);\n            } else if (Array.isArray(dataset[0]) && typeof dataset[0][0] === 'number') {\n                const predictions = new Array(dataset.length);\n                for (var i = 0; i < dataset.length; i++) {\n                    predictions[i] = getSinglePrediction(this, dataset[i]);\n                }\n                return predictions;\n            }\n        }\n        throw new TypeError('dataset to predict must be an array or a matrix');\n    }\n}\n\nfunction getSinglePrediction(knn, currentCase) {\n    var nearestPoints = knn.kdTree.nearest(currentCase, knn.k);\n    var pointsPerClass = {};\n    var predictedClass = -1;\n    var maxPoints = -1;\n    var lastElement = nearestPoints[0][0].length - 1;\n\n    for (var element of knn.classes) {\n        pointsPerClass[element] = 0;\n    }\n\n    for (var i = 0; i < nearestPoints.length; ++i) {\n        var currentClass = nearestPoints[i][0][lastElement];\n        var currentPoints = ++pointsPerClass[currentClass];\n        if (currentPoints > maxPoints) {\n            predictedClass = currentClass;\n            maxPoints = currentPoints;\n        }\n    }\n\n    return predictedClass;\n}\n"],"sourceRoot":""}