{"version":3,"file":"ml.js","sources":["../node_modules/ml-array-rescale/node_modules/is-any-array/src/index.js","../node_modules/ml-array-rescale/node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-rescale/node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/column.js","../node_modules/ml-matrix/src/views/columnSelection.js","../node_modules/ml-matrix/src/views/flipColumn.js","../node_modules/ml-matrix/src/views/flipRow.js","../node_modules/ml-matrix/src/views/row.js","../node_modules/ml-matrix/src/views/rowSelection.js","../node_modules/ml-matrix/src/views/selection.js","../node_modules/ml-matrix/src/views/sub.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/wrap/wrap.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-matrix/src/determinant.js","../node_modules/ml-matrix/src/linearDependencies.js","../node_modules/ml-matrix/src/pseudoInverse.js","../node_modules/ml-matrix/src/covariance.js","../node_modules/ml-matrix/src/correlation.js","../node_modules/ml-matrix/src/dc/evd.js","../node_modules/ml-matrix/src/dc/cholesky.js","../node_modules/ml-matrix/src/dc/nipals.js","../node_modules/ml-array-sum/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-mean/lib-es6/index.js","../node_modules/ml-cart/src/utils.js","../node_modules/ml-cart/src/TreeNode.js","../node_modules/ml-cart/src/DecisionTreeClassifier.js","../node_modules/ml-cart/src/DecisionTreeRegression.js","../node_modules/random-js/dist/random-js.esm.js","../node_modules/ml-random-forest/src/utils.js","../node_modules/ml-random-forest/src/RandomForestBase.js","../node_modules/ml-random-forest/src/RandomForestClassifier.js","../node_modules/ml-array-median/node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-random-forest/src/RandomForestRegression.js","../node_modules/ml-pca/src/pca.js","../node_modules/ml-distance-euclidean/lib-es6/euclidean.js","../node_modules/ml-distance-matrix/src/index.js","../node_modules/heap/lib/heap.js","../node_modules/heap/index.js","../node_modules/ml-hclust/src/Cluster.js","../node_modules/ml-hclust/src/agnes.js","../node_modules/ml-hclust/src/index.js","../node_modules/ml-nearest-vector/lib-es6/index.js","../node_modules/ml-kmeans/src/utils.js","../node_modules/ml-xsadd/lib-es6/xsadd.js","../node_modules/ml-random/lib-es6/choice.js","../node_modules/ml-random/lib-es6/index.js","../node_modules/ml-kmeans/src/initialization.js","../node_modules/ml-kmeans/src/KMeansResult.js","../node_modules/ml-kmeans/src/kmeans.js","../node_modules/ml-naivebayes/src/utils.js","../node_modules/ml-naivebayes/src/GaussianNB.js","../node_modules/ml-naivebayes/src/MultinomialNB.js","../node_modules/ml-knn/src/KDTree.js","../node_modules/ml-knn/src/index.js","../node_modules/ml-pls/src/util/utils.js","../node_modules/ml-pls/src/PLS.js","../node_modules/ml-pls/src/KOPLS.js","../node_modules/ml-confusion-matrix/src/index.js","../node_modules/ml-combinations/lib/index.js","../node_modules/ml-cross-validation/src/getFolds.js","../node_modules/ml-cross-validation/src/sampleAClass.js","../node_modules/ml-cross-validation/src/index.js","../node_modules/ml-pls/src/OPLSNipals.js","../node_modules/ml-pls/src/util/tss.js","../node_modules/ml-pls/src/OPLS.js","../node_modules/ml-fnn/FeedForwardNeuralNetwork.js","../node_modules/ml-som/src/node-square.js","../node_modules/ml-som/src/node-hexagonal.js","../node_modules/ml-som/src/index.js","../node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/ml-regression-base/src/index.js","../node_modules/ml-regression-polynomial/src/index.js","../node_modules/ml-regression-simple-linear/src/index.js","../node_modules/ml-regression-exponential/src/index.js","../node_modules/ml-regression-power/src/index.js","../node_modules/ml-regression-multivariate-linear/src/index.js","../node_modules/ml-kernel-gaussian/gaussian-kernel.js","../node_modules/ml-kernel-polynomial/polynomial-kernel.js","../node_modules/ml-kernel-sigmoid/sigmoid-kernel.js","../node_modules/ml-kernel/src/kernels/anova-kernel.js","../node_modules/ml-kernel/src/kernels/cauchy-kernel.js","../node_modules/ml-kernel/src/kernels/exponential-kernel.js","../node_modules/ml-kernel/src/kernels/histogram-intersection-kernel.js","../node_modules/ml-kernel/src/kernels/laplacian-kernel.js","../node_modules/ml-kernel/src/kernels/multiquadratic-kernel.js","../node_modules/ml-kernel/src/kernels/rational-quadratic-kernel.js","../node_modules/ml-kernel/src/kernel.js","../node_modules/ml-regression-theil-sen/src/index.js","../node_modules/ml-regression-robust-polynomial/src/index.js","../node_modules/ml-levenberg-marquardt/node_modules/is-any-array/src/index.js","../node_modules/ml-levenberg-marquardt/src/errorCalculation.js","../node_modules/ml-levenberg-marquardt/src/step.js","../node_modules/ml-levenberg-marquardt/src/index.js","../node_modules/ml-fcnnls/src/util/selection.js","../node_modules/ml-fcnnls/src/util/sortCollectionSet.js","../node_modules/ml-fcnnls/src/cssls.js","../node_modules/ml-fcnnls/src/initialisation.js","../node_modules/ml-fcnnls/src/util/setDifference.js","../node_modules/ml-fcnnls/src/optimality.js","../node_modules/ml-fcnnls/src/fcnnls.js","../node_modules/ml-fcnnls/src/fcnnlsVector.js","../node_modules/binary-search/index.js","../node_modules/num-sort/index.js","../node_modules/ml-hash-table/src/primeFinder.js","../node_modules/ml-hash-table/src/HashTable.js","../node_modules/ml-sparse-matrix/src/index.js","../node_modules/ml-distance/src/distances/additiveSymmetric.js","../node_modules/ml-distance/src/distances/avg.js","../node_modules/ml-distance/src/distances/bhattacharyya.js","../node_modules/ml-distance/src/distances/canberra.js","../node_modules/ml-distance/src/distances/chebyshev.js","../node_modules/ml-distance/src/distances/clark.js","../node_modules/ml-distance/src/similarities/czekanowski.js","../node_modules/ml-distance/src/distances/czekanowski.js","../node_modules/ml-distance/src/distances/dice.js","../node_modules/ml-distance/src/distances/divergence.js","../node_modules/ml-distance/src/distances/fidelity.js","../node_modules/ml-distance/src/distances/gower.js","../node_modules/ml-distance/src/distances/harmonicMean.js","../node_modules/ml-distance/src/distances/hellinger.js","../node_modules/ml-distance/src/distances/innerProduct.js","../node_modules/ml-distance/src/distances/intersection.js","../node_modules/ml-distance/src/distances/jaccard.js","../node_modules/ml-distance/src/distances/jeffreys.js","../node_modules/ml-distance/src/distances/jensenDifference.js","../node_modules/ml-distance/src/distances/jensenShannon.js","../node_modules/ml-distance/src/distances/kdivergence.js","../node_modules/ml-distance/src/distances/kulczynski.js","../node_modules/ml-distance/src/distances/kullbackLeibler.js","../node_modules/ml-distance/src/distances/kumarHassebrook.js","../node_modules/ml-distance/src/distances/kumarJohnson.js","../node_modules/ml-distance/src/distances/lorentzian.js","../node_modules/ml-distance/src/distances/manhattan.js","../node_modules/ml-distance/src/distances/matusita.js","../node_modules/ml-distance/src/distances/minkowski.js","../node_modules/ml-distance/src/distances/motyka.js","../node_modules/ml-distance/src/distances/neyman.js","../node_modules/ml-distance/src/distances/pearson.js","../node_modules/ml-distance/src/distances/probabilisticSymmetric.js","../node_modules/ml-distance/src/distances/ruzicka.js","../node_modules/ml-distance/src/distances/soergel.js","../node_modules/ml-distance/src/distances/sorensen.js","../node_modules/ml-distance/src/distances/squared.js","../node_modules/ml-distance/src/distances/squaredChord.js","../node_modules/ml-distance/src/distances/taneja.js","../node_modules/ml-distance/src/similarities/tanimoto.js","../node_modules/ml-distance/src/distances/tanimoto.js","../node_modules/ml-distance/src/distances/topsoe.js","../node_modules/ml-distance/src/distances/waveHedges.js","../node_modules/ml-tree-similarity/src/createTree.js","../node_modules/ml-tree-similarity/src/getSimilarity.js","../node_modules/ml-tree-similarity/src/index.js","../node_modules/ml-distance/src/similarities/cosine.js","../node_modules/ml-distance/src/similarities/dice.js","../node_modules/ml-distance/src/similarities/intersection.js","../node_modules/ml-distance/src/similarities/jaccard.js","../node_modules/ml-distance/src/similarities/kulczynski.js","../node_modules/ml-distance/src/similarities/motyka.js","../node_modules/ml-distance/src/similarities/pearson.js","../node_modules/ml-distance/src/similarities/squaredChord.js","../node_modules/ml-ngmca/src/util/zeroInsteadOfNegative.js","../node_modules/ml-ngmca/src/stages/checkMatrixS.js","../node_modules/ml-ngmca/src/util/normBy.js","../node_modules/ml-ngmca/src/util/normProj.js","../node_modules/ml-ngmca/src/stages/updateMatrixA.js","../node_modules/ml-ngmca/src/util/getMax.js","../node_modules/ml-ngmca/src/stages/updateMatrixS.js","../node_modules/ml-ngmca/src/stages/initialize.js","../node_modules/ml-ngmca/src/stages/normalize.js","../node_modules/ml-ngmca/src/util/getMedians.js","../node_modules/ml-ngmca/src/util/dimMADstd.js","../node_modules/ml-ngmca/src/stages/updateLambda.js","../node_modules/ml-ngmca/src/nGMCA.js","../node_modules/ml-performance/src/measures.js","../node_modules/ml-performance/src/index.js","../node_modules/ml-pad-array/src/index.js","../node_modules/ml-savitzky-golay/src/index.js","../node_modules/ml-bit-array/src/creator.js","../node_modules/ml-bit-array/src/index.js","../node_modules/ml-gsd/node_modules/ml-savitzky-golay-generalized/src/index.js","../node_modules/ml-gsd/src/gsd.js","../node_modules/ml-optimize-lorentzian/src/sumOfGaussians.js","../node_modules/ml-optimize-lorentzian/src/optimizeGaussianSum.js","../node_modules/ml-optimize-lorentzian/src/singleGaussian.js","../node_modules/ml-optimize-lorentzian/src/optimizeSingleGaussian.js","../node_modules/ml-optimize-lorentzian/src/sumOfLorentzians.js","../node_modules/ml-optimize-lorentzian/src/optimizeLorentzianSum.js","../node_modules/ml-optimize-lorentzian/src/singleLorentzian.js","../node_modules/ml-optimize-lorentzian/src/optimizeSingleLorentzian.js","../node_modules/ml-gsd/src/post/optimizePeaks.js","../node_modules/ml-gsd/src/post/joinBroadPeaks.js","../node_modules/ml-gsd/src/post/broadenPeaks.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-mode/lib-es6/index.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/ml-array-normed/node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-array-variance/node_modules/is-any-array/src/index.js","../node_modules/ml-array-variance/lib-es6/index.js","../node_modules/ml-array-standard-deviation/lib-es6/index.js","../node_modules/ml-array-xy-centroids-merge/src/index.js","../node_modules/ml-arrayxy-closestx/src/index.js","../node_modules/ml-array-xy-covariance/src/index.js","../node_modules/ml-array-xy-max-merge/src/index.js","../node_modules/ml-array-xy-max-y/src/index.js","../node_modules/ml-array-xy-sort-x/src/index.js","../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/ml-array-xy-weighted-merge/src/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-array-xy-filter-x/src/index.js","../src/index.js"],"sourcesContent":["const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\r\nconst indentData = ' '.repeat(4);\r\n\r\nexport function inspectMatrix() {\r\n  return inspectMatrixWithOptions(this);\r\n}\r\n\r\nexport function inspectMatrixWithOptions(matrix, options = {}) {\r\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\r\n  return `${matrix.constructor.name} {\r\n${indent}[\r\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\r\n${indent}]\r\n${indent}rows: ${matrix.rows}\r\n${indent}columns: ${matrix.columns}\r\n}`;\r\n}\r\n\r\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\r\n  const { rows, columns } = matrix;\r\n  const maxI = Math.min(rows, maxRows);\r\n  const maxJ = Math.min(columns, maxColumns);\r\n  const result = [];\r\n  for (let i = 0; i < maxI; i++) {\r\n    let line = [];\r\n    for (let j = 0; j < maxJ; j++) {\r\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\r\n    }\r\n    result.push(`${line.join(' ')}`);\r\n  }\r\n  if (maxJ !== columns) {\r\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\r\n  }\r\n  if (maxI !== rows) {\r\n    result.push(`... ${rows - maxRows} more rows`);\r\n  }\r\n  return result.join(`\\n${indentData}`);\r\n}\r\n\r\nfunction formatNumber(num, maxNumSize) {\r\n  const numStr = String(num);\r\n  if (numStr.length <= maxNumSize) {\r\n    return numStr.padEnd(maxNumSize, ' ');\r\n  }\r\n  const precise = num.toPrecision(maxNumSize - 2);\r\n  if (precise.length <= maxNumSize) {\r\n    return precise;\r\n  }\r\n  const exponential = num.toExponential(maxNumSize - 2);\r\n  const eIndex = exponential.indexOf('e');\r\n  const e = exponential.slice(eIndex);\r\n  return exponential.slice(0, maxNumSize - e.length) + e;\r\n}\r\n","export function installMathOperations(AbstractMatrix, Matrix) {\r\n  AbstractMatrix.prototype.add = function add(value) {\r\n    if (typeof value === 'number') return this.addS(value);\r\n    return this.addM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.addS = function addS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.addM = function addM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.add = function add(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.add(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.sub = function sub(value) {\r\n    if (typeof value === 'number') return this.subS(value);\r\n    return this.subM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.subS = function subS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.subM = function subM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sub = function sub(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sub(value);\r\n  };\r\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\r\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\r\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\r\n  AbstractMatrix.subtract = AbstractMatrix.sub;\r\n\r\n  AbstractMatrix.prototype.mul = function mul(value) {\r\n    if (typeof value === 'number') return this.mulS(value);\r\n    return this.mulM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.mulS = function mulS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.mul = function mul(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.mul(value);\r\n  };\r\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\r\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\r\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\r\n  AbstractMatrix.multiply = AbstractMatrix.mul;\r\n\r\n  AbstractMatrix.prototype.div = function div(value) {\r\n    if (typeof value === 'number') return this.divS(value);\r\n    return this.divM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.divS = function divS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.divM = function divM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.div = function div(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.div(value);\r\n  };\r\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\r\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\r\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\r\n  AbstractMatrix.divide = AbstractMatrix.div;\r\n\r\n  AbstractMatrix.prototype.mod = function mod(value) {\r\n    if (typeof value === 'number') return this.modS(value);\r\n    return this.modM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.modS = function modS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) % value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.modM = function modM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.mod = function mod(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.mod(value);\r\n  };\r\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\r\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\r\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\r\n  AbstractMatrix.modulus = AbstractMatrix.mod;\r\n\r\n  AbstractMatrix.prototype.and = function and(value) {\r\n    if (typeof value === 'number') return this.andS(value);\r\n    return this.andM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.andS = function andS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) & value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.andM = function andM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.and = function and(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.and(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.or = function or(value) {\r\n    if (typeof value === 'number') return this.orS(value);\r\n    return this.orM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.orS = function orS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) | value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.orM = function orM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.or = function or(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.or(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.xor = function xor(value) {\r\n    if (typeof value === 'number') return this.xorS(value);\r\n    return this.xorM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.xorS = function xorS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) ^ value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.xor = function xor(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.xor(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\r\n    if (typeof value === 'number') return this.leftShiftS(value);\r\n    return this.leftShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) << value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.leftShift(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\r\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\r\n    return this.signPropagatingRightShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >> value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.signPropagatingRightShift(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\r\n    if (typeof value === 'number') return this.rightShiftS(value);\r\n    return this.rightShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >>> value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.rightShift(value);\r\n  };\r\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\r\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\r\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\r\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\r\n\r\n  AbstractMatrix.prototype.not = function not() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, ~(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.not = function not(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.not();\r\n  };\r\n\r\n  AbstractMatrix.prototype.abs = function abs() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.abs(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.abs = function abs(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.abs();\r\n  };\r\n\r\n  AbstractMatrix.prototype.acos = function acos() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.acos(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.acos = function acos(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.acos();\r\n  };\r\n\r\n  AbstractMatrix.prototype.acosh = function acosh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.acosh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.acosh = function acosh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.acosh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.asin = function asin() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.asin(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.asin = function asin(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.asin();\r\n  };\r\n\r\n  AbstractMatrix.prototype.asinh = function asinh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.asinh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.asinh = function asinh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.asinh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.atan = function atan() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.atan(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.atan = function atan(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.atan();\r\n  };\r\n\r\n  AbstractMatrix.prototype.atanh = function atanh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.atanh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.atanh = function atanh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.atanh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cbrt = function cbrt() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cbrt(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cbrt = function cbrt(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cbrt();\r\n  };\r\n\r\n  AbstractMatrix.prototype.ceil = function ceil() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.ceil(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.ceil = function ceil(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.ceil();\r\n  };\r\n\r\n  AbstractMatrix.prototype.clz32 = function clz32() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.clz32(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.clz32 = function clz32(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.clz32();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cos = function cos() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cos(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cos = function cos(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cos();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cosh = function cosh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cosh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cosh = function cosh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cosh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.exp = function exp() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.exp(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.exp = function exp(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.exp();\r\n  };\r\n\r\n  AbstractMatrix.prototype.expm1 = function expm1() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.expm1(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.expm1 = function expm1(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.expm1();\r\n  };\r\n\r\n  AbstractMatrix.prototype.floor = function floor() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.floor(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.floor = function floor(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.floor();\r\n  };\r\n\r\n  AbstractMatrix.prototype.fround = function fround() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.fround(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.fround = function fround(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.fround();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log = function log() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log = function log(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log1p = function log1p() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log1p(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log1p = function log1p(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log1p();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log10 = function log10() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log10(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log10 = function log10(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log10();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log2 = function log2() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log2(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log2 = function log2(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log2();\r\n  };\r\n\r\n  AbstractMatrix.prototype.round = function round() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.round(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.round = function round(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.round();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sign = function sign() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sign(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sign = function sign(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sign();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sin = function sin() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sin(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sin = function sin(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sin();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sinh = function sinh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sinh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sinh = function sinh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sinh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sqrt = function sqrt() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sqrt(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sqrt = function sqrt(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sqrt();\r\n  };\r\n\r\n  AbstractMatrix.prototype.tan = function tan() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.tan(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.tan = function tan(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.tan();\r\n  };\r\n\r\n  AbstractMatrix.prototype.tanh = function tanh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.tanh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.tanh = function tanh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.tanh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.trunc = function trunc() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.trunc(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.trunc = function trunc(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.trunc();\r\n  };\r\n\r\n  AbstractMatrix.pow = function pow(matrix, arg0) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.pow(arg0);\r\n  };\r\n\r\n  AbstractMatrix.prototype.pow = function pow(value) {\r\n    if (typeof value === 'number') return this.powS(value);\r\n    return this.powM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.powS = function powS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.pow(this.get(i, j), value));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.powM = function powM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n}\r\n","/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  let max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  let max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns',\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices),\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  let rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  let columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function newArray(length, value = 0) {\r\n  let array = [];\r\n  for (let i = 0; i < length; i++) {\r\n    array.push(value);\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import { newArray } from './util';\r\n\r\nexport function sumByRow(matrix) {\r\n  let sum = newArray(matrix.rows);\r\n  for (let i = 0; i < matrix.rows; ++i) {\r\n    for (let j = 0; j < matrix.columns; ++j) {\r\n      sum[i] += matrix.get(i, j);\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  let sum = newArray(matrix.columns);\r\n  for (let i = 0; i < matrix.rows; ++i) {\r\n    for (let j = 0; j < matrix.columns; ++j) {\r\n      sum[j] += matrix.get(i, j);\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  let v = 0;\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nexport function productByRow(matrix) {\r\n  let sum = newArray(matrix.rows, 1);\r\n  for (let i = 0; i < matrix.rows; ++i) {\r\n    for (let j = 0; j < matrix.columns; ++j) {\r\n      sum[i] *= matrix.get(i, j);\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function productByColumn(matrix) {\r\n  let sum = newArray(matrix.columns, 1);\r\n  for (let i = 0; i < matrix.rows; ++i) {\r\n    for (let j = 0; j < matrix.columns; ++j) {\r\n      sum[j] *= matrix.get(i, j);\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function productAll(matrix) {\r\n  let v = 1;\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      v *= matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nexport function varianceByRow(matrix, unbiased, mean) {\r\n  const rows = matrix.rows;\r\n  const cols = matrix.columns;\r\n  const variance = [];\r\n\r\n  for (let i = 0; i < rows; i++) {\r\n    let sum1 = 0;\r\n    let sum2 = 0;\r\n    let x = 0;\r\n    for (let j = 0; j < cols; j++) {\r\n      x = matrix.get(i, j) - mean[i];\r\n      sum1 += x;\r\n      sum2 += x * x;\r\n    }\r\n    if (unbiased) {\r\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\r\n    } else {\r\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\r\n    }\r\n  }\r\n  return variance;\r\n}\r\n\r\nexport function varianceByColumn(matrix, unbiased, mean) {\r\n  const rows = matrix.rows;\r\n  const cols = matrix.columns;\r\n  const variance = [];\r\n\r\n  for (let j = 0; j < cols; j++) {\r\n    let sum1 = 0;\r\n    let sum2 = 0;\r\n    let x = 0;\r\n    for (let i = 0; i < rows; i++) {\r\n      x = matrix.get(i, j) - mean[j];\r\n      sum1 += x;\r\n      sum2 += x * x;\r\n    }\r\n    if (unbiased) {\r\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\r\n    } else {\r\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\r\n    }\r\n  }\r\n  return variance;\r\n}\r\n\r\nexport function varianceAll(matrix, unbiased, mean) {\r\n  const rows = matrix.rows;\r\n  const cols = matrix.columns;\r\n  const size = rows * cols;\r\n\r\n  let sum1 = 0;\r\n  let sum2 = 0;\r\n  let x = 0;\r\n  for (let i = 0; i < rows; i++) {\r\n    for (let j = 0; j < cols; j++) {\r\n      x = matrix.get(i, j) - mean;\r\n      sum1 += x;\r\n      sum2 += x * x;\r\n    }\r\n  }\r\n  if (unbiased) {\r\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\r\n  } else {\r\n    return (sum2 - (sum1 * sum1) / size) / size;\r\n  }\r\n}\r\n\r\nexport function centerByRow(matrix, mean) {\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function centerByColumn(matrix, mean) {\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function centerAll(matrix, mean) {\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      matrix.set(i, j, matrix.get(i, j) - mean);\r\n    }\r\n  }\r\n}\r\n\r\nexport function getScaleByRow(matrix) {\r\n  const scale = [];\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    let sum = 0;\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\r\n    }\r\n    scale.push(Math.sqrt(sum));\r\n  }\r\n  return scale;\r\n}\r\n\r\nexport function scaleByRow(matrix, scale) {\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function getScaleByColumn(matrix) {\r\n  const scale = [];\r\n  for (let j = 0; j < matrix.columns; j++) {\r\n    let sum = 0;\r\n    for (let i = 0; i < matrix.rows; i++) {\r\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\r\n    }\r\n    scale.push(Math.sqrt(sum));\r\n  }\r\n  return scale;\r\n}\r\n\r\nexport function scaleByColumn(matrix, scale) {\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function getScaleAll(matrix) {\r\n  const divider = matrix.size - 1;\r\n  let sum = 0;\r\n  for (let j = 0; j < matrix.columns; j++) {\r\n    for (let i = 0; i < matrix.rows; i++) {\r\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\r\n    }\r\n  }\r\n  return Math.sqrt(sum);\r\n}\r\n\r\nexport function scaleAll(matrix, scale) {\r\n  for (let i = 0; i < matrix.rows; i++) {\r\n    for (let j = 0; j < matrix.columns; j++) {\r\n      matrix.set(i, j, matrix.get(i, j) / scale);\r\n    }\r\n  }\r\n}\r\n","import rescale from 'ml-array-rescale';\r\n\r\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\r\nimport { installMathOperations } from './mathOperations';\r\nimport {\r\n  sumByRow,\r\n  sumByColumn,\r\n  sumAll,\r\n  productByRow,\r\n  productByColumn,\r\n  productAll,\r\n  varianceByRow,\r\n  varianceByColumn,\r\n  varianceAll,\r\n  centerByRow,\r\n  centerByColumn,\r\n  centerAll,\r\n  scaleByRow,\r\n  scaleByColumn,\r\n  scaleAll,\r\n  getScaleByRow,\r\n  getScaleByColumn,\r\n  getScaleAll,\r\n} from './stat';\r\nimport {\r\n  checkRowVector,\r\n  checkRowIndex,\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRange,\r\n  checkIndices,\r\n} from './util';\r\n\r\nexport class AbstractMatrix {\r\n  static from1DArray(newRows, newColumns, newData) {\r\n    let length = newRows * newColumns;\r\n    if (length !== newData.length) {\r\n      throw new RangeError('data length does not match given dimensions');\r\n    }\r\n    let newMatrix = new Matrix(newRows, newColumns);\r\n    for (let row = 0; row < newRows; row++) {\r\n      for (let column = 0; column < newColumns; column++) {\r\n        newMatrix.set(row, column, newData[row * newColumns + column]);\r\n      }\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  static rowVector(newData) {\r\n    let vector = new Matrix(1, newData.length);\r\n    for (let i = 0; i < newData.length; i++) {\r\n      vector.set(0, i, newData[i]);\r\n    }\r\n    return vector;\r\n  }\r\n\r\n  static columnVector(newData) {\r\n    let vector = new Matrix(newData.length, 1);\r\n    for (let i = 0; i < newData.length; i++) {\r\n      vector.set(i, 0, newData[i]);\r\n    }\r\n    return vector;\r\n  }\r\n\r\n  static zeros(rows, columns) {\r\n    return new Matrix(rows, columns);\r\n  }\r\n\r\n  static ones(rows, columns) {\r\n    return new Matrix(rows, columns).fill(1);\r\n  }\r\n\r\n  static rand(rows, columns, options = {}) {\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    const { random = Math.random } = options;\r\n    let matrix = new Matrix(rows, columns);\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        matrix.set(i, j, random());\r\n      }\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  static randInt(rows, columns, options = {}) {\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    const { min = 0, max = 1000, random = Math.random } = options;\r\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\r\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\r\n    if (min >= max) throw new RangeError('min must be smaller than max');\r\n    let interval = max - min;\r\n    let matrix = new Matrix(rows, columns);\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        let value = min + Math.round(random() * interval);\r\n        matrix.set(i, j, value);\r\n      }\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  static eye(rows, columns, value) {\r\n    if (columns === undefined) columns = rows;\r\n    if (value === undefined) value = 1;\r\n    let min = Math.min(rows, columns);\r\n    let matrix = this.zeros(rows, columns);\r\n    for (let i = 0; i < min; i++) {\r\n      matrix.set(i, i, value);\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  static diag(data, rows, columns) {\r\n    let l = data.length;\r\n    if (rows === undefined) rows = l;\r\n    if (columns === undefined) columns = rows;\r\n    let min = Math.min(l, rows, columns);\r\n    let matrix = this.zeros(rows, columns);\r\n    for (let i = 0; i < min; i++) {\r\n      matrix.set(i, i, data[i]);\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  static min(matrix1, matrix2) {\r\n    matrix1 = this.checkMatrix(matrix1);\r\n    matrix2 = this.checkMatrix(matrix2);\r\n    let rows = matrix1.rows;\r\n    let columns = matrix1.columns;\r\n    let result = new Matrix(rows, columns);\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static max(matrix1, matrix2) {\r\n    matrix1 = this.checkMatrix(matrix1);\r\n    matrix2 = this.checkMatrix(matrix2);\r\n    let rows = matrix1.rows;\r\n    let columns = matrix1.columns;\r\n    let result = new this(rows, columns);\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static checkMatrix(value) {\r\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\r\n  }\r\n\r\n  static isMatrix(value) {\r\n    return value != null && value.klass === 'Matrix';\r\n  }\r\n\r\n  get size() {\r\n    return this.rows * this.columns;\r\n  }\r\n\r\n  apply(callback) {\r\n    if (typeof callback !== 'function') {\r\n      throw new TypeError('callback must be a function');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        callback.call(this, i, j);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  to1DArray() {\r\n    let array = [];\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        array.push(this.get(i, j));\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n\r\n  to2DArray() {\r\n    let copy = [];\r\n    for (let i = 0; i < this.rows; i++) {\r\n      copy.push([]);\r\n      for (let j = 0; j < this.columns; j++) {\r\n        copy[i].push(this.get(i, j));\r\n      }\r\n    }\r\n    return copy;\r\n  }\r\n\r\n  toJSON() {\r\n    return this.to2DArray();\r\n  }\r\n\r\n  isRowVector() {\r\n    return this.rows === 1;\r\n  }\r\n\r\n  isColumnVector() {\r\n    return this.columns === 1;\r\n  }\r\n\r\n  isVector() {\r\n    return this.rows === 1 || this.columns === 1;\r\n  }\r\n\r\n  isSquare() {\r\n    return this.rows === this.columns;\r\n  }\r\n\r\n  isSymmetric() {\r\n    if (this.isSquare()) {\r\n      for (let i = 0; i < this.rows; i++) {\r\n        for (let j = 0; j <= i; j++) {\r\n          if (this.get(i, j) !== this.get(j, i)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isEchelonForm() {\r\n    let i = 0;\r\n    let j = 0;\r\n    let previousColumn = -1;\r\n    let isEchelonForm = true;\r\n    let checked = false;\r\n    while (i < this.rows && isEchelonForm) {\r\n      j = 0;\r\n      checked = false;\r\n      while (j < this.columns && checked === false) {\r\n        if (this.get(i, j) === 0) {\r\n          j++;\r\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\r\n          checked = true;\r\n          previousColumn = j;\r\n        } else {\r\n          isEchelonForm = false;\r\n          checked = true;\r\n        }\r\n      }\r\n      i++;\r\n    }\r\n    return isEchelonForm;\r\n  }\r\n\r\n  isReducedEchelonForm() {\r\n    let i = 0;\r\n    let j = 0;\r\n    let previousColumn = -1;\r\n    let isReducedEchelonForm = true;\r\n    let checked = false;\r\n    while (i < this.rows && isReducedEchelonForm) {\r\n      j = 0;\r\n      checked = false;\r\n      while (j < this.columns && checked === false) {\r\n        if (this.get(i, j) === 0) {\r\n          j++;\r\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\r\n          checked = true;\r\n          previousColumn = j;\r\n        } else {\r\n          isReducedEchelonForm = false;\r\n          checked = true;\r\n        }\r\n      }\r\n      for (let k = j + 1; k < this.rows; k++) {\r\n        if (this.get(i, k) !== 0) {\r\n          isReducedEchelonForm = false;\r\n        }\r\n      }\r\n      i++;\r\n    }\r\n    return isReducedEchelonForm;\r\n  }\r\n\r\n  echelonForm() {\r\n    let result = this.clone();\r\n    let h = 0;\r\n    let k = 0;\r\n    while (h < result.rows && k < result.columns) {\r\n      let iMax = h;\r\n      for (let i = h; i < result.rows; i++) {\r\n        if (result.get(i, k) > result.get(iMax, k)) {\r\n          iMax = i;\r\n        }\r\n      }\r\n      if (result.get(iMax, k) === 0) {\r\n        k++;\r\n      } else {\r\n        result.swapRows(h, iMax);\r\n        let tmp = result.get(h, k);\r\n        for (let j = k; j < result.columns; j++) {\r\n          result.set(h, j, result.get(h, j) / tmp);\r\n        }\r\n        for (let i = h + 1; i < result.rows; i++) {\r\n          let factor = result.get(i, k) / result.get(h, k);\r\n          result.set(i, k, 0);\r\n          for (let j = k + 1; j < result.columns; j++) {\r\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\r\n          }\r\n        }\r\n        h++;\r\n        k++;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  reducedEchelonForm() {\r\n    let result = this.echelonForm();\r\n    let m = result.columns;\r\n    let n = result.rows;\r\n    let h = n - 1;\r\n    while (h >= 0) {\r\n      if (result.maxRow(h) === 0) {\r\n        h--;\r\n      } else {\r\n        let p = 0;\r\n        let pivot = false;\r\n        while (p < n && pivot === false) {\r\n          if (result.get(h, p) === 1) {\r\n            pivot = true;\r\n          } else {\r\n            p++;\r\n          }\r\n        }\r\n        for (let i = 0; i < h; i++) {\r\n          let factor = result.get(i, p);\r\n          for (let j = p; j < m; j++) {\r\n            let tmp = result.get(i, j) - factor * result.get(h, j);\r\n            result.set(i, j, tmp);\r\n          }\r\n        }\r\n        h--;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  set() {\r\n    throw new Error('set method is unimplemented');\r\n  }\r\n\r\n  get() {\r\n    throw new Error('get method is unimplemented');\r\n  }\r\n\r\n  repeat(options = {}) {\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    const { rows = 1, columns = 1 } = options;\r\n    if (!Number.isInteger(rows) || rows <= 0) {\r\n      throw new TypeError('rows must be a positive integer');\r\n    }\r\n    if (!Number.isInteger(columns) || columns <= 0) {\r\n      throw new TypeError('columns must be a positive integer');\r\n    }\r\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n      }\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  fill(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, value);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  neg() {\r\n    return this.mulS(-1);\r\n  }\r\n\r\n  getRow(index) {\r\n    checkRowIndex(this, index);\r\n    let row = [];\r\n    for (let i = 0; i < this.columns; i++) {\r\n      row.push(this.get(index, i));\r\n    }\r\n    return row;\r\n  }\r\n\r\n  getRowVector(index) {\r\n    return Matrix.rowVector(this.getRow(index));\r\n  }\r\n\r\n  setRow(index, array) {\r\n    checkRowIndex(this, index);\r\n    array = checkRowVector(this, array);\r\n    for (let i = 0; i < this.columns; i++) {\r\n      this.set(index, i, array[i]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  swapRows(row1, row2) {\r\n    checkRowIndex(this, row1);\r\n    checkRowIndex(this, row2);\r\n    for (let i = 0; i < this.columns; i++) {\r\n      let temp = this.get(row1, i);\r\n      this.set(row1, i, this.get(row2, i));\r\n      this.set(row2, i, temp);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  getColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    let column = [];\r\n    for (let i = 0; i < this.rows; i++) {\r\n      column.push(this.get(i, index));\r\n    }\r\n    return column;\r\n  }\r\n\r\n  getColumnVector(index) {\r\n    return Matrix.columnVector(this.getColumn(index));\r\n  }\r\n\r\n  setColumn(index, array) {\r\n    checkColumnIndex(this, index);\r\n    array = checkColumnVector(this, array);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      this.set(i, index, array[i]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  swapColumns(column1, column2) {\r\n    checkColumnIndex(this, column1);\r\n    checkColumnIndex(this, column2);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      let temp = this.get(i, column1);\r\n      this.set(i, column1, this.get(i, column2));\r\n      this.set(i, column2, temp);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  addRowVector(vector) {\r\n    vector = checkRowVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + vector[j]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  subRowVector(vector) {\r\n    vector = checkRowVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - vector[j]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  mulRowVector(vector) {\r\n    vector = checkRowVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * vector[j]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  divRowVector(vector) {\r\n    vector = checkRowVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / vector[j]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  addColumnVector(vector) {\r\n    vector = checkColumnVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + vector[i]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  subColumnVector(vector) {\r\n    vector = checkColumnVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - vector[i]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  mulColumnVector(vector) {\r\n    vector = checkColumnVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * vector[i]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  divColumnVector(vector) {\r\n    vector = checkColumnVector(this, vector);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / vector[i]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  mulRow(index, value) {\r\n    checkRowIndex(this, index);\r\n    for (let i = 0; i < this.columns; i++) {\r\n      this.set(index, i, this.get(index, i) * value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  mulColumn(index, value) {\r\n    checkColumnIndex(this, index);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      this.set(i, index, this.get(i, index) * value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  max() {\r\n    let v = this.get(0, 0);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        if (this.get(i, j) > v) {\r\n          v = this.get(i, j);\r\n        }\r\n      }\r\n    }\r\n    return v;\r\n  }\r\n\r\n  maxIndex() {\r\n    let v = this.get(0, 0);\r\n    let idx = [0, 0];\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        if (this.get(i, j) > v) {\r\n          v = this.get(i, j);\r\n          idx[0] = i;\r\n          idx[1] = j;\r\n        }\r\n      }\r\n    }\r\n    return idx;\r\n  }\r\n\r\n  min() {\r\n    let v = this.get(0, 0);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        if (this.get(i, j) < v) {\r\n          v = this.get(i, j);\r\n        }\r\n      }\r\n    }\r\n    return v;\r\n  }\r\n\r\n  minIndex() {\r\n    let v = this.get(0, 0);\r\n    let idx = [0, 0];\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        if (this.get(i, j) < v) {\r\n          v = this.get(i, j);\r\n          idx[0] = i;\r\n          idx[1] = j;\r\n        }\r\n      }\r\n    }\r\n    return idx;\r\n  }\r\n\r\n  maxRow(row) {\r\n    checkRowIndex(this, row);\r\n    let v = this.get(row, 0);\r\n    for (let i = 1; i < this.columns; i++) {\r\n      if (this.get(row, i) > v) {\r\n        v = this.get(row, i);\r\n      }\r\n    }\r\n    return v;\r\n  }\r\n\r\n  maxRowIndex(row) {\r\n    checkRowIndex(this, row);\r\n    let v = this.get(row, 0);\r\n    let idx = [row, 0];\r\n    for (let i = 1; i < this.columns; i++) {\r\n      if (this.get(row, i) > v) {\r\n        v = this.get(row, i);\r\n        idx[1] = i;\r\n      }\r\n    }\r\n    return idx;\r\n  }\r\n\r\n  minRow(row) {\r\n    checkRowIndex(this, row);\r\n    let v = this.get(row, 0);\r\n    for (let i = 1; i < this.columns; i++) {\r\n      if (this.get(row, i) < v) {\r\n        v = this.get(row, i);\r\n      }\r\n    }\r\n    return v;\r\n  }\r\n\r\n  minRowIndex(row) {\r\n    checkRowIndex(this, row);\r\n    let v = this.get(row, 0);\r\n    let idx = [row, 0];\r\n    for (let i = 1; i < this.columns; i++) {\r\n      if (this.get(row, i) < v) {\r\n        v = this.get(row, i);\r\n        idx[1] = i;\r\n      }\r\n    }\r\n    return idx;\r\n  }\r\n\r\n  maxColumn(column) {\r\n    checkColumnIndex(this, column);\r\n    let v = this.get(0, column);\r\n    for (let i = 1; i < this.rows; i++) {\r\n      if (this.get(i, column) > v) {\r\n        v = this.get(i, column);\r\n      }\r\n    }\r\n    return v;\r\n  }\r\n\r\n  maxColumnIndex(column) {\r\n    checkColumnIndex(this, column);\r\n    let v = this.get(0, column);\r\n    let idx = [0, column];\r\n    for (let i = 1; i < this.rows; i++) {\r\n      if (this.get(i, column) > v) {\r\n        v = this.get(i, column);\r\n        idx[0] = i;\r\n      }\r\n    }\r\n    return idx;\r\n  }\r\n\r\n  minColumn(column) {\r\n    checkColumnIndex(this, column);\r\n    let v = this.get(0, column);\r\n    for (let i = 1; i < this.rows; i++) {\r\n      if (this.get(i, column) < v) {\r\n        v = this.get(i, column);\r\n      }\r\n    }\r\n    return v;\r\n  }\r\n\r\n  minColumnIndex(column) {\r\n    checkColumnIndex(this, column);\r\n    let v = this.get(0, column);\r\n    let idx = [0, column];\r\n    for (let i = 1; i < this.rows; i++) {\r\n      if (this.get(i, column) < v) {\r\n        v = this.get(i, column);\r\n        idx[0] = i;\r\n      }\r\n    }\r\n    return idx;\r\n  }\r\n\r\n  diag() {\r\n    let min = Math.min(this.rows, this.columns);\r\n    let diag = [];\r\n    for (let i = 0; i < min; i++) {\r\n      diag.push(this.get(i, i));\r\n    }\r\n    return diag;\r\n  }\r\n\r\n  norm(type = 'frobenius') {\r\n    let result = 0;\r\n    if (type === 'max') {\r\n      return this.max();\r\n    } else if (type === 'frobenius') {\r\n      for (let i = 0; i < this.rows; i++) {\r\n        for (let j = 0; j < this.columns; j++) {\r\n          result = result + this.get(i, j) * this.get(i, j);\r\n        }\r\n      }\r\n      return Math.sqrt(result);\r\n    } else {\r\n      throw new RangeError(`unknown norm type: ${type}`);\r\n    }\r\n  }\r\n\r\n  cumulativeSum() {\r\n    let sum = 0;\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        sum += this.get(i, j);\r\n        this.set(i, j, sum);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  dot(vector2) {\r\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n    let vector1 = this.to1DArray();\r\n    if (vector1.length !== vector2.length) {\r\n      throw new RangeError('vectors do not have the same size');\r\n    }\r\n    let dot = 0;\r\n    for (let i = 0; i < vector1.length; i++) {\r\n      dot += vector1[i] * vector2[i];\r\n    }\r\n    return dot;\r\n  }\r\n\r\n  mmul(other) {\r\n    other = Matrix.checkMatrix(other);\r\n\r\n    let m = this.rows;\r\n    let n = this.columns;\r\n    let p = other.columns;\r\n\r\n    let result = new Matrix(m, p);\r\n\r\n    let Bcolj = new Float64Array(n);\r\n    for (let j = 0; j < p; j++) {\r\n      for (let k = 0; k < n; k++) {\r\n        Bcolj[k] = other.get(k, j);\r\n      }\r\n\r\n      for (let i = 0; i < m; i++) {\r\n        let s = 0;\r\n        for (let k = 0; k < n; k++) {\r\n          s += this.get(i, k) * Bcolj[k];\r\n        }\r\n\r\n        result.set(i, j, s);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  strassen2x2(other) {\r\n    other = Matrix.checkMatrix(other);\r\n    let result = new Matrix(2, 2);\r\n    const a11 = this.get(0, 0);\r\n    const b11 = other.get(0, 0);\r\n    const a12 = this.get(0, 1);\r\n    const b12 = other.get(0, 1);\r\n    const a21 = this.get(1, 0);\r\n    const b21 = other.get(1, 0);\r\n    const a22 = this.get(1, 1);\r\n    const b22 = other.get(1, 1);\r\n\r\n    // Compute intermediate values.\r\n    const m1 = (a11 + a22) * (b11 + b22);\r\n    const m2 = (a21 + a22) * b11;\r\n    const m3 = a11 * (b12 - b22);\r\n    const m4 = a22 * (b21 - b11);\r\n    const m5 = (a11 + a12) * b22;\r\n    const m6 = (a21 - a11) * (b11 + b12);\r\n    const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n    // Combine intermediate values into the output.\r\n    const c00 = m1 + m4 - m5 + m7;\r\n    const c01 = m3 + m5;\r\n    const c10 = m2 + m4;\r\n    const c11 = m1 - m2 + m3 + m6;\r\n\r\n    result.set(0, 0, c00);\r\n    result.set(0, 1, c01);\r\n    result.set(1, 0, c10);\r\n    result.set(1, 1, c11);\r\n    return result;\r\n  }\r\n\r\n  strassen3x3(other) {\r\n    other = Matrix.checkMatrix(other);\r\n    let result = new Matrix(3, 3);\r\n\r\n    const a00 = this.get(0, 0);\r\n    const a01 = this.get(0, 1);\r\n    const a02 = this.get(0, 2);\r\n    const a10 = this.get(1, 0);\r\n    const a11 = this.get(1, 1);\r\n    const a12 = this.get(1, 2);\r\n    const a20 = this.get(2, 0);\r\n    const a21 = this.get(2, 1);\r\n    const a22 = this.get(2, 2);\r\n\r\n    const b00 = other.get(0, 0);\r\n    const b01 = other.get(0, 1);\r\n    const b02 = other.get(0, 2);\r\n    const b10 = other.get(1, 0);\r\n    const b11 = other.get(1, 1);\r\n    const b12 = other.get(1, 2);\r\n    const b20 = other.get(2, 0);\r\n    const b21 = other.get(2, 1);\r\n    const b22 = other.get(2, 2);\r\n\r\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n    const m2 = (a00 - a10) * (-b01 + b11);\r\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n    const m5 = (a10 + a11) * (-b00 + b01);\r\n    const m6 = a00 * b00;\r\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n    const m8 = (-a00 + a20) * (b02 - b12);\r\n    const m9 = (a20 + a21) * (-b00 + b02);\r\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n    const m13 = (a02 - a22) * (b11 - b21);\r\n    const m14 = a02 * b20;\r\n    const m15 = (a21 + a22) * (-b20 + b21);\r\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n    const m17 = (a02 - a12) * (b12 - b22);\r\n    const m18 = (a11 + a12) * (-b20 + b22);\r\n    const m19 = a01 * b10;\r\n    const m20 = a12 * b21;\r\n    const m21 = a10 * b02;\r\n    const m22 = a20 * b01;\r\n    const m23 = a22 * b22;\r\n\r\n    const c00 = m6 + m14 + m19;\r\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n    const c11 = m2 + m4 + m5 + m6 + m20;\r\n    const c12 = m14 + m16 + m17 + m18 + m21;\r\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n    const c21 = m12 + m13 + m14 + m15 + m22;\r\n    const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n    result.set(0, 0, c00);\r\n    result.set(0, 1, c01);\r\n    result.set(0, 2, c02);\r\n    result.set(1, 0, c10);\r\n    result.set(1, 1, c11);\r\n    result.set(1, 2, c12);\r\n    result.set(2, 0, c20);\r\n    result.set(2, 1, c21);\r\n    result.set(2, 2, c22);\r\n    return result;\r\n  }\r\n\r\n  mmulStrassen(y) {\r\n    y = Matrix.checkMatrix(y);\r\n    let x = this.clone();\r\n    let r1 = x.rows;\r\n    let c1 = x.columns;\r\n    let r2 = y.rows;\r\n    let c2 = y.columns;\r\n    if (c1 !== r2) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\r\n      );\r\n    }\r\n\r\n    // Put a matrix into the top left of a matrix of zeros.\r\n    // `rows` and `cols` are the dimensions of the output matrix.\r\n    function embed(mat, rows, cols) {\r\n      let r = mat.rows;\r\n      let c = mat.columns;\r\n      if (r === rows && c === cols) {\r\n        return mat;\r\n      } else {\r\n        let resultat = AbstractMatrix.zeros(rows, cols);\r\n        resultat = resultat.setSubMatrix(mat, 0, 0);\r\n        return resultat;\r\n      }\r\n    }\r\n\r\n    // Make sure both matrices are the same size.\r\n    // This is exclusively for simplicity:\r\n    // this algorithm can be implemented with matrices of different sizes.\r\n\r\n    let r = Math.max(r1, r2);\r\n    let c = Math.max(c1, c2);\r\n    x = embed(x, r, c);\r\n    y = embed(y, r, c);\r\n\r\n    // Our recursive multiplication function.\r\n    function blockMult(a, b, rows, cols) {\r\n      // For small matrices, resort to naive multiplication.\r\n      if (rows <= 512 || cols <= 512) {\r\n        return a.mmul(b); // a is equivalent to this\r\n      }\r\n\r\n      // Apply dynamic padding.\r\n      if (rows % 2 === 1 && cols % 2 === 1) {\r\n        a = embed(a, rows + 1, cols + 1);\r\n        b = embed(b, rows + 1, cols + 1);\r\n      } else if (rows % 2 === 1) {\r\n        a = embed(a, rows + 1, cols);\r\n        b = embed(b, rows + 1, cols);\r\n      } else if (cols % 2 === 1) {\r\n        a = embed(a, rows, cols + 1);\r\n        b = embed(b, rows, cols + 1);\r\n      }\r\n\r\n      let halfRows = parseInt(a.rows / 2, 10);\r\n      let halfCols = parseInt(a.columns / 2, 10);\r\n      // Subdivide input matrices.\r\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n      // Compute intermediate values.\r\n      let m1 = blockMult(\r\n        AbstractMatrix.add(a11, a22),\r\n        AbstractMatrix.add(b11, b22),\r\n        halfRows,\r\n        halfCols,\r\n      );\r\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\r\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\r\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\r\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\r\n      let m6 = blockMult(\r\n        AbstractMatrix.sub(a21, a11),\r\n        AbstractMatrix.add(b11, b12),\r\n        halfRows,\r\n        halfCols,\r\n      );\r\n      let m7 = blockMult(\r\n        AbstractMatrix.sub(a12, a22),\r\n        AbstractMatrix.add(b21, b22),\r\n        halfRows,\r\n        halfCols,\r\n      );\r\n\r\n      // Combine intermediate values into the output.\r\n      let c11 = AbstractMatrix.add(m1, m4);\r\n      c11.sub(m5);\r\n      c11.add(m7);\r\n      let c12 = AbstractMatrix.add(m3, m5);\r\n      let c21 = AbstractMatrix.add(m2, m4);\r\n      let c22 = AbstractMatrix.sub(m1, m2);\r\n      c22.add(m3);\r\n      c22.add(m6);\r\n\r\n      // Crop output to the desired size (undo dynamic padding).\r\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n      resultat = resultat.setSubMatrix(c11, 0, 0);\r\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n    }\r\n    return blockMult(x, y, r, c);\r\n  }\r\n\r\n  scaleRows(options = {}) {\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    const { min = 0, max = 1 } = options;\r\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\r\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\r\n    if (min >= max) throw new RangeError('min must be smaller than max');\r\n    let newMatrix = new Matrix(this.rows, this.columns);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      const row = this.getRow(i);\r\n      rescale(row, { min, max, output: row });\r\n      newMatrix.setRow(i, row);\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  scaleColumns(options = {}) {\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    const { min = 0, max = 1 } = options;\r\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\r\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\r\n    if (min >= max) throw new RangeError('min must be smaller than max');\r\n    let newMatrix = new Matrix(this.rows, this.columns);\r\n    for (let i = 0; i < this.columns; i++) {\r\n      const column = this.getColumn(i);\r\n      rescale(column, {\r\n        min: min,\r\n        max: max,\r\n        output: column,\r\n      });\r\n      newMatrix.setColumn(i, column);\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  flipRows() {\r\n    const middle = Math.ceil(this.columns / 2);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < middle; j++) {\r\n        let first = this.get(i, j);\r\n        let last = this.get(i, this.columns - 1 - j);\r\n        this.set(i, j, last);\r\n        this.set(i, this.columns - 1 - j, first);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  flipColumns() {\r\n    const middle = Math.ceil(this.rows / 2);\r\n    for (let j = 0; j < this.columns; j++) {\r\n      for (let i = 0; i < middle; i++) {\r\n        let first = this.get(i, j);\r\n        let last = this.get(this.rows - 1 - i, j);\r\n        this.set(i, j, last);\r\n        this.set(this.rows - 1 - i, j, first);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  kroneckerProduct(other) {\r\n    other = Matrix.checkMatrix(other);\r\n\r\n    let m = this.rows;\r\n    let n = this.columns;\r\n    let p = other.rows;\r\n    let q = other.columns;\r\n\r\n    let result = new Matrix(m * p, n * q);\r\n    for (let i = 0; i < m; i++) {\r\n      for (let j = 0; j < n; j++) {\r\n        for (let k = 0; k < p; k++) {\r\n          for (let l = 0; l < q; l++) {\r\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  transpose() {\r\n    let result = new Matrix(this.columns, this.rows);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        result.set(j, i, this.get(i, j));\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  sortRows(compareFunction = compareNumbers) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      this.setRow(i, this.getRow(i).sort(compareFunction));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  sortColumns(compareFunction = compareNumbers) {\r\n    for (let i = 0; i < this.columns; i++) {\r\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  subMatrix(startRow, endRow, startColumn, endColumn) {\r\n    checkRange(this, startRow, endRow, startColumn, endColumn);\r\n    let newMatrix = new Matrix(\r\n      endRow - startRow + 1,\r\n      endColumn - startColumn + 1,\r\n    );\r\n    for (let i = startRow; i <= endRow; i++) {\r\n      for (let j = startColumn; j <= endColumn; j++) {\r\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\r\n      }\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  subMatrixRow(indices, startColumn, endColumn) {\r\n    if (startColumn === undefined) startColumn = 0;\r\n    if (endColumn === undefined) endColumn = this.columns - 1;\r\n    if (\r\n      startColumn > endColumn ||\r\n      startColumn < 0 ||\r\n      startColumn >= this.columns ||\r\n      endColumn < 0 ||\r\n      endColumn >= this.columns\r\n    ) {\r\n      throw new RangeError('Argument out of range');\r\n    }\r\n\r\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\r\n    for (let i = 0; i < indices.length; i++) {\r\n      for (let j = startColumn; j <= endColumn; j++) {\r\n        if (indices[i] < 0 || indices[i] >= this.rows) {\r\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n        }\r\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n      }\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  subMatrixColumn(indices, startRow, endRow) {\r\n    if (startRow === undefined) startRow = 0;\r\n    if (endRow === undefined) endRow = this.rows - 1;\r\n    if (\r\n      startRow > endRow ||\r\n      startRow < 0 ||\r\n      startRow >= this.rows ||\r\n      endRow < 0 ||\r\n      endRow >= this.rows\r\n    ) {\r\n      throw new RangeError('Argument out of range');\r\n    }\r\n\r\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\r\n    for (let i = 0; i < indices.length; i++) {\r\n      for (let j = startRow; j <= endRow; j++) {\r\n        if (indices[i] < 0 || indices[i] >= this.columns) {\r\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n        }\r\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n      }\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  setSubMatrix(matrix, startRow, startColumn) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    let endRow = startRow + matrix.rows - 1;\r\n    let endColumn = startColumn + matrix.columns - 1;\r\n    checkRange(this, startRow, endRow, startColumn, endColumn);\r\n    for (let i = 0; i < matrix.rows; i++) {\r\n      for (let j = 0; j < matrix.columns; j++) {\r\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  selection(rowIndices, columnIndices) {\r\n    let indices = checkIndices(this, rowIndices, columnIndices);\r\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\r\n    for (let i = 0; i < indices.row.length; i++) {\r\n      let rowIndex = indices.row[i];\r\n      for (let j = 0; j < indices.column.length; j++) {\r\n        let columnIndex = indices.column[j];\r\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\r\n      }\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  trace() {\r\n    let min = Math.min(this.rows, this.columns);\r\n    let trace = 0;\r\n    for (let i = 0; i < min; i++) {\r\n      trace += this.get(i, i);\r\n    }\r\n    return trace;\r\n  }\r\n\r\n  clone() {\r\n    let newMatrix = new Matrix(this.rows, this.columns);\r\n    for (let row = 0; row < this.rows; row++) {\r\n      for (let column = 0; column < this.columns; column++) {\r\n        newMatrix.set(row, column, this.get(row, column));\r\n      }\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  sum(by) {\r\n    switch (by) {\r\n      case 'row':\r\n        return sumByRow(this);\r\n      case 'column':\r\n        return sumByColumn(this);\r\n      case undefined:\r\n        return sumAll(this);\r\n      default:\r\n        throw new Error(`invalid option: ${by}`);\r\n    }\r\n  }\r\n\r\n  product(by) {\r\n    switch (by) {\r\n      case 'row':\r\n        return productByRow(this);\r\n      case 'column':\r\n        return productByColumn(this);\r\n      case undefined:\r\n        return productAll(this);\r\n      default:\r\n        throw new Error(`invalid option: ${by}`);\r\n    }\r\n  }\r\n\r\n  mean(by) {\r\n    const sum = this.sum(by);\r\n    switch (by) {\r\n      case 'row': {\r\n        for (let i = 0; i < this.rows; i++) {\r\n          sum[i] /= this.columns;\r\n        }\r\n        return sum;\r\n      }\r\n      case 'column': {\r\n        for (let i = 0; i < this.columns; i++) {\r\n          sum[i] /= this.rows;\r\n        }\r\n        return sum;\r\n      }\r\n      case undefined:\r\n        return sum / this.size;\r\n      default:\r\n        throw new Error(`invalid option: ${by}`);\r\n    }\r\n  }\r\n\r\n  variance(by, options = {}) {\r\n    if (typeof by === 'object') {\r\n      options = by;\r\n      by = undefined;\r\n    }\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    const { unbiased = true, mean = this.mean(by) } = options;\r\n    if (typeof unbiased !== 'boolean') {\r\n      throw new TypeError('unbiased must be a boolean');\r\n    }\r\n    switch (by) {\r\n      case 'row': {\r\n        if (!Array.isArray(mean)) {\r\n          throw new TypeError('mean must be an array');\r\n        }\r\n        return varianceByRow(this, unbiased, mean);\r\n      }\r\n      case 'column': {\r\n        if (!Array.isArray(mean)) {\r\n          throw new TypeError('mean must be an array');\r\n        }\r\n        return varianceByColumn(this, unbiased, mean);\r\n      }\r\n      case undefined: {\r\n        if (typeof mean !== 'number') {\r\n          throw new TypeError('mean must be a number');\r\n        }\r\n        return varianceAll(this, unbiased, mean);\r\n      }\r\n      default:\r\n        throw new Error(`invalid option: ${by}`);\r\n    }\r\n  }\r\n\r\n  standardDeviation(by, options) {\r\n    if (typeof by === 'object') {\r\n      options = by;\r\n      by = undefined;\r\n    }\r\n    const variance = this.variance(by, options);\r\n    if (by === undefined) {\r\n      return Math.sqrt(variance);\r\n    } else {\r\n      for (let i = 0; i < variance.length; i++) {\r\n        variance[i] = Math.sqrt(variance[i]);\r\n      }\r\n      return variance;\r\n    }\r\n  }\r\n\r\n  center(by, options = {}) {\r\n    if (typeof by === 'object') {\r\n      options = by;\r\n      by = undefined;\r\n    }\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    const { center = this.mean(by) } = options;\r\n    switch (by) {\r\n      case 'row': {\r\n        if (!Array.isArray(center)) {\r\n          throw new TypeError('center must be an array');\r\n        }\r\n        centerByRow(this, center);\r\n        return this;\r\n      }\r\n      case 'column': {\r\n        if (!Array.isArray(center)) {\r\n          throw new TypeError('center must be an array');\r\n        }\r\n        centerByColumn(this, center);\r\n        return this;\r\n      }\r\n      case undefined: {\r\n        if (typeof center !== 'number') {\r\n          throw new TypeError('center must be a number');\r\n        }\r\n        centerAll(this, center);\r\n        return this;\r\n      }\r\n      default:\r\n        throw new Error(`invalid option: ${by}`);\r\n    }\r\n  }\r\n\r\n  scale(by, options = {}) {\r\n    if (typeof by === 'object') {\r\n      options = by;\r\n      by = undefined;\r\n    }\r\n    if (typeof options !== 'object') {\r\n      throw new TypeError('options must be an object');\r\n    }\r\n    let scale = options.scale;\r\n    switch (by) {\r\n      case 'row': {\r\n        if (scale === undefined) {\r\n          scale = getScaleByRow(this);\r\n        } else if (!Array.isArray(scale)) {\r\n          throw new TypeError('scale must be an array');\r\n        }\r\n        scaleByRow(this, scale);\r\n        return this;\r\n      }\r\n      case 'column': {\r\n        if (scale === undefined) {\r\n          scale = getScaleByColumn(this);\r\n        } else if (!Array.isArray(scale)) {\r\n          throw new TypeError('scale must be an array');\r\n        }\r\n        scaleByColumn(this, scale);\r\n        return this;\r\n      }\r\n      case undefined: {\r\n        if (scale === undefined) {\r\n          scale = getScaleAll(this);\r\n        } else if (typeof scale !== 'number') {\r\n          throw new TypeError('scale must be a number');\r\n        }\r\n        scaleAll(this, scale);\r\n        return this;\r\n      }\r\n      default:\r\n        throw new Error(`invalid option: ${by}`);\r\n    }\r\n  }\r\n\r\n  toString(options) {\r\n    return inspectMatrixWithOptions(this, options);\r\n  }\r\n}\r\n\r\nAbstractMatrix.prototype.klass = 'Matrix';\r\nif (typeof Symbol !== 'undefined') {\r\n  AbstractMatrix.prototype[\r\n    Symbol.for('nodejs.util.inspect.custom')\r\n  ] = inspectMatrix;\r\n}\r\n\r\nfunction compareNumbers(a, b) {\r\n  return a - b;\r\n}\r\n\r\n// Synonyms\r\nAbstractMatrix.random = AbstractMatrix.rand;\r\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\r\nAbstractMatrix.diagonal = AbstractMatrix.diag;\r\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\r\nAbstractMatrix.identity = AbstractMatrix.eye;\r\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\r\nAbstractMatrix.prototype.tensorProduct =\r\n  AbstractMatrix.prototype.kroneckerProduct;\r\n\r\nexport default class Matrix extends AbstractMatrix {\r\n  constructor(nRows, nColumns) {\r\n    super();\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      this.data = [];\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (let i = 0; i < nRows; i++) {\r\n          this.data.push(new Float64Array(nColumns));\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const arrayData = nRows;\r\n      nRows = arrayData.length;\r\n      nColumns = arrayData[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element',\r\n        );\r\n      }\r\n      this.data = [];\r\n      for (let i = 0; i < nRows; i++) {\r\n        if (arrayData[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this.data.push(Float64Array.from(arrayData[i]));\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array',\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.data.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = Float64Array.from(checkRowVector(this, array, true));\r\n    this.data.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      const newRow = new Float64Array(this.columns - 1);\r\n      for (let j = 0; j < index; j++) {\r\n        newRow[j] = this.data[i][j];\r\n      }\r\n      for (let j = index + 1; j < this.columns; j++) {\r\n        newRow[j - 1] = this.data[i][j];\r\n      }\r\n      this.data[i] = newRow;\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (let i = 0; i < this.rows; i++) {\r\n      const newRow = new Float64Array(this.columns + 1);\r\n      let j = 0;\r\n      for (; j < index; j++) {\r\n        newRow[j] = this.data[i][j];\r\n      }\r\n      newRow[j++] = array[i];\r\n      for (; j < this.columns + 1; j++) {\r\n        newRow[j] = this.data[i][j - 1];\r\n      }\r\n      this.data[i] = newRow;\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n\r\ninstallMathOperations(AbstractMatrix, Matrix);\r\n","import { AbstractMatrix } from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n}\r\n","import { checkColumnIndex } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    checkColumnIndex(matrix, column);\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import { checkRowIndex } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    checkRowIndex(matrix, row);\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    let indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value,\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n    );\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value,\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n    );\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import { AbstractMatrix } from '../matrix';\r\n\r\nexport default class WrapperMatrix1D extends AbstractMatrix {\r\n  constructor(data, options = {}) {\r\n    const { rows = 1 } = options;\r\n\r\n    if (data.length % rows !== 0) {\r\n      throw new Error('the data length is not divisible by the number of rows');\r\n    }\r\n    super();\r\n    this.rows = rows;\r\n    this.columns = data.length / rows;\r\n    this.data = data;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    let index = this._calculateIndex(rowIndex, columnIndex);\r\n    this.data[index] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    let index = this._calculateIndex(rowIndex, columnIndex);\r\n    return this.data[index];\r\n  }\r\n\r\n  _calculateIndex(row, column) {\r\n    return row * this.columns + column;\r\n  }\r\n}\r\n","import { AbstractMatrix } from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix {\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n}\r\n","import WrapperMatrix1D from './WrapperMatrix1D';\r\nimport WrapperMatrix2D from './WrapperMatrix2D';\r\n\r\nexport function wrap(array, options) {\r\n  if (Array.isArray(array)) {\r\n    if (array[0] && Array.isArray(array[0])) {\r\n      return new WrapperMatrix2D(array);\r\n    } else {\r\n      return new WrapperMatrix1D(array, options);\r\n    }\r\n  } else {\r\n    throw new Error('the argument is not an array');\r\n  }\r\n}\r\n","import Matrix from '../matrix';\r\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\r\n\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    let lu = matrix.clone();\r\n    let rows = lu.rows;\r\n    let columns = lu.columns;\r\n    let pivotVector = new Float64Array(rows);\r\n    let pivotSign = 1;\r\n    let i, j, k, p, s, t, v;\r\n    let LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Float64Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  isSingular() {\r\n    let data = this.LU;\r\n    let col = data.columns;\r\n    for (let j = 0; j < col; j++) {\r\n      if (data.get(j, j) === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    let lu = this.LU;\r\n    let rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    let count = value.columns;\r\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    let columns = lu.columns;\r\n    let i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  get determinant() {\r\n    let data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    let determinant = this.pivotSign;\r\n    let col = data.columns;\r\n    for (let j = 0; j < col; j++) {\r\n      determinant *= data.get(j, j);\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  get lowerTriangularMatrix() {\r\n    let data = this.LU;\r\n    let rows = data.rows;\r\n    let columns = data.columns;\r\n    let X = new Matrix(rows, columns);\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X.set(i, j, data.get(i, j));\r\n        } else if (i === j) {\r\n          X.set(i, j, 1);\r\n        } else {\r\n          X.set(i, j, 0);\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  get upperTriangularMatrix() {\r\n    let data = this.LU;\r\n    let rows = data.rows;\r\n    let columns = data.columns;\r\n    let X = new Matrix(rows, columns);\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X.set(i, j, data.get(i, j));\r\n        } else {\r\n          X.set(i, j, 0);\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  get pivotPermutationVector() {\r\n    return Array.from(this.pivotVector);\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  let r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n","import Matrix from '../matrix';\r\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\r\n\r\nimport { hypotenuse } from './util';\r\n\r\nexport default class QrDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    let qr = value.clone();\r\n    let m = value.rows;\r\n    let n = value.columns;\r\n    let rdiag = new Float64Array(n);\r\n    let i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      let nrm = 0;\r\n      for (i = k; i < m; i++) {\r\n        nrm = hypotenuse(nrm, qr.get(i, k));\r\n      }\r\n      if (nrm !== 0) {\r\n        if (qr.get(k, k) < 0) {\r\n          nrm = -nrm;\r\n        }\r\n        for (i = k; i < m; i++) {\r\n          qr.set(i, k, qr.get(i, k) / nrm);\r\n        }\r\n        qr.set(k, k, qr.get(k, k) + 1);\r\n        for (j = k + 1; j < n; j++) {\r\n          s = 0;\r\n          for (i = k; i < m; i++) {\r\n            s += qr.get(i, k) * qr.get(i, j);\r\n          }\r\n          s = -s / qr.get(k, k);\r\n          for (i = k; i < m; i++) {\r\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\r\n          }\r\n        }\r\n      }\r\n      rdiag[k] = -nrm;\r\n    }\r\n\r\n    this.QR = qr;\r\n    this.Rdiag = rdiag;\r\n  }\r\n\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    let qr = this.QR;\r\n    let m = qr.rows;\r\n\r\n    if (value.rows !== m) {\r\n      throw new Error('Matrix row dimensions must agree');\r\n    }\r\n    if (!this.isFullRank()) {\r\n      throw new Error('Matrix is rank deficient');\r\n    }\r\n\r\n    let count = value.columns;\r\n    let X = value.clone();\r\n    let n = qr.columns;\r\n    let i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        s = 0;\r\n        for (i = k; i < m; i++) {\r\n          s += qr.get(i, k) * X.get(i, j);\r\n        }\r\n        s = -s / qr.get(k, k);\r\n        for (i = k; i < m; i++) {\r\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\r\n        }\r\n      }\r\n    }\r\n    for (k = n - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\r\n        }\r\n      }\r\n    }\r\n\r\n    return X.subMatrix(0, n - 1, 0, count - 1);\r\n  }\r\n\r\n  isFullRank() {\r\n    let columns = this.QR.columns;\r\n    for (let i = 0; i < columns; i++) {\r\n      if (this.Rdiag[i] === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  get upperTriangularMatrix() {\r\n    let qr = this.QR;\r\n    let n = qr.columns;\r\n    let X = new Matrix(n, n);\r\n    let i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        if (i < j) {\r\n          X.set(i, j, qr.get(i, j));\r\n        } else if (i === j) {\r\n          X.set(i, j, this.Rdiag[i]);\r\n        } else {\r\n          X.set(i, j, 0);\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  get orthogonalMatrix() {\r\n    let qr = this.QR;\r\n    let rows = qr.rows;\r\n    let columns = qr.columns;\r\n    let X = new Matrix(rows, columns);\r\n    let i, j, k, s;\r\n\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (i = 0; i < rows; i++) {\r\n        X.set(i, k, 0);\r\n      }\r\n      X.set(k, k, 1);\r\n      for (j = k; j < columns; j++) {\r\n        if (qr.get(k, k) !== 0) {\r\n          s = 0;\r\n          for (i = k; i < rows; i++) {\r\n            s += qr.get(i, k) * X.get(i, j);\r\n          }\r\n\r\n          s = -s / qr.get(k, k);\r\n\r\n          for (i = k; i < rows; i++) {\r\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n","import Matrix from '../matrix';\r\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\r\n\r\nimport { hypotenuse } from './util';\r\n\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    let m = value.rows;\r\n    let n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false,\r\n    } = options;\r\n\r\n    let wantu = Boolean(computeLeftSingularVectors);\r\n    let wantv = Boolean(computeRightSingularVectors);\r\n\r\n    let swapped = false;\r\n    let a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        let aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    let nu = Math.min(m, n);\r\n    let ni = Math.min(m + 1, n);\r\n    let s = new Float64Array(ni);\r\n    let U = new Matrix(m, nu);\r\n    let V = new Matrix(n, n);\r\n\r\n    let e = new Float64Array(n);\r\n    let work = new Float64Array(m);\r\n\r\n    let si = new Float64Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    let nct = Math.min(m - 1, n);\r\n    let nrt = Math.max(0, Math.min(n - 2, m));\r\n    let mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a.get(i, k));\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a.get(k, k) < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a.set(i, k, a.get(i, k) / s[k]);\r\n          }\r\n          a.set(k, k, a.get(k, k) + 1);\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a.get(i, k) * a.get(i, j);\r\n          }\r\n          t = -t / a.get(k, k);\r\n          for (let i = k; i < m; i++) {\r\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\r\n          }\r\n        }\r\n        e[j] = a.get(k, j);\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U.set(i, k, a.get(i, k));\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a.get(i, j);\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a.set(i, j, a.get(i, j) + t * work[i]);\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V.set(i, k, e[i]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a.get(nct, nct);\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a.get(nrt, p - 1);\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U.set(i, j, 0);\r\n        }\r\n        U.set(j, j, 1);\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U.get(i, k) * U.get(i, j);\r\n            }\r\n            t = -t / U.get(k, k);\r\n            for (let i = k; i < m; i++) {\r\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U.set(i, k, -U.get(i, k));\r\n          }\r\n          U.set(k, k, 1 + U.get(k, k));\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U.set(i, k, 0);\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U.set(i, k, 0);\r\n          }\r\n          U.set(k, k, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V.get(i, k) * V.get(i, j);\r\n            }\r\n            t = -t / V.get(k + 1, k);\r\n            for (let i = k + 1; i < n; i++) {\r\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V.set(i, k, 0);\r\n        }\r\n        V.set(k, k, 1);\r\n      }\r\n    }\r\n\r\n    let pp = p - 1;\r\n    let iter = 0;\r\n    let eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\r\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\r\n                V.set(i, j, t);\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\r\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\r\n                U.set(i, j, t);\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k]),\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\r\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\r\n                V.set(i, j, t);\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\r\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\r\n                U.set(i, j, t);\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V.set(i, k, -V.get(i, k));\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V.get(i, k + 1);\r\n                V.set(i, k + 1, V.get(i, k));\r\n                V.set(i, k, t);\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U.get(i, k + 1);\r\n                U.set(i, k + 1, U.get(i, k));\r\n                U.set(i, k, t);\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      let tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  solve(value) {\r\n    let Y = value;\r\n    let e = this.threshold;\r\n    let scols = this.s.length;\r\n    let Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls.set(i, i, 0);\r\n      } else {\r\n        Ls.set(i, i, 1 / this.s[i]);\r\n      }\r\n    }\r\n\r\n    let U = this.U;\r\n    let V = this.rightSingularVectors;\r\n\r\n    let VL = V.mmul(Ls);\r\n    let vrows = V.rows;\r\n    let urows = U.rows;\r\n    let VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL.get(i, k) * U.get(j, k);\r\n        }\r\n        VLU.set(i, j, sum);\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  inverse() {\r\n    let V = this.V;\r\n    let e = this.threshold;\r\n    let vrows = V.rows;\r\n    let vcols = V.columns;\r\n    let X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X.set(i, j, V.get(i, j) / this.s[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let U = this.U;\r\n\r\n    let urows = U.rows;\r\n    let ucols = U.columns;\r\n    let Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X.get(i, k) * U.get(j, k);\r\n        }\r\n        Y.set(i, j, sum);\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  get rank() {\r\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    let r = 0;\r\n    let s = this.s;\r\n    for (let i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  get diagonal() {\r\n    return Array.from(this.s);\r\n  }\r\n\r\n  get threshold() {\r\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  get leftSingularVectors() {\r\n    return this.U;\r\n  }\r\n\r\n  get rightSingularVectors() {\r\n    return this.V;\r\n  }\r\n\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","import LuDecomposition from './dc/lu';\r\nimport QrDecomposition from './dc/qr';\r\nimport SingularValueDecomposition from './dc/svd';\r\nimport Matrix from './matrix';\r\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\r\n\r\nexport function inverse(matrix, useSVD = false) {\r\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(matrix).inverse();\r\n  } else {\r\n    return solve(matrix, Matrix.eye(matrix.rows));\r\n  }\r\n}\r\n\r\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\r\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\r\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\r\n  } else {\r\n    return leftHandSide.isSquare()\r\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\r\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\r\n  }\r\n}\r\n","import LuDecomposition from './dc/lu';\r\nimport Matrix from './matrix';\r\nimport MatrixSelectionView from './views/selection';\r\n\r\nexport function determinant(matrix) {\r\n  matrix = Matrix.checkMatrix(matrix);\r\n  if (matrix.isSquare()) {\r\n    let a, b, c, d;\r\n    if (matrix.columns === 2) {\r\n      // 2 x 2 matrix\r\n      a = matrix.get(0, 0);\r\n      b = matrix.get(0, 1);\r\n      c = matrix.get(1, 0);\r\n      d = matrix.get(1, 1);\r\n\r\n      return a * d - b * c;\r\n    } else if (matrix.columns === 3) {\r\n      // 3 x 3 matrix\r\n      let subMatrix0, subMatrix1, subMatrix2;\r\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\r\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\r\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\r\n      a = matrix.get(0, 0);\r\n      b = matrix.get(0, 1);\r\n      c = matrix.get(0, 2);\r\n\r\n      return (\r\n        a * determinant(subMatrix0) -\r\n        b * determinant(subMatrix1) +\r\n        c * determinant(subMatrix2)\r\n      );\r\n    } else {\r\n      // general purpose determinant using the LU decomposition\r\n      return new LuDecomposition(matrix).determinant;\r\n    }\r\n  } else {\r\n    throw Error('determinant can only be calculated for a square matrix');\r\n  }\r\n}\r\n","import SingularValueDecomposition from './dc/svd';\r\nimport Matrix from './matrix';\r\n\r\nfunction xrange(n, exception) {\r\n  let range = [];\r\n  for (let i = 0; i < n; i++) {\r\n    if (i !== exception) {\r\n      range.push(i);\r\n    }\r\n  }\r\n  return range;\r\n}\r\n\r\nfunction dependenciesOneRow(\r\n  error,\r\n  matrix,\r\n  index,\r\n  thresholdValue = 10e-10,\r\n  thresholdError = 10e-10,\r\n) {\r\n  if (error > thresholdError) {\r\n    return new Array(matrix.rows + 1).fill(0);\r\n  } else {\r\n    let returnArray = matrix.addRow(index, [0]);\r\n    for (let i = 0; i < returnArray.rows; i++) {\r\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\r\n        returnArray.set(i, 0, 0);\r\n      }\r\n    }\r\n    return returnArray.to1DArray();\r\n  }\r\n}\r\n\r\nexport function linearDependencies(matrix, options = {}) {\r\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\r\n  matrix = Matrix.checkMatrix(matrix);\r\n\r\n  let n = matrix.rows;\r\n  let results = new Matrix(n, n);\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    let b = Matrix.columnVector(matrix.getRow(i));\r\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\r\n    let svd = new SingularValueDecomposition(Abis);\r\n    let x = svd.solve(b);\r\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\r\n    results.setRow(\r\n      i,\r\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\r\n    );\r\n  }\r\n  return results;\r\n}\r\n","import SVD from './dc/svd';\r\nimport Matrix from './matrix';\r\n\r\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\r\n  matrix = Matrix.checkMatrix(matrix);\r\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\r\n\r\n  let U = svdSolution.leftSingularVectors;\r\n  let V = svdSolution.rightSingularVectors;\r\n  let s = svdSolution.diagonal;\r\n\r\n  for (let i = 0; i < s.length; i++) {\r\n    if (Math.abs(s[i]) > threshold) {\r\n      s[i] = 1.0 / s[i];\r\n    } else {\r\n      s[i] = 0.0;\r\n    }\r\n  }\r\n\r\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\r\n}\r\n","import Matrix from './matrix';\r\n\r\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\r\n  xMatrix = new Matrix(xMatrix);\r\n  let yIsSame = false;\r\n  if (\r\n    typeof yMatrix === 'object' &&\r\n    !Matrix.isMatrix(yMatrix) &&\r\n    !Array.isArray(yMatrix)\r\n  ) {\r\n    options = yMatrix;\r\n    yMatrix = xMatrix;\r\n    yIsSame = true;\r\n  } else {\r\n    yMatrix = new Matrix(yMatrix);\r\n  }\r\n  if (xMatrix.rows !== yMatrix.rows) {\r\n    throw new TypeError('Both matrices must have the same number of rows');\r\n  }\r\n  const { center = true } = options;\r\n  if (center) {\r\n    xMatrix = xMatrix.center('column');\r\n    if (!yIsSame) {\r\n      yMatrix = yMatrix.center('column');\r\n    }\r\n  }\r\n  const cov = xMatrix.transpose().mmul(yMatrix);\r\n  for (let i = 0; i < cov.rows; i++) {\r\n    for (let j = 0; j < cov.columns; j++) {\r\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\r\n    }\r\n  }\r\n  return cov;\r\n}\r\n","import Matrix from './matrix';\r\n\r\nexport function correlation(xMatrix, yMatrix = xMatrix, options = {}) {\r\n  xMatrix = new Matrix(xMatrix);\r\n  let yIsSame = false;\r\n  if (\r\n    typeof yMatrix === 'object' &&\r\n    !Matrix.isMatrix(yMatrix) &&\r\n    !Array.isArray(yMatrix)\r\n  ) {\r\n    options = yMatrix;\r\n    yMatrix = xMatrix;\r\n    yIsSame = true;\r\n  } else {\r\n    yMatrix = new Matrix(yMatrix);\r\n  }\r\n  if (xMatrix.rows !== yMatrix.rows) {\r\n    throw new TypeError('Both matrices must have the same number of rows');\r\n  }\r\n\r\n  const { center = true, scale = true } = options;\r\n  if (center) {\r\n    xMatrix.center('column');\r\n    if (!yIsSame) {\r\n      yMatrix.center('column');\r\n    }\r\n  }\r\n  if (scale) {\r\n    xMatrix.scale('column');\r\n    if (!yIsSame) {\r\n      yMatrix.scale('column');\r\n    }\r\n  }\r\n\r\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\r\n  const sdy = yIsSame\r\n    ? sdx\r\n    : yMatrix.standardDeviation('column', { unbiased: true });\r\n\r\n  const corr = xMatrix.transpose().mmul(yMatrix);\r\n  for (let i = 0; i < corr.rows; i++) {\r\n    for (let j = 0; j < corr.columns; j++) {\r\n      corr.set(\r\n        i,\r\n        j,\r\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\r\n      );\r\n    }\r\n  }\r\n  return corr;\r\n}\r\n","import Matrix from '../matrix';\r\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\r\n\r\nimport { hypotenuse } from './util';\r\n\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    let n = matrix.columns;\r\n    let V = new Matrix(n, n);\r\n    let d = new Float64Array(n);\r\n    let e = new Float64Array(n);\r\n    let value = matrix;\r\n    let i, j;\r\n\r\n    let isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V.set(i, j, value.get(i, j));\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      let H = new Matrix(n, n);\r\n      let ort = new Float64Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H.set(i, j, value.get(i, j));\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  get realEigenvalues() {\r\n    return Array.from(this.d);\r\n  }\r\n\r\n  get imaginaryEigenvalues() {\r\n    return Array.from(this.e);\r\n  }\r\n\r\n  get eigenvectorMatrix() {\r\n    return this.V;\r\n  }\r\n\r\n  get diagonalMatrix() {\r\n    let n = this.n;\r\n    let e = this.e;\r\n    let d = this.d;\r\n    let X = new Matrix(n, n);\r\n    let i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X.set(i, j, 0);\r\n      }\r\n      X.set(i, i, d[i]);\r\n      if (e[i] > 0) {\r\n        X.set(i, i + 1, e[i]);\r\n      } else if (e[i] < 0) {\r\n        X.set(i, i - 1, e[i]);\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  let f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V.get(n - 1, j);\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V.get(i - 1, j);\r\n        V.set(i, j, 0);\r\n        V.set(j, i, 0);\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V.set(j, i, f);\r\n        g = e[j] + V.get(j, j) * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V.get(k, j) * d[k];\r\n          e[k] += V.get(k, j) * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\r\n        }\r\n        d[j] = V.get(i - 1, j);\r\n        V.set(i, j, 0);\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V.set(n - 1, i, V.get(i, i));\r\n    V.set(i, i, 1);\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V.get(k, i + 1) / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V.get(k, i + 1) * V.get(k, j);\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V.set(k, j, V.get(k, j) - g * d[k]);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V.set(k, i + 1, 0);\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V.get(n - 1, j);\r\n    V.set(n - 1, j, 0);\r\n  }\r\n\r\n  V.set(n - 1, n - 1, 1);\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  let f = 0;\r\n  let tst1 = 0;\r\n  let eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V.get(k, i + 1);\r\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\r\n            V.set(k, i, c * V.get(k, i) - s * h);\r\n          }\r\n        }\r\n\r\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V.get(j, i);\r\n        V.set(j, i, V.get(j, k));\r\n        V.set(j, k, p);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  let low = 0;\r\n  let high = n - 1;\r\n  let f, g, h, i, j, m;\r\n  let scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H.get(i, m - 1));\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H.get(i, m - 1) / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H.get(i, j);\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H.set(i, j, H.get(i, j) - f * ort[i]);\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H.get(i, j);\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H.set(i, j, H.get(i, j) - f * ort[j]);\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H.set(m, m - 1, scale * g);\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V.set(i, j, i === j ? 1 : 0);\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H.get(m, m - 1) !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H.get(i, m - 1);\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V.get(i, j);\r\n        }\r\n\r\n        g = g / ort[m] / H.get(m, m - 1);\r\n        for (i = m; i <= high; i++) {\r\n          V.set(i, j, V.get(i, j) + g * ort[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  let n = nn - 1;\r\n  let low = 0;\r\n  let high = nn - 1;\r\n  let eps = Number.EPSILON;\r\n  let exshift = 0;\r\n  let norm = 0;\r\n  let p = 0;\r\n  let q = 0;\r\n  let r = 0;\r\n  let s = 0;\r\n  let z = 0;\r\n  let iter = 0;\r\n  let i, j, k, l, m, t, w, x, y;\r\n  let ra, sa, vr, vi;\r\n  let notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H.get(i, i);\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H.get(i, j));\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H.set(n, n, H.get(n, n) + exshift);\r\n      d[n] = H.get(n, n);\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H.get(n, n - 1) * H.get(n - 1, n);\r\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H.set(n, n, H.get(n, n) + exshift);\r\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\r\n      x = H.get(n, n);\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H.get(n, n - 1);\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H.get(n - 1, j);\r\n          H.set(n - 1, j, q * z + p * H.get(n, j));\r\n          H.set(n, j, q * H.get(n, j) - p * z);\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H.get(i, n - 1);\r\n          H.set(i, n - 1, q * z + p * H.get(i, n));\r\n          H.set(i, n, q * H.get(i, n) - p * z);\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V.get(i, n - 1);\r\n          V.set(i, n - 1, q * z + p * V.get(i, n));\r\n          V.set(i, n, q * V.get(i, n) - p * z);\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H.get(n, n);\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H.get(n - 1, n - 1);\r\n        w = H.get(n, n - 1) * H.get(n - 1, n);\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H.set(i, i, H.get(i, i) - x);\r\n        }\r\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H.set(i, i, H.get(i, i) - s);\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H.get(m, m);\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\r\n        q = H.get(m + 1, m + 1) - z - r - s;\r\n        r = H.get(m + 2, m + 1);\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H.get(m - 1, m - 1)) +\r\n                Math.abs(z) +\r\n                Math.abs(H.get(m + 1, m + 1))))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H.set(i, i - 2, 0);\r\n        if (i > m + 2) {\r\n          H.set(i, i - 3, 0);\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H.get(k, k - 1);\r\n          q = H.get(k + 1, k - 1);\r\n          r = notlast ? H.get(k + 2, k - 1) : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H.set(k, k - 1, -s * x);\r\n          } else if (l !== m) {\r\n            H.set(k, k - 1, -H.get(k, k - 1));\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H.get(k, j) + q * H.get(k + 1, j);\r\n            if (notlast) {\r\n              p = p + r * H.get(k + 2, j);\r\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\r\n            }\r\n\r\n            H.set(k, j, H.get(k, j) - p * x);\r\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\r\n            if (notlast) {\r\n              p = p + z * H.get(i, k + 2);\r\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\r\n            }\r\n\r\n            H.set(i, k, H.get(i, k) - p);\r\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\r\n            if (notlast) {\r\n              p = p + z * V.get(i, k + 2);\r\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\r\n            }\r\n\r\n            V.set(i, k, V.get(i, k) - p);\r\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H.set(n, n, 1);\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H.get(i, i) - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H.get(i, j) * H.get(j, n);\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\r\n          } else {\r\n            x = H.get(i, i + 1);\r\n            y = H.get(i + 1, i);\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H.set(i, n, t);\r\n            H.set(\r\n              i + 1,\r\n              n,\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\r\n            );\r\n          }\r\n\r\n          t = Math.abs(H.get(i, n));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H.set(j, n, H.get(j, n) / t);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\r\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\r\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\r\n      } else {\r\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\r\n        H.set(n - 1, n - 1, cdivres[0]);\r\n        H.set(n - 1, n, cdivres[1]);\r\n      }\r\n\r\n      H.set(n, n - 1, 0);\r\n      H.set(n, n, 1);\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\r\n          sa = sa + H.get(i, j) * H.get(j, n);\r\n        }\r\n\r\n        w = H.get(i, i) - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H.set(i, n - 1, cdivres[0]);\r\n            H.set(i, n, cdivres[1]);\r\n          } else {\r\n            x = H.get(i, i + 1);\r\n            y = H.get(i + 1, i);\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi,\r\n            );\r\n            H.set(i, n - 1, cdivres[0]);\r\n            H.set(i, n, cdivres[1]);\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H.set(\r\n                i + 1,\r\n                n - 1,\r\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\r\n              );\r\n              H.set(\r\n                i + 1,\r\n                n,\r\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\r\n              );\r\n            } else {\r\n              cdivres = cdiv(\r\n                -r - y * H.get(i, n - 1),\r\n                -s - y * H.get(i, n),\r\n                z,\r\n                q,\r\n              );\r\n              H.set(i + 1, n - 1, cdivres[0]);\r\n              H.set(i + 1, n, cdivres[1]);\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H.set(j, n - 1, H.get(j, n - 1) / t);\r\n              H.set(j, n, H.get(j, n) / t);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V.set(i, j, H.get(i, j));\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V.get(i, k) * H.get(k, j);\r\n      }\r\n      V.set(i, j, z);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  let r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","import Matrix from '../matrix';\r\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\r\n\r\nexport default class CholeskyDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n    if (!value.isSymmetric()) {\r\n      throw new Error('Matrix is not symmetric');\r\n    }\r\n\r\n    let a = value;\r\n    let dimension = a.rows;\r\n    let l = new Matrix(dimension, dimension);\r\n    let positiveDefinite = true;\r\n    let i, j, k;\r\n\r\n    for (j = 0; j < dimension; j++) {\r\n      let d = 0;\r\n      for (k = 0; k < j; k++) {\r\n        let s = 0;\r\n        for (i = 0; i < k; i++) {\r\n          s += l.get(k, i) * l.get(j, i);\r\n        }\r\n        s = (a.get(j, k) - s) / l.get(k, k);\r\n        l.set(j, k, s);\r\n        d = d + s * s;\r\n      }\r\n\r\n      d = a.get(j, j) - d;\r\n\r\n      positiveDefinite &= d > 0;\r\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\r\n      for (k = j + 1; k < dimension; k++) {\r\n        l.set(j, k, 0);\r\n      }\r\n    }\r\n\r\n    this.L = l;\r\n    this.positiveDefinite = Boolean(positiveDefinite);\r\n  }\r\n\r\n  isPositiveDefinite() {\r\n    return this.positiveDefinite;\r\n  }\r\n\r\n  solve(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    let l = this.L;\r\n    let dimension = l.rows;\r\n\r\n    if (value.rows !== dimension) {\r\n      throw new Error('Matrix dimensions do not match');\r\n    }\r\n    if (this.isPositiveDefinite() === false) {\r\n      throw new Error('Matrix is not positive definite');\r\n    }\r\n\r\n    let count = value.columns;\r\n    let B = value.clone();\r\n    let i, j, k;\r\n\r\n    for (k = 0; k < dimension; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = 0; i < k; i++) {\r\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\r\n        }\r\n        B.set(k, j, B.get(k, j) / l.get(k, k));\r\n      }\r\n    }\r\n\r\n    for (k = dimension - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = k + 1; i < dimension; i++) {\r\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\r\n        }\r\n        B.set(k, j, B.get(k, j) / l.get(k, k));\r\n      }\r\n    }\r\n\r\n    return B;\r\n  }\r\n\r\n  get lowerTriangularMatrix() {\r\n    return this.L;\r\n  }\r\n}\r\n","import Matrix from '../matrix';\r\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\r\n\r\nexport default class nipals {\r\n  constructor(X, options = {}) {\r\n    X = WrapperMatrix2D.checkMatrix(X);\r\n    let { Y } = options;\r\n    const {\r\n      scaleScores = false,\r\n      maxIterations = 1000,\r\n      terminationCriteria = 1e-10,\r\n    } = options;\r\n\r\n    let u;\r\n    if (Y) {\r\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\r\n        Y = Matrix.columnVector(Y);\r\n      } else {\r\n        Y = WrapperMatrix2D.checkMatrix(Y);\r\n      }\r\n      if (!Y.isColumnVector() || Y.rows !== X.rows) {\r\n        throw new Error('Y must be a column vector of length X.rows');\r\n      }\r\n      u = Y;\r\n    } else {\r\n      u = X.getColumnVector(0);\r\n    }\r\n\r\n    let diff = 1;\r\n    let t, q, w, tOld;\r\n\r\n    for (\r\n      let counter = 0;\r\n      counter < maxIterations && diff > terminationCriteria;\r\n      counter++\r\n    ) {\r\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\r\n      w = w.div(w.norm());\r\n\r\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\r\n\r\n      if (counter > 0) {\r\n        diff = t.clone().sub(tOld).pow(2).sum();\r\n      }\r\n      tOld = t.clone();\r\n\r\n      if (Y) {\r\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\r\n        q = q.div(q.norm());\r\n\r\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\r\n      } else {\r\n        u = t;\r\n      }\r\n    }\r\n\r\n    if (Y) {\r\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\r\n      p = p.div(p.norm());\r\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\r\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\r\n      let yResidual = Y.clone().sub(\r\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\r\n      );\r\n\r\n      this.t = t;\r\n      this.p = p.transpose();\r\n      this.w = w.transpose();\r\n      this.q = q;\r\n      this.u = u;\r\n      this.s = t.transpose().mmul(t);\r\n      this.xResidual = xResidual;\r\n      this.yResidual = yResidual;\r\n      this.betas = residual;\r\n    } else {\r\n      this.w = w.transpose();\r\n      this.s = t.transpose().mmul(t).sqrt();\r\n      if (scaleScores) {\r\n        this.t = t.clone().div(this.s.get(0, 0));\r\n      } else {\r\n        this.t = t;\r\n      }\r\n      this.xResidual = X.sub(t.mmul(w.transpose()));\r\n    }\r\n  }\r\n}\r\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import sum from 'ml-array-sum';\n\nfunction mean(input) {\n  return sum(input) / input.length;\n}\n\nexport default mean;\n","import Matrix from 'ml-matrix';\nimport meanArray from 'ml-array-mean';\n\n/**\n * @private\n * return an array of probabilities of each class\n * @param {Array} array - contains the classes\n * @param {number} numberOfClasses\n * @return {Matrix} - rowVector of probabilities.\n */\nexport function toDiscreteDistribution(array, numberOfClasses) {\n  let counts = new Array(numberOfClasses).fill(0);\n  for (let i = 0; i < array.length; ++i) {\n    counts[array[i]] += 1 / array.length;\n  }\n\n  return Matrix.rowVector(counts);\n}\n\n/**\n * @private\n * Retrieves the impurity of array of predictions\n * @param {Array} array - predictions.\n * @return {number} Gini impurity\n */\nexport function giniImpurity(array) {\n  if (array.length === 0) {\n    return 0;\n  }\n\n  let probabilities = toDiscreteDistribution(\n    array,\n    getNumberOfClasses(array),\n  ).getRow(0);\n\n  let sum = 0.0;\n  for (let i = 0; i < probabilities.length; ++i) {\n    sum += probabilities[i] * probabilities[i];\n  }\n\n  return 1 - sum;\n}\n\n/**\n * @private\n * Return the number of classes given the array of predictions.\n * @param {Array} array - predictions.\n * @return {number} Number of classes.\n */\nexport function getNumberOfClasses(array) {\n  return array\n    .filter(function(val, i, arr) {\n      return arr.indexOf(val) === i;\n    })\n    .map((val) => val + 1)\n    .reduce((a, b) => Math.max(a, b));\n}\n\n/**\n * @private\n * Calculates the Gini Gain of an array of predictions and those predictions splitted by a feature.\n * @param {Array} array - Predictions\n * @param {object} splitted - Object with elements \"greater\" and \"lesser\" that contains an array of predictions splitted.\n * @return {number} - Gini Gain.\n */\n\nexport function giniGain(array, splitted) {\n  let splitsImpurity = 0.0;\n  let splits = ['greater', 'lesser'];\n\n  for (let i = 0; i < splits.length; ++i) {\n    let currentSplit = splitted[splits[i]];\n    splitsImpurity +=\n      (giniImpurity(currentSplit) * currentSplit.length) / array.length;\n  }\n\n  return giniImpurity(array) - splitsImpurity;\n}\n\n/**\n * @private\n * Calculates the squared error of a predictions values.\n * @param {Array} array - predictions values\n * @return {number} squared error.\n */\nexport function squaredError(array) {\n  let l = array.length;\n\n  let m = meanArray(array);\n  let error = 0.0;\n\n  for (let i = 0; i < l; ++i) {\n    let currentElement = array[i];\n    error += (currentElement - m) * (currentElement - m);\n  }\n\n  return error;\n}\n\n/**\n * @private\n * Calculates the sum of squared error of the two arrays that contains the splitted values.\n * @param {Array} array - this argument is no necessary but is used to fit with the main interface.\n * @param {object} splitted - Object with elements \"greater\" and \"lesser\" that contains an array of predictions splitted.\n * @return {number} - sum of squared errors.\n */\nexport function regressionError(array, splitted) {\n  let error = 0.0;\n  let splits = ['greater', 'lesser'];\n\n  for (let i = 0; i < splits.length; ++i) {\n    let currentSplit = splitted[splits[i]];\n    error += squaredError(currentSplit);\n  }\n  return error;\n}\n\n/**\n * @private\n * Split the training set and values from a given column of the training set if is less than a value\n * @param {Matrix} X - Training set.\n * @param {Array} y - Training values.\n * @param {number} column - Column to split.\n * @param {number} value - value to split the Training set and values.\n * @return {object} - Object that contains the splitted values.\n */\nexport function matrixSplitter(X, y, column, value) {\n  let lesserX = [];\n  let greaterX = [];\n  let lesserY = [];\n  let greaterY = [];\n\n  for (let i = 0; i < X.rows; ++i) {\n    if (X.get(i, column) < value) {\n      lesserX.push(X.getRow(i));\n      lesserY.push(y[i]);\n    } else {\n      greaterX.push(X.getRow(i));\n      greaterY.push(y[i]);\n    }\n  }\n\n  return {\n    greaterX: greaterX,\n    greaterY: greaterY,\n    lesserX: lesserX,\n    lesserY: lesserY,\n  };\n}\n\n/**\n * @private\n * Calculates the mean between two values\n * @param {number} a\n * @param {number} b\n * @return {number}\n */\nexport function mean(a, b) {\n  return (a + b) / 2;\n}\n\n/**\n * @private\n * Returns a list of tuples that contains the i-th element of each array.\n * @param {Array} a\n * @param {Array} b\n * @return {Array} list of tuples.\n */\nexport function zip(a, b) {\n  if (a.length !== b.length) {\n    throw new TypeError(\n      `Error on zip: the size of a: ${a.length} is different from b: ${b.length}`,\n    );\n  }\n\n  let ret = new Array(a.length);\n  for (let i = 0; i < a.length; ++i) {\n    ret[i] = [a[i], b[i]];\n  }\n\n  return ret;\n}\n","import Matrix from 'ml-matrix';\nimport mean from 'ml-array-mean';\n\nimport * as Utils from './utils';\n\nconst gainFunctions = {\n  gini: Utils.giniGain,\n  regression: Utils.regressionError,\n};\n\nconst splitFunctions = {\n  mean: Utils.mean,\n};\n\nexport default class TreeNode {\n  /**\n   * @private\n   * Constructor for a tree node given the options received on the main classes (DecisionTreeClassifier, DecisionTreeRegression)\n   * @param {object|TreeNode} options for loading\n   * @constructor\n   */\n  constructor(options) {\n    // options parameters\n    this.kind = options.kind;\n    this.gainFunction = options.gainFunction;\n    this.splitFunction = options.splitFunction;\n    this.minNumSamples = options.minNumSamples;\n    this.maxDepth = options.maxDepth;\n  }\n\n  /**\n   * @private\n   * Function that retrieve the best feature to make the split.\n   * @param {Matrix} XTranspose - Training set transposed\n   * @param {Array} y - labels or values (depending of the decision tree)\n   * @return {object} - return tree values, the best gain, column and the split value.\n   */\n  bestSplit(XTranspose, y) {\n    // Depending in the node tree class, we set the variables to check information gain (to classify)\n    // or error (for regression)\n\n    let bestGain = this.kind === 'classifier' ? -Infinity : Infinity;\n    let check = this.kind === 'classifier' ? (a, b) => a > b : (a, b) => a < b;\n\n    let maxColumn;\n    let maxValue;\n\n    for (let i = 0; i < XTranspose.rows; ++i) {\n      let currentFeature = XTranspose.getRow(i);\n      let splitValues = this.featureSplit(currentFeature, y);\n      for (let j = 0; j < splitValues.length; ++j) {\n        let currentSplitVal = splitValues[j];\n        let splitted = this.split(currentFeature, y, currentSplitVal);\n\n        let gain = gainFunctions[this.gainFunction](y, splitted);\n        if (check(gain, bestGain)) {\n          maxColumn = i;\n          maxValue = currentSplitVal;\n          bestGain = gain;\n        }\n      }\n    }\n\n    return {\n      maxGain: bestGain,\n      maxColumn: maxColumn,\n      maxValue: maxValue,\n    };\n  }\n\n  /**\n   * @private\n   * Makes the split of the training labels or values from the training set feature given a split value.\n   * @param {Array} x - Training set feature\n   * @param {Array} y - Training set value or label\n   * @param {number} splitValue\n   * @return {object}\n   */\n  split(x, y, splitValue) {\n    let lesser = [];\n    let greater = [];\n\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] < splitValue) {\n        lesser.push(y[i]);\n      } else {\n        greater.push(y[i]);\n      }\n    }\n\n    return {\n      greater: greater,\n      lesser: lesser,\n    };\n  }\n\n  /**\n   * @private\n   * Calculates the possible points to split over the tree given a training set feature and corresponding labels or values.\n   * @param {Array} x - Training set feature\n   * @param {Array} y - Training set value or label\n   * @return {Array} possible split values.\n   */\n  featureSplit(x, y) {\n    let splitValues = [];\n    let arr = Utils.zip(x, y);\n    arr.sort(function(a, b) {\n      return a[0] - b[0];\n    });\n\n    for (let i = 1; i < arr.length; ++i) {\n      if (arr[i - 1][1] !== arr[i][1]) {\n        splitValues.push(\n          splitFunctions[this.splitFunction](arr[i - 1][0], arr[i][0]),\n        );\n      }\n    }\n\n    return splitValues;\n  }\n\n  /**\n   * @private\n   * Calculate the predictions of a leaf tree node given the training labels or values\n   * @param {Array} y\n   */\n  calculatePrediction(y) {\n    if (this.kind === 'classifier') {\n      this.distribution = Utils.toDiscreteDistribution(\n        y,\n        Utils.getNumberOfClasses(y),\n      );\n      if (this.distribution.columns === 0) {\n        throw new TypeError('Error on calculate the prediction');\n      }\n    } else {\n      this.distribution = mean(y);\n    }\n  }\n\n  /**\n   * @private\n   * Train a node given the training set and labels, because it trains recursively, it also receive\n   * the current depth of the node, parent gain to avoid infinite recursion and boolean value to check if\n   * the training set is transposed.\n   * @param {Matrix} X - Training set (could be transposed or not given transposed).\n   * @param {Array} y - Training labels or values.\n   * @param {number} currentDepth - Current depth of the node.\n   * @param {number} parentGain - parent node gain or error.\n   */\n  train(X, y, currentDepth, parentGain) {\n    if (X.rows <= this.minNumSamples) {\n      this.calculatePrediction(y);\n      return;\n    }\n    if (parentGain === undefined) parentGain = 0.0;\n\n    let XTranspose = X.transpose();\n    let split = this.bestSplit(XTranspose, y);\n\n    this.splitValue = split.maxValue;\n    this.splitColumn = split.maxColumn;\n    this.gain = split.maxGain;\n\n    let splittedMatrix = Utils.matrixSplitter(\n      X,\n      y,\n      this.splitColumn,\n      this.splitValue,\n    );\n\n    if (\n      currentDepth < this.maxDepth &&\n      (this.gain > 0.01 && this.gain !== parentGain) &&\n      (splittedMatrix.lesserX.length > 0 && splittedMatrix.greaterX.length > 0)\n    ) {\n      this.left = new TreeNode(this);\n      this.right = new TreeNode(this);\n\n      let lesserX = new Matrix(splittedMatrix.lesserX);\n      let greaterX = new Matrix(splittedMatrix.greaterX);\n\n      this.left.train(\n        lesserX,\n        splittedMatrix.lesserY,\n        currentDepth + 1,\n        this.gain,\n      );\n      this.right.train(\n        greaterX,\n        splittedMatrix.greaterY,\n        currentDepth + 1,\n        this.gain,\n      );\n    } else {\n      this.calculatePrediction(y);\n    }\n  }\n\n  /**\n   * @private\n   * Calculates the prediction of a given element.\n   * @param {Array} row\n   * @return {number|Array} prediction\n   *          * if a node is a classifier returns an array of probabilities of each class.\n   *          * if a node is for regression returns a number with the prediction.\n   */\n  classify(row) {\n    if (this.right && this.left) {\n      if (row[this.splitColumn] < this.splitValue) {\n        return this.left.classify(row);\n      } else {\n        return this.right.classify(row);\n      }\n    }\n\n    return this.distribution;\n  }\n\n  /**\n   * @private\n   * Set the parameter of the current node and their children.\n   * @param {object} node - parameters of the current node and the children.\n   */\n  setNodeParameters(node) {\n    if (node.distribution !== undefined) {\n      this.distribution =\n        node.distribution.constructor === Array\n          ? new Matrix(node.distribution)\n          : node.distribution;\n    } else {\n      this.distribution = undefined;\n      this.splitValue = node.splitValue;\n      this.splitColumn = node.splitColumn;\n      this.gain = node.gain;\n\n      this.left = new TreeNode(this);\n      this.right = new TreeNode(this);\n\n      if (node.left !== {}) {\n        this.left.setNodeParameters(node.left);\n      }\n      if (node.right !== {}) {\n        this.right.setNodeParameters(node.right);\n      }\n    }\n  }\n}\n","import Matrix from 'ml-matrix';\n\nimport Tree from './TreeNode';\n\nconst defaultOptions = {\n  gainFunction: 'gini',\n  splitFunction: 'mean',\n  minNumSamples: 3,\n  maxDepth: Infinity,\n};\n\nexport class DecisionTreeClassifier {\n  /**\n   * Create new Decision Tree Classifier with CART implementation with the given options\n   * @param {object} options\n   * @param {string} [options.gainFunction=\"gini\"] - gain function to get the best split, \"gini\" the only one supported.\n   * @param {string} [options.splitFunction=\"mean\"] - given two integers from a split feature, get the value to split, \"mean\" the only one supported.\n   * @param {number} [options.minNumSamples=3] - minimum number of samples to create a leaf node to decide a class.\n   * @param {number} [options.maxDepth=Infinity] - Max depth of the tree.\n   * @param {object} model - for load purposes.\n   * @constructor\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.options = model.options;\n      this.root = new Tree(model.options);\n      this.root.setNodeParameters(model.root);\n    } else {\n      this.options = Object.assign({}, defaultOptions, options);\n      this.options.kind = 'classifier';\n    }\n  }\n\n  /**\n   * Train the decision tree with the given training set and labels.\n   * @param {Matrix|MatrixTransposeView|Array} trainingSet\n   * @param {Array} trainingLabels\n   */\n  train(trainingSet, trainingLabels) {\n    this.root = new Tree(this.options);\n    trainingSet = Matrix.checkMatrix(trainingSet);\n    this.root.train(trainingSet, trainingLabels, 0, null);\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Matrix|MatrixTransposeView|Array} toPredict\n   * @return {Array} predictions\n   */\n  predict(toPredict) {\n    toPredict = Matrix.checkMatrix(toPredict);\n    let predictions = new Array(toPredict.rows);\n\n    for (let i = 0; i < toPredict.rows; ++i) {\n      predictions[i] = this.root\n        .classify(toPredict.getRow(i))\n        .maxRowIndex(0)[1];\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      options: this.options,\n      root: this.root,\n      name: 'DTClassifier',\n    };\n  }\n\n  /**\n   * Load a Decision tree classifier with the given model.\n   * @param {object} model\n   * @return {DecisionTreeClassifier}\n   */\n  static load(model) {\n    if (model.name !== 'DTClassifier') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    return new DecisionTreeClassifier(true, model);\n  }\n}\n","import Matrix from 'ml-matrix';\n\nimport Tree from './TreeNode';\n\nconst defaultOptions = {\n  gainFunction: 'regression',\n  splitFunction: 'mean',\n  minNumSamples: 3,\n  maxDepth: Infinity,\n};\n\nexport class DecisionTreeRegression {\n  /**\n   * Create new Decision Tree Regression with CART implementation with the given options.\n   * @param {object} options\n   * @param {string} [options.gainFunction=\"regression\"] - gain function to get the best split, \"regression\" the only one supported.\n   * @param {string} [options.splitFunction=\"mean\"] - given two integers from a split feature, get the value to split, \"mean\" the only one supported.\n   * @param {number} [options.minNumSamples=3] - minimum number of samples to create a leaf node to decide a class.\n   * @param {number} [options.maxDepth=Infinity] - Max depth of the tree.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.options = model.options;\n      this.root = new Tree(model.options);\n      this.root.setNodeParameters(model.root);\n    } else {\n      this.options = Object.assign({}, defaultOptions, options);\n      this.options.kind = 'regression';\n    }\n  }\n\n  /**\n   * Train the decision tree with the given training set and values.\n   * @param {Matrix|MatrixTransposeView|Array} trainingSet\n   * @param {Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    this.root = new Tree(this.options);\n\n    if (\n      typeof trainingSet[0] !== 'undefined' &&\n      trainingSet[0].length === undefined\n    ) {\n      trainingSet = Matrix.columnVector(trainingSet);\n    } else {\n      trainingSet = Matrix.checkMatrix(trainingSet);\n    }\n    this.root.train(trainingSet, trainingValues, 0);\n  }\n\n  /**\n   * Predicts the values given the matrix to predict.\n   * @param {Matrix|MatrixTransposeView|Array} toPredict\n   * @return {Array} predictions\n   */\n  predict(toPredict) {\n    if (\n      typeof toPredict[0] !== 'undefined' &&\n      toPredict[0].length === undefined\n    ) {\n      toPredict = Matrix.columnVector(toPredict);\n    }\n    toPredict = Matrix.checkMatrix(toPredict);\n\n    let predictions = new Array(toPredict.rows);\n    for (let i = 0; i < toPredict.rows; ++i) {\n      predictions[i] = this.root.classify(toPredict.getRow(i));\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      options: this.options,\n      root: this.root,\n      name: 'DTRegression',\n    };\n  }\n\n  /**\n   * Load a Decision tree regression with the given model.\n   * @param {object} model\n   * @return {DecisionTreeRegression}\n   */\n  static load(model) {\n    if (model.name !== 'DTRegression') {\n      throw new RangeError(`Invalid model:${model.name}`);\n    }\n\n    return new DecisionTreeRegression(true, model);\n  }\n}\n","const SMALLEST_UNSAFE_INTEGER = 0x20000000000000;\r\nconst LARGEST_SAFE_INTEGER = SMALLEST_UNSAFE_INTEGER - 1;\r\nconst UINT32_MAX = -1 >>> 0;\r\nconst UINT32_SIZE = UINT32_MAX + 1;\r\nconst INT32_SIZE = UINT32_SIZE / 2;\r\nconst INT32_MAX = INT32_SIZE - 1;\r\nconst UINT21_SIZE = 1 << 21;\r\nconst UINT21_MAX = UINT21_SIZE - 1;\n\n/**\r\n * Returns a value within [-0x80000000, 0x7fffffff]\r\n */\r\nfunction int32(engine) {\r\n    return engine.next() | 0;\r\n}\n\nfunction add(distribution, addend) {\r\n    if (addend === 0) {\r\n        return distribution;\r\n    }\r\n    else {\r\n        return engine => distribution(engine) + addend;\r\n    }\r\n}\n\n/**\r\n * Returns a value within [-0x20000000000000, 0x1fffffffffffff]\r\n */\r\nfunction int53(engine) {\r\n    const high = engine.next() | 0;\r\n    const low = engine.next() >>> 0;\r\n    return ((high & UINT21_MAX) * UINT32_SIZE +\r\n        low +\r\n        (high & UINT21_SIZE ? -SMALLEST_UNSAFE_INTEGER : 0));\r\n}\n\n/**\r\n * Returns a value within [-0x20000000000000, 0x20000000000000]\r\n */\r\nfunction int53Full(engine) {\r\n    while (true) {\r\n        const high = engine.next() | 0;\r\n        if (high & 0x400000) {\r\n            if ((high & 0x7fffff) === 0x400000 && (engine.next() | 0) === 0) {\r\n                return SMALLEST_UNSAFE_INTEGER;\r\n            }\r\n        }\r\n        else {\r\n            const low = engine.next() >>> 0;\r\n            return ((high & UINT21_MAX) * UINT32_SIZE +\r\n                low +\r\n                (high & UINT21_SIZE ? -SMALLEST_UNSAFE_INTEGER : 0));\r\n        }\r\n    }\r\n}\n\n/**\r\n * Returns a value within [0, 0xffffffff]\r\n */\r\nfunction uint32(engine) {\r\n    return engine.next() >>> 0;\r\n}\n\n/**\r\n * Returns a value within [0, 0x1fffffffffffff]\r\n */\r\nfunction uint53(engine) {\r\n    const high = engine.next() & UINT21_MAX;\r\n    const low = engine.next() >>> 0;\r\n    return high * UINT32_SIZE + low;\r\n}\n\n/**\r\n * Returns a value within [0, 0x20000000000000]\r\n */\r\nfunction uint53Full(engine) {\r\n    while (true) {\r\n        const high = engine.next() | 0;\r\n        if (high & UINT21_SIZE) {\r\n            if ((high & UINT21_MAX) === 0 && (engine.next() | 0) === 0) {\r\n                return SMALLEST_UNSAFE_INTEGER;\r\n            }\r\n        }\r\n        else {\r\n            const low = engine.next() >>> 0;\r\n            return (high & UINT21_MAX) * UINT32_SIZE + low;\r\n        }\r\n    }\r\n}\n\nfunction isPowerOfTwoMinusOne(value) {\r\n    return ((value + 1) & value) === 0;\r\n}\r\nfunction bitmask(masking) {\r\n    return (engine) => engine.next() & masking;\r\n}\r\nfunction downscaleToLoopCheckedRange(range) {\r\n    const extendedRange = range + 1;\r\n    const maximum = extendedRange * Math.floor(UINT32_SIZE / extendedRange);\r\n    return engine => {\r\n        let value = 0;\r\n        do {\r\n            value = engine.next() >>> 0;\r\n        } while (value >= maximum);\r\n        return value % extendedRange;\r\n    };\r\n}\r\nfunction downscaleToRange(range) {\r\n    if (isPowerOfTwoMinusOne(range)) {\r\n        return bitmask(range);\r\n    }\r\n    else {\r\n        return downscaleToLoopCheckedRange(range);\r\n    }\r\n}\r\nfunction isEvenlyDivisibleByMaxInt32(value) {\r\n    return (value | 0) === 0;\r\n}\r\nfunction upscaleWithHighMasking(masking) {\r\n    return engine => {\r\n        const high = engine.next() & masking;\r\n        const low = engine.next() >>> 0;\r\n        return high * UINT32_SIZE + low;\r\n    };\r\n}\r\nfunction upscaleToLoopCheckedRange(extendedRange) {\r\n    const maximum = extendedRange * Math.floor(SMALLEST_UNSAFE_INTEGER / extendedRange);\r\n    return engine => {\r\n        let ret = 0;\r\n        do {\r\n            const high = engine.next() & UINT21_MAX;\r\n            const low = engine.next() >>> 0;\r\n            ret = high * UINT32_SIZE + low;\r\n        } while (ret >= maximum);\r\n        return ret % extendedRange;\r\n    };\r\n}\r\nfunction upscaleWithinU53(range) {\r\n    const extendedRange = range + 1;\r\n    if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\r\n        const highRange = ((extendedRange / UINT32_SIZE) | 0) - 1;\r\n        if (isPowerOfTwoMinusOne(highRange)) {\r\n            return upscaleWithHighMasking(highRange);\r\n        }\r\n    }\r\n    return upscaleToLoopCheckedRange(extendedRange);\r\n}\r\nfunction upscaleWithinI53AndLoopCheck(min, max) {\r\n    return engine => {\r\n        let ret = 0;\r\n        do {\r\n            const high = engine.next() | 0;\r\n            const low = engine.next() >>> 0;\r\n            ret =\r\n                (high & UINT21_MAX) * UINT32_SIZE +\r\n                    low +\r\n                    (high & UINT21_SIZE ? -SMALLEST_UNSAFE_INTEGER : 0);\r\n        } while (ret < min || ret > max);\r\n        return ret;\r\n    };\r\n}\r\n/**\r\n * Returns a Distribution to return a value within [min, max]\r\n * @param min The minimum integer value, inclusive. No less than -0x20000000000000.\r\n * @param max The maximum integer value, inclusive. No greater than 0x20000000000000.\r\n */\r\nfunction integer(min, max) {\r\n    min = Math.floor(min);\r\n    max = Math.floor(max);\r\n    if (min < -SMALLEST_UNSAFE_INTEGER || !isFinite(min)) {\r\n        throw new RangeError(`Expected min to be at least ${-SMALLEST_UNSAFE_INTEGER}`);\r\n    }\r\n    else if (max > SMALLEST_UNSAFE_INTEGER || !isFinite(max)) {\r\n        throw new RangeError(`Expected max to be at most ${SMALLEST_UNSAFE_INTEGER}`);\r\n    }\r\n    const range = max - min;\r\n    if (range <= 0 || !isFinite(range)) {\r\n        return () => min;\r\n    }\r\n    else if (range === UINT32_MAX) {\r\n        if (min === 0) {\r\n            return uint32;\r\n        }\r\n        else {\r\n            return add(int32, min + INT32_SIZE);\r\n        }\r\n    }\r\n    else if (range < UINT32_MAX) {\r\n        return add(downscaleToRange(range), min);\r\n    }\r\n    else if (range === LARGEST_SAFE_INTEGER) {\r\n        return add(uint53, min);\r\n    }\r\n    else if (range < LARGEST_SAFE_INTEGER) {\r\n        return add(upscaleWithinU53(range), min);\r\n    }\r\n    else if (max - 1 - min === LARGEST_SAFE_INTEGER) {\r\n        return add(uint53Full, min);\r\n    }\r\n    else if (min === -SMALLEST_UNSAFE_INTEGER &&\r\n        max === SMALLEST_UNSAFE_INTEGER) {\r\n        return int53Full;\r\n    }\r\n    else if (min === -SMALLEST_UNSAFE_INTEGER && max === LARGEST_SAFE_INTEGER) {\r\n        return int53;\r\n    }\r\n    else if (min === -LARGEST_SAFE_INTEGER && max === SMALLEST_UNSAFE_INTEGER) {\r\n        return add(int53, 1);\r\n    }\r\n    else if (max === SMALLEST_UNSAFE_INTEGER) {\r\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\r\n    }\r\n    else {\r\n        return upscaleWithinI53AndLoopCheck(min, max);\r\n    }\r\n}\n\nfunction isLeastBitTrue(engine) {\r\n    return (engine.next() & 1) === 1;\r\n}\r\nfunction lessThan(distribution, value) {\r\n    return engine => distribution(engine) < value;\r\n}\r\nfunction probability(percentage) {\r\n    if (percentage <= 0) {\r\n        return () => false;\r\n    }\r\n    else if (percentage >= 1) {\r\n        return () => true;\r\n    }\r\n    else {\r\n        const scaled = percentage * UINT32_SIZE;\r\n        if (scaled % 1 === 0) {\r\n            return lessThan(int32, (scaled - INT32_SIZE) | 0);\r\n        }\r\n        else {\r\n            return lessThan(uint53, Math.round(percentage * SMALLEST_UNSAFE_INTEGER));\r\n        }\r\n    }\r\n}\r\nfunction bool(numerator, denominator) {\r\n    if (denominator == null) {\r\n        if (numerator == null) {\r\n            return isLeastBitTrue;\r\n        }\r\n        return probability(numerator);\r\n    }\r\n    else {\r\n        if (numerator <= 0) {\r\n            return () => false;\r\n        }\r\n        else if (numerator >= denominator) {\r\n            return () => true;\r\n        }\r\n        return lessThan(integer(0, denominator - 1), numerator);\r\n    }\r\n}\n\n/**\r\n * Returns a Distribution that returns a random `Date` within the inclusive\r\n * range of [`start`, `end`].\r\n * @param start The minimum `Date`\r\n * @param end The maximum `Date`\r\n */\r\nfunction date(start, end) {\r\n    const distribution = integer(+start, +end);\r\n    return engine => new Date(distribution(engine));\r\n}\n\n/**\r\n * Returns a Distribution to return a value within [1, sideCount]\r\n * @param sideCount The number of sides of the die\r\n */\r\nfunction die(sideCount) {\r\n    return integer(1, sideCount);\r\n}\n\n/**\r\n * Returns a distribution that returns an array of length `dieCount` of values\r\n * within [1, `sideCount`]\r\n * @param sideCount The number of sides of each die\r\n * @param dieCount The number of dice\r\n */\r\nfunction dice(sideCount, dieCount) {\r\n    const distribution = die(sideCount);\r\n    return engine => {\r\n        const result = [];\r\n        for (let i = 0; i < dieCount; ++i) {\r\n            result.push(distribution(engine));\r\n        }\r\n        return result;\r\n    };\r\n}\n\n// tslint:disable:unified-signatures\r\n// has 2**x chars, for faster uniform distribution\r\nconst DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\r\nfunction string(pool = DEFAULT_STRING_POOL) {\r\n    const poolLength = pool.length;\r\n    if (!poolLength) {\r\n        throw new Error(\"Expected pool not to be an empty string\");\r\n    }\r\n    const distribution = integer(0, poolLength - 1);\r\n    return (engine, length) => {\r\n        let result = \"\";\r\n        for (let i = 0; i < length; ++i) {\r\n            const j = distribution(engine);\r\n            result += pool.charAt(j);\r\n        }\r\n        return result;\r\n    };\r\n}\n\nconst LOWER_HEX_POOL = \"0123456789abcdef\";\r\nconst lowerHex = string(LOWER_HEX_POOL);\r\nconst upperHex = string(LOWER_HEX_POOL.toUpperCase());\r\n/**\r\n * Returns a Distribution that returns a random string comprised of numbers\r\n * or the characters `abcdef` (or `ABCDEF`) of length `length`.\r\n * @param length Length of the result string\r\n * @param uppercase Whether the string should use `ABCDEF` instead of `abcdef`\r\n */\r\nfunction hex(uppercase) {\r\n    if (uppercase) {\r\n        return upperHex;\r\n    }\r\n    else {\r\n        return lowerHex;\r\n    }\r\n}\n\nfunction convertSliceArgument(value, length) {\r\n    if (value < 0) {\r\n        return Math.max(value + length, 0);\r\n    }\r\n    else {\r\n        return Math.min(value, length);\r\n    }\r\n}\n\nfunction toInteger(value) {\r\n    const num = +value;\r\n    if (num < 0) {\r\n        return Math.ceil(num);\r\n    }\r\n    else {\r\n        return Math.floor(num);\r\n    }\r\n}\n\n/**\r\n * Returns a random value within the provided `source` within the sliced\r\n * bounds of `begin` and `end`.\r\n * @param source an array of items to pick from\r\n * @param begin the beginning slice index (defaults to `0`)\r\n * @param end the ending slice index (defaults to `source.length`)\r\n */\r\nfunction pick(engine, source, begin, end) {\r\n    const length = source.length;\r\n    if (length === 0) {\r\n        throw new RangeError(\"Cannot pick from an empty array\");\r\n    }\r\n    const start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\r\n    const finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\r\n    if (start >= finish) {\r\n        throw new RangeError(`Cannot pick between bounds ${start} and ${finish}`);\r\n    }\r\n    const distribution = integer(start, finish - 1);\r\n    return source[distribution(engine)];\r\n}\n\nfunction multiply(distribution, multiplier) {\r\n    if (multiplier === 1) {\r\n        return distribution;\r\n    }\r\n    else if (multiplier === 0) {\r\n        return () => 0;\r\n    }\r\n    else {\r\n        return engine => distribution(engine) * multiplier;\r\n    }\r\n}\n\n/**\r\n * Returns a floating-point value within [0.0, 1.0)\r\n */\r\nfunction realZeroToOneExclusive(engine) {\r\n    return uint53(engine) / SMALLEST_UNSAFE_INTEGER;\r\n}\n\n/**\r\n * Returns a floating-point value within [0.0, 1.0]\r\n */\r\nfunction realZeroToOneInclusive(engine) {\r\n    return uint53Full(engine) / SMALLEST_UNSAFE_INTEGER;\r\n}\n\n/**\r\n * Returns a floating-point value within [min, max) or [min, max]\r\n * @param min The minimum floating-point value, inclusive.\r\n * @param max The maximum floating-point value.\r\n * @param inclusive If true, `max` will be inclusive.\r\n */\r\nfunction real(min, max, inclusive = false) {\r\n    if (!isFinite(min)) {\r\n        throw new RangeError(\"Expected min to be a finite number\");\r\n    }\r\n    else if (!isFinite(max)) {\r\n        throw new RangeError(\"Expected max to be a finite number\");\r\n    }\r\n    return add(multiply(inclusive ? realZeroToOneInclusive : realZeroToOneExclusive, max - min), min);\r\n}\n\nconst sliceArray = Array.prototype.slice;\n\n/**\r\n * Shuffles an array in-place\r\n * @param engine The Engine to use when choosing random values\r\n * @param array The array to shuffle\r\n * @param downTo minimum index to shuffle. Only used internally.\r\n */\r\nfunction shuffle(engine, array, downTo = 0) {\r\n    const length = array.length;\r\n    if (length) {\r\n        for (let i = (length - 1) >>> 0; i > downTo; --i) {\r\n            const distribution = integer(0, i);\r\n            const j = distribution(engine);\r\n            if (i !== j) {\r\n                const tmp = array[i];\r\n                array[i] = array[j];\r\n                array[j] = tmp;\r\n            }\r\n        }\r\n    }\r\n    return array;\r\n}\n\n/**\r\n * From the population array, produce an array with sampleSize elements that\r\n * are randomly chosen without repeats.\r\n * @param engine The Engine to use when choosing random values\r\n * @param population An array that has items to choose a sample from\r\n * @param sampleSize The size of the result array\r\n */\r\nfunction sample(engine, population, sampleSize) {\r\n    if (sampleSize < 0 ||\r\n        sampleSize > population.length ||\r\n        !isFinite(sampleSize)) {\r\n        throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\r\n    }\r\n    if (sampleSize === 0) {\r\n        return [];\r\n    }\r\n    const clone = sliceArray.call(population);\r\n    const length = clone.length;\r\n    if (length === sampleSize) {\r\n        return shuffle(engine, clone, 0);\r\n    }\r\n    const tailLength = length - sampleSize;\r\n    return shuffle(engine, clone, tailLength - 1).slice(tailLength);\r\n}\n\nconst stringRepeat = (() => {\r\n    try {\r\n        if (\"x\".repeat(3) === \"xxx\") {\r\n            return (pattern, count) => pattern.repeat(count);\r\n        }\r\n    }\r\n    catch (_) {\r\n        // nothing to do here\r\n    }\r\n    return (pattern, count) => {\r\n        let result = \"\";\r\n        while (count > 0) {\r\n            if (count & 1) {\r\n                result += pattern;\r\n            }\r\n            count >>= 1;\r\n            pattern += pattern;\r\n        }\r\n        return result;\r\n    };\r\n})();\n\nfunction zeroPad(text, zeroCount) {\r\n    return stringRepeat(\"0\", zeroCount - text.length) + text;\r\n}\r\n/**\r\n * Returns a Universally Unique Identifier Version 4.\r\n *\r\n * See http://en.wikipedia.org/wiki/Universally_unique_identifier\r\n */\r\nfunction uuid4(engine) {\r\n    const a = engine.next() >>> 0;\r\n    const b = engine.next() | 0;\r\n    const c = engine.next() | 0;\r\n    const d = engine.next() >>> 0;\r\n    return (zeroPad(a.toString(16), 8) +\r\n        \"-\" +\r\n        zeroPad((b & 0xffff).toString(16), 4) +\r\n        \"-\" +\r\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\r\n        \"-\" +\r\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\r\n        \"-\" +\r\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\r\n        zeroPad(d.toString(16), 8));\r\n}\n\n/**\r\n * An int32-producing Engine that uses `Math.random()`\r\n */\r\nconst nativeMath = {\r\n    next() {\r\n        return (Math.random() * UINT32_SIZE) | 0;\r\n    }\r\n};\n\n// tslint:disable:unified-signatures\r\n/**\r\n * A wrapper around an Engine that provides easy-to-use methods for\r\n * producing values based on known distributions\r\n */\r\nclass Random {\r\n    /**\r\n     * Creates a new Random wrapper\r\n     * @param engine The engine to use (defaults to a `Math.random`-based implementation)\r\n     */\r\n    constructor(engine = nativeMath) {\r\n        this.engine = engine;\r\n    }\r\n    /**\r\n     * Returns a value within [-0x80000000, 0x7fffffff]\r\n     */\r\n    int32() {\r\n        return int32(this.engine);\r\n    }\r\n    /**\r\n     * Returns a value within [0, 0xffffffff]\r\n     */\r\n    uint32() {\r\n        return uint32(this.engine);\r\n    }\r\n    /**\r\n     * Returns a value within [0, 0x1fffffffffffff]\r\n     */\r\n    uint53() {\r\n        return uint53(this.engine);\r\n    }\r\n    /**\r\n     * Returns a value within [0, 0x20000000000000]\r\n     */\r\n    uint53Full() {\r\n        return uint53Full(this.engine);\r\n    }\r\n    /**\r\n     * Returns a value within [-0x20000000000000, 0x1fffffffffffff]\r\n     */\r\n    int53() {\r\n        return int53(this.engine);\r\n    }\r\n    /**\r\n     * Returns a value within [-0x20000000000000, 0x20000000000000]\r\n     */\r\n    int53Full() {\r\n        return int53Full(this.engine);\r\n    }\r\n    /**\r\n     * Returns a value within [min, max]\r\n     * @param min The minimum integer value, inclusive. No less than -0x20000000000000.\r\n     * @param max The maximum integer value, inclusive. No greater than 0x20000000000000.\r\n     */\r\n    integer(min, max) {\r\n        return integer(min, max)(this.engine);\r\n    }\r\n    /**\r\n     * Returns a floating-point value within [0.0, 1.0]\r\n     */\r\n    realZeroToOneInclusive() {\r\n        return realZeroToOneInclusive(this.engine);\r\n    }\r\n    /**\r\n     * Returns a floating-point value within [0.0, 1.0)\r\n     */\r\n    realZeroToOneExclusive() {\r\n        return realZeroToOneExclusive(this.engine);\r\n    }\r\n    /**\r\n     * Returns a floating-point value within [min, max) or [min, max]\r\n     * @param min The minimum floating-point value, inclusive.\r\n     * @param max The maximum floating-point value.\r\n     * @param inclusive If true, `max` will be inclusive.\r\n     */\r\n    real(min, max, inclusive = false) {\r\n        return real(min, max, inclusive)(this.engine);\r\n    }\r\n    bool(numerator, denominator) {\r\n        return bool(numerator, denominator)(this.engine);\r\n    }\r\n    /**\r\n     * Return a random value within the provided `source` within the sliced\r\n     * bounds of `begin` and `end`.\r\n     * @param source an array of items to pick from\r\n     * @param begin the beginning slice index (defaults to `0`)\r\n     * @param end the ending slice index (defaults to `source.length`)\r\n     */\r\n    pick(source, begin, end) {\r\n        return pick(this.engine, source, begin, end);\r\n    }\r\n    /**\r\n     * Shuffles an array in-place\r\n     * @param array The array to shuffle\r\n     */\r\n    shuffle(array) {\r\n        return shuffle(this.engine, array);\r\n    }\r\n    /**\r\n     * From the population array, returns an array with sampleSize elements that\r\n     * are randomly chosen without repeats.\r\n     * @param population An array that has items to choose a sample from\r\n     * @param sampleSize The size of the result array\r\n     */\r\n    sample(population, sampleSize) {\r\n        return sample(this.engine, population, sampleSize);\r\n    }\r\n    /**\r\n     * Returns a value within [1, sideCount]\r\n     * @param sideCount The number of sides of the die\r\n     */\r\n    die(sideCount) {\r\n        return die(sideCount)(this.engine);\r\n    }\r\n    /**\r\n     * Returns an array of length `dieCount` of values within [1, sideCount]\r\n     * @param sideCount The number of sides of each die\r\n     * @param dieCount The number of dice\r\n     */\r\n    dice(sideCount, dieCount) {\r\n        return dice(sideCount, dieCount)(this.engine);\r\n    }\r\n    /**\r\n     * Returns a Universally Unique Identifier Version 4.\r\n     *\r\n     * See http://en.wikipedia.org/wiki/Universally_unique_identifier\r\n     */\r\n    uuid4() {\r\n        return uuid4(this.engine);\r\n    }\r\n    string(length, pool) {\r\n        return string(pool)(this.engine, length);\r\n    }\r\n    /**\r\n     * Returns a random string comprised of numbers or the characters `abcdef`\r\n     * (or `ABCDEF`) of length `length`.\r\n     * @param length Length of the result string\r\n     * @param uppercase Whether the string should use `ABCDEF` instead of `abcdef`\r\n     */\r\n    hex(length, uppercase) {\r\n        return hex(uppercase)(this.engine, length);\r\n    }\r\n    /**\r\n     * Returns a random `Date` within the inclusive range of [`start`, `end`].\r\n     * @param start The minimum `Date`\r\n     * @param end The maximum `Date`\r\n     */\r\n    date(start, end) {\r\n        return date(start, end)(this.engine);\r\n    }\r\n}\n\n/**\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\r\n */\r\nconst I32Array = (() => {\r\n    try {\r\n        const buffer = new ArrayBuffer(4);\r\n        const view = new Int32Array(buffer);\r\n        view[0] = INT32_SIZE;\r\n        if (view[0] === -INT32_SIZE) {\r\n            return Int32Array;\r\n        }\r\n    }\r\n    catch (_) {\r\n        // nothing to do here\r\n    }\r\n    return Array;\r\n})();\n\nlet data = null;\r\nconst COUNT = 128;\r\nlet index = COUNT;\r\n/**\r\n * An Engine that relies on the globally-available `crypto.getRandomValues`,\r\n * which is typically available in modern browsers.\r\n *\r\n * See https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\r\n *\r\n * If unavailable or otherwise non-functioning, then `browserCrypto` will\r\n * likely `throw` on the first call to `next()`.\r\n */\r\nconst browserCrypto = {\r\n    next() {\r\n        if (index >= COUNT) {\r\n            if (data === null) {\r\n                data = new I32Array(COUNT);\r\n            }\r\n            crypto.getRandomValues(data);\r\n            index = 0;\r\n        }\r\n        return data[index++] | 0;\r\n    }\r\n};\n\n/**\r\n * Returns an array of random int32 values, based on current time\r\n * and a random number engine\r\n *\r\n * @param engine an Engine to pull random values from, default `nativeMath`\r\n * @param length the length of the Array, minimum 1, default 16\r\n */\r\nfunction createEntropy(engine = nativeMath, length = 16) {\r\n    const array = [];\r\n    array.push(new Date().getTime() | 0);\r\n    for (let i = 1; i < length; ++i) {\r\n        array[i] = engine.next() | 0;\r\n    }\r\n    return array;\r\n}\n\n/**\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n */\r\nconst imul = (() => {\r\n    try {\r\n        if (Math.imul(UINT32_MAX, 5) === -5) {\r\n            return Math.imul;\r\n        }\r\n    }\r\n    catch (_) {\r\n        // nothing to do here\r\n    }\r\n    const UINT16_MAX = 0xffff;\r\n    return (a, b) => {\r\n        const ah = (a >>> 16) & UINT16_MAX;\r\n        const al = a & UINT16_MAX;\r\n        const bh = (b >>> 16) & UINT16_MAX;\r\n        const bl = b & UINT16_MAX;\r\n        // the shift by 0 fixes the sign on the high part\r\n        // the final |0 converts the unsigned value into a signed value\r\n        return (al * bl + (((ah * bl + al * bh) << 16) >>> 0)) | 0;\r\n    };\r\n})();\n\nconst ARRAY_SIZE = 624;\r\nconst ARRAY_MAX = ARRAY_SIZE - 1;\r\nconst M = 397;\r\nconst ARRAY_SIZE_MINUS_M = ARRAY_SIZE - M;\r\nconst A = 0x9908b0df;\r\n/**\r\n * An Engine that is a pseudorandom number generator using the Mersenne\r\n * Twister algorithm based on the prime 2**19937 − 1\r\n *\r\n * See http://en.wikipedia.org/wiki/Mersenne_twister\r\n */\r\nclass MersenneTwister19937 {\r\n    /**\r\n     * MersenneTwister19937 should not be instantiated directly.\r\n     * Instead, use the static methods `seed`, `seedWithArray`, or `autoSeed`.\r\n     */\r\n    constructor() {\r\n        this.data = new I32Array(ARRAY_SIZE);\r\n        this.index = 0; // integer within [0, 624]\r\n        this.uses = 0;\r\n    }\r\n    /**\r\n     * Returns a MersenneTwister19937 seeded with an initial int32 value\r\n     * @param initial the initial seed value\r\n     */\r\n    static seed(initial) {\r\n        return new MersenneTwister19937().seed(initial);\r\n    }\r\n    /**\r\n     * Returns a MersenneTwister19937 seeded with zero or more int32 values\r\n     * @param source A series of int32 values\r\n     */\r\n    static seedWithArray(source) {\r\n        return new MersenneTwister19937().seedWithArray(source);\r\n    }\r\n    /**\r\n     * Returns a MersenneTwister19937 seeded with the current time and\r\n     * a series of natively-generated random values\r\n     */\r\n    static autoSeed() {\r\n        return MersenneTwister19937.seedWithArray(createEntropy());\r\n    }\r\n    /**\r\n     * Returns the next int32 value of the sequence\r\n     */\r\n    next() {\r\n        if ((this.index | 0) >= ARRAY_SIZE) {\r\n            refreshData(this.data);\r\n            this.index = 0;\r\n        }\r\n        const value = this.data[this.index];\r\n        this.index = (this.index + 1) | 0;\r\n        this.uses += 1;\r\n        return temper(value) | 0;\r\n    }\r\n    /**\r\n     * Returns the number of times that the Engine has been used.\r\n     *\r\n     * This can be provided to an unused MersenneTwister19937 with the same\r\n     * seed, bringing it to the exact point that was left off.\r\n     */\r\n    getUseCount() {\r\n        return this.uses;\r\n    }\r\n    /**\r\n     * Discards one or more items from the engine\r\n     * @param count The count of items to discard\r\n     */\r\n    discard(count) {\r\n        if (count <= 0) {\r\n            return this;\r\n        }\r\n        this.uses += count;\r\n        if ((this.index | 0) >= ARRAY_SIZE) {\r\n            refreshData(this.data);\r\n            this.index = 0;\r\n        }\r\n        while (count + this.index > ARRAY_SIZE) {\r\n            count -= ARRAY_SIZE - this.index;\r\n            refreshData(this.data);\r\n            this.index = 0;\r\n        }\r\n        this.index = (this.index + count) | 0;\r\n        return this;\r\n    }\r\n    seed(initial) {\r\n        let previous = 0;\r\n        this.data[0] = previous = initial | 0;\r\n        for (let i = 1; i < ARRAY_SIZE; i = (i + 1) | 0) {\r\n            this.data[i] = previous =\r\n                (imul(previous ^ (previous >>> 30), 0x6c078965) + i) | 0;\r\n        }\r\n        this.index = ARRAY_SIZE;\r\n        this.uses = 0;\r\n        return this;\r\n    }\r\n    seedWithArray(source) {\r\n        this.seed(0x012bd6aa);\r\n        seedWithArray(this.data, source);\r\n        return this;\r\n    }\r\n}\r\nfunction refreshData(data) {\r\n    let k = 0;\r\n    let tmp = 0;\r\n    for (; (k | 0) < ARRAY_SIZE_MINUS_M; k = (k + 1) | 0) {\r\n        tmp = (data[k] & INT32_SIZE) | (data[(k + 1) | 0] & INT32_MAX);\r\n        data[k] = data[(k + M) | 0] ^ (tmp >>> 1) ^ (tmp & 0x1 ? A : 0);\r\n    }\r\n    for (; (k | 0) < ARRAY_MAX; k = (k + 1) | 0) {\r\n        tmp = (data[k] & INT32_SIZE) | (data[(k + 1) | 0] & INT32_MAX);\r\n        data[k] =\r\n            data[(k - ARRAY_SIZE_MINUS_M) | 0] ^ (tmp >>> 1) ^ (tmp & 0x1 ? A : 0);\r\n    }\r\n    tmp = (data[ARRAY_MAX] & INT32_SIZE) | (data[0] & INT32_MAX);\r\n    data[ARRAY_MAX] = data[M - 1] ^ (tmp >>> 1) ^ (tmp & 0x1 ? A : 0);\r\n}\r\nfunction temper(value) {\r\n    value ^= value >>> 11;\r\n    value ^= (value << 7) & 0x9d2c5680;\r\n    value ^= (value << 15) & 0xefc60000;\r\n    return value ^ (value >>> 18);\r\n}\r\nfunction seedWithArray(data, source) {\r\n    let i = 1;\r\n    let j = 0;\r\n    const sourceLength = source.length;\r\n    let k = Math.max(sourceLength, ARRAY_SIZE) | 0;\r\n    let previous = data[0] | 0;\r\n    for (; (k | 0) > 0; --k) {\r\n        data[i] = previous =\r\n            ((data[i] ^ imul(previous ^ (previous >>> 30), 0x0019660d)) +\r\n                (source[j] | 0) +\r\n                (j | 0)) |\r\n                0;\r\n        i = (i + 1) | 0;\r\n        ++j;\r\n        if ((i | 0) > ARRAY_MAX) {\r\n            data[0] = data[ARRAY_MAX];\r\n            i = 1;\r\n        }\r\n        if (j >= sourceLength) {\r\n            j = 0;\r\n        }\r\n    }\r\n    for (k = ARRAY_MAX; (k | 0) > 0; --k) {\r\n        data[i] = previous =\r\n            ((data[i] ^ imul(previous ^ (previous >>> 30), 0x5d588b65)) - i) | 0;\r\n        i = (i + 1) | 0;\r\n        if ((i | 0) > ARRAY_MAX) {\r\n            data[0] = data[ARRAY_MAX];\r\n            i = 1;\r\n        }\r\n    }\r\n    data[0] = INT32_SIZE;\r\n}\n\nlet data$1 = null;\r\nconst COUNT$1 = 128;\r\nlet index$1 = COUNT$1;\r\n/**\r\n * An Engine that relies on the node-available\r\n * `require('crypto').randomBytes`, which has been available since 0.58.\r\n *\r\n * See https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback\r\n *\r\n * If unavailable or otherwise non-functioning, then `nodeCrypto` will\r\n * likely `throw` on the first call to `next()`.\r\n */\r\nconst nodeCrypto = {\r\n    next() {\r\n        if (index$1 >= COUNT$1) {\r\n            data$1 = new Int32Array(new Int8Array(require(\"crypto\").randomBytes(4 * COUNT$1)).buffer);\r\n            index$1 = 0;\r\n        }\r\n        return data$1[index$1++] | 0;\r\n    }\r\n};\n\n/**\r\n * Returns a Distribution to random value within the provided `source`\r\n * within the sliced bounds of `begin` and `end`.\r\n * @param source an array of items to pick from\r\n * @param begin the beginning slice index (defaults to `0`)\r\n * @param end the ending slice index (defaults to `source.length`)\r\n */\r\nfunction picker(source, begin, end) {\r\n    const clone = sliceArray.call(source, begin, end);\r\n    if (clone.length === 0) {\r\n        throw new RangeError(`Cannot pick from a source with no items`);\r\n    }\r\n    const distribution = integer(0, clone.length - 1);\r\n    return engine => clone[distribution(engine)];\r\n}\n\nexport { Random, browserCrypto, nativeMath, MersenneTwister19937, nodeCrypto, bool, date, dice, die, hex, int32, int53, int53Full, integer, pick, picker, real, realZeroToOneExclusive, realZeroToOneInclusive, sample, shuffle, string, uint32, uint53, uint53Full, uuid4, createEntropy };\n//# sourceMappingURL=random-js.esm.js.map\n","import * as Random from 'random-js';\nimport Matrix from 'ml-matrix';\n\nexport function checkFloat(n) {\n  return n > 0.0 && n <= 1.0;\n}\n\n/**\n * Select n with replacement elements on the training set and values, where n is the size of the training set.\n * @ignore\n * @param {Matrix} trainingSet\n * @param {Array} trainingValue\n * @param {number} seed - seed for the random selection, must be a 32-bit integer.\n * @return {object} with new X and y.\n */\nexport function examplesBaggingWithReplacement(\n  trainingSet,\n  trainingValue,\n  seed,\n) {\n  let engine;\n  let distribution = Random.integer(0, trainingSet.rows - 1);\n  if (seed === undefined) {\n    engine = Random.MersenneTwister19937.autoSeed();\n  } else if (Number.isInteger(seed)) {\n    engine = Random.MersenneTwister19937.seed(seed);\n  } else {\n    throw new RangeError(\n      `Expected seed must be undefined or integer not ${seed}`,\n    );\n  }\n\n  let Xr = new Array(trainingSet.rows);\n  let yr = new Array(trainingSet.rows);\n\n  for (let i = 0; i < trainingSet.rows; ++i) {\n    let index = distribution(engine);\n    Xr[i] = trainingSet.getRow(index);\n    yr[i] = trainingValue[index];\n  }\n\n  return {\n    X: new Matrix(Xr),\n    y: yr,\n  };\n}\n\n/**\n * selects n features from the training set with or without replacement, returns the new training set and the indexes used.\n * @ignore\n * @param {Matrix} trainingSet\n * @param {number} n - features.\n * @param {boolean} replacement\n * @param {number} seed - seed for the random selection, must be a 32-bit integer.\n * @return {object}\n */\nexport function featureBagging(trainingSet, n, replacement, seed) {\n  if (trainingSet.columns < n) {\n    throw new RangeError(\n      'N should be less or equal to the number of columns of X',\n    );\n  }\n\n  let distribution = Random.integer(0, trainingSet.columns - 1);\n  let engine;\n  if (seed === undefined) {\n    engine = Random.MersenneTwister19937.autoSeed();\n  } else if (Number.isInteger(seed)) {\n    engine = Random.MersenneTwister19937.seed(seed);\n  } else {\n    throw new RangeError(\n      `Expected seed must be undefined or integer not ${seed}`,\n    );\n  }\n\n  let toRet = new Matrix(trainingSet.rows, n);\n\n  let usedIndex;\n  let index;\n  if (replacement) {\n    usedIndex = new Array(n);\n    for (let i = 0; i < n; ++i) {\n      index = distribution(engine);\n      usedIndex[i] = index;\n      toRet.setColumn(i, trainingSet.getColumn(index));\n    }\n  } else {\n    usedIndex = new Set();\n    index = distribution(engine);\n    for (let i = 0; i < n; ++i) {\n      while (usedIndex.has(index)) {\n        index = distribution(engine);\n      }\n      toRet.setColumn(i, trainingSet.getColumn(index));\n      usedIndex.add(index);\n    }\n    usedIndex = Array.from(usedIndex);\n  }\n\n  return {\n    X: toRet,\n    usedIndex: usedIndex,\n  };\n}\n","import {\n  DecisionTreeClassifier as DTClassifier,\n  DecisionTreeRegression as DTRegression,\n} from 'ml-cart';\nimport {\n  Matrix,\n  WrapperMatrix2D,\n  MatrixTransposeView,\n  MatrixColumnSelectionView,\n} from 'ml-matrix';\n\nimport * as Utils from './utils';\n\n/**\n * @class RandomForestBase\n */\nexport class RandomForestBase {\n  /**\n   * Create a new base random forest for a classifier or regression model.\n   * @constructor\n   * @param {object} options\n   * @param {number|String} [options.maxFeatures] - the number of features used on each estimator.\n   *        * if is an integer it selects maxFeatures elements over the sample features.\n   *        * if is a float between (0, 1), it takes the percentage of features.\n   * @param {boolean} [options.replacement] - use replacement over the sample features.\n   * @param {number} [options.seed] - seed for feature and samples selection, must be a 32-bit integer.\n   * @param {number} [options.nEstimators] - number of estimator to use.\n   * @param {object} [options.treeOptions] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n   * @param {boolean} [options.isClassifier] - boolean to check if is a classifier or regression model (used by subclasses).\n   * @param {boolean} [options.useSampleBagging] - use bagging over training samples.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.replacement = model.replacement;\n      this.maxFeatures = model.maxFeatures;\n      this.nEstimators = model.nEstimators;\n      this.treeOptions = model.treeOptions;\n      this.isClassifier = model.isClassifier;\n      this.seed = model.seed;\n      this.n = model.n;\n      this.indexes = model.indexes;\n      this.useSampleBagging = model.useSampleBagging;\n\n      let Estimator = this.isClassifier ? DTClassifier : DTRegression;\n      this.estimators = model.estimators.map((est) => Estimator.load(est));\n    } else {\n      this.replacement = options.replacement;\n      this.maxFeatures = options.maxFeatures;\n      this.nEstimators = options.nEstimators;\n      this.treeOptions = options.treeOptions;\n      this.isClassifier = options.isClassifier;\n      this.seed = options.seed;\n      this.useSampleBagging = options.useSampleBagging;\n    }\n  }\n\n  /**\n   * Train the decision tree with the given training set and labels.\n   * @param {Matrix|Array} trainingSet\n   * @param {Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n\n    this.maxFeatures = this.maxFeatures || trainingSet.columns;\n\n    if (Utils.checkFloat(this.maxFeatures)) {\n      this.n = Math.floor(trainingSet.columns * this.maxFeatures);\n    } else if (Number.isInteger(this.maxFeatures)) {\n      if (this.maxFeatures > trainingSet.columns) {\n        throw new RangeError(\n          `The maxFeatures parameter should be less than ${trainingSet.columns}`,\n        );\n      } else {\n        this.n = this.maxFeatures;\n      }\n    } else {\n      throw new RangeError(\n        `Cannot process the maxFeatures parameter ${this.maxFeatures}`,\n      );\n    }\n\n    let Estimator;\n    if (this.isClassifier) {\n      Estimator = DTClassifier;\n    } else {\n      Estimator = DTRegression;\n    }\n\n    this.estimators = new Array(this.nEstimators);\n    this.indexes = new Array(this.nEstimators);\n\n    for (let i = 0; i < this.nEstimators; ++i) {\n      let res = this.useSampleBagging\n        ? Utils.examplesBaggingWithReplacement(\n            trainingSet,\n            trainingValues,\n            this.seed,\n          )\n        : { X: trainingSet, y: trainingValues };\n      let X = res.X;\n      let y = res.y;\n\n      res = Utils.featureBagging(X, this.n, this.replacement, this.seed);\n      X = res.X;\n\n      this.indexes[i] = res.usedIndex;\n      this.estimators[i] = new Estimator(this.treeOptions);\n      this.estimators[i].train(X, y);\n    }\n  }\n\n  /**\n   * Method that returns the way the algorithm generates the predictions, for example, in classification\n   * you can return the mode of all predictions retrieved by the trees, or in case of regression you can\n   * use the mean or the median.\n   * @abstract\n   * @param {Array} values - predictions of the estimators.\n   * @return {number} prediction.\n   */\n  // eslint-disable-next-line no-unused-vars\n  selection(values) {\n    throw new Error(\"Abstract method 'selection' not implemented!\");\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Matrix|Array} toPredict\n   * @return {Array} predictions\n   */\n  predict(toPredict) {\n    let predictionValues = new Array(this.nEstimators);\n    toPredict = Matrix.checkMatrix(toPredict);\n    for (let i = 0; i < this.nEstimators; ++i) {\n      let X = new MatrixColumnSelectionView(toPredict, this.indexes[i]); // get features for estimator\n      predictionValues[i] = this.estimators[i].predict(X);\n    }\n\n    predictionValues = new MatrixTransposeView(\n      new WrapperMatrix2D(predictionValues),\n    );\n    let predictions = new Array(predictionValues.rows);\n    for (let i = 0; i < predictionValues.rows; ++i) {\n      predictions[i] = this.selection(predictionValues.getRow(i));\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      indexes: this.indexes,\n      n: this.n,\n      replacement: this.replacement,\n      maxFeatures: this.maxFeatures,\n      nEstimators: this.nEstimators,\n      treeOptions: this.treeOptions,\n      isClassifier: this.isClassifier,\n      seed: this.seed,\n      estimators: this.estimators.map((est) => est.toJSON()),\n      useSampleBagging: this.useSampleBagging,\n    };\n  }\n}\n","import { RandomForestBase } from './RandomForestBase';\n\nconst defaultOptions = {\n  maxFeatures: 1.0,\n  replacement: true,\n  nEstimators: 10,\n  seed: 42,\n  useSampleBagging: false,\n};\n\n/**\n * @class RandomForestClassifier\n * @augments RandomForestBase\n */\nexport class RandomForestClassifier extends RandomForestBase {\n  /**\n   * Create a new base random forest for a classifier or regression model.\n   * @constructor\n   * @param {object} options\n   * @param {number} [options.maxFeatures=1.0] - the number of features used on each estimator.\n   *        * if is an integer it selects maxFeatures elements over the sample features.\n   *        * if is a float between (0, 1), it takes the percentage of features.\n   * @param {boolean} [options.replacement=true] - use replacement over the sample features.\n   * @param {number} [options.seed=42] - seed for feature and samples selection, must be a 32-bit integer.\n   * @param {number} [options.nEstimators=10] - number of estimator to use.\n   * @param {object} [options.treeOptions={}] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n   * @param {boolean} [options.useSampleBagging=false] - use bagging over training samples.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      super(true, model.baseModel);\n    } else {\n      options = Object.assign({}, defaultOptions, options);\n      options.isClassifier = true;\n      super(options);\n    }\n  }\n\n  /**\n   * retrieve the prediction given the selection method.\n   * @param {Array} values - predictions of the estimators.\n   * @return {number} prediction\n   */\n  selection(values) {\n    return mode(values);\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    let baseModel = super.toJSON();\n    return {\n      baseModel: baseModel,\n      name: 'RFClassifier',\n    };\n  }\n\n  /**\n   * Load a Decision tree classifier with the given model.\n   * @param {object} model\n   * @return {RandomForestClassifier}\n   */\n  static load(model) {\n    if (model.name !== 'RFClassifier') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    return new RandomForestClassifier(true, model);\n  }\n}\n\n/**\n * Return the most repeated element on the array.\n * @param {Array} arr\n * @return {number} mode\n */\nfunction mode(arr) {\n  return arr\n    .sort(\n      (a, b) =>\n        arr.filter((v) => v === a).length - arr.filter((v) => v === b).length,\n    )\n    .pop();\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import arrayMean from 'ml-array-mean';\nimport arrayMedian from 'ml-array-median';\n\nimport { RandomForestBase } from './RandomForestBase';\n\nconst selectionMethods = {\n  mean: arrayMean,\n  median: arrayMedian,\n};\n\nconst defaultOptions = {\n  maxFeatures: 1.0,\n  replacement: false,\n  nEstimators: 10,\n  treeOptions: {},\n  selectionMethod: 'mean',\n  seed: 42,\n  useSampleBagging: false,\n};\n\n/**\n * @class RandomForestRegression\n * @augments RandomForestBase\n */\nexport class RandomForestRegression extends RandomForestBase {\n  /**\n   * Create a new base random forest for a classifier or regression model.\n   * @constructor\n   * @param {object} options\n   * @param {number} [options.maxFeatures=1.0] - the number of features used on each estimator.\n   *        * if is an integer it selects maxFeatures elements over the sample features.\n   *        * if is a float between (0, 1), it takes the percentage of features.\n   * @param {boolean} [options.replacement=true] - use replacement over the sample features.\n   * @param {number} [options.seed=42] - seed for feature and samples selection, must be a 32-bit integer.\n   * @param {number} [options.nEstimators=10] - number of estimator to use.\n   * @param {object} [options.treeOptions={}] - options for the tree classifier, see [ml-cart]{@link https://mljs.github.io/decision-tree-cart/}\n   * @param {string} [options.selectionMethod=\"mean\"] - the way to calculate the prediction from estimators, \"mean\" and \"median\" are supported.\n   * @param {boolean} [options.useSampleBagging=false] - use bagging over training samples.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      super(true, model.baseModel);\n      this.selectionMethod = model.selectionMethod;\n    } else {\n      options = Object.assign({}, defaultOptions, options);\n\n      if (\n        !(\n          options.selectionMethod === 'mean' ||\n          options.selectionMethod === 'median'\n        )\n      ) {\n        throw new RangeError(\n          `Unsupported selection method ${options.selectionMethod}`,\n        );\n      }\n\n      options.isClassifier = false;\n\n      super(options);\n      this.selectionMethod = options.selectionMethod;\n    }\n  }\n\n  /**\n   * retrieve the prediction given the selection method.\n   * @param {Array} values - predictions of the estimators.\n   * @return {number} prediction\n   */\n  selection(values) {\n    return selectionMethods[this.selectionMethod](values);\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    let baseModel = super.toJSON();\n    return {\n      baseModel: baseModel,\n      selectionMethod: this.selectionMethod,\n      name: 'RFRegression',\n    };\n  }\n\n  /**\n   * Load a Decision tree classifier with the given model.\n   * @param {object} model\n   * @return {RandomForestRegression}\n   */\n  static load(model) {\n    if (model.name !== 'RFRegression') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    return new RandomForestRegression(true, model);\n  }\n}\n","import { Matrix, MatrixTransposeView, EVD, SVD, NIPALS } from 'ml-matrix';\n\n/**\n * Creates new PCA (Principal Component Analysis) from the dataset\n * @param {Matrix} dataset - dataset or covariance matrix.\n * @param {Object} [options]\n * @param {boolean} [options.isCovarianceMatrix=false] - true if the dataset is a covariance matrix.\n * @param {string} [options.method='SVD'] - select which method to use: SVD (default), covarianceMatrirx or NIPALS.\n * @param {number} [options.nCompNIPALS=2] - number of components to be computed with NIPALS.\n * @param {boolean} [options.center=true] - should the data be centered (subtract the mean).\n * @param {boolean} [options.scale=false] - should the data be scaled (divide by the standard deviation).\n * @param {boolean} [options.ignoreZeroVariance=false] - ignore columns with zero variance if `scale` is `true`.\n * */\nexport class PCA {\n  constructor(dataset, options = {}) {\n    if (dataset === true) {\n      const model = options;\n      this.center = model.center;\n      this.scale = model.scale;\n      this.means = model.means;\n      this.stdevs = model.stdevs;\n      this.U = Matrix.checkMatrix(model.U);\n      this.S = model.S;\n      this.R = model.R;\n      this.excludedFeatures = model.excludedFeatures || [];\n      return;\n    }\n\n    dataset = new Matrix(dataset);\n\n    const {\n      isCovarianceMatrix = false,\n      method = 'SVD',\n      nCompNIPALS = 2,\n      center = true,\n      scale = false,\n      ignoreZeroVariance = false,\n    } = options;\n\n    this.center = center;\n    this.scale = scale;\n    this.means = null;\n    this.stdevs = null;\n    this.excludedFeatures = [];\n\n    if (isCovarianceMatrix) {\n      // User provided a covariance matrix instead of dataset.\n      this._computeFromCovarianceMatrix(dataset);\n      return;\n    }\n\n    this._adjust(dataset, ignoreZeroVariance);\n    switch (method) {\n      case 'covarianceMatrix': {\n        // User provided a dataset but wants us to compute and use the covariance matrix.\n        const covarianceMatrix = new MatrixTransposeView(dataset)\n          .mmul(dataset)\n          .div(dataset.rows - 1);\n        this._computeFromCovarianceMatrix(covarianceMatrix);\n        break;\n      }\n      case 'NIPALS': {\n        this._computeWithNIPALS(dataset, nCompNIPALS);\n        break;\n      }\n      case 'SVD': {\n        const svd = new SVD(dataset, {\n          computeLeftSingularVectors: false,\n          computeRightSingularVectors: true,\n          autoTranspose: true,\n        });\n\n        this.U = svd.rightSingularVectors;\n\n        const singularValues = svd.diagonal;\n        const eigenvalues = [];\n        for (const singularValue of singularValues) {\n          eigenvalues.push((singularValue * singularValue) / (dataset.rows - 1));\n        }\n        this.S = eigenvalues;\n        break;\n      }\n      default: {\n        throw new Error(`unknown method: ${method}`);\n      }\n    }\n  }\n\n  /**\n   * Load a PCA model from JSON\n   * @param {Object} model\n   * @return {PCA}\n   */\n  static load(model) {\n    if (typeof model.name !== 'string') {\n      throw new TypeError('model must have a name property');\n    }\n    if (model.name !== 'PCA') {\n      throw new RangeError(`invalid model: ${model.name}`);\n    }\n    return new PCA(true, model);\n  }\n\n  /**\n   * Project the dataset into the PCA space\n   * @param {Matrix} dataset\n   * @param {Object} options\n   * @return {Matrix} dataset projected in the PCA space\n   */\n  predict(dataset, options = {}) {\n    const { nComponents = this.U.columns } = options;\n    dataset = new Matrix(dataset);\n    if (this.center) {\n      dataset.subRowVector(this.means);\n      if (this.scale) {\n        for (let i of this.excludedFeatures) {\n          dataset.removeColumn(i);\n        }\n        dataset.divRowVector(this.stdevs);\n      }\n    }\n    var predictions = dataset.mmul(this.U);\n    return predictions.subMatrix(0, predictions.rows - 1, 0, nComponents - 1);\n  }\n\n  /**\n   * Calculates the inverse PCA transform\n   * @param {Matrix} dataset\n   * @return {Matrix} dataset projected in the PCA space\n   */\n  invert(dataset) {\n    dataset = Matrix.checkMatrix(dataset);\n\n    var inverse = dataset.mmul(this.U.transpose());\n\n    if (this.center) {\n      if (this.scale) {\n        inverse.mulRowVector(this.stdevs);\n      }\n      inverse.addRowVector(this.means);\n    }\n\n    return inverse;\n  }\n\n\n  /**\n   * Returns the proportion of variance for each component\n   * @return {[number]}\n   */\n  getExplainedVariance() {\n    var sum = 0;\n    for (const s of this.S) {\n      sum += s;\n    }\n    return this.S.map((value) => value / sum);\n  }\n\n  /**\n   * Returns the cumulative proportion of variance\n   * @return {[number]}\n   */\n  getCumulativeVariance() {\n    var explained = this.getExplainedVariance();\n    for (var i = 1; i < explained.length; i++) {\n      explained[i] += explained[i - 1];\n    }\n    return explained;\n  }\n\n  /**\n   * Returns the Eigenvectors of the covariance matrix\n   * @returns {Matrix}\n   */\n  getEigenvectors() {\n    return this.U;\n  }\n\n  /**\n   * Returns the Eigenvalues (on the diagonal)\n   * @returns {[number]}\n   */\n  getEigenvalues() {\n    return this.S;\n  }\n\n  /**\n   * Returns the standard deviations of the principal components\n   * @returns {[number]}\n   */\n  getStandardDeviations() {\n    return this.S.map((x) => Math.sqrt(x));\n  }\n\n  /**\n   * Returns the loadings matrix\n   * @return {Matrix}\n   */\n  getLoadings() {\n    return this.U.transpose();\n  }\n\n  /**\n   * Export the current model to a JSON object\n   * @return {Object} model\n   */\n  toJSON() {\n    return {\n      name: 'PCA',\n      center: this.center,\n      scale: this.scale,\n      means: this.means,\n      stdevs: this.stdevs,\n      U: this.U,\n      S: this.S,\n      excludedFeatures: this.excludedFeatures,\n    };\n  }\n\n  _adjust(dataset, ignoreZeroVariance) {\n    if (this.center) {\n      const mean = dataset.mean('column');\n      const stdevs = this.scale\n        ? dataset.standardDeviation('column', { mean })\n        : null;\n      this.means = mean;\n      dataset.subRowVector(mean);\n      if (this.scale) {\n        for (let i = 0; i < stdevs.length; i++) {\n          if (stdevs[i] === 0) {\n            if (ignoreZeroVariance) {\n              dataset.removeColumn(i);\n              stdevs.splice(i, 1);\n              this.excludedFeatures.push(i);\n              i--;\n            } else {\n              throw new RangeError(\n                `Cannot scale the dataset (standard deviation is zero at index ${i}`,\n              );\n            }\n          }\n        }\n        this.stdevs = stdevs;\n        dataset.divRowVector(stdevs);\n      }\n    }\n  }\n\n  _computeFromCovarianceMatrix(dataset) {\n    const evd = new EVD(dataset, { assumeSymmetric: true });\n    this.U = evd.eigenvectorMatrix;\n    this.U.flipRows();\n    this.S = evd.realEigenvalues;\n    this.S.reverse();\n  }\n\n  _computeWithNIPALS(dataset, nCompNIPALS) {\n    this.U = new Matrix(nCompNIPALS, dataset.columns);\n    this.S = [];\n\n    let x = dataset;\n    for (let i = 0; i < nCompNIPALS; i++) {\n      let dc = new NIPALS(x);\n\n      this.U.setRow(i, dc.w.transpose());\n      this.S.push(Math.pow(dc.s.get(0, 0), 2));\n\n      x = dc.xResidual;\n    }\n    this.U = this.U.transpose(); // to be compatible with API\n  }\n}\n","export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n","/**\n * Computes a distance/similarity matrix given an array of data and a distance/similarity function.\n * @param {Array} data An array of data\n * @param {function} distanceFn  A function that accepts two arguments and computes a distance/similarity between them\n * @return {Array<Array>} The distance/similarity matrix. The matrix is square and has a size equal to the length of\n * the data array\n */\nexport default function distanceMatrix(data, distanceFn) {\n  const result = getMatrix(data.length);\n\n  // Compute upper distance matrix\n  for (let i = 0; i < data.length; i++) {\n    for (let j = 0; j <= i; j++) {\n      result[i][j] = distanceFn(data[i], data[j]);\n      result[j][i] = result[i][j];\n    }\n  }\n\n  return result;\n}\n\nfunction getMatrix(size) {\n  const matrix = [];\n  for (let i = 0; i < size; i++) {\n    const row = [];\n    matrix.push(row);\n    for (let j = 0; j < size; j++) {\n      row.push(0);\n    }\n  }\n  return matrix;\n}\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","import Heap from 'heap';\n\nexport default class Cluster {\n  constructor() {\n    this.children = [];\n    this.height = 0;\n    this.size = 1;\n    this.index = -1;\n    this.isLeaf = false;\n  }\n\n  /**\n   * Creates an array of clusters where the maximum height is smaller than the threshold\n   * @param {number} threshold\n   * @return {Array<Cluster>}\n   */\n  cut(threshold) {\n    if (typeof threshold !== 'number') {\n      throw new TypeError('threshold must be a number');\n    }\n    if (threshold < 0) {\n      throw new RangeError('threshold must be a positive number');\n    }\n    let list = [this];\n    const ans = [];\n    while (list.length > 0) {\n      const aux = list.shift();\n      if (threshold >= aux.height) {\n        ans.push(aux);\n      } else {\n        list = list.concat(aux.children);\n      }\n    }\n    return ans;\n  }\n\n  /**\n   * Merge the leaves in the minimum way to have `groups` number of clusters.\n   * @param {number} groups - Them number of children the first level of the tree should have.\n   * @return {Cluster}\n   */\n  group(groups) {\n    if (!Number.isInteger(groups) || groups < 1) {\n      throw new RangeError('groups must be a positive integer');\n    }\n\n    const heap = new Heap((a, b) => {\n      return b.height - a.height;\n    });\n\n    heap.push(this);\n\n    while (heap.size() < groups) {\n      var first = heap.pop();\n      if (first.children.length === 0) {\n        break;\n      }\n      first.children.forEach((child) => heap.push(child));\n    }\n\n    var root = new Cluster();\n    root.children = heap.toArray();\n    root.height = this.height;\n\n    return root;\n  }\n\n  /**\n   * Traverses the tree depth-first and calls the provided callback with each individual node\n   * @param {function} cb - The callback to be called on each node encounter\n   */\n  traverse(cb) {\n    function visit(root, callback) {\n      callback(root);\n      if (root.children) {\n        for (const child of root.children) {\n          visit(child, callback);\n        }\n      }\n    }\n    visit(this, cb);\n  }\n\n  /**\n   * Returns a list of indices for all the leaves of this cluster.\n   * The list is ordered in such a way that a dendrogram could be drawn without crossing branches.\n   * @returns {Array<number>}\n   */\n  indices() {\n    const result = [];\n    this.traverse((cluster) => {\n      if (cluster.isLeaf) {\n        result.push(cluster.index);\n      }\n    });\n    return result;\n  }\n}\n","import { euclidean } from 'ml-distance-euclidean';\nimport getDistanceMatrix from 'ml-distance-matrix';\nimport { Matrix } from 'ml-matrix';\n\nimport Cluster from './Cluster';\n\nfunction singleLink(dKI, dKJ) {\n  return Math.min(dKI, dKJ);\n}\n\nfunction completeLink(dKI, dKJ) {\n  return Math.max(dKI, dKJ);\n}\n\nfunction averageLink(dKI, dKJ, dIJ, ni, nj) {\n  const ai = ni / (ni + nj);\n  const aj = nj / (ni + nj);\n  return ai * dKI + aj * dKJ;\n}\n\nfunction weightedAverageLink(dKI, dKJ) {\n  return (dKI + dKJ) / 2;\n}\n\nfunction centroidLink(dKI, dKJ, dIJ, ni, nj) {\n  const ai = ni / (ni + nj);\n  const aj = nj / (ni + nj);\n  const b = -(ni * nj) / (ni + nj) ** 2;\n  return ai * dKI + aj * dKJ + b * dIJ;\n}\n\nfunction medianLink(dKI, dKJ, dIJ) {\n  return dKI / 2 + dKJ / 2 - dIJ / 4;\n}\n\nfunction wardLink(dKI, dKJ, dIJ, ni, nj, nk) {\n  const ai = (ni + nk) / (ni + nj + nk);\n  const aj = (nj + nk) / (ni + nj + nk);\n  const b = -nk / (ni + nj + nk);\n  return ai * dKI + aj * dKJ + b * dIJ;\n}\n\nfunction wardLink2(dKI, dKJ, dIJ, ni, nj, nk) {\n  const ai = (ni + nk) / (ni + nj + nk);\n  const aj = (nj + nk) / (ni + nj + nk);\n  const b = -nk / (ni + nj + nk);\n  return Math.sqrt(ai * dKI * dKI + aj * dKJ * dKJ + b * dIJ * dIJ);\n}\n\n/**\n * Continuously merge nodes that have the least dissimilarity\n * @param {Array<Array<number>>} data - Array of points to be clustered\n * @param {object} [options]\n * @param {Function} [options.distanceFunction]\n * @param {string} [options.method] - Default: `'complete'`\n * @param {boolean} [options.isDistanceMatrix] - Is the input already a distance matrix?\n * @constructor\n */\nexport function agnes(data, options = {}) {\n  const {\n    distanceFunction = euclidean,\n    method = 'complete',\n    isDistanceMatrix = false,\n  } = options;\n\n  let updateFunc;\n  if (!isDistanceMatrix) {\n    data = getDistanceMatrix(data, distanceFunction);\n  }\n  let distanceMatrix = new Matrix(data);\n  const numLeaves = distanceMatrix.rows;\n\n  // allows to use a string or a given function\n  if (typeof method === 'string') {\n    switch (method.toLowerCase()) {\n      case 'single':\n        updateFunc = singleLink;\n        break;\n      case 'complete':\n        updateFunc = completeLink;\n        break;\n      case 'average':\n      case 'upgma':\n        updateFunc = averageLink;\n        break;\n      case 'wpgma':\n        updateFunc = weightedAverageLink;\n        break;\n      case 'centroid':\n      case 'upgmc':\n        updateFunc = centroidLink;\n        break;\n      case 'median':\n      case 'wpgmc':\n        updateFunc = medianLink;\n        break;\n      case 'ward':\n        updateFunc = wardLink;\n        break;\n      case 'ward2':\n        updateFunc = wardLink2;\n        break;\n      default:\n        throw new RangeError(`unknown clustering method: ${method}`);\n    }\n  } else if (typeof method !== 'function') {\n    throw new TypeError('method must be a string or function');\n  }\n\n  let clusters = [];\n  for (let i = 0; i < numLeaves; i++) {\n    const cluster = new Cluster();\n    cluster.isLeaf = true;\n    cluster.index = i;\n    clusters.push(cluster);\n  }\n\n  for (let n = 0; n < numLeaves - 1; n++) {\n    const [row, column, distance] = getSmallestDistance(distanceMatrix);\n    const cluster1 = clusters[row];\n    const cluster2 = clusters[column];\n    const newCluster = new Cluster();\n    newCluster.size = cluster1.size + cluster2.size;\n    newCluster.children.push(cluster1, cluster2);\n    newCluster.height = distance;\n\n    const newClusters = [newCluster];\n    const newDistanceMatrix = new Matrix(\n      distanceMatrix.rows - 1,\n      distanceMatrix.rows - 1,\n    );\n    const previous = (newIndex) =>\n      getPreviousIndex(newIndex, Math.min(row, column), Math.max(row, column));\n\n    for (let i = 1; i < newDistanceMatrix.rows; i++) {\n      const prevI = previous(i);\n      const prevICluster = clusters[prevI];\n      newClusters.push(prevICluster);\n      for (let j = 0; j < i; j++) {\n        if (j === 0) {\n          const dKI = distanceMatrix.get(row, prevI);\n          const dKJ = distanceMatrix.get(prevI, column);\n          const val = updateFunc(\n            dKI,\n            dKJ,\n            distance,\n            cluster1.size,\n            cluster2.size,\n            prevICluster.size,\n          );\n          newDistanceMatrix.set(i, j, val);\n          newDistanceMatrix.set(j, i, val);\n        } else {\n          // Just copy distance from previous matrix\n          const val = distanceMatrix.get(prevI, previous(j));\n          newDistanceMatrix.set(i, j, val);\n          newDistanceMatrix.set(j, i, val);\n        }\n      }\n    }\n\n    clusters = newClusters;\n    distanceMatrix = newDistanceMatrix;\n  }\n\n  return clusters[0];\n}\n\nfunction getSmallestDistance(distance) {\n  let smallest = Infinity;\n  let smallestI = 0;\n  let smallestJ = 0;\n  for (let i = 1; i < distance.rows; i++) {\n    for (let j = 0; j < i; j++) {\n      if (distance.get(i, j) < smallest) {\n        smallest = distance.get(i, j);\n        smallestI = i;\n        smallestJ = j;\n      }\n    }\n  }\n  return [smallestI, smallestJ, smallest];\n}\n\nfunction getPreviousIndex(newIndex, prev1, prev2) {\n  newIndex -= 1;\n  if (newIndex >= prev1) newIndex++;\n  if (newIndex >= prev2) newIndex++;\n  return newIndex;\n}\n","export * from './agnes';\n// export * from './diana';\n// export * from './birch';\n// export * './cure';\n// export * from './chameleon';\n","'use strict';\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nconst defaultOptions = {\n    distanceFunction: squaredEuclidean\n};\nexport default function nearestVector(listVectors, vector, options = defaultOptions) {\n    const distanceFunction = options.distanceFunction || defaultOptions.distanceFunction;\n    const similarityFunction = options.similarityFunction || defaultOptions.similarityFunction;\n    let vectorIndex = -1;\n    if (typeof similarityFunction === 'function') {\n        // maximum similarity\n        let maxSim = Number.MIN_VALUE;\n        for (let j = 0; j < listVectors.length; j++) {\n            const sim = similarityFunction(vector, listVectors[j]);\n            if (sim > maxSim) {\n                maxSim = sim;\n                vectorIndex = j;\n            }\n        }\n    }\n    else if (typeof distanceFunction === 'function') {\n        // minimum distance\n        let minDist = Number.MAX_VALUE;\n        for (let i = 0; i < listVectors.length; i++) {\n            const dist = distanceFunction(vector, listVectors[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                vectorIndex = i;\n            }\n        }\n    }\n    else {\n        throw new Error(\"A similarity or distance function it's required\");\n    }\n    return vectorIndex;\n}\nexport function findNearestVector(vectorList, vector, options = defaultOptions) {\n    const index = nearestVector(vectorList, vector, options);\n    return vectorList[index];\n}\n","import nearestVector from 'ml-nearest-vector';\n\n/**\n * Calculates the distance matrix for a given array of points\n * @ignore\n * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n * @param {function} distance - Distance function to use between the points\n * @return {Array<Array<number>>} - matrix with the distance values\n */\nexport function calculateDistanceMatrix(data, distance) {\n  var distanceMatrix = new Array(data.length);\n  for (var i = 0; i < data.length; ++i) {\n    for (var j = i; j < data.length; ++j) {\n      if (!distanceMatrix[i]) {\n        distanceMatrix[i] = new Array(data.length);\n      }\n      if (!distanceMatrix[j]) {\n        distanceMatrix[j] = new Array(data.length);\n      }\n      const dist = distance(data[i], data[j]);\n      distanceMatrix[i][j] = dist;\n      distanceMatrix[j][i] = dist;\n    }\n  }\n  return distanceMatrix;\n}\n\n/**\n * Updates the cluster identifier based in the new data\n * @ignore\n * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n * @param {Array<Array<number>>} centers - the K centers in format [x,y,z,...]\n * @param {Array <number>} clusterID - the cluster identifier for each data dot\n * @param {function} distance - Distance function to use between the points\n * @return {Array} the cluster identifier for each data dot\n */\nexport function updateClusterID(data, centers, clusterID, distance) {\n  for (var i = 0; i < data.length; i++) {\n    clusterID[i] = nearestVector(centers, data[i], {\n      distanceFunction: distance\n    });\n  }\n  return clusterID;\n}\n\n/**\n * Update the center values based in the new configurations of the clusters\n * @ignore\n * @param {Array<Array<number>>} prevCenters - Centroids from the previous iteration\n * @param {Array <Array <number>>} data - the [x,y,z,...] points to cluster\n * @param {Array <number>} clusterID - the cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @return {Array} he K centers in format [x,y,z,...]\n */\nexport function updateCenters(prevCenters, data, clusterID, K) {\n  const nDim = data[0].length;\n\n  // copy previous centers\n  var centers = new Array(K);\n  var centersLen = new Array(K);\n  for (var i = 0; i < K; i++) {\n    centers[i] = new Array(nDim);\n    centersLen[i] = 0;\n    for (var j = 0; j < nDim; j++) {\n      centers[i][j] = 0;\n    }\n  }\n\n  // add the value for all dimensions of the point\n  for (var l = 0; l < data.length; l++) {\n    centersLen[clusterID[l]]++;\n    for (var dim = 0; dim < nDim; dim++) {\n      centers[clusterID[l]][dim] += data[l][dim];\n    }\n  }\n\n  // divides by length\n  for (var id = 0; id < K; id++) {\n    for (var d = 0; d < nDim; d++) {\n      if (centersLen[id]) {\n        centers[id][d] /= centersLen[id];\n      } else {\n        centers[id][d] = prevCenters[id][d];\n      }\n    }\n  }\n  return centers;\n}\n\n/**\n * The centers have moved more than the tolerance value?\n * @ignore\n * @param {Array<Array<number>>} centers - the K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} oldCenters - the K old centers in format [x,y,z,...]\n * @param {function} distanceFunction - Distance function to use between the points\n * @param {number} tolerance - Allowed distance for the centroids to move\n * @return {boolean}\n */\nexport function hasConverged(centers, oldCenters, distanceFunction, tolerance) {\n  for (var i = 0; i < centers.length; i++) {\n    if (distanceFunction(centers[i], oldCenters[i]) > tolerance) {\n      return false;\n    }\n  }\n  return true;\n}\n","const LOOP = 8;\nconst FLOAT_MUL = 1 / 16777216;\nconst sh1 = 15;\nconst sh2 = 18;\nconst sh3 = 11;\nfunction multiply_uint32(n, m) {\n    n >>>= 0;\n    m >>>= 0;\n    const nlo = n & 0xffff;\n    const nhi = n - nlo;\n    return (((nhi * m) >>> 0) + nlo * m) >>> 0;\n}\nexport default class XSadd {\n    constructor(seed = Date.now()) {\n        this.state = new Uint32Array(4);\n        this.init(seed);\n        this.random = this.getFloat.bind(this);\n    }\n    /**\n     * Returns a 32-bit integer r (0 <= r < 2^32)\n     */\n    getUint32() {\n        this.nextState();\n        return (this.state[3] + this.state[2]) >>> 0;\n    }\n    /**\n     * Returns a floating point number r (0.0 <= r < 1.0)\n     */\n    getFloat() {\n        return (this.getUint32() >>> 8) * FLOAT_MUL;\n    }\n    init(seed) {\n        if (!Number.isInteger(seed)) {\n            throw new TypeError('seed must be an integer');\n        }\n        this.state[0] = seed;\n        this.state[1] = 0;\n        this.state[2] = 0;\n        this.state[3] = 0;\n        for (let i = 1; i < LOOP; i++) {\n            this.state[i & 3] ^=\n                (i +\n                    multiply_uint32(1812433253, this.state[(i - 1) & 3] ^ ((this.state[(i - 1) & 3] >>> 30) >>> 0))) >>>\n                    0;\n        }\n        this.periodCertification();\n        for (let i = 0; i < LOOP; i++) {\n            this.nextState();\n        }\n    }\n    periodCertification() {\n        if (this.state[0] === 0 &&\n            this.state[1] === 0 &&\n            this.state[2] === 0 &&\n            this.state[3] === 0) {\n            this.state[0] = 88; // X\n            this.state[1] = 83; // S\n            this.state[2] = 65; // A\n            this.state[3] = 68; // D\n        }\n    }\n    nextState() {\n        let t = this.state[0];\n        t ^= t << sh1;\n        t ^= t >>> sh2;\n        t ^= this.state[3] << sh3;\n        this.state[0] = this.state[1];\n        this.state[1] = this.state[2];\n        this.state[2] = this.state[3];\n        this.state[3] = t;\n    }\n}\n","const PROB_TOLERANCE = 0.00000001;\nfunction randomChoice(values, options = {}, random = Math.random) {\n    const { size = 1, replace = false, probabilities } = options;\n    let valuesArr;\n    let cumSum;\n    if (typeof values === 'number') {\n        valuesArr = getArray(values);\n    }\n    else {\n        valuesArr = values.slice();\n    }\n    if (probabilities) {\n        if (!replace) {\n            throw new Error('choice with probabilities and no replacement is not implemented');\n        }\n        // check input is sane\n        if (probabilities.length !== valuesArr.length) {\n            throw new Error('the length of probabilities option should be equal to the number of choices');\n        }\n        cumSum = [probabilities[0]];\n        for (let i = 1; i < probabilities.length; i++) {\n            cumSum[i] = cumSum[i - 1] + probabilities[i];\n        }\n        if (Math.abs(1 - cumSum[cumSum.length - 1]) > PROB_TOLERANCE) {\n            throw new Error(`probabilities should sum to 1, but instead sums to ${cumSum[cumSum.length - 1]}`);\n        }\n    }\n    if (replace === false && size > valuesArr.length) {\n        throw new Error('size option is too large');\n    }\n    const result = [];\n    for (let i = 0; i < size; i++) {\n        const index = randomIndex(valuesArr.length, random, cumSum);\n        result.push(valuesArr[index]);\n        if (!replace) {\n            valuesArr.splice(index, 1);\n        }\n    }\n    return result;\n}\nfunction getArray(n) {\n    const arr = [];\n    for (let i = 0; i < n; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\nfunction randomIndex(n, random, cumSum) {\n    const rand = random();\n    if (!cumSum) {\n        return Math.floor(rand * n);\n    }\n    else {\n        let idx = 0;\n        while (rand > cumSum[idx]) {\n            idx++;\n        }\n        return idx;\n    }\n}\nexport default randomChoice;\n","// tslint:disable-next-line\nimport XSAdd from 'ml-xsadd';\nimport choice from './choice';\n/**\n * @classdesc Random class\n */\nexport default class Random {\n    /**\n     * @param [seedOrRandom=Math.random] - Control the random number generator used by the Random class instance. Pass a random number generator function with a uniform distribution over the half-open interval [0, 1[. If seed will pass it to ml-xsadd to create a seeded random number generator. If undefined will use Math.random.\n     */\n    constructor(seedOrRandom = Math.random) {\n        if (typeof seedOrRandom === 'number') {\n            const xsadd = new XSAdd(seedOrRandom);\n            this.randomGenerator = xsadd.random;\n        }\n        else {\n            this.randomGenerator = seedOrRandom;\n        }\n    }\n    choice(values, options) {\n        if (typeof values === 'number') {\n            return choice(values, options, this.randomGenerator);\n        }\n        return choice(values, options, this.randomGenerator);\n    }\n    /**\n     * Draw a random number from a uniform distribution on [0,1)\n     * @return The random number\n     */\n    random() {\n        return this.randomGenerator();\n    }\n    /**\n     * Draw a random integer from a uniform distribution on [low, high). If only low is specified, the number is drawn on [0, low)\n     * @param low - The lower bound of the uniform distribution interval.\n     * @param high - The higher bound of the uniform distribution interval.\n     */\n    randInt(low, high) {\n        if (high === undefined) {\n            high = low;\n            low = 0;\n        }\n        return low + Math.floor(this.randomGenerator() * (high - low));\n    }\n    /**\n     * Draw several random number from a uniform distribution on [0, 1)\n     * @param size - The number of number to draw\n     * @return - The list of drawn numbers.\n     */\n    randomSample(size) {\n        const result = [];\n        for (let i = 0; i < size; i++) {\n            result.push(this.random());\n        }\n        return result;\n    }\n}\n","import Random from 'ml-random';\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nimport { Matrix } from 'ml-matrix';\n\n/**\n * Choose K different random points from the original data\n * @ignore\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - number of clusters\n * @param {number} seed - seed for random number generation\n * @return {Array<Array<number>>} - Initial random points\n */\nexport function random(data, K, seed) {\n  const random = new Random(seed);\n  return random.choice(data, { size: K });\n}\n\n/**\n * Chooses the most distant points to a first random pick\n * @ignore\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - number of clusters\n * @param {Array<Array<number>>} distanceMatrix - matrix with the distance values\n * @param {number} seed - seed for random number generation\n * @return {Array<Array<number>>} - Initial random points\n */\nexport function mostDistant(data, K, distanceMatrix, seed) {\n  const random = new Random(seed);\n  var ans = new Array(K);\n  // chooses a random point as initial cluster\n  ans[0] = Math.floor(random.random() * data.length);\n\n  if (K > 1) {\n    // chooses the more distant point\n    var maxDist = { dist: -1, index: -1 };\n    for (var l = 0; l < data.length; ++l) {\n      if (distanceMatrix[ans[0]][l] > maxDist.dist) {\n        maxDist.dist = distanceMatrix[ans[0]][l];\n        maxDist.index = l;\n      }\n    }\n    ans[1] = maxDist.index;\n\n    if (K > 2) {\n      // chooses the set of points that maximises the min distance\n      for (var k = 2; k < K; ++k) {\n        var center = { dist: -1, index: -1 };\n        for (var m = 0; m < data.length; ++m) {\n          // minimum distance to centers\n          var minDistCent = { dist: Number.MAX_VALUE, index: -1 };\n          for (var n = 0; n < k; ++n) {\n            if (\n              distanceMatrix[n][m] < minDistCent.dist &&\n              ans.indexOf(m) === -1\n            ) {\n              minDistCent = {\n                dist: distanceMatrix[n][m],\n                index: m\n              };\n            }\n          }\n\n          if (\n            minDistCent.dist !== Number.MAX_VALUE &&\n            minDistCent.dist > center.dist\n          ) {\n            center = Object.assign({}, minDistCent);\n          }\n        }\n\n        ans[k] = center.index;\n      }\n    }\n  }\n\n  return ans.map((index) => data[index]);\n}\n\n// Implementation inspired from scikit\nexport function kmeanspp(X, K, options = {}) {\n  X = new Matrix(X);\n  const nSamples = X.rows;\n  const random = new Random(options.seed);\n  // Set the number of trials\n  const centers = [];\n  const localTrials = options.localTrials || 2 + Math.floor(Math.log(K));\n\n  // Pick the first center at random from the dataset\n  const firstCenterIdx = random.randInt(nSamples);\n  centers.push(X.getRow(firstCenterIdx));\n\n  // Init closest distances\n  let closestDistSquared = new Matrix(1, X.rows);\n  for (let i = 0; i < X.rows; i++) {\n    closestDistSquared.set(0, i, squaredEuclidean(X.getRow(i), centers[0]));\n  }\n  let cumSumClosestDistSquared = [cumSum(closestDistSquared.getRow(0))];\n  const factor = 1 / cumSumClosestDistSquared[0][nSamples - 1];\n  let probabilities = Matrix.mul(closestDistSquared, factor);\n\n  // Iterate over the remaining centers\n  for (let i = 1; i < K; i++) {\n    const candidateIdx = random.choice(nSamples, {\n      replace: true,\n      size: localTrials,\n      probabilities: probabilities[0]\n    });\n\n    const candidates = X.selection(candidateIdx, range(X.columns));\n    const distanceToCandidates = euclideanDistances(candidates, X);\n\n    let bestCandidate;\n    let bestPot;\n    let bestDistSquared;\n\n    for (let j = 0; j < localTrials; j++) {\n      const newDistSquared = Matrix.min(closestDistSquared, [distanceToCandidates.getRow(j)]);\n      const newPot = newDistSquared.sum();\n      if (bestCandidate === undefined || newPot < bestPot) {\n        bestCandidate = candidateIdx[j];\n        bestPot = newPot;\n        bestDistSquared = newDistSquared;\n      }\n    }\n    centers[i] = X.getRow(bestCandidate);\n    closestDistSquared = bestDistSquared;\n    cumSumClosestDistSquared = [cumSum(closestDistSquared.getRow(0))];\n    probabilities = Matrix.mul(\n      closestDistSquared,\n      1 / cumSumClosestDistSquared[0][nSamples - 1]\n    );\n  }\n  return centers;\n}\n\nfunction euclideanDistances(A, B) {\n  const result = new Matrix(A.rows, B.rows);\n  for (let i = 0; i < A.rows; i++) {\n    for (let j = 0; j < B.rows; j++) {\n      result.set(i, j, squaredEuclidean(A.getRow(i), B.getRow(j)));\n    }\n  }\n  return result;\n}\n\nfunction range(l) {\n  let r = [];\n  for (let i = 0; i < l; i++) {\n    r.push(i);\n  }\n  return r;\n}\n\nfunction cumSum(arr) {\n  let cumSum = [arr[0]];\n  for (let i = 1; i < arr.length; i++) {\n    cumSum[i] = cumSum[i - 1] + arr[i];\n  }\n  return cumSum;\n}\n","import { updateClusterID } from './utils';\n\nconst distanceSymbol = Symbol('distance');\n\nexport default class KMeansResult {\n  /**\n   * Result of the kmeans algorithm\n   * @param {Array<number>} clusters - the cluster identifier for each data dot\n   * @param {Array<Array<object>>} centroids - the K centers in format [x,y,z,...], the error and size of the cluster\n   * @param {boolean} converged - Converge criteria satisfied\n   * @param {number} iterations - Current number of iterations\n   * @param {function} distance - (*Private*) Distance function to use between the points\n   * @constructor\n   */\n  constructor(clusters, centroids, converged, iterations, distance) {\n    this.clusters = clusters;\n    this.centroids = centroids;\n    this.converged = converged;\n    this.iterations = iterations;\n    this[distanceSymbol] = distance;\n  }\n\n  /**\n   * Allows to compute for a new array of points their cluster id\n   * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n   * @return {Array<number>} - cluster id for each point\n   */\n  nearest(data) {\n    const clusterID = new Array(data.length);\n    const centroids = this.centroids.map(function (centroid) {\n      return centroid.centroid;\n    });\n    return updateClusterID(data, centroids, clusterID, this[distanceSymbol]);\n  }\n\n  /**\n   * Returns a KMeansResult with the error and size of the cluster\n   * @ignore\n   * @param {Array<Array<number>>} data - the [x,y,z,...] points to cluster\n   * @return {KMeansResult}\n   */\n  computeInformation(data) {\n    var enrichedCentroids = this.centroids.map(function (centroid) {\n      return {\n        centroid: centroid,\n        error: 0,\n        size: 0\n      };\n    });\n\n    for (var i = 0; i < data.length; i++) {\n      enrichedCentroids[this.clusters[i]].error += this[distanceSymbol](\n        data[i],\n        this.centroids[this.clusters[i]]\n      );\n      enrichedCentroids[this.clusters[i]].size++;\n    }\n\n    for (var j = 0; j < this.centroids.length; j++) {\n      if (enrichedCentroids[j].size) {\n        enrichedCentroids[j].error /= enrichedCentroids[j].size;\n      } else {\n        enrichedCentroids[j].error = null;\n      }\n    }\n\n    return new KMeansResult(\n      this.clusters,\n      enrichedCentroids,\n      this.converged,\n      this.iterations,\n      this[distanceSymbol]\n    );\n  }\n}\n","import { squaredEuclidean } from 'ml-distance-euclidean';\n\nimport {\n  updateClusterID,\n  updateCenters,\n  hasConverged,\n  calculateDistanceMatrix\n} from './utils';\nimport { mostDistant, random, kmeanspp } from './initialization';\nimport KMeansResult from './KMeansResult';\n\nconst defaultOptions = {\n  maxIterations: 100,\n  tolerance: 1e-6,\n  withIterations: false,\n  initialization: 'kmeans++',\n  distanceFunction: squaredEuclidean\n};\n\n/**\n * Each step operation for kmeans\n * @ignore\n * @param {Array<Array<number>>} centers - K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} data - Points [x,y,z,...] to cluster\n * @param {Array<number>} clusterID - Cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n * @param {number} iterations - Current number of iterations\n * @return {KMeansResult}\n */\nfunction step(centers, data, clusterID, K, options, iterations) {\n  clusterID = updateClusterID(\n    data,\n    centers,\n    clusterID,\n    options.distanceFunction\n  );\n  var newCenters = updateCenters(centers, data, clusterID, K);\n  var converged = hasConverged(\n    newCenters,\n    centers,\n    options.distanceFunction,\n    options.tolerance\n  );\n  return new KMeansResult(\n    clusterID,\n    newCenters,\n    converged,\n    iterations,\n    options.distanceFunction\n  );\n}\n\n/**\n * Generator version for the algorithm\n * @ignore\n * @param {Array<Array<number>>} centers - K centers in format [x,y,z,...]\n * @param {Array<Array<number>>} data - Points [x,y,z,...] to cluster\n * @param {Array<number>} clusterID - Cluster identifier for each data dot\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n */\nfunction* kmeansGenerator(centers, data, clusterID, K, options) {\n  var converged = false;\n  var stepNumber = 0;\n  var stepResult;\n  while (!converged && stepNumber < options.maxIterations) {\n    stepResult = step(centers, data, clusterID, K, options, ++stepNumber);\n    yield stepResult.computeInformation(data);\n    converged = stepResult.converged;\n    centers = stepResult.centroids;\n  }\n}\n\n/**\n * K-means algorithm\n * @param {Array<Array<number>>} data - Points in the format to cluster [x,y,z,...]\n * @param {number} K - Number of clusters\n * @param {object} [options] - Option object\n * @param {number} [options.maxIterations = 100] - Maximum of iterations allowed\n * @param {number} [options.tolerance = 1e-6] - Error tolerance\n * @param {boolean} [options.withIterations = false] - Store clusters and centroids for each iteration\n * @param {function} [options.distanceFunction = squaredDistance] - Distance function to use between the points\n * @param {number} [options.seed] - Seed for random initialization.\n * @param {string|Array<Array<number>>} [options.initialization = 'kmeans++'] - K centers in format [x,y,z,...] or a method for initialize the data:\n *  * You can either specify your custom start centroids, or select one of the following initialization method:\n *  * `'kmeans++'` will use the kmeans++ method as described by http://ilpubs.stanford.edu:8090/778/1/2006-13.pdf\n *  * `'random'` will choose K random different values.\n *  * `'mostDistant'` will choose the more distant points to a first random pick\n * @return {KMeansResult} - Cluster identifier for each data dot and centroids with the following fields:\n *  * `'clusters'`: Array of indexes for the clusters.\n *  * `'centroids'`: Array with the resulting centroids.\n *  * `'iterations'`: Number of iterations that took to converge\n */\nexport default function kmeans(data, K, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  if (K <= 0 || K > data.length || !Number.isInteger(K)) {\n    throw new Error(\n      'K should be a positive integer smaller than the number of points'\n    );\n  }\n\n  var centers;\n  if (Array.isArray(options.initialization)) {\n    if (options.initialization.length !== K) {\n      throw new Error('The initial centers should have the same length as K');\n    } else {\n      centers = options.initialization;\n    }\n  } else {\n    switch (options.initialization) {\n      case 'kmeans++':\n        centers = kmeanspp(data, K, options);\n        break;\n      case 'random':\n        centers = random(data, K, options.seed);\n        break;\n      case 'mostDistant':\n        centers = mostDistant(\n          data,\n          K,\n          calculateDistanceMatrix(data, options.distanceFunction),\n          options.seed\n        );\n        break;\n      default:\n        throw new Error(\n          `Unknown initialization method: \"${options.initialization}\"`\n        );\n    }\n  }\n\n  // infinite loop until convergence\n  if (options.maxIterations === 0) {\n    options.maxIterations = Number.MAX_VALUE;\n  }\n\n  var clusterID = new Array(data.length);\n  if (options.withIterations) {\n    return kmeansGenerator(centers, data, clusterID, K, options);\n  } else {\n    var converged = false;\n    var stepNumber = 0;\n    var stepResult;\n    while (!converged && stepNumber < options.maxIterations) {\n      stepResult = step(centers, data, clusterID, K, options, ++stepNumber);\n      converged = stepResult.converged;\n      centers = stepResult.centroids;\n    }\n    return stepResult.computeInformation(data);\n  }\n}\n","import Matrix from 'ml-matrix';\n\n/**\n * @private\n * Function that retuns an array of matrices of the cases that belong to each class.\n * @param {Matrix} X - dataset\n * @param {Array} y - predictions\n * @return {Array}\n */\nexport function separateClasses(X, y) {\n  var features = X.columns;\n\n  var classes = 0;\n  var totalPerClasses = new Array(10000); // max upperbound of classes\n  for (var i = 0; i < y.length; i++) {\n    if (totalPerClasses[y[i]] === undefined) {\n      totalPerClasses[y[i]] = 0;\n      classes++;\n    }\n    totalPerClasses[y[i]]++;\n  }\n  var separatedClasses = new Array(classes);\n  var currentIndex = new Array(classes);\n  for (i = 0; i < classes; ++i) {\n    separatedClasses[i] = new Matrix(totalPerClasses[i], features);\n    currentIndex[i] = 0;\n  }\n  for (i = 0; i < X.rows; ++i) {\n    separatedClasses[y[i]].setRow(currentIndex[y[i]], X.getRow(i));\n    currentIndex[y[i]]++;\n  }\n  return separatedClasses;\n}\n","import { Matrix } from 'ml-matrix';\n\nimport { separateClasses } from './utils';\n\nexport class GaussianNB {\n  /**\n   * Constructor for the Gaussian Naive Bayes classifier, the parameters here is just for loading purposes.\n   * @constructor\n   * @param {boolean} reload\n   * @param {object} model\n   */\n  constructor(reload, model) {\n    if (reload) {\n      this.means = model.means;\n      this.calculateProbabilities = model.calculateProbabilities;\n    }\n  }\n\n  /**\n   * Function that trains the classifier with a matrix that represents the training set and an array that\n   * represents the label of each row in the training set. the labels must be numbers between 0 to n-1 where\n   * n represents the number of classes.\n   *\n   * WARNING: in the case that one class, all the cases in one or more features have the same value, the\n   * Naive Bayes classifier will not work well.\n   * @param {Matrix|Array} trainingSet\n   * @param {Matrix|Array} trainingLabels\n   */\n  train(trainingSet, trainingLabels) {\n    var C1 = Math.sqrt(2 * Math.PI); // constant to precalculate the squared root\n    trainingSet = Matrix.checkMatrix(trainingSet);\n\n    if (trainingSet.rows !== trainingLabels.length) {\n      throw new RangeError(\n        'the size of the training set and the training labels must be the same.'\n      );\n    }\n\n    var separatedClasses = separateClasses(trainingSet, trainingLabels);\n    var calculateProbabilities = new Array(separatedClasses.length);\n    this.means = new Array(separatedClasses.length);\n    for (var i = 0; i < separatedClasses.length; ++i) {\n      var means = separatedClasses[i].mean('column');\n      var std = separatedClasses[i].standardDeviation('column', {\n        mean: means\n      });\n\n      var logPriorProbability = Math.log(\n        separatedClasses[i].rows / trainingSet.rows\n      );\n      calculateProbabilities[i] = new Array(means.length + 1);\n\n      calculateProbabilities[i][0] = logPriorProbability;\n      for (var j = 1; j < means.length + 1; ++j) {\n        var currentStd = std[j - 1];\n        calculateProbabilities[i][j] = [\n          1 / (C1 * currentStd),\n          -2 * currentStd * currentStd\n        ];\n      }\n\n      this.means[i] = means;\n    }\n\n    this.calculateProbabilities = calculateProbabilities;\n  }\n\n  /**\n   * function that predicts each row of the dataset (must be a matrix).\n   *\n   * @param {Matrix|Array} dataset\n   * @return {Array}\n   */\n  predict(dataset) {\n    dataset = Matrix.checkMatrix(dataset);\n    if (dataset.rows === this.calculateProbabilities[0].length) {\n      throw new RangeError(\n        'the dataset must have the same features as the training set'\n      );\n    }\n\n    var predictions = new Array(dataset.rows);\n\n    for (var i = 0; i < predictions.length; ++i) {\n      predictions[i] = getCurrentClass(\n        dataset.getRow(i),\n        this.means,\n        this.calculateProbabilities\n      );\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Function that export the NaiveBayes model.\n   * @return {object}\n   */\n  toJSON() {\n    return {\n      modelName: 'NaiveBayes',\n      means: this.means,\n      calculateProbabilities: this.calculateProbabilities\n    };\n  }\n\n  /**\n   * Function that create a GaussianNB classifier with the given model.\n   * @param {object} model\n   * @return {GaussianNB}\n   */\n  static load(model) {\n    if (model.modelName !== 'NaiveBayes') {\n      throw new RangeError(\n        'The current model is not a Multinomial Naive Bayes, current model:',\n        model.name\n      );\n    }\n\n    return new GaussianNB(true, model);\n  }\n}\n\n/**\n * @private\n * Function the retrieves a prediction with one case.\n *\n * @param {Array} currentCase\n * @param {Array} mean - Precalculated means of each class trained\n * @param {Array} classes - Precalculated value of each class (Prior probability and probability function of each feature)\n * @return {number}\n */\nfunction getCurrentClass(currentCase, mean, classes) {\n  var maxProbability = 0;\n  var predictedClass = -1;\n\n  // going through all precalculated values for the classes\n  for (var i = 0; i < classes.length; ++i) {\n    var currentProbability = classes[i][0]; // initialize with the prior probability\n    for (var j = 1; j < classes[0][1].length + 1; ++j) {\n      currentProbability += calculateLogProbability(\n        currentCase[j - 1],\n        mean[i][j - 1],\n        classes[i][j][0],\n        classes[i][j][1]\n      );\n    }\n\n    currentProbability = Math.exp(currentProbability);\n    if (currentProbability > maxProbability) {\n      maxProbability = currentProbability;\n      predictedClass = i;\n    }\n  }\n\n  return predictedClass;\n}\n\n/**\n * @private\n * function that retrieves the probability of the feature given the class.\n * @param {number} value - value of the feature.\n * @param {number} mean - mean of the feature for the given class.\n * @param {number} C1 - precalculated value of (1 / (sqrt(2*pi) * std)).\n * @param {number} C2 - precalculated value of (2 * std^2) for the denominator of the exponential.\n * @return {number}\n */\nfunction calculateLogProbability(value, mean, C1, C2) {\n  value = value - mean;\n  return Math.log(C1 * Math.exp((value * value) / C2));\n}\n","import { Matrix } from 'ml-matrix';\n\nimport { separateClasses } from './utils';\n\nexport class MultinomialNB {\n  /**\n   * Constructor for Multinomial Naive Bayes, the model parameter is for load purposes.\n   * @constructor\n   * @param {object} model - for load purposes.\n   */\n  constructor(model) {\n    if (model) {\n      this.conditionalProbability = Matrix.checkMatrix(\n        model.conditionalProbability\n      );\n      this.priorProbability = Matrix.checkMatrix(model.priorProbability);\n    }\n  }\n\n  /**\n   * Train the classifier with the current training set and labels, the labels must be numbers between 0 and n.\n   * @param {Matrix|Array} trainingSet\n   * @param {Array} trainingLabels\n   */\n  train(trainingSet, trainingLabels) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n\n    if (trainingSet.rows !== trainingLabels.length) {\n      throw new RangeError(\n        'the size of the training set and the training labels must be the same.'\n      );\n    }\n\n    var separateClass = separateClasses(trainingSet, trainingLabels);\n\n    this.priorProbability = new Matrix(separateClass.length, 1);\n\n    for (var i = 0; i < separateClass.length; ++i) {\n      this.priorProbability.set(i, 0, Math.log(\n        separateClass[i].rows / trainingSet.rows\n      ));\n    }\n\n    var features = trainingSet.columns;\n    this.conditionalProbability = new Matrix(separateClass.length, features);\n    for (i = 0; i < separateClass.length; ++i) {\n      var classValues = Matrix.checkMatrix(separateClass[i]);\n      var total = classValues.sum();\n      var divisor = total + features;\n      this.conditionalProbability.setRow(\n        i,\n        Matrix.rowVector(classValues\n          .sum('column'))\n          .add(1)\n          .div(divisor)\n          .apply(matrixLog)\n      );\n    }\n  }\n\n  /**\n   * Retrieves the predictions for the dataset with the current model.\n   * @param {Matrix|Array} dataset\n   * @return {Array} - predictions from the dataset.\n   */\n  predict(dataset) {\n    dataset = Matrix.checkMatrix(dataset);\n    var predictions = new Array(dataset.rows);\n    for (var i = 0; i < dataset.rows; ++i) {\n      var currentElement = dataset.getRowVector(i);\n      const v = Matrix.columnVector(this.conditionalProbability\n        .clone()\n        .mulRowVector(currentElement)\n        .sum('row'));\n      predictions[i] = v\n        .add(this.priorProbability)\n        .maxIndex()[0];\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Function that saves the current model.\n   * @return {object} - model in JSON format.\n   */\n  toJSON() {\n    return {\n      name: 'MultinomialNB',\n      priorProbability: this.priorProbability,\n      conditionalProbability: this.conditionalProbability\n    };\n  }\n\n  /**\n   * Creates a new MultinomialNB from the given model\n   * @param {object} model\n   * @return {MultinomialNB}\n   */\n  static load(model) {\n    if (model.name !== 'MultinomialNB') {\n      throw new RangeError(`${model.name} is not a Multinomial Naive Bayes`);\n    }\n\n    return new MultinomialNB(model);\n  }\n}\n\nfunction matrixLog(i, j) {\n  this.set(i, j, Math.log(this.get(i, j)));\n}\n","/*\n * Original code from:\n *\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */\n\nfunction Node(obj, dimension, parent) {\n  this.obj = obj;\n  this.left = null;\n  this.right = null;\n  this.parent = parent;\n  this.dimension = dimension;\n}\n\nexport default class KDTree {\n  constructor(points, metric) {\n    // If points is not an array, assume we're loading a pre-built tree\n    if (!Array.isArray(points)) {\n      this.dimensions = points.dimensions;\n      this.root = points;\n      restoreParent(this.root);\n    } else {\n      this.dimensions = new Array(points[0].length);\n      for (var i = 0; i < this.dimensions.length; i++) {\n        this.dimensions[i] = i;\n      }\n      this.root = buildTree(points, 0, null, this.dimensions);\n    }\n    this.metric = metric;\n  }\n\n  // Convert to a JSON serializable structure; this just requires removing\n  // the `parent` property\n  toJSON() {\n    const result = toJSONImpl(this.root, true);\n    result.dimensions = this.dimensions;\n    return result;\n  }\n\n  nearest(point, maxNodes, maxDistance) {\n    const metric = this.metric;\n    const dimensions = this.dimensions;\n    var i;\n\n    const bestNodes = new BinaryHeap(function (e) {\n      return -e[1];\n    });\n\n    function nearestSearch(node) {\n      const dimension = dimensions[node.dimension];\n      const ownDistance = metric(point, node.obj);\n      const linearPoint = {};\n      var bestChild, linearDistance, otherChild, i;\n\n      function saveNode(node, distance) {\n        bestNodes.push([node, distance]);\n        if (bestNodes.size() > maxNodes) {\n          bestNodes.pop();\n        }\n      }\n\n      for (i = 0; i < dimensions.length; i += 1) {\n        if (i === node.dimension) {\n          linearPoint[dimensions[i]] = point[dimensions[i]];\n        } else {\n          linearPoint[dimensions[i]] = node.obj[dimensions[i]];\n        }\n      }\n\n      linearDistance = metric(linearPoint, node.obj);\n\n      if (node.right === null && node.left === null) {\n        if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n          saveNode(node, ownDistance);\n        }\n        return;\n      }\n\n      if (node.right === null) {\n        bestChild = node.left;\n      } else if (node.left === null) {\n        bestChild = node.right;\n      } else {\n        if (point[dimension] < node.obj[dimension]) {\n          bestChild = node.left;\n        } else {\n          bestChild = node.right;\n        }\n      }\n\n      nearestSearch(bestChild);\n\n      if (bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) {\n        saveNode(node, ownDistance);\n      }\n\n      if (\n        bestNodes.size() < maxNodes ||\n        Math.abs(linearDistance) < bestNodes.peek()[1]\n      ) {\n        if (bestChild === node.left) {\n          otherChild = node.right;\n        } else {\n          otherChild = node.left;\n        }\n        if (otherChild !== null) {\n          nearestSearch(otherChild);\n        }\n      }\n    }\n\n    if (maxDistance) {\n      for (i = 0; i < maxNodes; i += 1) {\n        bestNodes.push([null, maxDistance]);\n      }\n    }\n\n    if (this.root) {\n      nearestSearch(this.root);\n    }\n\n    const result = [];\n    for (i = 0; i < Math.min(maxNodes, bestNodes.content.length); i += 1) {\n      if (bestNodes.content[i][0]) {\n        result.push([bestNodes.content[i][0].obj, bestNodes.content[i][1]]);\n      }\n    }\n    return result;\n  }\n}\n\nfunction toJSONImpl(src) {\n  const dest = new Node(src.obj, src.dimension, null);\n  if (src.left) dest.left = toJSONImpl(src.left);\n  if (src.right) dest.right = toJSONImpl(src.right);\n  return dest;\n}\n\nfunction buildTree(points, depth, parent, dimensions) {\n  const dim = depth % dimensions.length;\n\n  if (points.length === 0) {\n    return null;\n  }\n  if (points.length === 1) {\n    return new Node(points[0], dim, parent);\n  }\n\n  points.sort((a, b) => a[dimensions[dim]] - b[dimensions[dim]]);\n\n  const median = Math.floor(points.length / 2);\n  const node = new Node(points[median], dim, parent);\n  node.left = buildTree(points.slice(0, median), depth + 1, node, dimensions);\n  node.right = buildTree(points.slice(median + 1), depth + 1, node, dimensions);\n\n  return node;\n}\n\nfunction restoreParent(root) {\n  if (root.left) {\n    root.left.parent = root;\n    restoreParent(root.left);\n  }\n\n  if (root.right) {\n    root.right.parent = root;\n    restoreParent(root.right);\n  }\n}\n\n// Binary heap implementation from:\n// http://eloquentjavascript.net/appendix2.html\nclass BinaryHeap {\n  constructor(scoreFunction) {\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n  }\n\n  push(element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n    // Allow it to bubble up.\n    this.bubbleUp(this.content.length - 1);\n  }\n\n  pop() {\n    // Store the first element so we can return it later.\n    var result = this.content[0];\n    // Get the element at the end of the array.\n    var end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it sink down.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.sinkDown(0);\n    }\n    return result;\n  }\n\n  peek() {\n    return this.content[0];\n  }\n\n  size() {\n    return this.content.length;\n  }\n\n  bubbleUp(n) {\n    // Fetch the element that has to be moved.\n    var element = this.content[n];\n    // When at 0, an element can not go up any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      const parentN = Math.floor((n + 1) / 2) - 1;\n      const parent = this.content[parentN];\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        // Update 'n' to continue at the new position.\n        n = parentN;\n      } else {\n        // Found a parent that is less, no need to move it further.\n        break;\n      }\n    }\n  }\n\n  sinkDown(n) {\n    // Look up the target element and its score.\n    var length = this.content.length;\n    var element = this.content[n];\n    var elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) * 2;\n      var child1N = child2N - 1;\n      // This is used to store the new position of the element,\n      // if any.\n      var swap = null;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N];\n        var child1Score = this.scoreFunction(child1);\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        var child2 = this.content[child2N];\n        var child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      } else {\n        // Otherwise, we are done.\n        break;\n      }\n    }\n  }\n}\n","import { euclidean as euclideanDistance } from 'ml-distance-euclidean';\n\nimport KDTree from './KDTree';\n\nexport default class KNN {\n  /**\n   * @param {Array} dataset\n   * @param {Array} labels\n   * @param {object} options\n   * @param {number} [options.k=numberOfClasses + 1] - Number of neighbors to classify.\n   * @param {function} [options.distance=euclideanDistance] - Distance function that takes two parameters.\n   */\n  constructor(dataset, labels, options = {}) {\n    if (dataset === true) {\n      const model = labels;\n      this.kdTree = new KDTree(model.kdTree, options);\n      this.k = model.k;\n      this.classes = new Set(model.classes);\n      this.isEuclidean = model.isEuclidean;\n      return;\n    }\n\n    const classes = new Set(labels);\n\n    const { distance = euclideanDistance, k = classes.size + 1 } = options;\n\n    const points = new Array(dataset.length);\n    for (var i = 0; i < points.length; ++i) {\n      points[i] = dataset[i].slice();\n    }\n\n    for (i = 0; i < labels.length; ++i) {\n      points[i].push(labels[i]);\n    }\n\n    this.kdTree = new KDTree(points, distance);\n    this.k = k;\n    this.classes = classes;\n    this.isEuclidean = distance === euclideanDistance;\n  }\n\n  /**\n   * Create a new KNN instance with the given model.\n   * @param {object} model\n   * @param {function} distance=euclideanDistance - distance function must be provided if the model wasn't trained with euclidean distance.\n   * @return {KNN}\n   */\n  static load(model, distance = euclideanDistance) {\n    if (model.name !== 'KNN') {\n      throw new Error(`invalid model: ${model.name}`);\n    }\n    if (!model.isEuclidean && distance === euclideanDistance) {\n      throw new Error(\n        'a custom distance function was used to create the model. Please provide it again'\n      );\n    }\n    if (model.isEuclidean && distance !== euclideanDistance) {\n      throw new Error(\n        'the model was created with the default distance function. Do not load it with another one'\n      );\n    }\n    return new KNN(true, model, distance);\n  }\n\n  /**\n   * Return a JSON containing the kd-tree model.\n   * @return {object} JSON KNN model.\n   */\n  toJSON() {\n    return {\n      name: 'KNN',\n      kdTree: this.kdTree,\n      k: this.k,\n      classes: Array.from(this.classes),\n      isEuclidean: this.isEuclidean\n    };\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Array} dataset\n   * @return {Array} predictions\n   */\n  predict(dataset) {\n    if (Array.isArray(dataset)) {\n      if (typeof dataset[0] === 'number') {\n        return getSinglePrediction(this, dataset);\n      } else if (\n        Array.isArray(dataset[0]) &&\n        typeof dataset[0][0] === 'number'\n      ) {\n        const predictions = new Array(dataset.length);\n        for (var i = 0; i < dataset.length; i++) {\n          predictions[i] = getSinglePrediction(this, dataset[i]);\n        }\n        return predictions;\n      }\n    }\n    throw new TypeError('dataset to predict must be an array or a matrix');\n  }\n}\n\nfunction getSinglePrediction(knn, currentCase) {\n  var nearestPoints = knn.kdTree.nearest(currentCase, knn.k);\n  var pointsPerClass = {};\n  var predictedClass = -1;\n  var maxPoints = -1;\n  var lastElement = nearestPoints[0][0].length - 1;\n\n  for (var element of knn.classes) {\n    pointsPerClass[element] = 0;\n  }\n\n  for (var i = 0; i < nearestPoints.length; ++i) {\n    var currentClass = nearestPoints[i][0][lastElement];\n    var currentPoints = ++pointsPerClass[currentClass];\n    if (currentPoints > maxPoints) {\n      predictedClass = currentClass;\n      maxPoints = currentPoints;\n    }\n  }\n\n  return predictedClass;\n}\n","import Matrix from 'ml-matrix';\n\n/**\n * @private\n * Function that given vector, returns its norm\n * @param {Vector} X\n * @return {number} Norm of the vector\n */\nexport function norm(X) {\n  return Math.sqrt(\n    X.clone()\n      .apply(pow2array)\n      .sum(),\n  );\n}\n\n/**\n * @private\n * Function that pow 2 each element of a Matrix or a Vector,\n * used in the apply method of the Matrix object\n * @param {number} i - index i.\n * @param {number} j - index j.\n * @return {Matrix} The Matrix object modified at the index i, j.\n * */\nexport function pow2array(i, j) {\n  this.set(i, j, this.get(i, j) ** 2);\n}\n\n/**\n * @private\n * Function that normalize the dataset and return the means and\n * standard deviation of each feature.\n * @param {Matrix} dataset\n * @return {object} dataset normalized, means and standard deviations\n */\nexport function featureNormalize(dataset) {\n  let means = dataset.mean('column');\n  let std = dataset.standardDeviation('column', {\n    mean: means,\n    unbiased: true,\n  });\n  let result = Matrix.checkMatrix(dataset).subRowVector(means);\n  return { result: result.divRowVector(std), means: means, std: std };\n}\n\n/**\n * @private\n * Function that initialize an array of matrices.\n * @param {Array} array\n * @param {boolean} isMatrix\n * @return {Array} array with the matrices initialized.\n */\nexport function initializeMatrices(array, isMatrix) {\n  if (isMatrix) {\n    for (let i = 0; i < array.length; ++i) {\n      for (let j = 0; j < array[i].length; ++j) {\n        let elem = array[i][j];\n        array[i][j] = elem !== null ? new Matrix(array[i][j]) : undefined;\n      }\n    }\n  } else {\n    for (let i = 0; i < array.length; ++i) {\n      array[i] = new Matrix(array[i]);\n    }\n  }\n\n  return array;\n}\n","import Matrix from 'ml-matrix';\n\nimport * as Utils from './util/utils';\n\n/**\n * @class PLS\n */\nexport class PLS {\n  /**\n   * Constructor for Partial Least Squares (PLS)\n   * @param {object} options\n   * @param {number} [options.latentVectors] - Number of latent vector to get (if the algorithm doesn't find a good model below the tolerance)\n   * @param {number} [options.tolerance=1e-5]\n   * @param {boolean} [options.scale=true] - rescale dataset using mean.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.meanX = model.meanX;\n      this.stdDevX = model.stdDevX;\n      this.meanY = model.meanY;\n      this.stdDevY = model.stdDevY;\n      this.PBQ = Matrix.checkMatrix(model.PBQ);\n      this.R2X = model.R2X;\n      this.scale = model.scale;\n      this.scaleMethod = model.scaleMethod;\n      this.tolerance = model.tolerance;\n    } else {\n      let { tolerance = 1e-5, scale = true } = options;\n      this.tolerance = tolerance;\n      this.scale = scale;\n      this.latentVectors = options.latentVectors;\n    }\n  }\n\n  /**\n   * Fits the model with the given data and predictions, in this function is calculated the\n   * following outputs:\n   *\n   * T - Score matrix of X\n   * P - Loading matrix of X\n   * U - Score matrix of Y\n   * Q - Loading matrix of Y\n   * B - Matrix of regression coefficient\n   * W - Weight matrix of X\n   *\n   * @param {Matrix|Array} trainingSet\n   * @param {Matrix|Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n    trainingValues = Matrix.checkMatrix(trainingValues);\n\n    if (trainingSet.length !== trainingValues.length) {\n      throw new RangeError(\n        'The number of X rows must be equal to the number of Y rows',\n      );\n    }\n\n    this.meanX = trainingSet.mean('column');\n    this.stdDevX = trainingSet.standardDeviation('column', {\n      mean: this.meanX,\n      unbiased: true,\n    });\n    this.meanY = trainingValues.mean('column');\n    this.stdDevY = trainingValues.standardDeviation('column', {\n      mean: this.meanY,\n      unbiased: true,\n    });\n\n    if (this.scale) {\n      trainingSet = trainingSet\n        .clone()\n        .subRowVector(this.meanX)\n        .divRowVector(this.stdDevX);\n      trainingValues = trainingValues\n        .clone()\n        .subRowVector(this.meanY)\n        .divRowVector(this.stdDevY);\n    }\n\n    if (this.latentVectors === undefined) {\n      this.latentVectors = Math.min(trainingSet.rows - 1, trainingSet.columns);\n    }\n\n    let rx = trainingSet.rows;\n    let cx = trainingSet.columns;\n    let ry = trainingValues.rows;\n    let cy = trainingValues.columns;\n\n    let ssqXcal = trainingSet\n      .clone()\n      .mul(trainingSet)\n      .sum(); // for the r²\n    let sumOfSquaresY = trainingValues\n      .clone()\n      .mul(trainingValues)\n      .sum();\n\n    let tolerance = this.tolerance;\n    let n = this.latentVectors;\n    let T = Matrix.zeros(rx, n);\n    let P = Matrix.zeros(cx, n);\n    let U = Matrix.zeros(ry, n);\n    let Q = Matrix.zeros(cy, n);\n    let B = Matrix.zeros(n, n);\n    let W = P.clone();\n    let k = 0;\n    let t;\n    let w;\n    let q;\n    let p;\n\n    while (Utils.norm(trainingValues) > tolerance && k < n) {\n      let transposeX = trainingSet.transpose();\n      let transposeY = trainingValues.transpose();\n\n      let tIndex = maxSumColIndex(trainingSet.clone().mul(trainingSet));\n      let uIndex = maxSumColIndex(trainingValues.clone().mul(trainingValues));\n\n      let t1 = trainingSet.getColumnVector(tIndex);\n      let u = trainingValues.getColumnVector(uIndex);\n      t = Matrix.zeros(rx, 1);\n\n      while (Utils.norm(t1.clone().sub(t)) > tolerance) {\n        w = transposeX.mmul(u);\n        w.div(Utils.norm(w));\n        t = t1;\n        t1 = trainingSet.mmul(w);\n        q = transposeY.mmul(t1);\n        q.div(Utils.norm(q));\n        u = trainingValues.mmul(q);\n      }\n\n      t = t1;\n      let num = transposeX.mmul(t);\n      let den = t\n        .transpose()\n        .mmul(t)\n        .get(0, 0);\n      p = num.div(den);\n      let pnorm = Utils.norm(p);\n      p.div(pnorm);\n      t.mul(pnorm);\n      w.mul(pnorm);\n\n      num = u.transpose().mmul(t);\n      den = t\n        .transpose()\n        .mmul(t)\n        .get(0, 0);\n      let b = num.div(den).get(0, 0);\n      trainingSet.sub(t.mmul(p.transpose()));\n      trainingValues.sub(\n        t\n          .clone()\n          .mul(b)\n          .mmul(q.transpose()),\n      );\n\n      T.setColumn(k, t);\n      P.setColumn(k, p);\n      U.setColumn(k, u);\n      Q.setColumn(k, q);\n      W.setColumn(k, w);\n\n      B.set(k, k, b);\n      k++;\n    }\n\n    k--;\n    T = T.subMatrix(0, T.rows - 1, 0, k);\n    P = P.subMatrix(0, P.rows - 1, 0, k);\n    U = U.subMatrix(0, U.rows - 1, 0, k);\n    Q = Q.subMatrix(0, Q.rows - 1, 0, k);\n    W = W.subMatrix(0, W.rows - 1, 0, k);\n    B = B.subMatrix(0, k, 0, k);\n\n    this.ssqYcal = sumOfSquaresY;\n    this.E = trainingSet;\n    this.F = trainingValues;\n    this.T = T;\n    this.P = P;\n    this.U = U;\n    this.Q = Q;\n    this.W = W;\n    this.B = B;\n    this.PBQ = P.mmul(B).mmul(Q.transpose());\n    this.R2X = t\n      .transpose()\n      .mmul(t)\n      .mmul(p.transpose().mmul(p))\n      .div(ssqXcal)\n      .get(0, 0);\n  }\n\n  /**\n   * Predicts the behavior of the given dataset.\n   * @param {Matrix|Array} dataset - data to be predicted.\n   * @return {Matrix} - predictions of each element of the dataset.\n   */\n  predict(dataset) {\n    let X = Matrix.checkMatrix(dataset);\n    if (this.scale) {\n      X = X.subRowVector(this.meanX).divRowVector(this.stdDevX);\n    }\n    let Y = X.mmul(this.PBQ);\n    Y = Y.mulRowVector(this.stdDevY).addRowVector(this.meanY);\n    return Y;\n  }\n\n  /**\n   * Returns the explained variance on training of the PLS model\n   * @return {number}\n   */\n  getExplainedVariance() {\n    return this.R2X;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      name: 'PLS',\n      R2X: this.R2X,\n      meanX: this.meanX,\n      stdDevX: this.stdDevX,\n      meanY: this.meanY,\n      stdDevY: this.stdDevY,\n      PBQ: this.PBQ,\n      tolerance: this.tolerance,\n      scale: this.scale,\n    };\n  }\n\n  /**\n   * Load a PLS model from a JSON Object\n   * @param {object} model\n   * @return {PLS} - PLS object from the given model\n   */\n  static load(model) {\n    if (model.name !== 'PLS') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n    return new PLS(true, model);\n  }\n}\n\n/**\n * @private\n * Function that returns the index where the sum of each\n * column vector is maximum.\n * @param {Matrix} data\n * @return {number} index of the maximum\n */\nfunction maxSumColIndex(data) {\n  return Matrix.rowVector(data.sum('column')).maxIndex()[0];\n}\n","import { Matrix, SingularValueDecomposition, inverse } from 'ml-matrix';\n\nimport { initializeMatrices } from './util/utils';\n\n/**\n * @class KOPLS\n */\nexport class KOPLS {\n  /**\n   * Constructor for Kernel-based Orthogonal Projections to Latent Structures (K-OPLS)\n   * @param {object} options\n   * @param {number} [options.predictiveComponents] - Number of predictive components to use.\n   * @param {number} [options.orthogonalComponents] - Number of Y-Orthogonal components.\n   * @param {Kernel} [options.kernel] - Kernel object to apply, see [ml-kernel](https://github.com/mljs/kernel).\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.trainingSet = new Matrix(model.trainingSet);\n      this.YLoadingMat = new Matrix(model.YLoadingMat);\n      this.SigmaPow = new Matrix(model.SigmaPow);\n      this.YScoreMat = new Matrix(model.YScoreMat);\n      this.predScoreMat = initializeMatrices(model.predScoreMat, false);\n      this.YOrthLoadingVec = initializeMatrices(model.YOrthLoadingVec, false);\n      this.YOrthEigen = model.YOrthEigen;\n      this.YOrthScoreMat = initializeMatrices(model.YOrthScoreMat, false);\n      this.toNorm = initializeMatrices(model.toNorm, false);\n      this.TURegressionCoeff = initializeMatrices(\n        model.TURegressionCoeff,\n        false,\n      );\n      this.kernelX = initializeMatrices(model.kernelX, true);\n      this.kernel = model.kernel;\n      this.orthogonalComp = model.orthogonalComp;\n      this.predictiveComp = model.predictiveComp;\n    } else {\n      if (options.predictiveComponents === undefined) {\n        throw new RangeError('no predictive components found!');\n      }\n      if (options.orthogonalComponents === undefined) {\n        throw new RangeError('no orthogonal components found!');\n      }\n      if (options.kernel === undefined) {\n        throw new RangeError('no kernel found!');\n      }\n\n      this.orthogonalComp = options.orthogonalComponents;\n      this.predictiveComp = options.predictiveComponents;\n      this.kernel = options.kernel;\n    }\n  }\n\n  /**\n   * Train the K-OPLS model with the given training set and labels.\n   * @param {Matrix|Array} trainingSet\n   * @param {Matrix|Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n    trainingValues = Matrix.checkMatrix(trainingValues);\n\n    // to save and compute kernel with the prediction dataset.\n    this.trainingSet = trainingSet.clone();\n\n    let kernelX = this.kernel.compute(trainingSet);\n\n    let Identity = Matrix.eye(kernelX.rows, kernelX.rows, 1);\n    let temp = kernelX;\n    kernelX = new Array(this.orthogonalComp + 1);\n    for (let i = 0; i < this.orthogonalComp + 1; i++) {\n      kernelX[i] = new Array(this.orthogonalComp + 1);\n    }\n    kernelX[0][0] = temp;\n\n    let result = new SingularValueDecomposition(\n      trainingValues\n        .transpose()\n        .mmul(kernelX[0][0])\n        .mmul(trainingValues),\n      {\n        computeLeftSingularVectors: true,\n        computeRightSingularVectors: false,\n      },\n    );\n    let YLoadingMat = result.leftSingularVectors;\n    let Sigma = result.diagonalMatrix;\n\n    YLoadingMat = YLoadingMat.subMatrix(\n      0,\n      YLoadingMat.rows - 1,\n      0,\n      this.predictiveComp - 1,\n    );\n    Sigma = Sigma.subMatrix(\n      0,\n      this.predictiveComp - 1,\n      0,\n      this.predictiveComp - 1,\n    );\n\n    let YScoreMat = trainingValues.mmul(YLoadingMat);\n\n    let predScoreMat = new Array(this.orthogonalComp + 1);\n    let TURegressionCoeff = new Array(this.orthogonalComp + 1);\n    let YOrthScoreMat = new Array(this.orthogonalComp);\n    let YOrthLoadingVec = new Array(this.orthogonalComp);\n    let YOrthEigen = new Array(this.orthogonalComp);\n    let YOrthScoreNorm = new Array(this.orthogonalComp);\n\n    let SigmaPow = Matrix.pow(Sigma, -0.5);\n    // to avoid errors, check infinity\n    SigmaPow.apply(function(i, j) {\n      if (this.get(i, j) === Infinity) {\n        this.set(i, j, 0);\n      }\n    });\n\n    for (let i = 0; i < this.orthogonalComp; ++i) {\n      predScoreMat[i] = kernelX[0][i]\n        .transpose()\n        .mmul(YScoreMat)\n        .mmul(SigmaPow);\n\n      let TpiPrime = predScoreMat[i].transpose();\n      TURegressionCoeff[i] = inverse(TpiPrime.mmul(predScoreMat[i]))\n        .mmul(TpiPrime)\n        .mmul(YScoreMat);\n\n      result = new SingularValueDecomposition(\n        TpiPrime.mmul(\n          Matrix.sub(kernelX[i][i], predScoreMat[i].mmul(TpiPrime)),\n        ).mmul(predScoreMat[i]),\n        {\n          computeLeftSingularVectors: true,\n          computeRightSingularVectors: false,\n        },\n      );\n      let CoTemp = result.leftSingularVectors;\n      let SoTemp = result.diagonalMatrix;\n\n      YOrthLoadingVec[i] = CoTemp.subMatrix(0, CoTemp.rows - 1, 0, 0);\n      YOrthEigen[i] = SoTemp.get(0, 0);\n\n      YOrthScoreMat[i] = Matrix.sub(\n        kernelX[i][i],\n        predScoreMat[i].mmul(TpiPrime),\n      )\n        .mmul(predScoreMat[i])\n        .mmul(YOrthLoadingVec[i])\n        .mul(Math.pow(YOrthEigen[i], -0.5));\n\n      let toiPrime = YOrthScoreMat[i].transpose();\n      YOrthScoreNorm[i] = Matrix.sqrt(toiPrime.mmul(YOrthScoreMat[i]));\n\n      YOrthScoreMat[i] = YOrthScoreMat[i].divRowVector(YOrthScoreNorm[i]);\n\n      let ITo = Matrix.sub(\n        Identity,\n        YOrthScoreMat[i].mmul(YOrthScoreMat[i].transpose()),\n      );\n\n      kernelX[0][i + 1] = kernelX[0][i].mmul(ITo);\n      kernelX[i + 1][i + 1] = ITo.mmul(kernelX[i][i]).mmul(ITo);\n    }\n\n    let lastScoreMat = (predScoreMat[this.orthogonalComp] = kernelX[0][\n      this.orthogonalComp\n    ]\n      .transpose()\n      .mmul(YScoreMat)\n      .mmul(SigmaPow));\n\n    let lastTpPrime = lastScoreMat.transpose();\n    TURegressionCoeff[this.orthogonalComp] = inverse(\n      lastTpPrime.mmul(lastScoreMat),\n    )\n      .mmul(lastTpPrime)\n      .mmul(YScoreMat);\n\n    this.YLoadingMat = YLoadingMat;\n    this.SigmaPow = SigmaPow;\n    this.YScoreMat = YScoreMat;\n    this.predScoreMat = predScoreMat;\n    this.YOrthLoadingVec = YOrthLoadingVec;\n    this.YOrthEigen = YOrthEigen;\n    this.YOrthScoreMat = YOrthScoreMat;\n    this.toNorm = YOrthScoreNorm;\n    this.TURegressionCoeff = TURegressionCoeff;\n    this.kernelX = kernelX;\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Matrix|Array} toPredict\n   * @return {{y: Matrix, predScoreMat: Array<Matrix>, predYOrthVectors: Array<Matrix>}} predictions\n   */\n  predict(toPredict) {\n    let KTestTrain = this.kernel.compute(toPredict, this.trainingSet);\n\n    let temp = KTestTrain;\n    KTestTrain = new Array(this.orthogonalComp + 1);\n    for (let i = 0; i < this.orthogonalComp + 1; i++) {\n      KTestTrain[i] = new Array(this.orthogonalComp + 1);\n    }\n    KTestTrain[0][0] = temp;\n\n    let YOrthScoreVector = new Array(this.orthogonalComp);\n    let predScoreMat = new Array(this.orthogonalComp);\n\n    let i;\n    for (i = 0; i < this.orthogonalComp; ++i) {\n      predScoreMat[i] = KTestTrain[i][0]\n        .mmul(this.YScoreMat)\n        .mmul(this.SigmaPow);\n\n      YOrthScoreVector[i] = Matrix.sub(\n        KTestTrain[i][i],\n        predScoreMat[i].mmul(this.predScoreMat[i].transpose()),\n      )\n        .mmul(this.predScoreMat[i])\n        .mmul(this.YOrthLoadingVec[i])\n        .mul(Math.pow(this.YOrthEigen[i], -0.5));\n\n      YOrthScoreVector[i] = YOrthScoreVector[i].divRowVector(this.toNorm[i]);\n\n      let scoreMatPrime = this.YOrthScoreMat[i].transpose();\n      KTestTrain[i + 1][0] = Matrix.sub(\n        KTestTrain[i][0],\n        YOrthScoreVector[i]\n          .mmul(scoreMatPrime)\n          .mmul(this.kernelX[0][i].transpose()),\n      );\n\n      let p1 = Matrix.sub(\n        KTestTrain[i][0],\n        KTestTrain[i][i].mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime),\n      );\n      let p2 = YOrthScoreVector[i].mmul(scoreMatPrime).mmul(this.kernelX[i][i]);\n      let p3 = p2.mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime);\n\n      KTestTrain[i + 1][i + 1] = p1.sub(p2).add(p3);\n    }\n\n    predScoreMat[i] = KTestTrain[i][0].mmul(this.YScoreMat).mmul(this.SigmaPow);\n    let prediction = predScoreMat[i]\n      .mmul(this.TURegressionCoeff[i])\n      .mmul(this.YLoadingMat.transpose());\n\n    return {\n      prediction: prediction,\n      predScoreMat: predScoreMat,\n      predYOrthVectors: YOrthScoreVector,\n    };\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      name: 'K-OPLS',\n      YLoadingMat: this.YLoadingMat,\n      SigmaPow: this.SigmaPow,\n      YScoreMat: this.YScoreMat,\n      predScoreMat: this.predScoreMat,\n      YOrthLoadingVec: this.YOrthLoadingVec,\n      YOrthEigen: this.YOrthEigen,\n      YOrthScoreMat: this.YOrthScoreMat,\n      toNorm: this.toNorm,\n      TURegressionCoeff: this.TURegressionCoeff,\n      kernelX: this.kernelX,\n      trainingSet: this.trainingSet,\n      orthogonalComp: this.orthogonalComp,\n      predictiveComp: this.predictiveComp,\n    };\n  }\n\n  /**\n   * Load a K-OPLS with the given model.\n   * @param {object} model\n   * @param {Kernel} kernel - kernel used on the model, see [ml-kernel](https://github.com/mljs/kernel).\n   * @return {KOPLS}\n   */\n  static load(model, kernel) {\n    if (model.name !== 'K-OPLS') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    if (!kernel) {\n      throw new RangeError('You must provide a kernel for the model!');\n    }\n\n    model.kernel = kernel;\n    return new KOPLS(true, model);\n  }\n}\n","/**\n *  Constructs a confusion matrix\n * @class ConfusionMatrix\n * @example\n * const CM = new ConfusionMatrix([[13, 2], [10, 5]], ['cat', 'dog'])\n * @param {Array<Array<number>>} matrix - The confusion matrix, a 2D Array. Rows represent the actual label and columns\n *     the predicted label.\n * @param {Array<any>} labels - Labels of the confusion matrix, a 1D Array\n */\nexport default class ConfusionMatrix {\n  constructor(matrix, labels) {\n    if (matrix.length !== matrix[0].length) {\n      throw new Error('Confusion matrix must be square');\n    }\n    if (labels.length !== matrix.length) {\n      throw new Error(\n        'Confusion matrix and labels should have the same length',\n      );\n    }\n    this.labels = labels;\n    this.matrix = matrix;\n  }\n\n  /**\n   * Construct confusion matrix from the predicted and actual labels (classes). Be sure to provide the arguments in\n   * the correct order!\n   * @param {Array<any>} actual  - The predicted labels of the classification\n   * @param {Array<any>} predicted     - The actual labels of the classification. Has to be of same length as\n   *     predicted.\n   * @param {object} [options] - Additional options\n   * @param {Array<any>} [options.labels] - The list of labels that should be used. If not provided the distinct set\n   *     of labels present in predicted and actual is used. Labels are compared using the strict equality operator\n   *     '==='\n   * @return {ConfusionMatrix} - Confusion matrix\n   */\n  static fromLabels(actual, predicted, options = {}) {\n    if (predicted.length !== actual.length) {\n      throw new Error('predicted and actual must have the same length');\n    }\n    let distinctLabels;\n    if (options.labels) {\n      distinctLabels = new Set(options.labels);\n    } else {\n      distinctLabels = new Set([...actual, ...predicted]);\n    }\n    distinctLabels = Array.from(distinctLabels);\n    if (options.sort) {\n      distinctLabels.sort(options.sort);\n    }\n\n    // Create confusion matrix and fill with 0's\n    const matrix = Array.from({ length: distinctLabels.length });\n    for (let i = 0; i < matrix.length; i++) {\n      matrix[i] = new Array(matrix.length);\n      matrix[i].fill(0);\n    }\n\n    for (let i = 0; i < predicted.length; i++) {\n      const actualIdx = distinctLabels.indexOf(actual[i]);\n      const predictedIdx = distinctLabels.indexOf(predicted[i]);\n      if (actualIdx >= 0 && predictedIdx >= 0) {\n        matrix[actualIdx][predictedIdx]++;\n      }\n    }\n\n    return new ConfusionMatrix(matrix, distinctLabels);\n  }\n\n  /**\n   * Get the confusion matrix\n   * @return {Array<Array<number> >}\n   */\n  getMatrix() {\n    return this.matrix;\n  }\n\n  getLabels() {\n    return this.labels;\n  }\n\n  /**\n   * Get the total number of samples\n   * @return {number}\n   */\n  getTotalCount() {\n    let predicted = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      for (let j = 0; j < this.matrix.length; j++) {\n        predicted += this.matrix[i][j];\n      }\n    }\n    return predicted;\n  }\n\n  /**\n   * Get the total number of true predictions\n   * @return {number}\n   */\n  getTrueCount() {\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      count += this.matrix[i][i];\n    }\n    return count;\n  }\n\n  /**\n   * Get the total number of false predictions.\n   * @return {number}\n   */\n  getFalseCount() {\n    return this.getTotalCount() - this.getTrueCount();\n  }\n\n  /**\n   * Get the number of true positive predictions.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getTruePositiveCount(label) {\n    const index = this.getIndex(label);\n    return this.matrix[index][index];\n  }\n\n  /**\n   * Get the number of true negative predictions\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getTrueNegativeCount(label) {\n    const index = this.getIndex(label);\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      for (let j = 0; j < this.matrix.length; j++) {\n        if (i !== index && j !== index) {\n          count += this.matrix[i][j];\n        }\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the number of false positive predictions.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalsePositiveCount(label) {\n    const index = this.getIndex(label);\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      if (i !== index) {\n        count += this.matrix[i][index];\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the number of false negative predictions.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseNegativeCount(label) {\n    const index = this.getIndex(label);\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      if (i !== index) {\n        count += this.matrix[index][i];\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the number of real positive samples.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getPositiveCount(label) {\n    return this.getTruePositiveCount(label) + this.getFalseNegativeCount(label);\n  }\n\n  /**\n   * Get the number of real negative samples.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getNegativeCount(label) {\n    return this.getTrueNegativeCount(label) + this.getFalsePositiveCount(label);\n  }\n\n  /**\n   * Get the index in the confusion matrix that corresponds to the given label\n   * @param {any} label - The label to search for\n   * @throws if the label is not found\n   * @return {number}\n   */\n  getIndex(label) {\n    const index = this.labels.indexOf(label);\n    if (index === -1) throw new Error('The label does not exist');\n    return index;\n  }\n\n  /**\n   * Get the true positive rate a.k.a. sensitivity. Computes the ratio between the number of true positive predictions and the total number of positive samples.\n   * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number} - The true positive rate [0-1]\n   */\n  getTruePositiveRate(label) {\n    return this.getTruePositiveCount(label) / this.getPositiveCount(label);\n  }\n\n  /**\n   * Get the true negative rate a.k.a. specificity. Computes the ration between the number of true negative predictions and the total number of negative samples.\n   * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getTrueNegativeRate(label) {\n    return this.getTrueNegativeCount(label) / this.getNegativeCount(label);\n  }\n\n  /**\n   * Get the positive predictive value a.k.a. precision. Computes TP / (TP + FP)\n   * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getPositivePredictiveValue(label) {\n    const TP = this.getTruePositiveCount(label);\n    return TP / (TP + this.getFalsePositiveCount(label));\n  }\n\n  /**\n   * Negative predictive value\n   * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getNegativePredictiveValue(label) {\n    const TN = this.getTrueNegativeCount(label);\n    return TN / (TN + this.getFalseNegativeCount(label));\n  }\n\n  /**\n   * False negative rate a.k.a. miss rate.\n   * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseNegativeRate(label) {\n    return 1 - this.getTruePositiveRate(label);\n  }\n\n  /**\n   * False positive rate a.k.a. fall-out rate.\n   * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalsePositiveRate(label) {\n    return 1 - this.getTrueNegativeRate(label);\n  }\n\n  /**\n   * False discovery rate (FDR)\n   * {@link https://en.wikipedia.org/wiki/False_discovery_rate}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseDiscoveryRate(label) {\n    const FP = this.getFalsePositiveCount(label);\n    return FP / (FP + this.getTruePositiveCount(label));\n  }\n\n  /**\n   * False omission rate (FOR)\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseOmissionRate(label) {\n    const FN = this.getFalseNegativeCount(label);\n    return FN / (FN + this.getTruePositiveCount(label));\n  }\n\n  /**\n   * F1 score\n   * {@link https://en.wikipedia.org/wiki/F1_score}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getF1Score(label) {\n    const TP = this.getTruePositiveCount(label);\n    return (\n      (2 * TP) /\n      (2 * TP +\n        this.getFalsePositiveCount(label) +\n        this.getFalseNegativeCount(label))\n    );\n  }\n\n  /**\n   * Matthews correlation coefficient (MCC)\n   * {@link https://en.wikipedia.org/wiki/Matthews_correlation_coefficient}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getMatthewsCorrelationCoefficient(label) {\n    const TP = this.getTruePositiveCount(label);\n    const TN = this.getTrueNegativeCount(label);\n    const FP = this.getFalsePositiveCount(label);\n    const FN = this.getFalseNegativeCount(label);\n    return (\n      (TP * TN - FP * FN) /\n      Math.sqrt((TP + FP) * (TP + FN) * (TN + FP) * (TN + FN))\n    );\n  }\n\n  /**\n   * Informedness\n   * {@link https://en.wikipedia.org/wiki/Youden%27s_J_statistic}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getInformedness(label) {\n    return (\n      this.getTruePositiveRate(label) + this.getTrueNegativeRate(label) - 1\n    );\n  }\n\n  /**\n   * Markedness\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getMarkedness(label) {\n    return (\n      this.getPositivePredictiveValue(label) +\n      this.getNegativePredictiveValue(label) -\n      1\n    );\n  }\n\n  /**\n   * Get the confusion table.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {Array<Array<number> >} - The 2x2 confusion table. [[TP, FN], [FP, TN]]\n   */\n  getConfusionTable(label) {\n    return [\n      [this.getTruePositiveCount(label), this.getFalseNegativeCount(label)],\n      [this.getFalsePositiveCount(label), this.getTrueNegativeCount(label)],\n    ];\n  }\n\n  /**\n   * Get total accuracy.\n   * @return {number} - The ratio between the number of true predictions and total number of classifications ([0-1])\n   */\n  getAccuracy() {\n    let correct = 0;\n    let incorrect = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      for (let j = 0; j < this.matrix.length; j++) {\n        if (i === j) correct += this.matrix[i][j];\n        else incorrect += this.matrix[i][j];\n      }\n    }\n    return correct / (correct + incorrect);\n  }\n\n  /**\n   * Returns the element in the confusion matrix that corresponds to the given actual and predicted labels.\n   * @param {any} actual - The true label\n   * @param {any} predicted - The predicted label\n   * @return {number} - The element in the confusion matrix\n   */\n  getCount(actual, predicted) {\n    const actualIndex = this.getIndex(actual);\n    const predictedIndex = this.getIndex(predicted);\n    return this.matrix[actualIndex][predictedIndex];\n  }\n\n  /**\n   * Compute the general prediction accuracy\n   * @deprecated Use getAccuracy\n   * @return {number} - The prediction accuracy ([0-1]\n   */\n  get accuracy() {\n    return this.getAccuracy();\n  }\n\n  /**\n   * Compute the number of predicted observations\n   * @deprecated Use getTotalCount\n   * @return {number}\n   */\n  get total() {\n    return this.getTotalCount();\n  }\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar runtime = createCommonjsModule(function (module) {\n\t/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t!(function(global) {\n\n\t  var Op = Object.prototype;\n\t  var hasOwn = Op.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = module.exports;\n\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t    var generator = Object.create(protoGenerator.prototype);\n\t    var context = new Context(tryLocsList || []);\n\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\n\t  // This is a polyfill for %IteratorPrototype% for environments that\n\t  // don't natively support it.\n\t  var IteratorPrototype = {};\n\t  IteratorPrototype[iteratorSymbol] = function () {\n\t    return this;\n\t  };\n\n\t  var getProto = Object.getPrototypeOf;\n\t  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\t  if (NativeIteratorPrototype &&\n\t      NativeIteratorPrototype !== Op &&\n\t      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t    // This environment has a native %IteratorPrototype%; use it instead\n\t    // of the polyfill.\n\t    IteratorPrototype = NativeIteratorPrototype;\n\t  }\n\n\t  var Gp = GeneratorFunctionPrototype.prototype =\n\t    Generator.prototype = Object.create(IteratorPrototype);\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] =\n\t    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t  // meant to be awaited.\n\t  runtime.awrap = function(arg) {\n\t    return { __await: arg };\n\t  };\n\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value &&\n\t            typeof value === \"object\" &&\n\t            hasOwn.call(value, \"__await\")) {\n\t          return Promise.resolve(value.__await).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\n\t    var previousPromise;\n\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t    return this;\n\t  };\n\t  runtime.AsyncIterator = AsyncIterator;\n\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\n\t      context.method = method;\n\t      context.arg = arg;\n\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          var delegateResult = maybeInvokeDelegate(delegate, context);\n\t          if (delegateResult) {\n\t            if (delegateResult === ContinueSentinel) continue;\n\t            return delegateResult;\n\t          }\n\t        }\n\n\t        if (context.method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = context.arg;\n\n\t        } else if (context.method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw context.arg;\n\t          }\n\n\t          context.dispatchException(context.arg);\n\n\t        } else if (context.method === \"return\") {\n\t          context.abrupt(\"return\", context.arg);\n\t        }\n\n\t        state = GenStateExecuting;\n\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\n\t          if (record.arg === ContinueSentinel) {\n\t            continue;\n\t          }\n\n\t          return {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(context.arg) call above.\n\t          context.method = \"throw\";\n\t          context.arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\n\t  // Call delegate.iterator[context.method](context.arg) and handle the\n\t  // result, either by returning a { value, done } result from the\n\t  // delegate iterator, or by modifying context.method and context.arg,\n\t  // setting context.delegate to null, and returning the ContinueSentinel.\n\t  function maybeInvokeDelegate(delegate, context) {\n\t    var method = delegate.iterator[context.method];\n\t    if (method === undefined) {\n\t      // A .throw or .return when the delegate iterator has no .throw\n\t      // method always terminates the yield* loop.\n\t      context.delegate = null;\n\n\t      if (context.method === \"throw\") {\n\t        if (delegate.iterator.return) {\n\t          // If the delegate iterator has a return method, give it a\n\t          // chance to clean up.\n\t          context.method = \"return\";\n\t          context.arg = undefined;\n\t          maybeInvokeDelegate(delegate, context);\n\n\t          if (context.method === \"throw\") {\n\t            // If maybeInvokeDelegate(context) changed context.method from\n\t            // \"return\" to \"throw\", let that override the TypeError below.\n\t            return ContinueSentinel;\n\t          }\n\t        }\n\n\t        context.method = \"throw\";\n\t        context.arg = new TypeError(\n\t          \"The iterator does not provide a 'throw' method\");\n\t      }\n\n\t      return ContinueSentinel;\n\t    }\n\n\t    var record = tryCatch(method, delegate.iterator, context.arg);\n\n\t    if (record.type === \"throw\") {\n\t      context.method = \"throw\";\n\t      context.arg = record.arg;\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\n\t    var info = record.arg;\n\n\t    if (! info) {\n\t      context.method = \"throw\";\n\t      context.arg = new TypeError(\"iterator result is not an object\");\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\n\t    if (info.done) {\n\t      // Assign the result of the finished delegate to the temporary\n\t      // variable specified by delegate.resultName (see delegateYield).\n\t      context[delegate.resultName] = info.value;\n\n\t      // Resume execution at the desired location (see delegateYield).\n\t      context.next = delegate.nextLoc;\n\n\t      // If context.method was \"throw\" but the delegate handled the\n\t      // exception, let the outer generator proceed normally. If\n\t      // context.method was \"next\", forget context.arg since it has been\n\t      // \"consumed\" by the delegate iterator. If context.method was\n\t      // \"return\", allow the original .return call to continue in the\n\t      // outer generator.\n\t      if (context.method !== \"return\") {\n\t        context.method = \"next\";\n\t        context.arg = undefined;\n\t      }\n\n\t    } else {\n\t      // Re-yield the result returned by the delegate method.\n\t      return info;\n\t    }\n\n\t    // The delegate iterator is finished, so forget it and continue with\n\t    // the outer generator.\n\t    context.delegate = null;\n\t    return ContinueSentinel;\n\t  }\n\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\n\t  // A Generator should always return itself as the iterator object when the\n\t  // @@iterator function is called on it. Some browsers' implementations of the\n\t  // iterator prototype chain incorrectly implement this, causing the Generator\n\t  // object to not be returned from this call. This ensures that doesn't happen.\n\t  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\n\t    this.tryEntries.push(entry);\n\t  }\n\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\n\t          next.value = undefined;\n\t          next.done = true;\n\n\t          return next;\n\t        };\n\n\t        return next.next = next;\n\t      }\n\t    }\n\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\n\t  Context.prototype = {\n\t    constructor: Context,\n\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\n\t      this.method = \"next\";\n\t      this.arg = undefined;\n\n\t      this.tryEntries.forEach(resetTryEntry);\n\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\n\t    stop: function() {\n\t      this.done = true;\n\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\n\t      return this.rval;\n\t    },\n\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\n\t        if (caught) {\n\t          // If the dispatched exception was caught by a catch block,\n\t          // then let that catch block handle the exception normally.\n\t          context.method = \"next\";\n\t          context.arg = undefined;\n\t        }\n\n\t        return !! caught;\n\t      }\n\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\n\t      if (finallyEntry) {\n\t        this.method = \"next\";\n\t        this.next = finallyEntry.finallyLoc;\n\t        return ContinueSentinel;\n\t      }\n\n\t      return this.complete(record);\n\t    },\n\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = this.arg = record.arg;\n\t        this.method = \"return\";\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\n\t      return ContinueSentinel;\n\t    },\n\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\n\t      if (this.method === \"next\") {\n\t        // Deliberately forget the last sent value so that we don't\n\t        // accidentally pass it on to the delegate.\n\t        this.arg = undefined;\n\t      }\n\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // In sloppy mode, unbound `this` refers to the global object, fallback to\n\t  // Function constructor if we're in global strict mode. That is sadly a form\n\t  // of indirect eval which violates Content Security Policy.\n\t  (function() { return this })() || Function(\"return this\")()\n\t);\n\t});\n\n\t/**\n\t * Copyright (c) 2014-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t// This method of obtaining a reference to the global object needs to be\n\t// kept identical to the way it is obtained in runtime.js\n\tvar g = (function() { return this })() || Function(\"return this\")();\n\n\t// Use `getOwnPropertyNames` because not all browsers support calling\n\t// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\tvar hadRuntime = g.regeneratorRuntime &&\n\t  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n\t// Save the old regeneratorRuntime in case it needs to be restored later.\n\tvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n\t// Force reevalutation of runtime.js.\n\tg.regeneratorRuntime = undefined;\n\n\tvar runtimeModule = runtime;\n\n\tif (hadRuntime) {\n\t  // Restore the original runtime.\n\t  g.regeneratorRuntime = oldRuntime;\n\t} else {\n\t  // Remove the global property added by runtime.js.\n\t  try {\n\t    delete g.regeneratorRuntime;\n\t  } catch(e) {\n\t    g.regeneratorRuntime = undefined;\n\t  }\n\t}\n\n\tvar regenerator = runtimeModule;\n\n\tvar defaultOptions = {\n\t  mode: 'index'\n\t};\n\n\tmodule.exports = /*#__PURE__*/regenerator.mark(function _callee(M, N, options) {\n\t  var a, c, b, p, x, y, z, i, twiddle;\n\t  return regenerator.wrap(function _callee$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          twiddle = function twiddle() {\n\t            var i, j, k;\n\t            j = 1;\n\t            while (p[j] <= 0) {\n\t              j++;\n\t            }\n\t            if (p[j - 1] === 0) {\n\t              for (i = j - 1; i !== 1; i--) {\n\t                p[i] = -1;\n\t              }\n\t              p[j] = 0;\n\t              x = z = 0;\n\t              p[1] = 1;\n\t              y = j - 1;\n\t            } else {\n\t              if (j > 1) {\n\t                p[j - 1] = 0;\n\t              }\n\t              do {\n\t                j++;\n\t              } while (p[j] > 0);\n\t              k = j - 1;\n\t              i = j;\n\t              while (p[i] === 0) {\n\t                p[i++] = -1;\n\t              }\n\t              if (p[i] === -1) {\n\t                p[i] = p[k];\n\t                z = p[k] - 1;\n\t                x = i - 1;\n\t                y = k - 1;\n\t                p[k] = -1;\n\t              } else {\n\t                if (i === p[0]) {\n\t                  return 0;\n\t                } else {\n\t                  p[j] = p[i];\n\t                  z = p[i] - 1;\n\t                  p[i] = 0;\n\t                  x = j - 1;\n\t                  y = i - 1;\n\t                }\n\t              }\n\t            }\n\t            return 1;\n\t          };\n\n\t          options = Object.assign({}, defaultOptions, options);\n\t          a = new Array(N);\n\t          c = new Array(M);\n\t          b = new Array(N);\n\t          p = new Array(N + 2);\n\n\n\t          // init a and b\n\t          for (i = 0; i < N; i++) {\n\t            a[i] = i;\n\t            if (i < N - M) b[i] = 0;else b[i] = 1;\n\t          }\n\n\t          // init c\n\t          for (i = 0; i < M; i++) {\n\t            c[i] = N - M + i;\n\t          }\n\n\t          // init p\n\t          for (i = 0; i < p.length; i++) {\n\t            if (i === 0) p[i] = N + 1;else if (i <= N - M) p[i] = 0;else if (i <= N) p[i] = i - N + M;else p[i] = -2;\n\t          }\n\n\t          if (!(options.mode === 'index')) {\n\t            _context.next = 20;\n\t            break;\n\t          }\n\n\t          _context.next = 12;\n\t          return c.slice();\n\n\t        case 12:\n\t          if (!twiddle()) {\n\t            _context.next = 18;\n\t            break;\n\t          }\n\n\t          c[z] = a[x];\n\t          _context.next = 16;\n\t          return c.slice();\n\n\t        case 16:\n\t          _context.next = 12;\n\t          break;\n\n\t        case 18:\n\t          _context.next = 33;\n\t          break;\n\n\t        case 20:\n\t          if (!(options.mode === 'mask')) {\n\t            _context.next = 32;\n\t            break;\n\t          }\n\n\t          _context.next = 23;\n\t          return b.slice();\n\n\t        case 23:\n\t          if (!twiddle()) {\n\t            _context.next = 30;\n\t            break;\n\t          }\n\n\t          b[x] = 1;\n\t          b[y] = 0;\n\t          _context.next = 28;\n\t          return b.slice();\n\n\t        case 28:\n\t          _context.next = 23;\n\t          break;\n\n\t        case 30:\n\t          _context.next = 33;\n\t          break;\n\n\t        case 32:\n\t          throw new Error('Invalid mode');\n\n\t        case 33:\n\t        case 'end':\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _callee, this);\n\t});\n\n})));\n","/**\n * get folds indexes\n * @param {Array} features\n * @param {Number} k - number of folds, a\n */\nexport function getFolds(features, k = 5) {\n  let N = features.length;\n  let allIdx = new Array(N);\n  for (let i = 0; i < N; i++) {\n    allIdx[i] = i;\n  }\n\n  let l = Math.floor(N / k);\n  // create random k-folds\n  let current = [];\n  let folds = [];\n  while (allIdx.length) {\n    let randi = Math.floor(Math.random() * allIdx.length);\n    current.push(allIdx[randi]);\n    allIdx.splice(randi, 1);\n    if (current.length === l) {\n      folds.push(current);\n      current = [];\n    }\n  }\n  // we push the remaining to the last fold so that the total length is\n  // preserved. Otherwise the Q2 will fail.\n  if (current.length) current.forEach((e) => folds[k - 1].push(e));\n  folds = folds.slice(0, k);\n\n  let foldsIndex = folds.map((x, idx) => ({\n    testIndex: x,\n    trainIndex: [].concat(...folds.filter((el, idx2) => idx2 !== idx)),\n  }));\n  return foldsIndex;\n}\n","/**\n * A function to sample a dataset maintaining classes equilibrated\n * @param {Array} classVector - an array containing class or group information\n * @param {Number} fraction - a fraction of the class to sample\n * @return {Object} - an object with indexes\n */\n\nexport function sampleAClass(classVector, fraction) {\n  // sort the vector\n  let classVectorSorted = JSON.parse(JSON.stringify(classVector));\n  let result = Array.from(Array(classVectorSorted.length).keys()).sort((a, b) =>\n    classVectorSorted[a] < classVectorSorted[b]\n      ? -1\n      : (classVectorSorted[b] < classVectorSorted[a]) | 0,\n  );\n  classVectorSorted.sort((a, b) => (a < b ? -1 : (b < a) | 0));\n\n  // counts the class elements\n  let counts = {};\n  classVectorSorted.forEach((x) => (counts[x] = (counts[x] || 0) + 1));\n\n  // pick a few per class\n  let indexOfSelected = [];\n\n  Object.keys(counts).forEach((e, i) => {\n    let shift = [];\n    Object.values(counts).reduce((a, c, item) => (shift[item] = a + c), 0);\n\n    let arr = [...Array(counts[e]).keys()];\n\n    let r = [];\n    for (let j = 0; j < Math.floor(counts[e] * fraction); j++) {\n      let n = arr[Math.floor(Math.random() * arr.length)];\n      r.push(n);\n      let ind = arr.indexOf(n);\n      arr.splice(ind, 1);\n    }\n\n    if (i === 0) {\n      indexOfSelected = indexOfSelected.concat(r);\n    } else {\n      indexOfSelected = indexOfSelected.concat(r.map((x) => x + shift[i - 1]));\n    }\n  });\n\n  // sort back the index\n  let trainIndex = [];\n  indexOfSelected.forEach((e) => trainIndex.push(result[e]));\n\n  let testIndex = [];\n  let mask = [];\n  classVector.forEach((el, idx) => {\n    if (trainIndex.includes(idx)) {\n      mask.push(true);\n    } else {\n      mask.push(false);\n      testIndex.push(idx);\n    }\n  });\n  return { trainIndex, testIndex, mask };\n}\n","import ConfusionMatrix from 'ml-confusion-matrix';\nimport combinations from 'ml-combinations';\n\nimport { getFolds } from './getFolds.js';\n\nexport { sampleAClass } from './sampleAClass.js';\nexport { getFolds } from './getFolds.js';\n\n/**\n * Performs a leave-one-out cross-validation (LOO-CV) of the given samples. In LOO-CV, 1 observation is used as the\n * validation set while the rest is used as the training set. This is repeated once for each observation. LOO-CV is a\n * special case of LPO-CV. @see leavePout\n * @param {function} Classifier - The classifier's constructor to use for the cross validation. Expect ml-classifier\n *     api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\n\nexport function leaveOneOut(Classifier, features, labels, classifierOptions) {\n  if (typeof labels === 'function') {\n    let callback = labels;\n    labels = features;\n    features = Classifier;\n    return leavePOut(features, labels, 1, callback);\n  }\n  return leavePOut(Classifier, features, labels, classifierOptions, 1);\n}\n\n/**\n * Performs a leave-p-out cross-validation (LPO-CV) of the given samples. In LPO-CV, p observations are used as the\n * validation set while the rest is used as the training set. This is repeated as many times as there are possible\n * ways to combine p observations from the set (unordered without replacement). Be aware that for relatively small\n * data-set size this can require a very large number of training and testing to do!\n * @param {function} Classifier - The classifier's constructor to use for the cross validation. Expect ml-classifier\n *     api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @param {number} p - The size of the validation sub-samples' set\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nexport function leavePOut(Classifier, features, labels, classifierOptions, p) {\n  let callback;\n  if (typeof classifierOptions === 'function') {\n    callback = classifierOptions;\n    p = labels;\n    labels = features;\n    features = Classifier;\n  }\n  check(features, labels);\n  const distinct = getDistinct(labels);\n  const confusionMatrix = initMatrix(distinct.length, distinct.length);\n\n  let N = features.length;\n  let gen = combinations(p, N);\n  let allIdx = new Array(N);\n  for (let i = 0; i < N; i++) {\n    allIdx[i] = i;\n  }\n  for (const testIdx of gen) {\n    let trainIdx = allIdx.slice();\n\n    for (let i = testIdx.length - 1; i >= 0; i--) {\n      trainIdx.splice(testIdx[i], 1);\n    }\n\n    if (callback) {\n      validateWithCallback(\n        features,\n        labels,\n        testIdx,\n        trainIdx,\n        confusionMatrix,\n        distinct,\n        callback,\n      );\n    } else {\n      validate(\n        Classifier,\n        features,\n        labels,\n        classifierOptions,\n        testIdx,\n        trainIdx,\n        confusionMatrix,\n        distinct,\n      );\n    }\n  }\n\n  return new ConfusionMatrix(confusionMatrix, distinct);\n}\n\n/**\n * Performs k-fold cross-validation (KF-CV). KF-CV separates the data-set into k random equally sized partitions, and\n * uses each as a validation set, with all other partitions used in the training set. Observations left over from if k\n * does not divide the number of observations are left out of the cross-validation process.\n * @param {function} Classifier - The classifier's to use for the cross validation. Expect ml-classifier api.\n * @param {Array} features - The features for all samples of the data-set\n * @param {Array} labels - The classification class of all samples of the data-set\n * @param {object} classifierOptions - The classifier options with which the classifier should be instantiated.\n * @param {number} k - The number of partitions to create\n * @return {ConfusionMatrix} - The cross-validation confusion matrix\n */\nexport function kFold(Classifier, features, labels, classifierOptions, k) {\n  let callback;\n  if (typeof classifierOptions === 'function') {\n    callback = classifierOptions;\n    k = labels;\n    labels = features;\n    features = Classifier;\n  }\n  check(features, labels);\n  const distinct = getDistinct(labels);\n  const confusionMatrix = initMatrix(distinct.length, distinct.length);\n\n  let folds = getFolds(features, k);\n\n  for (let i = 0; i < folds.length; i++) {\n    let testIdx = folds[i].testIndex;\n    let trainIdx = folds[i].trainIndex;\n\n    if (callback) {\n      validateWithCallback(\n        features,\n        labels,\n        testIdx,\n        trainIdx,\n        confusionMatrix,\n        distinct,\n        callback,\n      );\n    } else {\n      validate(\n        Classifier,\n        features,\n        labels,\n        classifierOptions,\n        testIdx,\n        trainIdx,\n        confusionMatrix,\n        distinct,\n      );\n    }\n  }\n\n  return new ConfusionMatrix(confusionMatrix, distinct);\n}\n\nfunction check(features, labels) {\n  if (features.length !== labels.length) {\n    throw new Error('features and labels should have the same length');\n  }\n}\n\nfunction initMatrix(rows, columns) {\n  return new Array(rows).fill(0).map(() => new Array(columns).fill(0));\n}\n\nfunction getDistinct(arr) {\n  let s = new Set();\n  for (let i = 0; i < arr.length; i++) {\n    s.add(arr[i]);\n  }\n  return Array.from(s);\n}\n\nfunction validate(\n  Classifier,\n  features,\n  labels,\n  classifierOptions,\n  testIdx,\n  trainIdx,\n  confusionMatrix,\n  distinct,\n) {\n  const { testFeatures, trainFeatures, testLabels, trainLabels } = getTrainTest(\n    features,\n    labels,\n    testIdx,\n    trainIdx,\n  );\n\n  let classifier;\n  if (Classifier.prototype.train) {\n    classifier = new Classifier(classifierOptions);\n    classifier.train(trainFeatures, trainLabels);\n  } else {\n    classifier = new Classifier(trainFeatures, trainLabels, classifierOptions);\n  }\n\n  let predictedLabels = classifier.predict(testFeatures);\n  updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct);\n}\n\nfunction validateWithCallback(\n  features,\n  labels,\n  testIdx,\n  trainIdx,\n  confusionMatrix,\n  distinct,\n  callback,\n) {\n  const { testFeatures, trainFeatures, testLabels, trainLabels } = getTrainTest(\n    features,\n    labels,\n    testIdx,\n    trainIdx,\n  );\n  const predictedLabels = callback(trainFeatures, trainLabels, testFeatures);\n  updateConfusionMatrix(confusionMatrix, testLabels, predictedLabels, distinct);\n}\n\nfunction updateConfusionMatrix(\n  confusionMatrix,\n  testLabels,\n  predictedLabels,\n  distinct,\n) {\n  for (let i = 0; i < predictedLabels.length; i++) {\n    const actualIdx = distinct.indexOf(testLabels[i]);\n    const predictedIdx = distinct.indexOf(predictedLabels[i]);\n    if (actualIdx < 0 || predictedIdx < 0) {\n      // eslint-disable-next-line no-console\n      console.warn(`ignore unknown predicted label ${predictedLabels[i]}`);\n    }\n    confusionMatrix[actualIdx][predictedIdx]++;\n  }\n}\n\nexport function getTrainTest(features, labels, testIdx, trainIdx) {\n  return {\n    testFeatures: testIdx.map(function(index) {\n      return features[index];\n    }),\n    trainFeatures: trainIdx.map(function(index) {\n      return features[index];\n    }),\n    testLabels: testIdx.map(function(index) {\n      return labels[index];\n    }),\n    trainLabels: trainIdx.map(function(index) {\n      return labels[index];\n    }),\n  };\n}\n","import Matrix from 'ml-matrix';\n\nimport { norm } from './util/utils.js';\n\n/**\n * OPLS loop\n * @param {Array} x a matrix with features\n * @param {Array} y an array of labels (dependent variable)\n * @param {Object} options an object with options\n * @return {Object} an object with model (filteredX: err,\n    loadingsXOrtho: pOrtho,\n    scoresXOrtho: tOrtho,\n    weightsXOrtho: wOrtho,\n    weightsPred: w,\n    loadingsXpred: p,\n    scoresXpred: t,\n    loadingsY:)\n */\nexport function OPLSNipals(x, y, options = {}) {\n  const { numberOSC = 100 } = options;\n\n  let X = Matrix.checkMatrix(x);\n  let Y = Matrix.checkMatrix(y);\n\n  let u = Y.getColumnVector(0);\n\n  let diff = 1;\n  let t, c, w, uNew;\n  for (let i = 0; i < numberOSC && diff > 1e-10; i++) {\n    w = u\n      .transpose()\n      .mmul(X)\n      .div(\n        u\n          .transpose()\n          .mmul(u)\n          .get(0, 0),\n      );\n    w = w.transpose().div(norm(w));\n\n    t = X.mmul(w).div(\n      w\n        .transpose()\n        .mmul(w)\n        .get(0, 0),\n    ); // t_h paso 3\n\n    // calc loading\n    c = t\n      .transpose()\n      .mmul(Y)\n      .div(\n        t\n          .transpose()\n          .mmul(t)\n          .get(0, 0),\n      );\n\n    // calc new u and compare with one in previus iteration (stop criterion)\n    uNew = Y.mmul(c.transpose());\n    uNew = uNew.div(\n      c\n        .transpose()\n        .mmul(c)\n        .get(0, 0),\n    );\n\n    if (i > 0) {\n      diff =\n        uNew\n          .clone()\n          .sub(u)\n          .pow(2)\n          .sum() /\n        uNew\n          .clone()\n          .pow(2)\n          .sum();\n    }\n\n    u = uNew.clone();\n  }\n\n  // calc loadings\n  let p = t\n    .transpose()\n    .mmul(X)\n    .div(\n      t\n        .transpose()\n        .mmul(t)\n        .get(0, 0),\n    );\n\n  let wOrtho = p.clone().sub(\n    w\n      .transpose()\n      .mmul(p.transpose())\n      .div(\n        w\n          .transpose()\n          .mmul(w)\n          .get(0, 0),\n      )\n      .mmul(w.transpose()),\n  );\n  wOrtho.div(norm(wOrtho));\n\n  // orthogonal scores\n  let tOrtho = X.mmul(wOrtho.transpose()).div(\n    wOrtho.mmul(wOrtho.transpose()).get(0, 0),\n  );\n\n  // orthogonal loadings\n  let pOrtho = tOrtho\n    .transpose()\n    .mmul(X)\n    .div(\n      tOrtho\n        .transpose()\n        .mmul(tOrtho)\n        .get(0, 0),\n    );\n\n  // filtered data\n  let err = X.clone().sub(tOrtho.mmul(pOrtho));\n  return {\n    filteredX: err,\n    weightsXOrtho: wOrtho,\n    loadingsXOrtho: pOrtho,\n    scoresXOrtho: tOrtho,\n    weightsXPred: w,\n    loadingsXpred: p,\n    scoresXpred: t,\n    loadingsY: c,\n  };\n}\n","import { Matrix } from 'ml-matrix';\n\n/**\n * Get total sum of square\n * @param {Array} x an array\n * @return {Number} - the sum of the squares\n */\nexport function tss(x) {\n  return Matrix.mul(x, x).sum();\n}\n","import { Matrix, NIPALS } from 'ml-matrix';\nimport ConfusionMatrix from 'ml-confusion-matrix';\nimport { getFolds } from 'ml-cross-validation';\n\nimport { OPLSNipals } from './OPLSNipals.js';\nimport { tss } from './util/tss.js';\n\n/**\n * Creates new OPLS (orthogonal partial latent structures) from features and labels.\n * @param {Matrix} data - matrix containing data (X).\n * @param {Array} labels - 1D Array containing metadata (Y).\n * @param {Object} [options]\n * @param {number} [options.nComp = 3] - number of latent structures computed.\n * @param {boolean} [options.center = true] - should the data be centered (subtract the mean).\n * @param {boolean} [options.scale = false] - should the data be scaled (divide by the standard deviation).\n * @param {Array} [options.cvFolds = []] - allows to provide folds as 2D array for testing purpose.\n * */\n\nexport class OPLS {\n  constructor(data, labels, options = {}) {\n    if (data === true) {\n      const opls = options;\n      this.center = opls.center;\n      this.scale = opls.scale;\n      this.means = opls.means;\n      this.meansY = opls.meansY;\n      this.stdevs = opls.stdevs;\n      this.stdevs = opls.stdevsY;\n      this.model = opls.model;\n      this.tCV = opls.tCV;\n      this.tOrthCV = opls.tOrthCV;\n      this.yHatCV = opls.yHatCV;\n      this.mode = opls.mode;\n      return;\n    }\n\n    let features = data.clone();\n    // set default values\n    // cvFolds allows to define folds for testing purpose\n    const { nComp = 3, center = true, scale = true, cvFolds = [] } = options;\n\n    let group;\n    if (typeof labels[0] === 'number') {\n      // numeric labels: OPLS regression is used\n      this.mode = 'regression';\n      group = Matrix.from1DArray(labels.length, 1, labels);\n    } else if (typeof labels[0] === 'string') {\n      // non-numeric labels: OPLS-DA is used\n      this.mode = 'discriminantAnalysis';\n      group = labels;\n      throw new Error('discriminant analysis is not yet supported');\n    }\n\n    // check types of features and labels\n    if (features.constructor.name !== 'Matrix') {\n      throw new TypeError('features must be of class Matrix');\n    }\n    // getting center and scale the features (all)\n    this.center = center;\n    if (this.center) {\n      this.means = features.mean('column');\n      this.meansY = group.mean('column');\n    } else {\n      this.stdevs = null;\n    }\n    this.scale = scale;\n    if (this.scale) {\n      this.stdevs = features.standardDeviation('column');\n      this.stdevsY = group.standardDeviation('column');\n    } else {\n      this.means = null;\n    }\n\n    // check and remove for features with sd = 0 TODO here\n    // check opls.R line 70\n\n    let folds;\n    if (cvFolds.length > 0) {\n      folds = cvFolds;\n    } else {\n      folds = getFolds(labels, 5);\n    }\n\n    let Q2 = [];\n    this.model = [];\n\n    this.tCV = [];\n    this.tOrthCV = [];\n    this.yHatCV = [];\n    let oplsCV = [];\n\n    let modelNC = [];\n\n    // this code could be made more efficient by reverting the order of the loops\n    // this is a legacy loop to be consistent with R code from MetaboMate package\n    // this allows for having statistic (R2) from CV to decide wether to continue\n    // with more latent structures\n    let nc;\n    for (nc = 0; nc < nComp; nc++) {\n      let yHatk = new Matrix(group.rows, 1);\n      let tPredk = new Matrix(group.rows, 1);\n      let tOrthk = new Matrix(group.rows, 1);\n      let oplsk = [];\n\n      let f = 0;\n      for (let fold of folds) {\n        let trainTest = this._getTrainTest(features, group, fold);\n        let testXk = trainTest.testFeatures;\n        let Xk = trainTest.trainFeatures;\n        let Yk = trainTest.trainLabels;\n\n        // determine center and scale of training set\n        let dataCenter = Xk.mean('column');\n        let dataSD = Xk.standardDeviation('column');\n\n        // center and scale training set\n        if (center) {\n          Xk.center('column');\n          Yk.center('column');\n        }\n\n        if (scale) {\n          Xk.scale('column');\n          Yk.scale('column');\n        }\n\n        // perform opls\n        if (nc === 0) {\n          oplsk[f] = OPLSNipals(Xk, Yk);\n        } else {\n          oplsk[f] = OPLSNipals(oplsCV[nc - 1][f].filteredX, Yk);\n        }\n        // store model for next component\n        oplsCV[nc] = oplsk;\n\n        let plsCV = new NIPALS(oplsk[f].filteredX, { Y: Yk });\n\n        // scaling the test dataset with respect to the train\n        testXk.center('column', { center: dataCenter });\n        testXk.scale('column', { scale: dataSD });\n\n        let Eh = testXk;\n        // removing the orthogonal components from PLS\n        let scores;\n        for (let idx = 0; idx < nc + 1; idx++) {\n          scores = Eh.mmul(oplsCV[idx][f].weightsXOrtho.transpose()); // ok\n          Eh.sub(scores.mmul(oplsCV[idx][f].loadingsXOrtho));\n        }\n\n        // prediction\n        let tPred = Eh.mmul(plsCV.w.transpose());\n        // this should be summed over ncomp (pls_prediction.R line 23)\n        let yHat = tPred.mmul(plsCV.betas); // ok\n\n        // adding all prediction from all folds\n        for (let i = 0; i < fold.testIndex.length; i++) {\n          yHatk.setRow(fold.testIndex[i], [yHat.get(i, 0)]);\n          tPredk.setRow(fold.testIndex[i], [tPred.get(i, 0)]);\n          tOrthk.setRow(fold.testIndex[i], [scores.get(i, 0)]);\n        }\n        f++;\n      } // end of loop over folds\n\n      this.tCV.push(tPredk);\n      this.tOrthCV.push(tOrthk);\n      this.yHatCV.push(yHatk);\n\n      // calculate Q2y for all the prediction (all folds)\n      // ROC for DA is not implemented (check opls.R line 183) TODO\n      if (this.mode === 'regression') {\n        let tssy = tss(group.center('column').scale('column'));\n        let press = tss(group.clone().sub(yHatk));\n        let Q2y = 1 - press / tssy;\n        Q2.push(Q2y);\n      } else if (this.mode === 'discriminantAnalysis') {\n        throw new Error('discriminant analysis is not yet supported');\n      }\n\n      // calculate the R2y for the complete data\n      if (nc === 0) {\n        modelNC = this._predictAll(features, group);\n      } else {\n        modelNC = this._predictAll(\n          modelNC.xRes,\n          group,\n          (options = { scale: false, center: false }),\n        );\n      }\n\n      // adding the predictive statistics from CV\n      modelNC.Q2y = Q2;\n      // store the model for each component\n      this.model.push(modelNC);\n      // console.warn(`OPLS iteration over # of Components: ${nc + 1}`);\n    } // end of loop over nc\n\n    // store scores from CV\n    let tCV = this.tCV;\n    let tOrthCV = this.tOrthCV;\n\n    let m = this.model[nc - 1];\n    let XOrth = m.XOrth;\n    let FeaturesCS = features.center('column').scale('column');\n    let labelsCS = group.center('column').scale('column');\n    let Xres = FeaturesCS.clone().sub(XOrth);\n    let plsCall = new NIPALS(Xres, { Y: labelsCS });\n    let E = Xres.clone().sub(plsCall.t.mmul(plsCall.p));\n\n    let R2x = this.model.map((x) => x.R2x);\n    let R2y = this.model.map((x) => x.R2y);\n\n    this.output = {\n      Q2y: Q2,\n      R2x,\n      R2y,\n      tPred: m.plsC.t,\n      pPred: m.plsC.p,\n      wPred: m.plsC.w,\n      betasPred: m.plsC.betas,\n      Qpc: m.plsC.q,\n      tCV,\n      tOrthCV,\n      tOrth: m.tOrth,\n      pOrth: m.pOrth,\n      wOrth: m.wOrth,\n      XOrth,\n      yHat: m.totalPred,\n      Yres: m.plsC.yResidual,\n      E,\n    };\n  }\n\n  /**\n   * get access to all the computed elements\n   * Mainly for debug and testing\n   * @return {Object} output object\n   */\n  getLogs() {\n    return this.output;\n  }\n\n  getScores() {\n    let scoresX = this.tCV.map((x) => x.to1DArray());\n    let scoresY = this.tOrthCV.map((x) => x.to1DArray());\n    return { scoresX, scoresY };\n  }\n\n  /**\n   * Load an OPLS model from JSON\n   * @param {Object} model\n   * @return {OPLS}\n   */\n  static load(model) {\n    if (typeof model.name !== 'string') {\n      throw new TypeError('model must have a name property');\n    }\n    if (model.name !== 'OPLS') {\n      throw new RangeError(`invalid model: ${model.name}`);\n    }\n    return new OPLS(true, [], model);\n  }\n\n  /**\n   * Export the current model to a JSON object\n   * @return {Object} model\n   */\n  toJSON() {\n    return {\n      name: 'OPLS',\n      center: this.center,\n      scale: this.scale,\n      means: this.means,\n      stdevs: this.stdevs,\n      model: this.model,\n      tCV: this.tCV,\n      tOrthCV: this.tOrthCV,\n      yHatCV: this.yHatCV,\n    };\n  }\n\n  /**\n   * Predict scores for new data\n   * @param {Matrix} features - a matrix containing new data\n   * @param {Object} [options]\n   * @param {Array} [options.trueLabel] - an array with true values to compute confusion matrix\n   * @param {Number} [options.nc] - the number of components to be used\n   * @return {Object} - predictions\n   */\n  predict(newData, options = {}) {\n    let { trueLabels = [], nc = 1 } = options;\n    let labels = [];\n    if (trueLabels.length > 0) {\n      trueLabels = Matrix.from1DArray(trueLabels.length, 1, trueLabels);\n      labels = trueLabels.clone();\n    }\n\n    let features = newData.clone();\n\n    // scaling the test dataset with respect to the train\n    if (this.center) {\n      features.center('column', { center: this.means });\n      if (labels.rows > 0 && this.mode === 'regression') {\n        labels.center('column', { center: this.meansY });\n      }\n    }\n    if (this.scale) {\n      features.scale('column', { scale: this.stdevs });\n      if (labels.rows > 0 && this.mode === 'regression') {\n        labels.scale('column', { scale: this.stdevsY });\n      }\n    }\n\n    let Eh = features.clone();\n    // removing the orthogonal components from PLS\n    let tOrth;\n    let wOrth;\n    let pOrth;\n    let yHat;\n    let tPred;\n\n    for (let idx = 0; idx < nc; idx++) {\n      wOrth = this.model[idx].wOrth.transpose();\n      pOrth = this.model[idx].pOrth;\n      tOrth = Eh.mmul(wOrth);\n      Eh.sub(tOrth.mmul(pOrth));\n      // prediction\n      tPred = Eh.mmul(this.model[idx].plsC.w.transpose());\n      // this should be summed over ncomp (pls_prediction.R line 23)\n      yHat = tPred.mmul(this.model[idx].plsC.betas);\n    }\n\n    if (labels.rows > 0) {\n      if (this.mode === 'regression') {\n        let tssy = tss(labels);\n        let press = tss(labels.clone().sub(yHat));\n        let Q2y = 1 - press / tssy;\n\n        return { tPred, tOrth, yHat, Q2y };\n      } else if (this.mode === 'discriminantAnalysis') {\n        let confusionMatrix = [];\n        confusionMatrix = ConfusionMatrix.fromLabels(\n          trueLabels.to1DArray(),\n          yHat.to1DArray(),\n        );\n\n        return { tPred, tOrth, yHat, confusionMatrix };\n      }\n    } else {\n      return { tPred, tOrth, yHat };\n    }\n  }\n\n  _predictAll(features, labels, options = {}) {\n    // cannot use the global this.center here\n    // since it is used in the NC loop and\n    // centering and scaling should only be\n    // performed once\n    const { center = true, scale = true } = options;\n\n    if (center) {\n      features.center('column');\n      labels.center('column');\n    }\n\n    if (scale) {\n      features.scale('column');\n      labels.scale('column');\n      // reevaluate tssy and tssx after scaling\n      // must be global because re-used for next nc iteration\n      // tssx is only evaluate the first time\n      this.tssy = tss(labels);\n      this.tssx = tss(features);\n    }\n\n    let oplsC = OPLSNipals(features, labels);\n    let plsC = new NIPALS(oplsC.filteredX, { Y: labels });\n\n    let tPred = oplsC.filteredX.mmul(plsC.w.transpose());\n    let yHat = tPred.mmul(plsC.betas);\n\n    let rss = tss(labels.clone().sub(yHat));\n    let R2y = 1 - rss / this.tssy;\n\n    let xEx = plsC.t.mmul(plsC.p);\n    let rssx = tss(xEx);\n    let R2x = rssx / this.tssx;\n\n    return {\n      R2y,\n      R2x,\n      xRes: oplsC.filteredX,\n      tOrth: oplsC.scoresXOrtho,\n      pOrth: oplsC.loadingsXOrtho,\n      wOrth: oplsC.weightsXOrtho,\n      tPred: tPred,\n      totalPred: yHat,\n      XOrth: oplsC.scoresXOrtho.mmul(oplsC.loadingsXOrtho),\n      oplsC,\n      plsC,\n    };\n  }\n  /**\n   *\n   * @param {*} X - dataset matrix object\n   * @param {*} group - labels matrix object\n   * @param {*} index - train and test index (output from getFold())\n   */\n  _getTrainTest(X, group, index) {\n    let testFeatures = new Matrix(index.testIndex.length, X.columns);\n    let testLabels = new Matrix(index.testIndex.length, 1);\n    index.testIndex.forEach((el, idx) => {\n      testFeatures.setRow(idx, X.getRow(el));\n      testLabels.setRow(idx, group.getRow(el));\n    });\n\n    let trainFeatures = new Matrix(index.trainIndex.length, X.columns);\n    let trainLabels = new Matrix(index.trainIndex.length, 1);\n    index.trainIndex.forEach((el, idx) => {\n      trainFeatures.setRow(idx, X.getRow(el));\n      trainLabels.setRow(idx, group.getRow(el));\n    });\n\n    return {\n      trainFeatures,\n      testFeatures,\n      trainLabels,\n      testLabels,\n    };\n  }\n}\n","'use strict';\n\nvar mlMatrix = require('ml-matrix');\n\nfunction logistic(val) {\n  return 1 / (1 + Math.exp(-val));\n}\n\nfunction expELU(val, param) {\n  return val < 0 ? param * (Math.exp(val) - 1) : val;\n}\n\nfunction softExponential(val, param) {\n  if (param < 0) {\n    return -Math.log(1 - param * (val + param)) / param;\n  }\n  if (param > 0) {\n    return ((Math.exp(param * val) - 1) / param) + param;\n  }\n  return val;\n}\n\nfunction softExponentialPrime(val, param) {\n  if (param < 0) {\n    return 1 / (1 - param * (param + val));\n  } else {\n    return Math.exp(param * val);\n  }\n}\n\nconst ACTIVATION_FUNCTIONS = {\n  tanh: {\n    activation: Math.tanh,\n    derivate: (val) => 1 - (val * val)\n  },\n  identity: {\n    activation: (val) => val,\n    derivate: () => 1\n  },\n  logistic: {\n    activation: logistic,\n    derivate: (val) => logistic(val) * (1 - logistic(val))\n  },\n  arctan: {\n    activation: Math.atan,\n    derivate: (val) => 1 / (val * val + 1)\n  },\n  softsign: {\n    activation: (val) => val / (1 + Math.abs(val)),\n    derivate: (val) => 1 / ((1 + Math.abs(val)) * (1 + Math.abs(val)))\n  },\n  relu: {\n    activation: (val) => (val < 0 ? 0 : val),\n    derivate: (val) => (val < 0 ? 0 : 1)\n  },\n  softplus: {\n    activation: (val) => Math.log(1 + Math.exp(val)),\n    derivate: (val) => 1 / (1 + Math.exp(-val))\n  },\n  bent: {\n    activation: (val) => ((Math.sqrt(val * val + 1) - 1) / 2) + val,\n    derivate: (val) => (val / (2 * Math.sqrt(val * val + 1))) + 1\n  },\n  sinusoid: {\n    activation: Math.sin,\n    derivate: Math.cos\n  },\n  sinc: {\n    activation: (val) => (val === 0 ? 1 : Math.sin(val) / val),\n    derivate: (val) => (val === 0 ? 0 : (Math.cos(val) / val) - (Math.sin(val) / (val * val)))\n  },\n  gaussian: {\n    activation: (val) => Math.exp(-(val * val)),\n    derivate: (val) => -2 * val * Math.exp(-(val * val))\n  },\n  'parametric-relu': {\n    activation: (val, param) => (val < 0 ? param * val : val),\n    derivate: (val, param) => (val < 0 ? param : 1)\n  },\n  'exponential-elu': {\n    activation: expELU,\n    derivate: (val, param) => (val < 0 ? expELU(val, param) + param : 1)\n  },\n  'soft-exponential': {\n    activation: softExponential,\n    derivate: softExponentialPrime\n  }\n};\n\nclass Layer {\n  /**\n     * @private\n     * Create a new layer with the given options\n     * @param {object} options\n     * @param {number} [options.inputSize] - Number of conections that enter the neurons.\n     * @param {number} [options.outputSize] - Number of conections that leave the neurons.\n     * @param {number} [options.regularization] - Regularization parameter.\n     * @param {number} [options.epsilon] - Learning rate parameter.\n     * @param {string} [options.activation] - Activation function parameter from the FeedForwardNeuralNetwork class.\n     * @param {number} [options.activationParam] - Activation parameter if needed.\n     */\n  constructor(options) {\n    this.inputSize = options.inputSize;\n    this.outputSize = options.outputSize;\n    this.regularization = options.regularization;\n    this.epsilon = options.epsilon;\n    this.activation = options.activation;\n    this.activationParam = options.activationParam;\n\n    var selectedFunction = ACTIVATION_FUNCTIONS[options.activation];\n    var params = selectedFunction.activation.length;\n\n    var actFunction = params > 1 ? (val) => selectedFunction.activation(val, options.activationParam) : selectedFunction.activation;\n    var derFunction = params > 1 ? (val) => selectedFunction.derivate(val, options.activationParam) : selectedFunction.derivate;\n\n    this.activationFunction = function (i, j) {\n      this.set(i, j, actFunction(this.get(i, j)));\n    };\n    this.derivate = function (i, j) {\n      this.set(i, j, derFunction(this.get(i, j)));\n    };\n\n    if (options.model) {\n      // load model\n      this.W = mlMatrix.Matrix.checkMatrix(options.W);\n      this.b = mlMatrix.Matrix.checkMatrix(options.b);\n    } else {\n      // default constructor\n      this.W = mlMatrix.Matrix.rand(this.inputSize, this.outputSize);\n      this.b = mlMatrix.Matrix.zeros(1, this.outputSize);\n\n      this.W.apply(function (i, j) {\n        this.set(i, j, this.get(i, j) / Math.sqrt(options.inputSize));\n      });\n    }\n  }\n\n  /**\n     * @private\n     * propagate the given input through the current layer.\n     * @param {Matrix} X - input.\n     * @return {Matrix} output at the current layer.\n     */\n  forward(X) {\n    var z = X.mmul(this.W).addRowVector(this.b);\n    z.apply(this.activationFunction);\n    this.a = z.clone();\n    return z;\n  }\n\n  /**\n     * @private\n     * apply backpropagation algorithm at the current layer\n     * @param {Matrix} delta - delta values estimated at the following layer.\n     * @param {Matrix} a - 'a' values from the following layer.\n     * @return {Matrix} the new delta values for the next layer.\n     */\n  backpropagation(delta, a) {\n    this.dW = a.transpose().mmul(delta);\n    this.db = mlMatrix.Matrix.rowVector(delta.sum('column'));\n\n    var aCopy = a.clone();\n    return delta.mmul(this.W.transpose()).mul(aCopy.apply(this.derivate));\n  }\n\n  /**\n     * @private\n     * Function that updates the weights at the current layer with the derivatives.\n     */\n  update() {\n    this.dW.add(this.W.clone().mul(this.regularization));\n    this.W.add(this.dW.mul(-this.epsilon));\n    this.b.add(this.db.mul(-this.epsilon));\n  }\n\n  /**\n     * @private\n     * Export the current layer to JSON.\n     * @return {object} model\n     */\n  toJSON() {\n    return {\n      model: 'Layer',\n      inputSize: this.inputSize,\n      outputSize: this.outputSize,\n      regularization: this.regularization,\n      epsilon: this.epsilon,\n      activation: this.activation,\n      W: this.W,\n      b: this.b\n    };\n  }\n\n  /**\n     * @private\n     * Creates a new Layer with the given model.\n     * @param {object} model\n     * @return {Layer}\n     */\n  static load(model) {\n    if (model.model !== 'Layer') {\n      throw new RangeError('the current model is not a Layer model');\n    }\n    return new Layer(model);\n  }\n}\n\nclass OutputLayer extends Layer {\n  constructor(options) {\n    super(options);\n\n    this.activationFunction = function (i, j) {\n      this.set(i, j, Math.exp(this.get(i, j)));\n    };\n  }\n\n  static load(model) {\n    if (model.model !== 'Layer') {\n      throw new RangeError('the current model is not a Layer model');\n    }\n\n    return new OutputLayer(model);\n  }\n}\n\nclass FeedForwardNeuralNetworks {\n  /**\n   * Create a new Feedforward neural network model.\n   * @class FeedForwardNeuralNetworks\n   * @param {object} [options]\n   * @param {Array} [options.hiddenLayers=[10]] - Array that contains the sizes of the hidden layers.\n   * @param {number} [options.iterations=50] - Number of iterations at the training step.\n   * @param {number} [options.learningRate=0.01] - Learning rate of the neural net (also known as epsilon).\n   * @param {number} [options.regularization=0.01] - Regularization parameter af the neural net.\n   * @param {string} [options.activation='tanh'] - activation function to be used. (options: 'tanh'(default),\n   * 'identity', 'logistic', 'arctan', 'softsign', 'relu', 'softplus', 'bent', 'sinusoid', 'sinc', 'gaussian').\n   * (single-parametric options: 'parametric-relu', 'exponential-relu', 'soft-exponential').\n   * @param {number} [options.activationParam=1] - if the selected activation function needs a parameter.\n   */\n  constructor(options) {\n    options = options || {};\n    if (options.model) {\n      // load network\n      this.hiddenLayers = options.hiddenLayers;\n      this.iterations = options.iterations;\n      this.learningRate = options.learningRate;\n      this.regularization = options.regularization;\n      this.dicts = options.dicts;\n      this.activation = options.activation;\n      this.activationParam = options.activationParam;\n      this.model = new Array(options.layers.length);\n\n      for (var i = 0; i < this.model.length - 1; ++i) {\n        this.model[i] = Layer.load(options.layers[i]);\n      }\n      this.model[this.model.length - 1] = OutputLayer.load(options.layers[this.model.length - 1]);\n    } else {\n      // default constructor\n      this.hiddenLayers = options.hiddenLayers || [10];\n      this.iterations = options.iterations || 50;\n\n      this.learningRate = options.learningRate || 0.01;\n      this.regularization = options.regularization || 0.01;\n\n      this.activation = options.activation || 'tanh';\n      this.activationParam = options.activationParam || 1;\n      if (!(this.activation in Object.keys(ACTIVATION_FUNCTIONS))) {\n        this.activation = 'tanh';\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Function that build and initialize the neural net.\n   * @param {number} inputSize - total of features to fit.\n   * @param {number} outputSize - total of labels of the prediction set.\n   */\n  buildNetwork(inputSize, outputSize) {\n    var size = 2 + (this.hiddenLayers.length - 1);\n    this.model = new Array(size);\n\n    // input layer\n    this.model[0] = new Layer({\n      inputSize: inputSize,\n      outputSize: this.hiddenLayers[0],\n      activation: this.activation,\n      activationParam: this.activationParam,\n      regularization: this.regularization,\n      epsilon: this.learningRate\n    });\n\n    // hidden layers\n    for (var i = 1; i < this.hiddenLayers.length; ++i) {\n      this.model[i] = new Layer({\n        inputSize: this.hiddenLayers[i - 1],\n        outputSize: this.hiddenLayers[i],\n        activation: this.activation,\n        activationParam: this.activationParam,\n        regularization: this.regularization,\n        epsilon: this.learningRate\n      });\n    }\n\n    // output layer\n    this.model[size - 1] = new OutputLayer({\n      inputSize: this.hiddenLayers[this.hiddenLayers.length - 1],\n      outputSize: outputSize,\n      activation: this.activation,\n      activationParam: this.activationParam,\n      regularization: this.regularization,\n      epsilon: this.learningRate\n    });\n  }\n\n  /**\n   * Train the neural net with the given features and labels.\n   * @param {Matrix|Array} features\n   * @param {Matrix|Array} labels\n   */\n  train(features, labels) {\n    features = mlMatrix.Matrix.checkMatrix(features);\n    this.dicts = dictOutputs(labels);\n\n    var inputSize = features.columns;\n    var outputSize = Object.keys(this.dicts.inputs).length;\n\n    if (!this.model) {\n      this.buildNetwork(inputSize, outputSize);\n    }\n\n    for (var i = 0; i < this.iterations; ++i) {\n      var probabilities = this.propagate(features);\n      this.backpropagation(features, labels, probabilities);\n    }\n  }\n\n  /**\n   * @private\n   * Propagate the input(training set) and retrives the probabilities of each class.\n   * @param {Matrix} X\n   * @return {Matrix} probabilities of each class.\n   */\n  propagate(X) {\n    var input = X;\n    for (var i = 0; i < this.model.length; ++i) {\n      input = this.model[i].forward(input);\n    }\n\n    // get probabilities\n    return input.divColumnVector(input.sum('row'));\n  }\n\n  /**\n   * @private\n   * Function that applies the backpropagation algorithm on each layer of the network\n   * in order to fit the features and labels.\n   * @param {Matrix} features\n   * @param {Array} labels\n   * @param {Matrix} probabilities - probabilities of each class of the feature set.\n   */\n  backpropagation(features, labels, probabilities) {\n    for (var i = 0; i < probabilities.rows; ++i) {\n      probabilities.set(i, this.dicts.inputs[labels[i]], probabilities.get(i, this.dicts.inputs[labels[i]]) - 1);\n    }\n\n    // remember, the last delta doesn't matter\n    var delta = probabilities;\n    for (i = this.model.length - 1; i >= 0; --i) {\n      var a = i > 0 ? this.model[i - 1].a : features;\n      delta = this.model[i].backpropagation(delta, a);\n    }\n\n    for (i = 0; i < this.model.length; ++i) {\n      this.model[i].update();\n    }\n  }\n\n  /**\n   * Predict the output given the feature set.\n   * @param {Array|Matrix} features\n   * @return {Array}\n   */\n  predict(features) {\n    features = mlMatrix.Matrix.checkMatrix(features);\n    var outputs = new Array(features.rows);\n    var probabilities = this.propagate(features);\n    for (var i = 0; i < features.rows; ++i) {\n      outputs[i] = this.dicts.outputs[probabilities.maxRowIndex(i)[1]];\n    }\n\n    return outputs;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} model\n   */\n  toJSON() {\n    var model = {\n      model: 'FNN',\n      hiddenLayers: this.hiddenLayers,\n      iterations: this.iterations,\n      learningRate: this.learningRate,\n      regularization: this.regularization,\n      activation: this.activation,\n      activationParam: this.activationParam,\n      dicts: this.dicts,\n      layers: new Array(this.model.length)\n    };\n\n    for (var i = 0; i < this.model.length; ++i) {\n      model.layers[i] = this.model[i].toJSON();\n    }\n\n    return model;\n  }\n\n  /**\n   * Load a Feedforward Neural Network with the current model.\n   * @param {object} model\n   * @return {FeedForwardNeuralNetworks}\n   */\n  static load(model) {\n    if (model.model !== 'FNN') {\n      throw new RangeError('the current model is not a feed forward network');\n    }\n\n    return new FeedForwardNeuralNetworks(model);\n  }\n}\n\n/**\n * @private\n * Method that given an array of labels(predictions), returns two dictionaries, one to transform from labels to\n * numbers and other in the reverse way\n * @param {Array} array\n * @return {object}\n */\nfunction dictOutputs(array) {\n  var inputs = {};\n  var outputs = {};\n  var index = 0;\n  for (var i = 0; i < array.length; i += 1) {\n    if (inputs[array[i]] === undefined) {\n      inputs[array[i]] = index;\n      outputs[index] = array[i];\n      index++;\n    }\n  }\n\n  return {\n    inputs: inputs,\n    outputs: outputs\n  };\n}\n\nmodule.exports = FeedForwardNeuralNetworks;\n","function NodeSquare(x, y, weights, som) {\n    this.x = x;\n    this.y = y;\n    this.weights = weights;\n    this.som = som;\n    this.neighbors = {};\n}\n\nNodeSquare.prototype.adjustWeights = function adjustWeights(target, learningRate, influence) {\n    for (var i = 0, ii = this.weights.length; i < ii; i++) {\n        this.weights[i] += learningRate * influence * (target[i] - this.weights[i]);\n    }\n};\n\nNodeSquare.prototype.getDistance = function getDistance(otherNode) {\n    return Math.max(Math.abs(this.x - otherNode.x), Math.abs(this.y - otherNode.y));\n};\n\nNodeSquare.prototype.getDistanceTorus = function getDistanceTorus(otherNode) {\n    var distX = Math.abs(this.x - otherNode.x),\n        distY = Math.abs(this.y - otherNode.y);\n    return Math.max(Math.min(distX, this.som.gridDim.x - distX), Math.min(distY, this.som.gridDim.y - distY));\n};\n\nNodeSquare.prototype.getNeighbors = function getNeighbors(xy) {\n    if (!this.neighbors[xy]) {\n        this.neighbors[xy] = new Array(2);\n\n        // left or bottom neighbor\n        var v;\n        if (this[xy] > 0) {\n            v = this[xy] - 1;\n        } else if (this.som.torus) {\n            v = this.som.gridDim[xy] - 1\n        }\n        if (typeof v !== 'undefined') {\n            var x, y;\n            if (xy === 'x') {\n                x = v;\n                y = this.y;\n            } else {\n                x = this.x;\n                y = v;\n            }\n            this.neighbors[xy][0] = this.som.nodes[x][y];\n        }\n\n        // top or right neighbor\n        var w;\n        if (this[xy] < (this.som.gridDim[xy] - 1)) {\n            w = this[xy] + 1;\n        } else if (this.som.torus) {\n            w = 0;\n        }\n        if (typeof w !== 'undefined') {\n            if (xy === 'x') {\n                x = w;\n                y = this.y;\n            } else {\n                x = this.x;\n                y = w;\n            }\n            this.neighbors[xy][1] = this.som.nodes[x][y];\n        }\n    }\n    return this.neighbors[xy];\n};\n\nNodeSquare.prototype.getPos = function getPos(xy, element) {\n    var neighbors = this.getNeighbors(xy),\n        distance = this.som.distance,\n        bestNeighbor,\n        direction;\n    if(neighbors[0]) {\n        if (neighbors[1]) {\n            var dist1 = distance(element, neighbors[0].weights),\n                dist2 = distance(element, neighbors[1].weights);\n            if(dist1 < dist2) {\n                bestNeighbor = neighbors[0];\n                direction = -1;\n            } else {\n                bestNeighbor = neighbors[1];\n                direction = 1;\n            }\n        } else {\n            bestNeighbor = neighbors[0];\n            direction = -1;\n        }\n    } else {\n        bestNeighbor = neighbors[1];\n        direction = 1;\n    }\n    var simA = 1 - distance(element, this.weights),\n        simB = 1 - distance(element, bestNeighbor.weights);\n    var factor = ((simA - simB) / (2 - simA - simB));\n    return 0.5 + 0.5 * factor * direction;\n};\n\nNodeSquare.prototype.getPosition = function getPosition(element) {\n    return [\n        this.getPos('x', element),\n        this.getPos('y', element)\n    ];\n};\n\nmodule.exports = NodeSquare;","var NodeSquare = require('./node-square');\n\nfunction NodeHexagonal(x, y, weights, som) {\n\n    NodeSquare.call(this, x, y, weights, som);\n\n    this.hX = x - Math.floor(y / 2);\n    this.z = 0 - this.hX - y;\n\n}\n\nNodeHexagonal.prototype = new NodeSquare;\nNodeHexagonal.prototype.constructor = NodeHexagonal;\n\nNodeHexagonal.prototype.getDistance = function getDistanceHexagonal(otherNode) {\n    return Math.max(Math.abs(this.hX - otherNode.hX), Math.abs(this.y - otherNode.y), Math.abs(this.z - otherNode.z));\n};\n\nNodeHexagonal.prototype.getDistanceTorus = function getDistanceTorus(otherNode) {\n    var distX = Math.abs(this.hX - otherNode.hX),\n        distY = Math.abs(this.y - otherNode.y),\n        distZ = Math.abs(this.z - otherNode.z);\n    return Math.max(Math.min(distX, this.som.gridDim.x - distX), Math.min(distY, this.som.gridDim.y - distY), Math.min(distZ, this.som.gridDim.z - distZ));\n};\n\nNodeHexagonal.prototype.getPosition = function getPosition() {\n    throw new Error('Unimplemented : cannot get position of the points for hexagonal grid');\n};\n\nmodule.exports = NodeHexagonal;","'use strict';\n\nvar NodeSquare = require('./node-square'),\n    NodeHexagonal = require('./node-hexagonal');\n\nvar defaultOptions = {\n    fields: 3,\n    randomizer: Math.random,\n    distance: squareEuclidean,\n    iterations: 10,\n    learningRate: 0.1,\n    gridType: 'rect',\n    torus: true,\n    method: 'random'\n};\n\nfunction SOM(x, y, options, reload) {\n\n    this.x = x;\n    this.y = y;\n\n    options = options || {};\n    this.options = {};\n    for (var i in defaultOptions) {\n        if (options.hasOwnProperty(i)) {\n            this.options[i] = options[i];\n        } else {\n            this.options[i] = defaultOptions[i];\n        }\n    }\n\n    if (typeof this.options.fields === 'number') {\n        this.numWeights = this.options.fields;\n    } else if (Array.isArray(this.options.fields)) {\n        this.numWeights = this.options.fields.length;\n        var converters = getConverters(this.options.fields);\n        this.extractor = converters.extractor;\n        this.creator = converters.creator;\n    } else {\n        throw new Error('Invalid fields definition');\n    }\n\n    if (this.options.gridType === 'rect') {\n        this.nodeType = NodeSquare;\n        this.gridDim = {\n            x: x,\n            y: y\n        };\n    } else {\n        this.nodeType = NodeHexagonal;\n        var hx = this.x - Math.floor(this.y / 2);\n        this.gridDim = {\n            x: hx,\n            y: this.y,\n            z: -(0 - hx - this.y)\n        };\n    }\n\n    this.torus = this.options.torus;\n    this.distanceMethod = this.torus ? 'getDistanceTorus' : 'getDistance';\n\n    this.distance = this.options.distance;\n\n    this.maxDistance = getMaxDistance(this.distance, this.numWeights);\n\n    if (reload === true) { // For model loading\n        this.done = true;\n        return;\n    }\n    if (!(x > 0 && y > 0)) {\n        throw new Error('x and y must be positive');\n    }\n\n    this.times = {\n        findBMU: 0,\n        adjust: 0\n    };\n\n    this.randomizer = this.options.randomizer;\n\n    this.iterationCount = 0;\n    this.iterations = this.options.iterations;\n\n    this.startLearningRate = this.learningRate = this.options.learningRate;\n\n    this.mapRadius = Math.floor(Math.max(x, y) / 2);\n\n    this.algorithmMethod = this.options.method;\n\n    this._initNodes();\n\n    this.done = false;\n}\n\nSOM.load = function loadModel(model, distance) {\n    if (model.name === 'SOM') {\n        var x = model.data.length,\n            y = model.data[0].length;\n        if (distance) {\n            model.options.distance = distance;\n        } else if (model.options.distance) {\n            model.options.distance = eval('(' + model.options.distance + ')');\n        }\n        var som = new SOM(x, y, model.options, true);\n        som.nodes = new Array(x);\n        for (var i = 0; i < x; i++) {\n            som.nodes[i] = new Array(y);\n            for (var j = 0; j < y; j++) {\n                som.nodes[i][j] = new som.nodeType(i, j, model.data[i][j], som);\n            }\n        }\n        return som;\n    } else {\n        throw new Error('expecting a SOM model');\n    }\n};\n\nSOM.prototype.export = function exportModel(includeDistance) {\n    if (!this.done) {\n        throw new Error('model is not ready yet');\n    }\n    var model = {\n        name: 'SOM'\n    };\n    model.options = {\n        fields: this.options.fields,\n        gridType: this.options.gridType,\n        torus: this.options.torus\n    };\n    model.data = new Array(this.x);\n    for (var i = 0; i < this.x; i++) {\n        model.data[i] = new Array(this.y);\n        for (var j = 0; j < this.y; j++) {\n            model.data[i][j] = this.nodes[i][j].weights;\n        }\n    }\n    if (includeDistance) {\n        model.options.distance = this.distance.toString();\n    }\n    return model;\n};\n\nSOM.prototype._initNodes = function initNodes() {\n    var now = Date.now(),\n        i, j, k;\n    this.nodes = new Array(this.x);\n    for (i = 0; i < this.x; i++) {\n        this.nodes[i] = new Array(this.y);\n        for (j = 0; j < this.y; j++) {\n            var weights = new Array(this.numWeights);\n            for (k = 0; k < this.numWeights; k++) {\n                weights[k] = this.randomizer();\n            }\n            this.nodes[i][j] = new this.nodeType(i, j, weights, this);\n        }\n    }\n    this.times.initNodes = Date.now() - now;\n};\n\nSOM.prototype.setTraining = function setTraining(trainingSet) {\n    if (this.trainingSet) {\n        throw new Error('training set has already been set');\n    }\n    var now = Date.now();\n    var convertedSet = trainingSet;\n    var i, l = trainingSet.length;\n    if (this.extractor) {\n        convertedSet = new Array(l);\n        for (i = 0; i < l; i++) {\n            convertedSet[i] = this.extractor(trainingSet[i]);\n        }\n    }\n    this.numIterations = this.iterations * l;\n\n    if (this.algorithmMethod === 'random') {\n        this.timeConstant = this.numIterations / Math.log(this.mapRadius);\n    } else {\n        this.timeConstant = l / Math.log(this.mapRadius);\n    }\n    this.trainingSet = convertedSet;\n    this.times.setTraining = Date.now() - now;\n};\n\nSOM.prototype.trainOne = function trainOne() {\n    if (this.done) {\n\n        return false;\n\n    } else if (this.numIterations-- > 0) {\n\n        var neighbourhoodRadius,\n            trainingValue,\n            trainingSetFactor;\n\n        if (this.algorithmMethod === 'random') { // Pick a random value of the training set at each step\n            neighbourhoodRadius = this.mapRadius * Math.exp(-this.iterationCount / this.timeConstant);\n            trainingValue = getRandomValue(this.trainingSet, this.randomizer);\n            this._adjust(trainingValue, neighbourhoodRadius);\n            this.learningRate = this.startLearningRate * Math.exp(-this.iterationCount / this.numIterations);\n        } else { // Get next input vector\n            trainingSetFactor = -Math.floor(this.iterationCount / this.trainingSet.length);\n            neighbourhoodRadius = this.mapRadius * Math.exp(trainingSetFactor / this.timeConstant);\n            trainingValue = this.trainingSet[this.iterationCount % this.trainingSet.length];\n            this._adjust(trainingValue, neighbourhoodRadius);\n            if (((this.iterationCount + 1) % this.trainingSet.length) === 0) {\n                this.learningRate = this.startLearningRate * Math.exp(trainingSetFactor / Math.floor(this.numIterations / this.trainingSet.length));\n            }\n        }\n\n        this.iterationCount++;\n\n        return true;\n\n    } else {\n\n        this.done = true;\n        return false;\n\n    }\n};\n\nSOM.prototype._adjust = function adjust(trainingValue, neighbourhoodRadius) {\n    var now = Date.now(),\n        x, y, dist, influence;\n\n    var bmu = this._findBestMatchingUnit(trainingValue);\n\n    var now2 = Date.now();\n    this.times.findBMU += now2 - now;\n\n    var radiusLimit = Math.floor(neighbourhoodRadius);\n    var xMin = bmu.x - radiusLimit,\n        xMax = bmu.x + radiusLimit,\n        yMin = bmu.y - radiusLimit,\n        yMax = bmu.y + radiusLimit;\n\n    for (x = xMin; x <= xMax; x++) {\n        var theX = x;\n        if (x < 0) {\n            theX += this.x;\n        } else if (x >= this.x) {\n            theX -= this.x;\n        }\n        for (y = yMin; y <= yMax; y++) {\n            var theY = y;\n            if (y < 0) {\n                theY += this.y;\n            } else if (y >= this.y) {\n                theY -= this.y;\n            }\n\n            dist = bmu[this.distanceMethod](this.nodes[theX][theY]);\n\n            if (dist < neighbourhoodRadius) {\n                influence = Math.exp(-dist / (2 * neighbourhoodRadius));\n                this.nodes[theX][theY].adjustWeights(trainingValue, this.learningRate, influence);\n            }\n\n        }\n    }\n\n    this.times.adjust += (Date.now() - now2);\n\n};\n\nSOM.prototype.train = function train(trainingSet) {\n    if (!this.done) {\n        this.setTraining(trainingSet);\n        while (this.trainOne()) {\n        }\n    }\n};\n\nSOM.prototype.getConvertedNodes = function getConvertedNodes() {\n    var result = new Array(this.x);\n    for (var i = 0; i < this.x; i++) {\n        result[i] = new Array(this.y);\n        for (var j = 0; j < this.y; j++) {\n            var node = this.nodes[i][j];\n            result[i][j] = this.creator ? this.creator(node.weights) : node.weights;\n        }\n    }\n    return result;\n};\n\nSOM.prototype._findBestMatchingUnit = function findBestMatchingUnit(candidate) {\n\n    var bmu,\n        lowest = Infinity,\n        dist;\n\n    for (var i = 0; i < this.x; i++) {\n        for (var j = 0; j < this.y; j++) {\n            dist = this.distance(this.nodes[i][j].weights, candidate);\n            if (dist < lowest) {\n                lowest = dist;\n                bmu = this.nodes[i][j];\n            }\n        }\n    }\n\n    return bmu;\n\n};\n\nSOM.prototype.predict = function predict(data, computePosition) {\n    if (typeof data === 'boolean') {\n        computePosition = data;\n        data = null;\n    }\n    if (!data) {\n        data = this.trainingSet;\n    }\n    if (Array.isArray(data) && (Array.isArray(data[0]) || (typeof data[0] === 'object'))) { // predict a dataset\n        var self = this;\n        return data.map(function (element) {\n            return self._predict(element, computePosition);\n        });\n    } else { // predict a single element\n        return this._predict(data, computePosition);\n    }\n};\n\nSOM.prototype._predict = function _predict(element, computePosition) {\n    if (!Array.isArray(element)) {\n        element = this.extractor(element);\n    }\n    var bmu = this._findBestMatchingUnit(element);\n    var result = [bmu.x, bmu.y];\n    if (computePosition) {\n        result[2] = bmu.getPosition(element);\n    }\n    return result;\n};\n\n// As seen in http://www.scholarpedia.org/article/Kohonen_network\nSOM.prototype.getQuantizationError = function getQuantizationError() {\n    var fit = this.getFit(),\n        l = fit.length,\n        sum = 0;\n    for (var i = 0; i < l; i++) {\n        sum += fit[i];\n    }\n    return sum / l;\n};\n\nSOM.prototype.getFit = function getFit(dataset) {\n    if (!dataset) {\n        dataset = this.trainingSet;\n    }\n    var l = dataset.length,\n        bmu,\n        result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        bmu = this._findBestMatchingUnit(dataset[i]);\n        result[i] = Math.sqrt(this.distance(dataset[i], bmu.weights));\n    }\n    return result;\n};\n\nfunction getConverters(fields) {\n    var l = fields.length,\n        normalizers = new Array(l),\n        denormalizers = new Array(l);\n    for (var i = 0; i < l; i++) {\n        normalizers[i] = getNormalizer(fields[i].range);\n        denormalizers[i] = getDenormalizer(fields[i].range);\n    }\n    return {\n        extractor: function extractor(value) {\n            var result = new Array(l);\n            for (var i = 0; i < l; i++) {\n                result[i] = normalizers[i](value[fields[i].name]);\n            }\n            return result;\n        },\n        creator: function creator(value) {\n            var result = {};\n            for (var i = 0; i < l; i++) {\n                result[fields[i].name] = denormalizers[i](value[i]);\n            }\n            return result;\n        }\n    };\n}\n\nfunction getNormalizer(minMax) {\n    return function normalizer(value) {\n        return (value - minMax[0]) / (minMax[1] - minMax[0]);\n    };\n}\n\nfunction getDenormalizer(minMax) {\n    return function denormalizer(value) {\n        return (minMax[0] + value * (minMax[1] - minMax[0]));\n    };\n}\n\nfunction squareEuclidean(a, b) {\n    var d = 0;\n    for (var i = 0, ii = a.length; i < ii; i++) {\n        d += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return d;\n}\n\nfunction getRandomValue(arr, randomizer) {\n    return arr[Math.floor(randomizer() * arr.length)];\n}\n\nfunction getMaxDistance(distance, numWeights) {\n    var zero = new Array(numWeights),\n        one = new Array(numWeights);\n    for (var i = 0; i < numWeights; i++) {\n        zero[i] = 0;\n        one[i] = 1;\n    }\n    return distance(zero, one);\n}\n\nmodule.exports = SOM;","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport { Matrix, MatrixTransposeView, solve } from 'ml-matrix';\n\nexport default class PolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y, degree);\n    }\n  }\n\n  _predict(x) {\n    let y = 0;\n    for (let k = 0; k < this.powers.length; k++) {\n      y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n    }\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: 'polynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients\n    };\n  }\n\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str =\n              `${maybeToPrecision(this.coefficients[k], precision) + times}x`;\n          } else {\n            str =\n              `${maybeToPrecision(this.coefficients[k], precision) +\n              times\n              }x${\n                sup\n              }${this.powers[k]\n              }${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'polynomialRegression') {\n      throw new TypeError('not a polynomial regression model');\n    }\n    return new PolynomialRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y, degree) {\n  const n = x.length;\n  let powers;\n  if (Array.isArray(degree)) {\n    powers = degree;\n    degree = powers.length;\n  } else {\n    degree++;\n    powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n      powers[k] = k;\n    }\n  }\n  const F = new Matrix(n, degree);\n  const Y = new Matrix([y]);\n  for (let k = 0; k < degree; k++) {\n    for (let i = 0; i < n; i++) {\n      if (powers[k] === 0) {\n        F.set(i, k, 1);\n      } else {\n        F.set(i, k, Math.pow(x[i], powers[k]));\n      }\n    }\n  }\n\n  const FT = new MatrixTransposeView(F);\n  const A = FT.mmul(F);\n  const B = FT.mmul(new MatrixTransposeView(Y));\n\n  pr.degree = degree - 1;\n  pr.powers = powers;\n  pr.coefficients = solve(A, B).to1DArray();\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class ExponentialRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.A = y.A;\n      this.B = y.B;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  _predict(input) {\n    return this.B * Math.exp(input * this.A);\n  }\n\n  toJSON() {\n    return {\n      name: 'exponentialRegression',\n      A: this.A,\n      B: this.B\n    };\n  }\n\n  toString(precision) {\n    return (\n      `f(x) = ${\n        maybeToPrecision(this.B, precision)\n      } * e^(${\n        maybeToPrecision(this.A, precision)\n      } * x)`\n    );\n  }\n\n  toLaTeX(precision) {\n    if (this.A >= 0) {\n      return (\n        `f(x) = ${\n          maybeToPrecision(this.B, precision)\n        }e^{${\n          maybeToPrecision(this.A, precision)\n        }x}`\n      );\n    } else {\n      return (\n        `f(x) = \\\\frac{${\n          maybeToPrecision(this.B, precision)\n        }}{e^{${\n          maybeToPrecision(-this.A, precision)\n        }x}}`\n      );\n    }\n  }\n\n  static load(json) {\n    if (json.name !== 'exponentialRegression') {\n      throw new TypeError('not a exponential regression model');\n    }\n    return new ExponentialRegression(true, json);\n  }\n}\n\nfunction regress(er, x, y) {\n  const n = x.length;\n  const yl = new Array(n);\n  for (let i = 0; i < n; i++) {\n    yl[i] = Math.log(y[i]);\n  }\n\n  const linear = new SimpleLinearRegression(x, yl);\n  er.A = linear.slope;\n  er.B = Math.exp(linear.intercept);\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class PowerRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      // reloading model\n      this.A = y.A;\n      this.B = y.B;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  _predict(newInputs) {\n    return this.A * Math.pow(newInputs, this.B);\n  }\n\n  toJSON() {\n    return {\n      name: 'powerRegression',\n      A: this.A,\n      B: this.B\n    };\n  }\n\n  toString(precision) {\n    return `f(x) = ${maybeToPrecision(\n      this.A,\n      precision\n    )} * x^${maybeToPrecision(this.B, precision)}`;\n  }\n\n  toLaTeX(precision) {\n    let latex = '';\n    if (this.B >= 0) {\n      latex = `f(x) = ${maybeToPrecision(\n        this.A,\n        precision\n      )}x^{${maybeToPrecision(this.B, precision)}}`;\n    } else {\n      latex = `f(x) = \\\\frac{${maybeToPrecision(\n        this.A,\n        precision\n      )}}{x^{${maybeToPrecision(-this.B, precision)}}}`;\n    }\n    latex = latex.replace(/e([+-]?[0-9]+)/g, 'e^{$1}');\n    return latex;\n  }\n\n  static load(json) {\n    if (json.name !== 'powerRegression') {\n      throw new TypeError('not a power regression model');\n    }\n    return new PowerRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y) {\n  const n = x.length;\n  const xl = new Array(n);\n  const yl = new Array(n);\n  for (let i = 0; i < n; i++) {\n    xl[i] = Math.log(x[i]);\n    yl[i] = Math.log(y[i]);\n  }\n\n  const linear = new SimpleLinearRegression(xl, yl);\n  pr.A = Math.exp(linear.intercept);\n  pr.B = linear.slope;\n}\n","import Matrix, { SVD, pseudoInverse } from 'ml-matrix';\n\nexport default class MultivariateLinearRegression {\n  constructor(x, y, options = {}) {\n    const { intercept = true, statistics = true } = options;\n    this.statistics = statistics;\n    if (x === true) {\n      this.weights = y.weights;\n      this.inputs = y.inputs;\n      this.outputs = y.outputs;\n      this.intercept = y.intercept;\n    } else {\n      x = new Matrix(x);\n      y = new Matrix(y);\n      if (intercept) {\n        x.addColumn(new Array(x.rows).fill(1));\n      }\n      let xt = x.transpose();\n      const xx = xt\n        .mmul(x);\n      const xy = xt\n        .mmul(y);\n      const invxx = new SVD(xx)\n        .inverse();\n      const beta = xy\n        .transpose()\n        .mmul(invxx)\n        .transpose();\n      this.weights = beta.to2DArray();\n      this.inputs = x.columns;\n      this.outputs = y.columns;\n      if (intercept) this.inputs--;\n      this.intercept = intercept;\n      if (statistics) {\n        /*\n         * Let's add some basic statistics about the beta's to be able to interpret them.\n         * source: http://dept.stat.lsa.umich.edu/~kshedden/Courses/Stat401/Notes/401-multreg.pdf\n         * validated against Excel Regression AddIn\n         * test: \"datamining statistics test\"\n         */\n        const fittedValues = x.mmul(beta);\n        const residuals = y.clone().addM(fittedValues.neg());\n        const variance =\n          residuals\n            .to2DArray()\n            .map((ri) => Math.pow(ri[0], 2))\n            .reduce((a, b) => a + b) /\n          (y.rows - x.columns);\n        this.stdError = Math.sqrt(variance);\n        this.stdErrorMatrix = pseudoInverse(xx).mul(variance);\n        this.stdErrors = this.stdErrorMatrix\n          .diagonal()\n          .map((d) => Math.sqrt(d));\n        this.tStats = this.weights.map((d, i) =>\n          (this.stdErrors[i] === 0 ? 0 : d[0] / this.stdErrors[i])\n        );\n      }\n    }\n  }\n\n  predict(x) {\n    if (Array.isArray(x)) {\n      if (typeof x[0] === 'number') {\n        return this._predict(x);\n      } else if (Array.isArray(x[0])) {\n        const y = new Array(x.length);\n        for (let i = 0; i < x.length; i++) {\n          y[i] = this._predict(x[i]);\n        }\n        return y;\n      }\n    } else if (Matrix.isMatrix(x)) {\n      const y = new Matrix(x.rows, this.outputs);\n      for (let i = 0; i < x.rows; i++) {\n        y.setRow(i, this._predict(x.getRow(i)));\n      }\n      return y;\n    }\n    throw new TypeError('x must be a matrix or array of numbers');\n  }\n\n  _predict(x) {\n    const result = new Array(this.outputs);\n    if (this.intercept) {\n      for (let i = 0; i < this.outputs; i++) {\n        result[i] = this.weights[this.inputs][i];\n      }\n    } else {\n      result.fill(0);\n    }\n    for (let i = 0; i < this.inputs; i++) {\n      for (let j = 0; j < this.outputs; j++) {\n        result[j] += this.weights[i][j] * x[i];\n      }\n    }\n    return result;\n  }\n\n  score() {\n    throw new Error('score method is not implemented yet');\n  }\n\n  toJSON() {\n    return {\n      name: 'multivariateLinearRegression',\n      weights: this.weights,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      intercept: this.intercept,\n      summary: this.statistics\n        ? {\n          regressionStatistics: {\n            standardError: this.stdError,\n            observations: this.outputs\n          },\n          variables: this.weights.map((d, i) => {\n            return {\n              label:\n                  i === this.weights.length - 1\n                    ? 'Intercept'\n                    : `X Variable ${i + 1}`,\n              coefficients: d,\n              standardError: this.stdErrors[i],\n              tStat: this.tStats[i]\n            };\n          })\n        }\n        : undefined\n    };\n  }\n\n  static load(model) {\n    if (model.name !== 'multivariateLinearRegression') {\n      throw new Error('not a MLR model');\n    }\n    return new MultivariateLinearRegression(true, model);\n  }\n}\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass GaussianKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.divisor = 2 * options.sigma * options.sigma;\n  }\n  compute(x, y) {\n    const distance = squaredEuclidean(x, y);\n    return Math.exp(-distance / this.divisor);\n  }\n}\n\nmodule.exports = GaussianKernel;\n","'use strict';\n\nconst defaultOptions = {\n  degree: 1,\n  constant: 1,\n  scale: 1\n};\n\nclass PolynomialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    this.degree = options.degree;\n    this.constant = options.constant;\n    this.scale = options.scale;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n    return Math.pow(this.scale * sum + this.constant, this.degree);\n  }\n}\n\nmodule.exports = PolynomialKernel;\n","'use strict';\n\nconst defaultOptions = {\n  alpha: 0.01,\n  constant: -Math.E\n};\n\nclass SigmoidKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.alpha = options.alpha;\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n    return Math.tanh(this.alpha * sum + this.constant);\n  }\n}\n\nmodule.exports = SigmoidKernel;\n","'use strict';\n\nconst defaultOptions = {\n  sigma: 1,\n  degree: 1\n};\n\nclass ANOVAKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.degree = options.degree;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    var len = Math.min(x.length, y.length);\n    for (var i = 1; i <= len; ++i) {\n      sum += Math.pow(\n        Math.exp(\n          -this.sigma *\n            Math.pow(Math.pow(x[i - 1], i) - Math.pow(y[i - 1], i), 2)\n        ),\n        this.degree\n      );\n    }\n    return sum;\n  }\n}\n\nmodule.exports = ANOVAKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass CauchyKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n  }\n\n  compute(x, y) {\n    return 1 / (1 + squaredEuclidean(x, y) / (this.sigma * this.sigma));\n  }\n}\n\nmodule.exports = CauchyKernel;\n","'use strict';\n\nconst { euclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass ExponentialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.divisor = 2 * options.sigma * options.sigma;\n  }\n\n  compute(x, y) {\n    const distance = euclidean(x, y);\n    return Math.exp(-distance / this.divisor);\n  }\n}\n\nmodule.exports = ExponentialKernel;\n","'use strict';\n\nclass HistogramIntersectionKernel {\n  compute(x, y) {\n    var min = Math.min(x.length, y.length);\n    var sum = 0;\n    for (var i = 0; i < min; ++i) {\n      sum += Math.min(x[i], y[i]);\n    }\n\n    return sum;\n  }\n}\n\nmodule.exports = HistogramIntersectionKernel;\n","'use strict';\n\nconst { euclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass LaplacianKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n  }\n\n  compute(x, y) {\n    const distance = euclidean(x, y);\n    return Math.exp(-distance / this.sigma);\n  }\n}\n\nmodule.exports = LaplacianKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  constant: 1\n};\n\nclass MultiquadraticKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    return Math.sqrt(squaredEuclidean(x, y) + this.constant * this.constant);\n  }\n}\n\nmodule.exports = MultiquadraticKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  constant: 1\n};\n\nclass RationalQuadraticKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    const distance = squaredEuclidean(x, y);\n    return 1 - distance / (distance + this.constant);\n  }\n}\n\nmodule.exports = RationalQuadraticKernel;\n","'use strict';\n\nconst { Matrix, MatrixTransposeView } = require('ml-matrix');\nconst GaussianKernel = require('ml-kernel-gaussian');\nconst PolynomialKernel = require('ml-kernel-polynomial');\nconst SigmoidKernel = require('ml-kernel-sigmoid');\n\nconst ANOVAKernel = require('./kernels/anova-kernel');\nconst CauchyKernel = require('./kernels/cauchy-kernel');\nconst ExponentialKernel = require('./kernels/exponential-kernel');\nconst HistogramKernel = require('./kernels/histogram-intersection-kernel');\nconst LaplacianKernel = require('./kernels/laplacian-kernel');\nconst MultiquadraticKernel = require('./kernels/multiquadratic-kernel');\nconst RationalKernel = require('./kernels/rational-quadratic-kernel');\n\nconst kernelType = {\n  gaussian: GaussianKernel,\n  rbf: GaussianKernel,\n  polynomial: PolynomialKernel,\n  poly: PolynomialKernel,\n  anova: ANOVAKernel,\n  cauchy: CauchyKernel,\n  exponential: ExponentialKernel,\n  histogram: HistogramKernel,\n  min: HistogramKernel,\n  laplacian: LaplacianKernel,\n  multiquadratic: MultiquadraticKernel,\n  rational: RationalKernel,\n  sigmoid: SigmoidKernel,\n  mlp: SigmoidKernel\n};\n\nclass Kernel {\n  constructor(type, options) {\n    this.kernelType = type;\n    if (type === 'linear') return;\n\n    if (typeof type === 'string') {\n      type = type.toLowerCase();\n\n      var KernelConstructor = kernelType[type];\n      if (KernelConstructor) {\n        this.kernelFunction = new KernelConstructor(options);\n      } else {\n        throw new Error(`unsupported kernel type: ${type}`);\n      }\n    } else if (typeof type === 'object' && typeof type.compute === 'function') {\n      this.kernelFunction = type;\n    } else {\n      throw new TypeError(\n        'first argument must be a valid kernel type or instance'\n      );\n    }\n  }\n\n  compute(inputs, landmarks) {\n    inputs = Matrix.checkMatrix(inputs);\n    if (landmarks === undefined) {\n      landmarks = inputs;\n    } else {\n      landmarks = Matrix.checkMatrix(landmarks);\n    }\n    if (this.kernelType === 'linear') {\n      return inputs.mmul(new MatrixTransposeView(landmarks));\n    }\n\n    const kernelMatrix = new Matrix(inputs.rows, landmarks.rows);\n    if (inputs === landmarks) {\n      // fast path, matrix is symmetric\n      for (let i = 0; i < inputs.rows; i++) {\n        for (let j = i; j < inputs.rows; j++) {\n          const value = this.kernelFunction.compute(\n            inputs.getRow(i),\n            inputs.getRow(j)\n          );\n          kernelMatrix.set(i, j, value);\n          kernelMatrix.set(j, i, value);\n        }\n      }\n    } else {\n      for (let i = 0; i < inputs.rows; i++) {\n        for (let j = 0; j < landmarks.rows; j++) {\n          kernelMatrix.set(\n            i,\n            j,\n            this.kernelFunction.compute(inputs.getRow(i), landmarks.getRow(j))\n          );\n        }\n      }\n    }\n    return kernelMatrix;\n  }\n}\n\nmodule.exports = Kernel;\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport median from 'ml-array-median';\n\nexport default class TheilSenRegression extends BaseRegression {\n  /**\n   * Theil–Sen estimator\n   * https://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator\n   * @param {Array<number>|boolean} x\n   * @param {Array<number>|object} y\n   * @constructor\n   */\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      // loads the model\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = y.coefficients;\n    } else {\n      // creates the model\n      checkArrayLength(x, y);\n      theilSen(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'TheilSenRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(input) {\n    return this.slope * input + this.intercept;\n  }\n\n  computeX(input) {\n    return (input - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    var result = 'f(x) = ';\n    if (this.slope) {\n      var xFactor = maybeToPrecision(this.slope, precision);\n      result += `${Math.abs(xFactor - 1) < 1e-5 ? '' : `${xFactor} * `}x`;\n      if (this.intercept) {\n        var absIntercept = Math.abs(this.intercept);\n        var operator = absIntercept === this.intercept ? '+' : '-';\n        result +=\n          ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'TheilSenRegression') {\n      throw new TypeError('not a Theil-Sen model');\n    }\n    return new TheilSenRegression(true, json);\n  }\n}\n\nfunction theilSen(regression, x, y) {\n  let len = x.length;\n  let slopes = new Array(len * len);\n  let count = 0;\n  for (let i = 0; i < len; ++i) {\n    for (let j = i + 1; j < len; ++j) {\n      if (x[i] !== x[j]) {\n        slopes[count++] = (y[j] - y[i]) / (x[j] - x[i]);\n      }\n    }\n  }\n  slopes.length = count;\n  let medianSlope = median(slopes);\n\n  let cuts = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    cuts[i] = y[i] - medianSlope * x[i];\n  }\n\n  regression.slope = medianSlope;\n  regression.intercept = median(cuts);\n  regression.coefficients = [regression.intercept, regression.slope];\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport { solve } from 'ml-matrix';\n\n/**\n * @class RobustPolynomialRegression\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} degree - polynomial degree\n */\nexport default class RobustPolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      robustPolynomial(this, x, y, degree);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'robustPolynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients\n    };\n  }\n\n  _predict(x) {\n    return predict(x, this.powers, this.coefficients);\n  }\n\n  /**\n   * Display the formula\n   * @param {number} precision - precision for the numbers\n   * @return {string}\n   */\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  /**\n   * Display the formula in LaTeX format\n   * @param {number} precision - precision for the numbers\n   * @return {string}\n   */\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x`;\n          } else {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x${sup}${this.powers[k]}${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'robustPolynomialRegression') {\n      throw new TypeError('not a RobustPolynomialRegression model');\n    }\n    return new RobustPolynomialRegression(true, json);\n  }\n}\n\nfunction robustPolynomial(regression, x, y, degree) {\n  let powers = Array(degree)\n    .fill(0)\n    .map((_, index) => index);\n\n  const tuples = getRandomTuples(x, y, degree);\n\n  var min;\n  for (var i = 0; i < tuples.length; i++) {\n    var tuple = tuples[i];\n    var coefficients = calcCoefficients(tuple, powers);\n\n    var residuals = x.slice();\n    for (var j = 0; j < x.length; j++) {\n      residuals[j] = y[j] - predict(x[j], powers, coefficients);\n      residuals[j] = {\n        residual: residuals[j] * residuals[j],\n        coefficients\n      };\n    }\n\n    var median = residualsMedian(residuals);\n    if (!min || median.residual < min.residual) {\n      min = median;\n    }\n  }\n\n  regression.degree = degree;\n  regression.powers = powers;\n  regression.coefficients = min.coefficients;\n}\n\n/**\n * @ignore\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} degree\n * @return {Array<{x:number,y:number}>}\n */\nfunction getRandomTuples(x, y, degree) {\n  var len = Math.floor(x.length / degree);\n  var tuples = new Array(len);\n\n  for (var i = 0; i < x.length; i++) {\n    var pos = Math.floor(Math.random() * len);\n\n    var counter = 0;\n    while (counter < x.length) {\n      if (!tuples[pos]) {\n        tuples[pos] = [\n          {\n            x: x[i],\n            y: y[i]\n          }\n        ];\n        break;\n      } else if (tuples[pos].length < degree) {\n        tuples[pos].push({\n          x: x[i],\n          y: y[i]\n        });\n        break;\n      } else {\n        counter++;\n        pos = (pos + 1) % len;\n      }\n    }\n\n    if (counter === x.length) {\n      return tuples;\n    }\n  }\n  return tuples;\n}\n\n/**\n * @ignore\n * @param {{x:number,y:number}} tuple\n * @param {Array<number>} powers\n * @return {Array<number>}\n */\nfunction calcCoefficients(tuple, powers) {\n  var X = tuple.slice();\n  var Y = tuple.slice();\n  for (var i = 0; i < X.length; i++) {\n    Y[i] = [tuple[i].y];\n    X[i] = new Array(powers.length);\n    for (var j = 0; j < powers.length; j++) {\n      X[i][j] = Math.pow(tuple[i].x, powers[j]);\n    }\n  }\n\n  return solve(X, Y).to1DArray();\n}\n\nfunction predict(x, powers, coefficients) {\n  let y = 0;\n  for (let k = 0; k < powers.length; k++) {\n    y += coefficients[k] * Math.pow(x, powers[k]);\n  }\n  return y;\n}\n\nfunction residualsMedian(residuals) {\n  residuals.sort((a, b) => a.residual - b.residual);\n\n  var l = residuals.length;\n  var half = Math.floor(l / 2);\n  return l % 2 === 0 ? residuals[half - 1] : residuals[half];\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","/**\n * Calculate current error\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} parameters - Array of current parameter values\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {number}\n */\nexport default function errorCalculation(\n  data,\n  parameters,\n  parameterizedFunction,\n) {\n  let error = 0;\n  const func = parameterizedFunction(parameters);\n\n  for (let i = 0; i < data.x.length; i++) {\n    error += Math.abs(data.y[i] - func(data.x[i]));\n  }\n\n  return error;\n}\n","import { inverse, Matrix } from 'ml-matrix';\n\n/**\n * Difference of the matrix function over the parameters\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} paramFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Matrix}\n */\nfunction gradientFunction(\n  data,\n  evaluatedData,\n  params,\n  gradientDifference,\n  paramFunction,\n) {\n  const n = params.length;\n  const m = data.x.length;\n\n  let ans = new Array(n);\n\n  for (let param = 0; param < n; param++) {\n    ans[param] = new Array(m);\n    let auxParams = params.slice();\n    auxParams[param] += gradientDifference;\n    let funcParam = paramFunction(auxParams);\n\n    for (let point = 0; point < m; point++) {\n      ans[param][point] = evaluatedData[point] - funcParam(data.x[point]);\n    }\n  }\n  return new Matrix(ans);\n}\n\n/**\n * Matrix function over the samples\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} evaluatedData - Array of previous evaluated function values\n * @return {Matrix}\n */\nfunction matrixFunction(data, evaluatedData) {\n  const m = data.x.length;\n\n  let ans = new Array(m);\n\n  for (let point = 0; point < m; point++) {\n    ans[point] = [data.y[point] - evaluatedData[point]];\n  }\n\n  return new Matrix(ans);\n}\n\n/**\n * Iteration for Levenberg-Marquardt\n * @ignore\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {Array<number>} params - Array of previous parameter values\n * @param {number} damping - Levenberg-Marquardt parameter\n * @param {number} gradientDifference - Adjustment for decrease the damping parameter\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @return {Array<number>}\n */\nexport default function step(\n  data,\n  params,\n  damping,\n  gradientDifference,\n  parameterizedFunction,\n) {\n  let value = damping * gradientDifference * gradientDifference;\n  let identity = Matrix.eye(params.length, params.length, value);\n\n  const func = parameterizedFunction(params);\n\n  let evaluatedData = new Float64Array(data.x.length);\n  for (let i = 0; i < data.x.length; i++) {\n    evaluatedData[i] = func(data.x[i]);\n  }\n\n  let gradientFunc = gradientFunction(\n    data,\n    evaluatedData,\n    params,\n    gradientDifference,\n    parameterizedFunction,\n  );\n  let matrixFunc = matrixFunction(data, evaluatedData);\n  let inverseMatrix = inverse(\n    identity.add(gradientFunc.mmul(gradientFunc.transpose())),\n  );\n\n  params = new Matrix([params]);\n  params = params.sub(\n    inverseMatrix\n      .mmul(gradientFunc)\n      .mmul(matrixFunc)\n      .mul(gradientDifference)\n      .transpose(),\n  );\n\n  return params.to1DArray();\n}\n","import isArray from 'is-any-array';\n\nimport errorCalculation from './errorCalculation';\nimport step from './step';\n\n/**\n * Curve fitting algorithm\n * @param {{x:Array<number>, y:Array<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]\n * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter\n * @param {object} [options] - Options object\n * @param {number} [options.damping] - Levenberg-Marquardt parameter\n * @param {number} [options.gradientDifference = 10e-2] - Adjustment for decrease the damping parameter\n * @param {Array<number>} [options.minValues] - Minimum allowed values for parameters\n * @param {Array<number>} [options.maxValues] - Maximum allowed values for parameters\n * @param {Array<number>} [options.initialValues] - Array of initial parameter values\n * @param {number} [options.maxIterations = 100] - Maximum of allowed iterations\n * @param {number} [options.errorTolerance = 10e-3] - Minimum uncertainty allowed for each point\n * @return {{parameterValues: Array<number>, parameterError: number, iterations: number}}\n */\nexport default function levenbergMarquardt(\n  data,\n  parameterizedFunction,\n  options = {},\n) {\n  let {\n    maxIterations = 100,\n    gradientDifference = 10e-2,\n    damping = 0,\n    errorTolerance = 10e-3,\n    minValues,\n    maxValues,\n    initialValues,\n  } = options;\n\n  if (damping <= 0) {\n    throw new Error('The damping option must be a positive number');\n  } else if (!data.x || !data.y) {\n    throw new Error('The data parameter must have x and y elements');\n  } else if (\n    !isArray(data.x) ||\n    data.x.length < 2 ||\n    !isArray(data.y) ||\n    data.y.length < 2\n  ) {\n    throw new Error(\n      'The data parameter elements must be an array with more than 2 points',\n    );\n  } else if (data.x.length !== data.y.length) {\n    throw new Error('The data parameter elements must have the same size');\n  }\n\n  let parameters =\n    initialValues || new Array(parameterizedFunction.length).fill(1);\n  let parLen = parameters.length;\n  maxValues = maxValues || new Array(parLen).fill(Number.MAX_SAFE_INTEGER);\n  minValues = minValues || new Array(parLen).fill(Number.MIN_SAFE_INTEGER);\n\n  if (maxValues.length !== minValues.length) {\n    throw new Error('minValues and maxValues must be the same size');\n  }\n\n  if (!isArray(parameters)) {\n    throw new Error('initialValues must be an array');\n  }\n\n  let error = errorCalculation(data, parameters, parameterizedFunction);\n\n  let converged = error <= errorTolerance;\n\n  let iteration;\n  for (iteration = 0; iteration < maxIterations && !converged; iteration++) {\n    parameters = step(\n      data,\n      parameters,\n      damping,\n      gradientDifference,\n      parameterizedFunction,\n    );\n\n    for (let k = 0; k < parLen; k++) {\n      parameters[k] = Math.min(\n        Math.max(minValues[k], parameters[k]),\n        maxValues[k],\n      );\n    }\n\n    error = errorCalculation(data, parameters, parameterizedFunction);\n    if (isNaN(error)) break;\n    converged = error <= errorTolerance;\n  }\n\n  return {\n    parameterValues: parameters,\n    parameterError: error,\n    iterations: iteration,\n  };\n}\n","/**\n * Returns a new array based on extraction of specific indices of an array\n * @private\n * @param {Array} vector\n * @param {Array} indices\n */\nexport default function selection(vector, indices) {\n  let u = []; //new Float64Array(indices.length);\n  for (let i = 0; i < indices.length; i++) {\n    u[i] = vector[indices[i]];\n  }\n  return u;\n}\n","/**\n *\n * @private\n * @param {Array of arrays} collection\n */\nexport default function sortCollectionSet(collection) {\n  let objectCollection = collection\n    .map((value, index) => {\n      let key = BigInt(0);\n      value.forEach((item) => (key |= BigInt(1) << BigInt(item)));\n      return { value, index, key };\n    })\n    .sort((a, b) => {\n      if (a.key - b.key < 0) return -1;\n      return 1;\n    });\n\n  let sorted = [];\n  let indices = [];\n\n  let key;\n  for (let set of objectCollection) {\n    if (set.key !== key) {\n      key = set.key;\n      indices.push([]);\n      sorted.push(set.value);\n    }\n    indices[indices.length - 1].push(set.index);\n  }\n\n  let result = {\n    values: sorted,\n    indices: indices,\n  };\n  return result;\n}\n","import {\n  Matrix,\n  LuDecomposition,\n  solve,\n  CholeskyDecomposition,\n} from 'ml-matrix';\n\nimport sortCollectionSet from './util/sortCollectionSet';\n\n/**\n * (Combinatorial Subspace Least Squares) - subfunction for the FC-NNLS\n * @private\n * @param {Matrix} XtX\n * @param {Matrix} XtY\n * @param {Array} Pset\n * @param {Numbers} l\n * @param {Numbers} p\n */\nexport default function cssls(XtX, XtY, Pset, l, p) {\n  // Solves the set of equation XtX*K = XtY for the variables in Pset\n  // if XtX (or XtX(vars,vars)) is singular, performs the svd and find pseudoinverse, otherwise (even if ill-conditioned) finds inverse with LU decomposition and solves the set of equation\n  // it is consistent with matlab results for ill-conditioned matrices (at least consistent with test 'ill-conditionned square X rank 2, Y 3x1' in cssls.test)\n\n  let K = Matrix.zeros(l, p);\n  if (Pset === null) {\n    let choXtX = new CholeskyDecomposition(XtX);\n    if (choXtX.isPositiveDefinite() === true) {\n      K = choXtX.solve(XtY);\n    } else {\n      let luXtX = new LuDecomposition(XtX);\n      if (luXtX.isSingular() === false) {\n        K = luXtX.solve(Matrix.eye(l)).mmul(XtY);\n      } else {\n        K = solve(XtX, XtY, { useSVD: true });\n      }\n    }\n  } else {\n    let sortedPset = sortCollectionSet(Pset).values;\n    let sortedEset = sortCollectionSet(Pset).indices;\n    if (\n      sortedPset.length === 1 &&\n      sortedPset[0].length === 0 &&\n      sortedEset[0].length === p\n    ) {\n      return K;\n    } else if (\n      sortedPset.length === 1 &&\n      sortedPset[0].length === l &&\n      sortedEset[0].length === p\n    ) {\n      let choXtX = new CholeskyDecomposition(XtX);\n      if (choXtX.isPositiveDefinite() === true) {\n        K = choXtX.solve(XtY);\n      } else {\n        let luXtX = new LuDecomposition(XtX);\n        if (luXtX.isSingular() === false) {\n          K = luXtX.solve(Matrix.eye(l)).mmul(XtY);\n        } else {\n          K = solve(XtX, XtY, { useSVD: true });\n        }\n      }\n    } else {\n      for (let k = 0; k < sortedPset.length; k++) {\n        let cols2Solve = sortedEset[k];\n        let vars = sortedPset[k];\n        let L;\n        let choXtX = new CholeskyDecomposition(XtX.selection(vars, vars));\n        if (choXtX.isPositiveDefinite() === true) {\n          L = choXtX.solve(XtY.selection(vars, cols2Solve));\n        } else {\n          let luXtX = new LuDecomposition(XtX.selection(vars, vars));\n          if (luXtX.isSingular() === false) {\n            L = luXtX\n              .solve(Matrix.eye(vars.length))\n              .mmul(XtY.selection(vars, cols2Solve));\n          } else {\n            L = solve(\n              XtX.selection(vars, vars),\n              XtY.selection(vars, cols2Solve),\n              { useSVD: true },\n            );\n          }\n        }\n        for (let i = 0; i < L.rows; i++) {\n          for (let j = 0; j < L.columns; j++) {\n            K.set(vars[i], cols2Solve[j], L.get(i, j));\n          }\n        }\n      }\n    }\n  }\n  return K;\n}\n","import { Matrix } from 'ml-matrix';\n\nimport cssls from './cssls';\n\nexport default function initialisation(X, Y) {\n  let n = X.rows;\n  let l = X.columns;\n  let p = Y.columns;\n  let iter = 0;\n\n  if (Y.rows !== n) throw new Error('ERROR: matrix size not compatible');\n\n  let W = Matrix.zeros(l, p);\n\n  // precomputes part of pseudoinverse\n  let XtX = X.transpose().mmul(X);\n  let XtY = X.transpose().mmul(Y);\n\n  let K = cssls(XtX, XtY, null, l, p); // K is lxp\n  let Pset = [];\n  for (let j = 0; j < p; j++) {\n    Pset[j] = [];\n    for (let i = 0; i < l; i++) {\n      if (K.get(i, j) > 0) {\n        Pset[j].push(i);\n      } else {\n        K.set(i, j, 0);\n      } //This is our initial solution, it's the solution found by overwriting the unconstrained least square solution\n    }\n  }\n  let Fset = [];\n  for (let j = 0; j < p; j++) {\n    if (Pset[j].length !== l) {\n      Fset.push(j);\n    }\n  }\n\n  let D = K.clone();\n\n  return { n, l, p, iter, W, XtX, XtY, K, Pset, Fset, D };\n}\n","/**\n * Computes the set difference A\\B\n * @private\n * @param {A} set A as an array\n * @param {B} set B as an array\n */\nexport default function setDifference(A, B) {\n  let C = [];\n  for (let i of A) {\n    if (!B.includes(i)) C.push(i);\n  }\n  return C;\n}\n","import setDifference from './util/setDifference';\n\n// Makes sure the solution has converged\nexport default function optimality(\n  iter,\n  maxIter,\n  XtX,\n  XtY,\n  Fset,\n  Pset,\n  W,\n  K,\n  l,\n  p,\n  D,\n) {\n  if (iter === maxIter) {\n    throw new Error('Maximum number of iterations exceeded');\n  }\n\n  // Check solution for optimality\n  let V = XtY.subMatrixColumn(Fset).subtract(XtX.mmul(K.subMatrixColumn(Fset)));\n  for (let j = 0; j < Fset.length; j++) {\n    W.setColumn(Fset[j], V.subMatrixColumn([j]));\n  }\n  let Jset = [];\n  let fullSet = [];\n  for (let i = 0; i < l; i++) {\n    fullSet.push(i);\n  }\n  for (let j = 0; j < Fset.length; j++) {\n    let notPset = setDifference(fullSet, Pset[Fset[j]]);\n    if (notPset.length === 0) {\n      Jset.push(Fset[j]);\n    } else if (W.selection(notPset, [Fset[j]]).max() <= 0) {\n      Jset.push(Fset[j]);\n    }\n  }\n  Fset = setDifference(Fset, Jset);\n\n  // For non-optimal solutions, add the appropriate variables to Pset\n  if (Fset.length !== 0) {\n    for (let j = 0; j < Fset.length; j++) {\n      for (let i = 0; i < l; i++) {\n        if (Pset[Fset[j]].includes(i)) W.set(i, Fset[j], -Infinity);\n      }\n      Pset[Fset[j]].push(W.subMatrixColumn(Fset).maxColumnIndex(j)[0]);\n    }\n    for (let j = 0; j < Fset.length; j++) {\n      D.setColumn(Fset[j], K.getColumn(Fset[j]));\n    }\n  }\n  for (let j = 0; j < p; j++) {\n    Pset[j].sort((a, b) => a - b);\n  }\n  return { Pset, Fset, W };\n}\n","import { Matrix } from 'ml-matrix';\n\nimport selection from './util/selection';\nimport cssls from './cssls';\nimport initialisation from './initialisation';\nimport optimality from './optimality';\n\n/**\n * Fast Combinatorial Non-negative Least Squares with multiple Right Hand Side\n * @param {Matrix|number[][]} X\n * @param {Matrix|number[][]} Y\n * @param {object} [options={}]\n * @param {number} [options.maxIterations] if empty maxIterations is set at 3 times the number of columns of X\n * @returns {Matrix} K\n */\nexport default function fcnnls(X, Y, options = {}) {\n  X = Matrix.checkMatrix(X);\n  Y = Matrix.checkMatrix(Y);\n  let { l, p, iter, W, XtX, XtY, K, Pset, Fset, D } = initialisation(X, Y);\n  const { maxIterations = X.columns * 3 } = options;\n\n  // Active set algorithm for NNLS main loop\n  while (Fset.length > 0) {\n    // Solves for the passive variables (uses subroutine below)\n    let L = cssls(\n      XtX,\n      XtY.subMatrixColumn(Fset),\n      selection(Pset, Fset),\n      l,\n      Fset.length,\n    );\n    for (let i = 0; i < l; i++) {\n      for (let j = 0; j < Fset.length; j++) {\n        K.set(i, Fset[j], L.get(i, j));\n      }\n    }\n\n    // Finds any infeasible solutions\n    let infeasIndex = [];\n    for (let j = 0; j < Fset.length; j++) {\n      for (let i = 0; i < l; i++) {\n        if (L.get(i, j) < 0) {\n          infeasIndex.push(j);\n          break;\n        }\n      }\n    }\n    let Hset = selection(Fset, infeasIndex);\n\n    // Makes infeasible solutions feasible (standard NNLS inner loop)\n    if (Hset.length > 0) {\n      let m = Hset.length;\n      let alpha = Matrix.ones(l, m);\n\n      while (m > 0 && iter < maxIterations) {\n        iter++;\n\n        alpha.mul(Infinity);\n\n        // Finds indices of negative variables in passive set\n        let hRowColIdx = [[], []]; // Indexes work in pairs, each pair reprensents a single element, first array is row index, second array is column index\n        let negRowColIdx = [[], []]; // Same as before\n        for (let j = 0; j < m; j++) {\n          for (let i = 0; i < Pset[Hset[j]].length; i++) {\n            if (K.get(Pset[Hset[j]][i], Hset[j]) < 0) {\n              hRowColIdx[0].push(Pset[Hset[j]][i]); // i\n              hRowColIdx[1].push(j);\n              negRowColIdx[0].push(Pset[Hset[j]][i]); // i\n              negRowColIdx[1].push(Hset[j]);\n            } // Compared to matlab, here we keep the row/column indexing (we are not taking the linear indexing)\n          }\n        }\n\n        for (let k = 0; k < hRowColIdx[0].length; k++) {\n          // could be hRowColIdx[1].length as well\n          alpha.set(\n            hRowColIdx[0][k],\n            hRowColIdx[1][k],\n            D.get(negRowColIdx[0][k], negRowColIdx[1][k]) /\n              (D.get(negRowColIdx[0][k], negRowColIdx[1][k]) -\n                K.get(negRowColIdx[0][k], negRowColIdx[1][k])),\n          );\n        }\n\n        let alphaMin = [];\n        let minIdx = [];\n        for (let j = 0; j < m; j++) {\n          alphaMin[j] = alpha.minColumn(j);\n          minIdx[j] = alpha.minColumnIndex(j)[0];\n        }\n\n        alphaMin = Matrix.rowVector(alphaMin);\n        for (let i = 0; i < l; i++) {\n          alpha.setSubMatrix(alphaMin, i, 0);\n        }\n\n        let E = new Matrix(l, m);\n        E = D.subMatrixColumn(Hset).subtract(\n          alpha\n            .subMatrix(0, l - 1, 0, m - 1)\n            .mul(D.subMatrixColumn(Hset).subtract(K.subMatrixColumn(Hset))),\n        );\n        for (let j = 0; j < m; j++) {\n          D.setColumn(Hset[j], E.subMatrixColumn([j]));\n        }\n\n        let idx2zero = [minIdx, Hset];\n        for (let k = 0; k < m; k++) {\n          D.set(idx2zero[0][k], idx2zero[1][k], 0);\n        }\n\n        for (let j = 0; j < m; j++) {\n          Pset[Hset[j]].splice(\n            Pset[Hset[j]].findIndex((item) => item === minIdx[j]),\n            1,\n          );\n        }\n\n        L = cssls(XtX, XtY.subMatrixColumn(Hset), selection(Pset, Hset), l, m);\n        for (let j = 0; j < m; j++) {\n          K.setColumn(Hset[j], L.subMatrixColumn([j]));\n        }\n\n        Hset = [];\n        for (let j = 0; j < K.columns; j++) {\n          for (let i = 0; i < l; i++) {\n            if (K.get(i, j) < 0) {\n              Hset.push(j);\n\n              break;\n            }\n          }\n        }\n        m = Hset.length;\n      }\n    }\n\n    let newParam = optimality(\n      iter,\n      maxIterations,\n      XtX,\n      XtY,\n      Fset,\n      Pset,\n      W,\n      K,\n      l,\n      p,\n      D,\n    );\n    Pset = newParam.Pset;\n    Fset = newParam.Fset;\n    W = newParam.W;\n  }\n\n  return K;\n}\n","import { Matrix } from 'ml-matrix';\n\nimport fcnnls from './fcnnls';\n\n/**\n * Fast Combinatorial Non-negative Least Squares with single Right Hand Side\n * @param {Matrix|number[][]} X\n * @param {number[]} y\n * @param {object} [options={}]\n * @param {boolean} [maxIterations] if true or empty maxIterations is set at 3 times the number of columns of X\n * @returns {Array} k\n */\nexport default function fcnnlsVector(X, y, options = {}) {\n  if (Array.isArray(y) === false) {\n    throw new TypeError('y must be a 1D Array');\n  }\n  let Y = Matrix.columnVector(y);\n  let K = fcnnls(X, Y, options);\n  let k = K.to1DArray();\n  return k;\n}\n","module.exports = function(haystack, needle, comparator, low, high) {\n  var mid, cmp;\n\n  if(low === undefined)\n    low = 0;\n\n  else {\n    low = low|0;\n    if(low < 0 || low >= haystack.length)\n      throw new RangeError(\"invalid lower bound\");\n  }\n\n  if(high === undefined)\n    high = haystack.length - 1;\n\n  else {\n    high = high|0;\n    if(high < low || high >= haystack.length)\n      throw new RangeError(\"invalid upper bound\");\n  }\n\n  while(low <= high) {\n    // The naive `low + high >>> 1` could fail for array lengths > 2**31\n    // because `>>>` converts its operands to int32. `low + (high - low >>> 1)`\n    // works for array lengths <= 2**32-1 which is also Javascript's max array\n    // length.\n    mid = low + ((high - low) >>> 1);\n    cmp = +comparator(haystack[mid], needle, mid, haystack);\n\n    // Too low.\n    if(cmp < 0.0)\n      low  = mid + 1;\n\n    // Too high.\n    else if(cmp > 0.0)\n      high = mid - 1;\n\n    // Key found.\n    else\n      return mid;\n  }\n\n  // Key not found.\n  return ~low;\n}\n","'use strict';\n\nfunction assertNumber(number) {\n\tif (typeof number !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.ascending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn -1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn 1;\n\t}\n\n\treturn left - right;\n};\n\nexports.descending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn 1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn -1;\n\t}\n\n\treturn right - left;\n};\n","import binarySearch from 'binary-search';\nimport { ascending } from 'num-sort';\n\nexport const largestPrime = 0x7fffffff;\n\nconst primeNumbers = [\n  // chunk #0\n  largestPrime, // 2^31-1\n\n  // chunk #1\n  5,\n  11,\n  23,\n  47,\n  97,\n  197,\n  397,\n  797,\n  1597,\n  3203,\n  6421,\n  12853,\n  25717,\n  51437,\n  102877,\n  205759,\n  411527,\n  823117,\n  1646237,\n  3292489,\n  6584983,\n  13169977,\n  26339969,\n  52679969,\n  105359939,\n  210719881,\n  421439783,\n  842879579,\n  1685759167,\n\n  // chunk #2\n  433,\n  877,\n  1759,\n  3527,\n  7057,\n  14143,\n  28289,\n  56591,\n  113189,\n  226379,\n  452759,\n  905551,\n  1811107,\n  3622219,\n  7244441,\n  14488931,\n  28977863,\n  57955739,\n  115911563,\n  231823147,\n  463646329,\n  927292699,\n  1854585413,\n\n  // chunk #3\n  953,\n  1907,\n  3821,\n  7643,\n  15287,\n  30577,\n  61169,\n  122347,\n  244703,\n  489407,\n  978821,\n  1957651,\n  3915341,\n  7830701,\n  15661423,\n  31322867,\n  62645741,\n  125291483,\n  250582987,\n  501165979,\n  1002331963,\n  2004663929,\n\n  // chunk #4\n  1039,\n  2081,\n  4177,\n  8363,\n  16729,\n  33461,\n  66923,\n  133853,\n  267713,\n  535481,\n  1070981,\n  2141977,\n  4283963,\n  8567929,\n  17135863,\n  34271747,\n  68543509,\n  137087021,\n  274174111,\n  548348231,\n  1096696463,\n\n  // chunk #5\n  31,\n  67,\n  137,\n  277,\n  557,\n  1117,\n  2237,\n  4481,\n  8963,\n  17929,\n  35863,\n  71741,\n  143483,\n  286973,\n  573953,\n  1147921,\n  2295859,\n  4591721,\n  9183457,\n  18366923,\n  36733847,\n  73467739,\n  146935499,\n  293871013,\n  587742049,\n  1175484103,\n\n  // chunk #6\n  599,\n  1201,\n  2411,\n  4831,\n  9677,\n  19373,\n  38747,\n  77509,\n  155027,\n  310081,\n  620171,\n  1240361,\n  2480729,\n  4961459,\n  9922933,\n  19845871,\n  39691759,\n  79383533,\n  158767069,\n  317534141,\n  635068283,\n  1270136683,\n\n  // chunk #7\n  311,\n  631,\n  1277,\n  2557,\n  5119,\n  10243,\n  20507,\n  41017,\n  82037,\n  164089,\n  328213,\n  656429,\n  1312867,\n  2625761,\n  5251529,\n  10503061,\n  21006137,\n  42012281,\n  84024581,\n  168049163,\n  336098327,\n  672196673,\n  1344393353,\n\n  // chunk #8\n  3,\n  7,\n  17,\n  37,\n  79,\n  163,\n  331,\n  673,\n  1361,\n  2729,\n  5471,\n  10949,\n  21911,\n  43853,\n  87719,\n  175447,\n  350899,\n  701819,\n  1403641,\n  2807303,\n  5614657,\n  11229331,\n  22458671,\n  44917381,\n  89834777,\n  179669557,\n  359339171,\n  718678369,\n  1437356741,\n\n  // chunk #9\n  43,\n  89,\n  179,\n  359,\n  719,\n  1439,\n  2879,\n  5779,\n  11579,\n  23159,\n  46327,\n  92657,\n  185323,\n  370661,\n  741337,\n  1482707,\n  2965421,\n  5930887,\n  11861791,\n  23723597,\n  47447201,\n  94894427,\n  189788857,\n  379577741,\n  759155483,\n  1518310967,\n\n  // chunk #10\n  379,\n  761,\n  1523,\n  3049,\n  6101,\n  12203,\n  24407,\n  48817,\n  97649,\n  195311,\n  390647,\n  781301,\n  1562611,\n  3125257,\n  6250537,\n  12501169,\n  25002389,\n  50004791,\n  100009607,\n  200019221,\n  400038451,\n  800076929,\n  1600153859,\n\n  // chunk #11\n  13,\n  29,\n  59,\n  127,\n  257,\n  521,\n  1049,\n  2099,\n  4201,\n  8419,\n  16843,\n  33703,\n  67409,\n  134837,\n  269683,\n  539389,\n  1078787,\n  2157587,\n  4315183,\n  8630387,\n  17260781,\n  34521589,\n  69043189,\n  138086407,\n  276172823,\n  552345671,\n  1104691373,\n\n  // chunk #12\n  19,\n  41,\n  83,\n  167,\n  337,\n  677,\n  1361,\n  2729,\n  5471,\n  10949,\n  21911,\n  43853,\n  87719,\n  175447,\n  350899,\n  701819,\n  1403641,\n  2807303,\n  5614657,\n  11229331,\n  22458671,\n  44917381,\n  89834777,\n  179669557,\n  359339171,\n  718678369,\n  1437356741,\n\n  // chunk #13\n  53,\n  107,\n  223,\n  449,\n  907,\n  1823,\n  3659,\n  7321,\n  14653,\n  29311,\n  58631,\n  117269,\n  234539,\n  469099,\n  938207,\n  1876417,\n  3752839,\n  7505681,\n  15011389,\n  30022781,\n  60045577,\n  120091177,\n  240182359,\n  480364727,\n  960729461,\n  1921458943\n];\n\nprimeNumbers.sort(ascending);\n\nexport function nextPrime(value) {\n  let index = binarySearch(primeNumbers, value, ascending);\n  if (index < 0) {\n    index = ~index;\n  }\n  return primeNumbers[index];\n}\n","import { largestPrime, nextPrime } from './primeFinder';\n\nconst FREE = 0;\nconst FULL = 1;\nconst REMOVED = 2;\n\nconst defaultInitialCapacity = 150;\nconst defaultMinLoadFactor = 1 / 6;\nconst defaultMaxLoadFactor = 2 / 3;\n\nexport default class HashTable {\n  constructor(options = {}) {\n    if (options instanceof HashTable) {\n      this.table = options.table.slice();\n      this.values = options.values.slice();\n      this.state = options.state.slice();\n      this.minLoadFactor = options.minLoadFactor;\n      this.maxLoadFactor = options.maxLoadFactor;\n      this.distinct = options.distinct;\n      this.freeEntries = options.freeEntries;\n      this.lowWaterMark = options.lowWaterMark;\n      this.highWaterMark = options.maxLoadFactor;\n      return;\n    }\n\n    const initialCapacity =\n      options.initialCapacity === undefined\n        ? defaultInitialCapacity\n        : options.initialCapacity;\n    if (initialCapacity < 0) {\n      throw new RangeError(\n        `initial capacity must not be less than zero: ${initialCapacity}`\n      );\n    }\n\n    const minLoadFactor =\n      options.minLoadFactor === undefined\n        ? defaultMinLoadFactor\n        : options.minLoadFactor;\n    const maxLoadFactor =\n      options.maxLoadFactor === undefined\n        ? defaultMaxLoadFactor\n        : options.maxLoadFactor;\n    if (minLoadFactor < 0 || minLoadFactor >= 1) {\n      throw new RangeError(`invalid minLoadFactor: ${minLoadFactor}`);\n    }\n    if (maxLoadFactor <= 0 || maxLoadFactor >= 1) {\n      throw new RangeError(`invalid maxLoadFactor: ${maxLoadFactor}`);\n    }\n    if (minLoadFactor >= maxLoadFactor) {\n      throw new RangeError(\n        `minLoadFactor (${minLoadFactor}) must be smaller than maxLoadFactor (${maxLoadFactor})`\n      );\n    }\n\n    let capacity = initialCapacity;\n    // User wants to put at least capacity elements. We need to choose the size based on the maxLoadFactor to\n    // avoid the need to rehash before this capacity is reached.\n    // actualCapacity * maxLoadFactor >= capacity\n    capacity = (capacity / maxLoadFactor) | 0;\n    capacity = nextPrime(capacity);\n    if (capacity === 0) capacity = 1;\n\n    this.table = newArray(capacity);\n    this.values = newArray(capacity);\n    this.state = newArray(capacity);\n\n    this.minLoadFactor = minLoadFactor;\n    if (capacity === largestPrime) {\n      this.maxLoadFactor = 1;\n    } else {\n      this.maxLoadFactor = maxLoadFactor;\n    }\n\n    this.distinct = 0;\n    this.freeEntries = capacity;\n\n    this.lowWaterMark = 0;\n    this.highWaterMark = chooseHighWaterMark(capacity, this.maxLoadFactor);\n  }\n\n  clone() {\n    return new HashTable(this);\n  }\n\n  get size() {\n    return this.distinct;\n  }\n\n  get(key) {\n    const i = this.indexOfKey(key);\n    if (i < 0) return 0;\n    return this.values[i];\n  }\n\n  set(key, value) {\n    let i = this.indexOfInsertion(key);\n    if (i < 0) {\n      i = -i - 1;\n      this.values[i] = value;\n      return false;\n    }\n\n    if (this.distinct > this.highWaterMark) {\n      const newCapacity = chooseGrowCapacity(\n        this.distinct + 1,\n        this.minLoadFactor,\n        this.maxLoadFactor\n      );\n      this.rehash(newCapacity);\n      return this.set(key, value);\n    }\n\n    this.table[i] = key;\n    this.values[i] = value;\n    if (this.state[i] === FREE) this.freeEntries--;\n    this.state[i] = FULL;\n    this.distinct++;\n\n    if (this.freeEntries < 1) {\n      const newCapacity = chooseGrowCapacity(\n        this.distinct + 1,\n        this.minLoadFactor,\n        this.maxLoadFactor\n      );\n      this.rehash(newCapacity);\n    }\n\n    return true;\n  }\n\n  remove(key, noRehash) {\n    const i = this.indexOfKey(key);\n    if (i < 0) return false;\n\n    this.state[i] = REMOVED;\n    this.distinct--;\n\n    if (!noRehash) this.maybeShrinkCapacity();\n\n    return true;\n  }\n\n  delete(key, noRehash) {\n    const i = this.indexOfKey(key);\n    if (i < 0) return false;\n\n    this.state[i] = FREE;\n    this.distinct--;\n\n    if (!noRehash) this.maybeShrinkCapacity();\n\n    return true;\n  }\n\n  maybeShrinkCapacity() {\n    if (this.distinct < this.lowWaterMark) {\n      const newCapacity = chooseShrinkCapacity(\n        this.distinct,\n        this.minLoadFactor,\n        this.maxLoadFactor\n      );\n      this.rehash(newCapacity);\n    }\n  }\n\n  containsKey(key) {\n    return this.indexOfKey(key) >= 0;\n  }\n\n  indexOfKey(key) {\n    const table = this.table;\n    const state = this.state;\n    const length = this.table.length;\n\n    const hash = key & 0x7fffffff;\n    let i = hash % length;\n    let decrement = hash % (length - 2);\n    if (decrement === 0) decrement = 1;\n\n    while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n      i -= decrement;\n      if (i < 0) i += length;\n    }\n\n    if (state[i] === FREE) return -1;\n    return i;\n  }\n\n  containsValue(value) {\n    return this.indexOfValue(value) >= 0;\n  }\n\n  indexOfValue(value) {\n    const values = this.values;\n    const state = this.state;\n\n    for (var i = 0; i < state.length; i++) {\n      if (state[i] === FULL && values[i] === value) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  indexOfInsertion(key) {\n    const table = this.table;\n    const state = this.state;\n    const length = table.length;\n\n    const hash = key & 0x7fffffff;\n    let i = hash % length;\n    let decrement = hash % (length - 2);\n    if (decrement === 0) decrement = 1;\n\n    while (state[i] === FULL && table[i] !== key) {\n      i -= decrement;\n      if (i < 0) i += length;\n    }\n\n    if (state[i] === REMOVED) {\n      const j = i;\n      while (state[i] !== FREE && (state[i] === REMOVED || table[i] !== key)) {\n        i -= decrement;\n        if (i < 0) i += length;\n      }\n      if (state[i] === FREE) i = j;\n    }\n\n    if (state[i] === FULL) {\n      return -i - 1;\n    }\n\n    return i;\n  }\n\n  ensureCapacity(minCapacity) {\n    if (this.table.length < minCapacity) {\n      const newCapacity = nextPrime(minCapacity);\n      this.rehash(newCapacity);\n    }\n  }\n\n  rehash(newCapacity) {\n    const oldCapacity = this.table.length;\n\n    if (newCapacity <= this.distinct) throw new Error('Unexpected');\n\n    const oldTable = this.table;\n    const oldValues = this.values;\n    const oldState = this.state;\n\n    const newTable = newArray(newCapacity);\n    const newValues = newArray(newCapacity);\n    const newState = newArray(newCapacity);\n\n    this.lowWaterMark = chooseLowWaterMark(newCapacity, this.minLoadFactor);\n    this.highWaterMark = chooseHighWaterMark(newCapacity, this.maxLoadFactor);\n\n    this.table = newTable;\n    this.values = newValues;\n    this.state = newState;\n    this.freeEntries = newCapacity - this.distinct;\n\n    for (var i = 0; i < oldCapacity; i++) {\n      if (oldState[i] === FULL) {\n        var element = oldTable[i];\n        var index = this.indexOfInsertion(element);\n        newTable[index] = element;\n        newValues[index] = oldValues[i];\n        newState[index] = FULL;\n      }\n    }\n  }\n\n  forEachKey(callback) {\n    for (var i = 0; i < this.state.length; i++) {\n      if (this.state[i] === FULL) {\n        if (!callback(this.table[i])) return false;\n      }\n    }\n    return true;\n  }\n\n  forEachValue(callback) {\n    for (var i = 0; i < this.state.length; i++) {\n      if (this.state[i] === FULL) {\n        if (!callback(this.values[i])) return false;\n      }\n    }\n    return true;\n  }\n\n  forEachPair(callback) {\n    for (var i = 0; i < this.state.length; i++) {\n      if (this.state[i] === FULL) {\n        if (!callback(this.table[i], this.values[i])) return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction chooseLowWaterMark(capacity, minLoad) {\n  return (capacity * minLoad) | 0;\n}\n\nfunction chooseHighWaterMark(capacity, maxLoad) {\n  return Math.min(capacity - 2, (capacity * maxLoad) | 0);\n}\n\nfunction chooseGrowCapacity(size, minLoad, maxLoad) {\n  return nextPrime(\n    Math.max(size + 1, ((4 * size) / (3 * minLoad + maxLoad)) | 0)\n  );\n}\n\nfunction chooseShrinkCapacity(size, minLoad, maxLoad) {\n  return nextPrime(\n    Math.max(size + 1, ((4 * size) / (minLoad + 3 * maxLoad)) | 0)\n  );\n}\n\nfunction newArray(size) {\n  return Array(size).fill(0);\n}\n","import HashTable from 'ml-hash-table';\n\nexport class SparseMatrix {\n  constructor(rows, columns, options = {}) {\n    if (rows instanceof SparseMatrix) {\n      // clone\n      const other = rows;\n      this._init(\n        other.rows,\n        other.columns,\n        other.elements.clone(),\n        other.threshold\n      );\n      return;\n    }\n\n    if (Array.isArray(rows)) {\n      const matrix = rows;\n      rows = matrix.length;\n      options = columns || {};\n      columns = matrix[0].length;\n      this._init(rows, columns, new HashTable(options), options.threshold);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = matrix[i][j];\n          if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n          if (value !== 0) {\n            this.elements.set(i * columns + j, matrix[i][j]);\n          }\n        }\n      }\n    } else {\n      this._init(rows, columns, new HashTable(options), options.threshold);\n    }\n  }\n\n  _init(rows, columns, elements, threshold) {\n    this.rows = rows;\n    this.columns = columns;\n    this.elements = elements;\n    this.threshold = threshold || 0;\n  }\n\n  static eye(rows = 1, columns = rows) {\n    const min = Math.min(rows, columns);\n    const matrix = new SparseMatrix(rows, columns, { initialCapacity: min });\n    for (var i = 0; i < min; i++) {\n      matrix.set(i, i, 1);\n    }\n    return matrix;\n  }\n\n  clone() {\n    return new SparseMatrix(this);\n  }\n\n  to2DArray() {\n    const copy = new Array(this.rows);\n    for (var i = 0; i < this.rows; i++) {\n      copy[i] = new Array(this.columns);\n      for (var j = 0; j < this.columns; j++) {\n        copy[i][j] = this.get(i, j);\n      }\n    }\n    return copy;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (!this.isSquare()) return false;\n\n    var symmetric = true;\n    this.forEachNonZero((i, j, v) => {\n      if (this.get(j, i) !== v) {\n        symmetric = false;\n        return false;\n      }\n      return v;\n    });\n    return symmetric;\n  }\n\n  /**\n   * Search for the wither band in the main diagonals\n   * @return {number}\n   */\n  bandWidth() {\n    let min = this.columns;\n    let max = -1;\n    this.forEachNonZero((i, j, v) => {\n      let diff = i - j;\n      min = Math.min(min, diff);\n      max = Math.max(max, diff);\n      return v;\n    });\n    return max - min;\n  }\n\n  /**\n   * Test if a matrix is consider banded using a threshold\n   * @param {number} width\n   * @return {boolean}\n   */\n  isBanded(width) {\n    let bandWidth = this.bandWidth();\n    return bandWidth <= width;\n  }\n\n  get cardinality() {\n    return this.elements.size;\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  get(row, column) {\n    return this.elements.get(row * this.columns + column);\n  }\n\n  set(row, column, value) {\n    if (this.threshold && Math.abs(value) < this.threshold) value = 0;\n    if (value === 0) {\n      this.elements.remove(row * this.columns + column);\n    } else {\n      this.elements.set(row * this.columns + column, value);\n    }\n    return this;\n  }\n\n  mmul(other) {\n    if (this.columns !== other.rows) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Number of columns of left matrix are not equal to number of rows of right matrix.'\n      );\n    }\n\n    const m = this.rows;\n    const p = other.columns;\n\n    const result = new SparseMatrix(m, p);\n    this.forEachNonZero((i, j, v1) => {\n      other.forEachNonZero((k, l, v2) => {\n        if (j === k) {\n          result.set(i, l, result.get(i, l) + v1 * v2);\n        }\n        return v2;\n      });\n      return v1;\n    });\n    return result;\n  }\n\n  kroneckerProduct(other) {\n    const m = this.rows;\n    const n = this.columns;\n    const p = other.rows;\n    const q = other.columns;\n\n    const result = new SparseMatrix(m * p, n * q, {\n      initialCapacity: this.cardinality * other.cardinality\n    });\n    this.forEachNonZero((i, j, v1) => {\n      other.forEachNonZero((k, l, v2) => {\n        result.set(p * i + k, q * j + l, v1 * v2);\n        return v2;\n      });\n      return v1;\n    });\n    return result;\n  }\n\n  forEachNonZero(callback) {\n    this.elements.forEachPair((key, value) => {\n      const i = (key / this.columns) | 0;\n      const j = key % this.columns;\n      let r = callback(i, j, value);\n      if (r === false) return false; // stop iteration\n      if (this.threshold && Math.abs(r) < this.threshold) r = 0;\n      if (r !== value) {\n        if (r === 0) {\n          this.elements.remove(key, true);\n        } else {\n          this.elements.set(key, r);\n        }\n      }\n      return true;\n    });\n    this.elements.maybeShrinkCapacity();\n    return this;\n  }\n\n  getNonZeros() {\n    const cardinality = this.cardinality;\n    const rows = new Array(cardinality);\n    const columns = new Array(cardinality);\n    const values = new Array(cardinality);\n    var idx = 0;\n    this.forEachNonZero((i, j, value) => {\n      rows[idx] = i;\n      columns[idx] = j;\n      values[idx] = value;\n      idx++;\n      return value;\n    });\n    return { rows, columns, values };\n  }\n\n  setThreshold(newThreshold) {\n    if (newThreshold !== 0 && newThreshold !== this.threshold) {\n      this.threshold = newThreshold;\n      this.forEachNonZero((i, j, v) => v);\n    }\n    return this;\n  }\n\n  /**\n   * @return {SparseMatrix} - New transposed sparse matrix\n   */\n  transpose() {\n    let trans = new SparseMatrix(this.columns, this.rows, {\n      initialCapacity: this.cardinality\n    });\n    this.forEachNonZero((i, j, value) => {\n      trans.set(j, i, value);\n      return value;\n    });\n    return trans;\n  }\n}\n\nSparseMatrix.prototype.klass = 'Matrix';\n\nSparseMatrix.identity = SparseMatrix.eye;\nSparseMatrix.prototype.tensorProduct = SparseMatrix.prototype.kroneckerProduct;\n\n/*\n Add dynamically instance and static methods for mathematical operations\n */\n\nvar inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\nvar inplaceOperatorScalar = `\n(function %name%S(value) {\n    this.forEachNonZero((i, j, v) => v %op% value);\n    return this;\n})\n`;\n\nvar inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix.forEachNonZero((i, j, v) => {\n        this.set(i, j, this.get(i, j) %op% v);\n        return v;\n    });\n    return this;\n})\n`;\n\nvar staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\nvar inplaceMethod = `\n(function %name%() {\n    this.forEachNonZero((i, j, v) => %method%(v));\n    return this;\n})\n`;\n\nvar staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new SparseMatrix(matrix);\n    return newMatrix.%name%();\n})\n`;\n\nconst operators = [\n  // Arithmetic operators\n  ['+', 'add'],\n  ['-', 'sub', 'subtract'],\n  ['*', 'mul', 'multiply'],\n  ['/', 'div', 'divide'],\n  ['%', 'mod', 'modulus'],\n  // Bitwise operators\n  ['&', 'and'],\n  ['|', 'or'],\n  ['^', 'xor'],\n  ['<<', 'leftShift'],\n  ['>>', 'signPropagatingRightShift'],\n  ['>>>', 'rightShift', 'zeroFillRightShift']\n];\n\nfor (const operator of operators) {\n  for (let i = 1; i < operator.length; i++) {\n    SparseMatrix.prototype[operator[i]] = eval(\n      fillTemplateFunction(inplaceOperator, {\n        name: operator[i],\n        op: operator[0]\n      })\n    );\n    SparseMatrix.prototype[`${operator[i]}S`] = eval(\n      fillTemplateFunction(inplaceOperatorScalar, {\n        name: `${operator[i]}S`,\n        op: operator[0]\n      })\n    );\n    SparseMatrix.prototype[`${operator[i]}M`] = eval(\n      fillTemplateFunction(inplaceOperatorMatrix, {\n        name: `${operator[i]}M`,\n        op: operator[0]\n      })\n    );\n\n    SparseMatrix[operator[i]] = eval(\n      fillTemplateFunction(staticOperator, { name: operator[i] })\n    );\n  }\n}\n\nvar methods = [['~', 'not']];\n\n[\n  'abs',\n  'acos',\n  'acosh',\n  'asin',\n  'asinh',\n  'atan',\n  'atanh',\n  'cbrt',\n  'ceil',\n  'clz32',\n  'cos',\n  'cosh',\n  'exp',\n  'expm1',\n  'floor',\n  'fround',\n  'log',\n  'log1p',\n  'log10',\n  'log2',\n  'round',\n  'sign',\n  'sin',\n  'sinh',\n  'sqrt',\n  'tan',\n  'tanh',\n  'trunc'\n].forEach(function (mathMethod) {\n  methods.push([`Math.${mathMethod}`, mathMethod]);\n});\n\nfor (const method of methods) {\n  for (let i = 1; i < method.length; i++) {\n    SparseMatrix.prototype[method[i]] = eval(\n      fillTemplateFunction(inplaceMethod, {\n        name: method[i],\n        method: method[0]\n      })\n    );\n    SparseMatrix[method[i]] = eval(\n      fillTemplateFunction(staticMethod, { name: method[i] })\n    );\n  }\n}\n\nfunction fillTemplateFunction(template, values) {\n  for (const i in values) {\n    template = template.replace(new RegExp(`%${i}%`, 'g'), values[i]);\n  }\n  return template;\n}\n","export default function additiveSymmetric(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += ((a[i] - b[i]) * (a[i] - b[i]) * (a[i] + b[i])) / (a[i] * b[i]);\n  }\n  return 2 * d;\n}\n","export default function avg(a, b) {\n  var ii = a.length;\n  var max = 0;\n  var ans = 0;\n  var aux = 0;\n  for (var i = 0; i < ii; i++) {\n    aux = Math.abs(a[i] - b[i]);\n    ans += aux;\n    if (max < aux) {\n      max = aux;\n    }\n  }\n  return (max + ans) / 2;\n}\n","export default function bhattacharyya(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.sqrt(a[i] * b[i]);\n  }\n  return -Math.log(ans);\n}\n","export default function canberra(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.abs(a[i] - b[i]) / (a[i] + b[i]);\n  }\n  return ans;\n}\n","export default function chebyshev(a, b) {\n  var ii = a.length;\n  var max = 0;\n  var aux = 0;\n  for (var i = 0; i < ii; i++) {\n    aux = Math.abs(a[i] - b[i]);\n    if (max < aux) {\n      max = aux;\n    }\n  }\n  return max;\n}\n","export default function clark(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += Math.sqrt(\n      ((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i]))\n    );\n  }\n  return 2 * d;\n}\n","export default function czekanowskiSimilarity(a, b) {\n  var up = 0;\n  var down = 0;\n  for (var i = 0; i < a.length; i++) {\n    up += Math.min(a[i], b[i]);\n    down += a[i] + b[i];\n  }\n  return (2 * up) / down;\n}\n","import czekanowskiSimilarity from '../similarities/czekanowski';\n\nexport default function czekanowskiDistance(a, b) {\n  return 1 - czekanowskiSimilarity(a, b);\n}\n","export default function dice(a, b) {\n  var ii = a.length;\n  var p = 0;\n  var q1 = 0;\n  var q2 = 0;\n  for (var i = 0; i < ii; i++) {\n    p += a[i] * a[i];\n    q1 += b[i] * b[i];\n    q2 += (a[i] - b[i]) * (a[i] - b[i]);\n  }\n  return q2 / (p + q1);\n}\n","export default function divergence(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += ((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i]));\n  }\n  return 2 * d;\n}\n","export default function fidelity(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.sqrt(a[i] * b[i]);\n  }\n  return ans;\n}\n","export default function gower(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.abs(a[i] - b[i]);\n  }\n  return ans / ii;\n}\n","export default function harmonicMean(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += (a[i] * b[i]) / (a[i] + b[i]);\n  }\n  return 2 * ans;\n}\n","export default function hellinger(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.sqrt(a[i] * b[i]);\n  }\n  return 2 * Math.sqrt(1 - ans);\n}\n","export default function innerProduct(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += a[i] * b[i];\n  }\n  return ans;\n}\n","export default function intersection(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.min(a[i], b[i]);\n  }\n  return 1 - ans;\n}\n","export default function jaccard(a, b) {\n  var ii = a.length;\n  var p1 = 0;\n  var p2 = 0;\n  var q1 = 0;\n  var q2 = 0;\n  for (var i = 0; i < ii; i++) {\n    p1 += a[i] * b[i];\n    p2 += a[i] * a[i];\n    q1 += b[i] * b[i];\n    q2 += (a[i] - b[i]) * (a[i] - b[i]);\n  }\n  return q2 / (p2 + q1 - p1);\n}\n","export default function jeffreys(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += (a[i] - b[i]) * Math.log(a[i] / b[i]);\n  }\n  return ans;\n}\n","export default function jensenDifference(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans +=\n      (a[i] * Math.log(a[i]) + b[i] * Math.log(b[i])) / 2 -\n      ((a[i] + b[i]) / 2) * Math.log((a[i] + b[i]) / 2);\n  }\n  return ans;\n}\n","export default function jensenShannon(a, b) {\n  var ii = a.length;\n  var p = 0;\n  var q = 0;\n  for (var i = 0; i < ii; i++) {\n    p += a[i] * Math.log((2 * a[i]) / (a[i] + b[i]));\n    q += b[i] * Math.log((2 * b[i]) / (a[i] + b[i]));\n  }\n  return (p + q) / 2;\n}\n","export default function kdivergence(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += a[i] * Math.log((2 * a[i]) / (a[i] + b[i]));\n  }\n  return ans;\n}\n","export default function kulczynski(a, b) {\n  var ii = a.length;\n  var up = 0;\n  var down = 0;\n  for (var i = 0; i < ii; i++) {\n    up += Math.abs(a[i] - b[i]);\n    down += Math.min(a[i], b[i]);\n  }\n  return up / down;\n}\n","export default function kullbackLeibler(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += a[i] * Math.log(a[i] / b[i]);\n  }\n  return ans;\n}\n","export default function kumarHassebrook(a, b) {\n  var ii = a.length;\n  var p = 0;\n  var p2 = 0;\n  var q2 = 0;\n  for (var i = 0; i < ii; i++) {\n    p += a[i] * b[i];\n    p2 += a[i] * a[i];\n    q2 += b[i] * b[i];\n  }\n  return p / (p2 + q2 - p);\n}\n","export default function kumarJohnson(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans +=\n      Math.pow(a[i] * a[i] - b[i] * b[i], 2) / (2 * Math.pow(a[i] * b[i], 1.5));\n  }\n  return ans;\n}\n","export default function lorentzian(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.log(Math.abs(a[i] - b[i]) + 1);\n  }\n  return ans;\n}\n","export default function manhattan(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += Math.abs(a[i] - b[i]);\n  }\n  return d;\n}\n","export default function matusita(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += Math.sqrt(a[i] * b[i]);\n  }\n  return Math.sqrt(2 - 2 * ans);\n}\n","export default function minkowski(a, b, p) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += Math.pow(Math.abs(a[i] - b[i]), p);\n  }\n  return Math.pow(d, 1 / p);\n}\n","export default function motyka(a, b) {\n  var ii = a.length;\n  var up = 0;\n  var down = 0;\n  for (var i = 0; i < ii; i++) {\n    up += Math.min(a[i], b[i]);\n    down += a[i] + b[i];\n  }\n  return 1 - up / down;\n}\n","export default function neyman(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += ((a[i] - b[i]) * (a[i] - b[i])) / a[i];\n  }\n  return d;\n}\n","export default function pearson(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += ((a[i] - b[i]) * (a[i] - b[i])) / b[i];\n  }\n  return d;\n}\n","export default function probabilisticSymmetric(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n  }\n  return 2 * d;\n}\n","export default function ruzicka(a, b) {\n  var ii = a.length;\n  var up = 0;\n  var down = 0;\n  for (var i = 0; i < ii; i++) {\n    up += Math.min(a[i], b[i]);\n    down += Math.max(a[i], b[i]);\n  }\n  return up / down;\n}\n","export default function soergel(a, b) {\n  var ii = a.length;\n  var up = 0;\n  var down = 0;\n  for (var i = 0; i < ii; i++) {\n    up += Math.abs(a[i] - b[i]);\n    down += Math.max(a[i], b[i]);\n  }\n  return up / down;\n}\n","export default function sorensen(a, b) {\n  var ii = a.length;\n  var up = 0;\n  var down = 0;\n  for (var i = 0; i < ii; i++) {\n    up += Math.abs(a[i] - b[i]);\n    down += a[i] + b[i];\n  }\n  return up / down;\n}\n","export default function squared(a, b) {\n  var i = 0;\n  var ii = a.length;\n  var d = 0;\n  for (; i < ii; i++) {\n    d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n  }\n  return d;\n}\n","export default function squaredChord(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans +=\n      (Math.sqrt(a[i]) - Math.sqrt(b[i])) * (Math.sqrt(a[i]) - Math.sqrt(b[i]));\n  }\n  return ans;\n}\n","export default function taneja(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans +=\n      ((a[i] + b[i]) / 2) *\n      Math.log((a[i] + b[i]) / (2 * Math.sqrt(a[i] * b[i])));\n  }\n  return ans;\n}\n","export default function tanimoto(a, b, bitvector) {\n  if (bitvector) {\n    var inter = 0;\n    var union = 0;\n    for (var j = 0; j < a.length; j++) {\n      inter += a[j] && b[j];\n      union += a[j] || b[j];\n    }\n    if (union === 0) {\n      return 1;\n    }\n    return inter / union;\n  } else {\n    var ii = a.length;\n    var p = 0;\n    var q = 0;\n    var m = 0;\n    for (var i = 0; i < ii; i++) {\n      p += a[i];\n      q += b[i];\n      m += Math.min(a[i], b[i]);\n    }\n    return 1 - (p + q - 2 * m) / (p + q - m);\n  }\n}\n","import tanimotoS from '../similarities/tanimoto';\n\nexport default function tanimoto(a, b, bitvector) {\n  if (bitvector) {\n    return 1 - tanimotoS(a, b, bitvector);\n  } else {\n    var ii = a.length;\n    var p = 0;\n    var q = 0;\n    var m = 0;\n    for (var i = 0; i < ii; i++) {\n      p += a[i];\n      q += b[i];\n      m += Math.min(a[i], b[i]);\n    }\n    return (p + q - 2 * m) / (p + q - m);\n  }\n}\n","export default function topsoe(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans +=\n      a[i] * Math.log((2 * a[i]) / (a[i] + b[i])) +\n      b[i] * Math.log((2 * b[i]) / (a[i] + b[i]));\n  }\n  return ans;\n}\n","export default function waveHedges(a, b) {\n  var ii = a.length;\n  var ans = 0;\n  for (var i = 0; i < ii; i++) {\n    ans += 1 - Math.min(a[i], b[i]) / Math.max(a[i], b[i]);\n  }\n  return ans;\n}\n","import binarySearch from 'binary-search';\nimport { ascending } from 'num-sort';\n\n/**\n * Function that creates the tree\n * @param {Array<Array<number>>} spectrum\n * @param {object} [options]\n * @return {Tree|null}\n * left and right have the same structure than the parent,\n * or are null if they are leaves\n */\nexport function createTree(spectrum, options = {}) {\n  var X = spectrum[0];\n  const {\n    minWindow = 0.16,\n    threshold = 0.01,\n    from = X[0],\n    to = X[X.length - 1]\n  } = options;\n\n  return mainCreateTree(\n    spectrum[0],\n    spectrum[1],\n    from,\n    to,\n    minWindow,\n    threshold\n  );\n}\n\nfunction mainCreateTree(X, Y, from, to, minWindow, threshold) {\n  if (to - from < minWindow) {\n    return null;\n  }\n\n  // search first point\n  var start = binarySearch(X, from, ascending);\n  if (start < 0) {\n    start = ~start;\n  }\n\n  // stop at last point\n  var sum = 0;\n  var center = 0;\n  for (var i = start; i < X.length; i++) {\n    if (X[i] >= to) {\n      break;\n    }\n    sum += Y[i];\n    center += X[i] * Y[i];\n  }\n\n  if (sum < threshold) {\n    return null;\n  }\n\n  center /= sum;\n  if (center - from < 1e-6 || to - center < 1e-6) {\n    return null;\n  }\n  if (center - from < minWindow / 4) {\n    return mainCreateTree(X, Y, center, to, minWindow, threshold);\n  } else {\n    if (to - center < minWindow / 4) {\n      return mainCreateTree(X, Y, from, center, minWindow, threshold);\n    } else {\n      return new Tree(\n        sum,\n        center,\n        mainCreateTree(X, Y, from, center, minWindow, threshold),\n        mainCreateTree(X, Y, center, to, minWindow, threshold)\n      );\n    }\n  }\n}\n\nclass Tree {\n  constructor(sum, center, left, right) {\n    this.sum = sum;\n    this.center = center;\n    this.left = left;\n    this.right = right;\n  }\n}\n","import { createTree } from './createTree';\n\n/**\n * Similarity between two nodes\n * @param {Tree|Array<Array<number>>} a - tree A node\n * @param {Tree|Array<Array<number>>} b - tree B node\n * @param {object} [options]\n * @return {number} similarity measure between tree nodes\n */\nexport function getSimilarity(a, b, options = {}) {\n  const { alpha = 0.1, beta = 0.33, gamma = 0.001 } = options;\n\n  if (a === null || b === null) {\n    return 0;\n  }\n  if (Array.isArray(a)) {\n    a = createTree(a);\n  }\n  if (Array.isArray(b)) {\n    b = createTree(b);\n  }\n\n  var C =\n    (alpha * Math.min(a.sum, b.sum)) / Math.max(a.sum, b.sum) +\n    (1 - alpha) * Math.exp(-gamma * Math.abs(a.center - b.center));\n\n  return (\n    beta * C +\n    ((1 - beta) *\n      (getSimilarity(a.left, b.left, options) +\n        getSimilarity(a.right, b.right, options))) /\n      2\n  );\n}\n","import { getSimilarity } from './getSimilarity';\n\nexport { createTree } from './createTree';\n\nexport function treeSimilarity(A, B, options = {}) {\n  return getSimilarity(A, B, options);\n}\n\nexport function getFunction(options = {}) {\n  return (A, B) => getSimilarity(A, B, options);\n}\n","export default function cosine(a, b) {\n  var ii = a.length;\n  var p = 0;\n  var p2 = 0;\n  var q2 = 0;\n  for (var i = 0; i < ii; i++) {\n    p += a[i] * b[i];\n    p2 += a[i] * a[i];\n    q2 += b[i] * b[i];\n  }\n  return p / (Math.sqrt(p2) * Math.sqrt(q2));\n}\n","import diceD from '../distances/dice';\n\nexport default function dice(a, b) {\n  return 1 - diceD(a, b);\n}\n","import intersectionD from '../distances/intersection';\n\nexport default function intersection(a, b) {\n  return 1 - intersectionD(a, b);\n}\n","import jaccardD from '../distances/jaccard';\n\nexport default function jaccard(a, b) {\n  return 1 - jaccardD(a, b);\n}\n","import kulczynskiD from '../distances/kulczynski';\n\nexport default function kulczynski(a, b) {\n  return 1 / kulczynskiD(a, b);\n}\n","import motykaD from '../distances/motyka';\n\nexport default function motyka(a, b) {\n  return 1 - motykaD(a, b);\n}\n","import mean from 'ml-array-mean';\n\nimport cosine from './cosine';\n\nexport default function pearson(a, b) {\n  var avgA = mean(a);\n  var avgB = mean(b);\n\n  var newA = new Array(a.length);\n  var newB = new Array(b.length);\n  for (var i = 0; i < newA.length; i++) {\n    newA[i] = a[i] - avgA;\n    newB[i] = b[i] - avgB;\n  }\n\n  return cosine(newA, newB);\n}\n","import squaredChordD from '../distances/squaredChord';\n\nexport default function squaredChord(a, b) {\n  return 1 - squaredChordD(a, b);\n}\n","import { Matrix } from 'ml-matrix';\n\nexport function zeroInsteadOfNegative(X) {\n  let rows = X.rows;\n  let columns = X.columns;\n  let newMatrix = new Matrix(X);\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (newMatrix.get(r, c) < 0) {\n        newMatrix.set(r, c, 0);\n      }\n    }\n  }\n  return newMatrix;\n}\n","import { Matrix } from 'ml-matrix';\n\nimport { zeroInsteadOfNegative } from '../util/zeroInsteadOfNegative';\n\nexport function checkMatrixS(data, originalMatrix) {\n  let { A, S } = data;\n  //check if is there at least one element cero\n  let indices = [];\n  let sum = S.sum('row');\n\n  for (let i = 0; i < sum.length; i++) {\n    if (sum[i] === 0) {\n      indices.push(i);\n      continue;\n    } else {\n      for (let j = 0; j < S.columns; j++) {\n        if (isNaN(S.get(i, j))) {\n          indices.push(i);\n          break;\n        }\n      }\n    }\n  }\n  // if there than just one zero or NaN element\n  // run a NMF with the residual matrix Y - A*B\n  if (indices.length > 0) {\n    let temp = fastExtractNMF(\n      originalMatrix.clone().subM(A.mmul(S)),\n      indices.length,\n    );\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = 0; j < S.columns; j++) {\n        S.set(indices[i], j, temp.S.get(i, j));\n      }\n      for (let j = 0; j < A.rows; j++) {\n        A.set(j, indices[i], temp.A.get(j, i));\n      }\n    }\n  }\n\n  return Object.assign({}, data, { A, S });\n}\n\nfunction fastExtractNMF(residual, r) {\n  if (r <= 0) return { A: [], S: [] };\n\n  const { columns, rows } = residual;\n\n  let A = Matrix.zeros(rows, r);\n  let S = Matrix.zeros(r, columns);\n  for (let i = 0; i < r; i++) {\n    residual = zeroInsteadOfNegative(residual);\n    if (residual.sum() === 0) continue;\n    let res2 = Matrix.pow(residual, 2).sum('column');\n    //find the max of the first column\n\n    let maxIndex = 0;\n    for (let j = 1; j < res2.length; j++) {\n      if (res2[maxIndex] < res2[j]) maxIndex = j;\n    }\n\n    if (res2[maxIndex] > 0) {\n      let sqrtMaxValue = Math.sqrt(res2[maxIndex]);\n      for (let j = 0; j < rows; j++) {\n        let value = residual.get(j, maxIndex) / sqrtMaxValue;\n        A.set(j, i, value);\n      }\n      let temp = A.getColumnVector(i).transpose().mmul(residual);\n      for (let j = 0; j < columns; j++) {\n        S.set(i, j, Math.max(temp.get(0, j), 0));\n      }\n      let subtracting = A.getColumnVector(i).mmul(S.getRowVector(i));\n      residual = residual.sub(subtracting);\n    }\n  }\n  return { A, S };\n}\n","import { Matrix } from 'ml-matrix';\n\nexport function normBy(x, by = 'column') {\n  let norms = Matrix.mul(x, x).sum(by);\n  let length = norms.length;\n  for (let i = 0; i < length; i++) {\n    norms[i] = Math.sqrt(norms[i]);\n  }\n  return by === 'row'\n    ? Matrix.from1DArray(length, 1, norms)\n    : Matrix.from1DArray(1, length, norms);\n}\n","import { normBy } from './normBy';\n\nexport function normProj(X, normLimits) {\n  let norms;\n  let r = X.rows;\n  let c = X.columns;\n  if (normLimits.rows === r) {\n    norms = normBy(X, 'row');\n    //select rows with norm > 0 then multiply twise by the min\n    for (let i = 0; i < r; i++) {\n      if (norms.get(i, 0) <= 0) continue;\n      for (let j = 0; j < c; j++) {\n        let value =\n          X.get(i, j) *\n          Math.min(norms.get(i, 0), normLimits.get(i, 0) / norms.get(i, 0));\n        X.set(i, j, value);\n      }\n    }\n  } else {\n    norms = normBy(X, 'column');\n    for (let i = 0; i < c; i++) {\n      if (norms.get(0, i) <= 0) continue;\n      for (let j = 0; j < r; j++) {\n        let value =\n          X.get(j, i) *\n          Math.min(norms.get(0, i), normLimits.get(0, i) / norms.get(0, i));\n        X.set(j, i, value);\n      }\n    }\n  }\n  return X;\n}\n","import { Matrix, EVD } from 'ml-matrix';\n\nimport { normBy } from '../util/normBy';\nimport { normProj } from '../util/normProj';\nimport { zeroInsteadOfNegative } from '../util/zeroInsteadOfNegative';\n\nexport function updateMatrixA(Ainit, S, originalMatrix, options) {\n  let {\n    maxFBIteration,\n    toleranceFB,\n    normConstrained = false,\n    lambda,\n  } = options;\n  let St = S.transpose();\n  let H = S.mmul(St);\n  let YSt = originalMatrix.mmul(St);\n  let evd = new EVD(H, { assumeSymmetric: true });\n  let L = Math.max(...evd.realEigenvalues);\n  let A = Ainit;\n  let prevA = A.clone();\n  let t = 1;\n\n  let gradient = (a) => a.mmul(H).sub(YSt);\n  let proximal;\n  if (normConstrained) {\n    let normLimits = normBy(Ainit, 'column');\n    proximal = (x, threshold) =>\n      normProj(zeroInsteadOfNegative(x.subS(threshold)), normLimits);\n  } else {\n    proximal = (x, threshold) => zeroInsteadOfNegative(x.subS(threshold));\n  }\n\n  for (let i = 0; i < maxFBIteration; i++) {\n    let tNext = (1 + Math.sqrt(1 + 4 * t * t)) / 2;\n    let w = (t - 1) / tNext;\n    t = tNext;\n    let B = Matrix.mul(A, w + 1).sub(Matrix.mul(prevA, w));\n    prevA = A.clone();\n    A = proximal(B.sub(gradient(B).divS(L)), lambda / L);\n    if (Matrix.sub(prevA, A).norm() / A.norm() < toleranceFB) {\n      break;\n    }\n  }\n  return A;\n}\n","export function getMax(array = []) {\n  let max = Number.MIN_SAFE_INTEGER;\n  for (let i = 0; i < array.length; i++) {\n    if (max < array[i]) max = array[i];\n  }\n  return max;\n}\n","import { Matrix, EVD } from 'ml-matrix';\n\nimport { getMax } from '../util/getMax';\nimport { zeroInsteadOfNegative } from '../util/zeroInsteadOfNegative';\n\nexport function updateMatrixS(A, Sinit, originalMatrix, lambda, options) {\n  let { maxFBIteration, toleranceFB } = options;\n  let At = A.transpose();\n  let H = At.mmul(A);\n  let AtY = At.mmul(originalMatrix);\n  let evd = new EVD(H, { assumeSymmetric: true });\n  let L = getMax(evd.realEigenvalues);\n  let t = 1;\n  let S = Sinit.clone();\n  let prevS = S.clone();\n  let gradient = (s) => H.mmul(s).sub(AtY);\n  let proximal = (x, threshold) => zeroInsteadOfNegative(x.subS(threshold));\n\n  for (let i = 0; i < maxFBIteration; i++) {\n    let tNext = (1 + Math.sqrt(1 + 4 * t * t)) / 2;\n    let w = (t - 1) / tNext;\n    t = tNext;\n    // R = S_k + w [S_k - S_(k-1)] = (1 + w) .* S_k - w .* S_(k-1)\n    let R = Matrix.mul(S, 1 + w).sub(Matrix.mul(prevS, w));\n    prevS = S.clone();\n    S = proximal(R.sub(gradient(R).divS(L)), lambda / L);\n    if (Matrix.sub(prevS, S).norm() / S.norm() < toleranceFB) {\n      break;\n    }\n  }\n  return S;\n}\n","import { Matrix, solve } from 'ml-matrix';\n\nimport { zeroInsteadOfNegative } from '../util/zeroInsteadOfNegative';\n\nimport { checkMatrixS } from './checkMatrixS';\nimport { updateMatrixA } from './updateMatrixA';\nimport { updateMatrixS } from './updateMatrixS';\n\nexport function initialize(originalMatrix, options = {}) {\n  const {\n    rank,\n    randGenerator,\n    maxInitFBIteration,\n    toleranceFBInit,\n    maxFBIteration,\n    toleranceFB,\n    normConstrained,\n  } = options;\n\n  let result = {};\n  let rows = originalMatrix.rows;\n\n  result.A = Matrix.rand(rows, rank, { random: randGenerator });\n\n  for (let iter = 0; iter < maxInitFBIteration; iter++) {\n    //select columns with sum positive from A\n    let sumC = result.A.sum('column');\n    for (let i = 0; i < sumC.length; i++) {\n      while (sumC[i] === 0) {\n        sumC[i] = 0;\n        for (let j = 0; j < rows; j++) {\n          result.A.set(j, i, randGenerator());\n          sumC[i] += result.A.get(j, i);\n        }\n      }\n    }\n\n    //resolve the system of equation Lx = D for x, then select just non negative values;\n    result.S = zeroInsteadOfNegative(solve(result.A, originalMatrix));\n\n    //select rows with positive sum by row\n    let sumR = result.S.sum('row');\n    let positiveSumRowIndexS = [];\n    let positiveSumRowS = [];\n    for (let i = 0; i < sumR.length; i++) {\n      if (sumR[i] > 0) {\n        positiveSumRowIndexS.push(i);\n        positiveSumRowS.push(result.S.getRow(i));\n      }\n    }\n\n    positiveSumRowS = Matrix.checkMatrix(positiveSumRowS);\n\n    // solve the system of linear equation xL = D for x. knowing that D/L = (L'\\D')'.\n    let candidateA = zeroInsteadOfNegative(\n      solve(positiveSumRowS.transpose(), originalMatrix.transpose()),\n    );\n\n    //then, set the columns of A with an index equal to the row index with sum > 0 into S\n    //this step complete the last transpose of D/L = (L'\\D')'.\n    for (let i = 0; i < positiveSumRowIndexS.length; i++) {\n      let colCandidate = candidateA.getRow(i);\n      for (let j = 0; j < rows; j++) {\n        result.A.set(j, positiveSumRowIndexS[i], colCandidate[j]);\n      }\n    }\n\n    let prevS = result.S.clone();\n    result.S = updateMatrixS(result.A, result.S, originalMatrix, 0, {\n      maxFBIteration,\n      toleranceFB,\n    });\n\n    result = checkMatrixS(result, originalMatrix);\n\n    result.A = updateMatrixA(result.A, result.S, originalMatrix, 0, {\n      maxFBIteration,\n      toleranceFB,\n      normConstrained,\n    });\n\n    if (\n      Matrix.sub(prevS, result.S).norm() / result.S.norm() <\n      toleranceFBInit\n    ) {\n      break;\n    }\n  }\n  return result;\n}\n","import { Matrix } from 'ml-matrix';\n\nimport { normBy } from '../util/normBy';\n\nexport function normalize(data, options) {\n  const { normOnA } = options;\n  let DS = normBy(data.S.transpose(), 'column');\n  let DA = normBy(data.A, 'column');\n  let D = Matrix.mul(DS, DA);\n  let onS, onA;\n  if (normOnA) {\n    onS = (index, c) =>\n      (data.S.get(index, c) * D.get(0, index)) / DS.get(0, index);\n    onA = (index, r) => data.A.get(r, index) / DA.get(0, index);\n  } else {\n    onS = (index, c) => data.S.get(index, c) / DS.get(0, index);\n    onA = (index, r) =>\n      (data.A.get(r, index) * D.get(0, index)) / DA.get(0, index);\n  }\n  const sColumns = data.S.columns;\n  const aRows = data.A.rows;\n  for (let index = 0; index < D.columns; index++) {\n    let valueForS, valueForA;\n    if (D.get(0, index) > 0) {\n      valueForS = onS;\n      valueForA = onA;\n    } else {\n      valueForA = () => 0;\n      valueForS = () => 0;\n    }\n    for (let c = 0; c < sColumns; c++) {\n      data.S.set(index, c, valueForS(index, c));\n    }\n    for (let r = 0; r < aRows; r++) {\n      data.A.set(r, index, valueForA(index, r));\n    }\n  }\n  return data;\n}\n","import median from 'median-quickselect';\nimport { Matrix } from 'ml-matrix';\n\nexport function getMedians(X, by) {\n  let medians = [];\n  let rows = X.rows;\n  let columns = X.columns;\n  switch (by) {\n    case 'column':\n      for (let i = 0; i < columns; i++) {\n        medians.push(median(X.getColumn(i)));\n      }\n      medians = Matrix.from1DArray(1, columns, medians);\n      break;\n    default:\n      for (let i = 0; i < rows; i++) {\n        medians.push(median(X.getRow(i)));\n      }\n      medians = Matrix.from1DArray(rows, 1, medians);\n  }\n  return medians;\n}\n","import { Matrix } from 'ml-matrix';\n\nimport { getMedians } from './getMedians';\n\nexport function dimMADstd(X, by) {\n  let medians = getMedians(X, by);\n  let matrix = X.clone();\n  matrix =\n    by === 'column'\n      ? matrix.subRowVector(medians.to1DArray())\n      : matrix.subColumnVector(medians.to1DArray());\n  return Matrix.mul(getMedians(matrix.abs(), by), 1.4826);\n}\n","import { Matrix } from 'ml-matrix';\n\nimport { dimMADstd } from '../util/dimMADstd';\n\nexport function updateLambda(data, originalMatrix, options = {}) {\n  let { refinementBeginning, tauMAD } = options;\n  let { iteration, lambda, A, S } = data;\n\n  if (refinementBeginning <= iteration) return lambda;\n\n  let sigmaResidue;\n  if (options.lambdaInf !== undefined) {\n    sigmaResidue = options.lambdaInf / options.tauMAD;\n  } else if (options.addStd !== undefined) {\n    sigmaResidue = options.addStd;\n  } else {\n    let alY = Matrix.sub(originalMatrix, A.mmul(S)).to1DArray();\n    let result = dimMADstd(Matrix.from1DArray(1, alY.length, alY), 'row');\n    sigmaResidue = result.get(0, 0);\n  }\n  let nextLambda = Math.max(\n    tauMAD * sigmaResidue,\n    lambda - 1 / (refinementBeginning - iteration),\n  );\n  return nextLambda;\n}\n","import { Matrix } from 'ml-matrix';\n\nimport { checkMatrixS } from './stages/checkMatrixS';\nimport { initialize } from './stages/initialize';\nimport { normalize } from './stages/normalize';\nimport { updateLambda } from './stages/updateLambda';\nimport { updateMatrixA } from './stages/updateMatrixA';\nimport { updateMatrixS } from './stages/updateMatrixS';\n\n/**\n * Performing non-negative matrix factorization solving argmin_(A >= 0, S >= 0) 1 / 2 * ||Y - AS||_2^2 + lambda * ||S||_1\n * @param {Matrix||Array<Array>} originalMatrix - Matrix to be separated.\n * @param {Number} rank - The maximum number of linearly independent column/row vectors in the matrix.\n * @param {Object} [options = {}] - Options of ngmca factorization method.\n * @param {Number} [options.maximumIteration = 500] - Maximum number of iterations.\n * @param {Number} [options.maxFBIteration = 80] - Maximum number of iterations of the Forward-Backward subroutine.\n * @param {Object} [options.randGenerator = Math.random] - Random number generator for the subroutine of initialization.\n * @param {Number} [options.maxInitFBIteration = 50] - Maximum number of iterations of the Forward-Backward subroutine at the initialization.\n * @param {Number} [options.toleranceFB = 1e-5] - relative difference tolerance for convergence of the Forward-Backward sub-iterations.\n * @param {Number} [options.toleranceFBInit = 0] - relative difference tolerance for convergence of the Forward-Backward sub-iterations at the initialization.\n * @param {Number} [options.phaseRatio = 0.8] - transition between decreasing thresholding phase and refinement phase in percent of the iterations.\n * @param {Number} [options.tauMAD = 1] - constant coefficient for the final threshold computation.\n * @param {Boolean} [options.useTranspose = false] - if true the originalMatrix is transposed.\n */\n\nexport function nGMCA(originalMatrix, rank, options = {}) {\n  const {\n    maximumIteration = 500,\n    maxFBIteration = 80,\n    maxInitFBIteration = 50,\n    toleranceFBInit = 0,\n    toleranceFB = 0.00001,\n    phaseRatio = 0.8,\n    randGenerator = Math.random,\n    tauMAD = 1,\n    useTranspose = false,\n  } = options;\n\n  let { normConstrained = false } = options;\n  originalMatrix = Matrix.checkMatrix(originalMatrix);\n  if (useTranspose) originalMatrix = originalMatrix.transpose();\n  let refinementBeginning = Math.floor(phaseRatio * maximumIteration);\n\n  let data = initialize(originalMatrix, {\n    rank,\n    randGenerator,\n    maxInitFBIteration,\n    toleranceFBInit,\n    maxFBIteration,\n    toleranceFB,\n  });\n\n  data = normalize(data, { normOnA: true });\n  data.lambda = data.A.transpose()\n    .mmul(data.A.mmul(data.S).sub(originalMatrix))\n    .abs()\n    .max();\n\n  for (let iter = 0; iter < maximumIteration; iter++) {\n    data.iteration = iter;\n    data.S = updateMatrixS(\n      data.A,\n      data.S,\n      originalMatrix,\n      data.lambda,\n      options,\n    );\n    data = checkMatrixS(data, originalMatrix);\n    data = normalize(data, { normOnA: false });\n\n    if (iter > refinementBeginning) normConstrained = true;\n\n    data.A = updateMatrixA(data.A, data.S, originalMatrix, {\n      maxFBIteration,\n      toleranceFB,\n      normConstrained,\n      lambda: 0,\n    });\n\n    data = normalize(data, { normOnA: true });\n\n    data.lambda = updateLambda(data, originalMatrix, {\n      refinementBeginning,\n      tauMAD,\n    });\n  }\n\n  if (useTranspose) {\n    let temp = data.A.transpose();\n    data.A = data.S.transpose();\n    data.S = temp;\n  }\n  return data;\n}\n","'use strict';\n\n// Accuracy\nexports.acc = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.tn[i] + pred.tp[i]) / (l - 1);\n    }\n    return result;\n};\n\n// Error rate\nexports.err = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.fp[i] / (l - 1));\n    }\n    return result;\n};\n\n// False positive rate\nexports.fpr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.fp[i] / pred.nNeg;\n    }\n    return result;\n};\n\n// True positive rate\nexports.tpr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.tp[i] / pred.nPos;\n    }\n    return result;\n};\n\n// False negative rate\nexports.fnr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.fn[i] / pred.nPos;\n    }\n    return result;\n};\n\n// True negative rate\nexports.tnr = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.tn[i] / pred.nNeg;\n    }\n    return result;\n};\n\n// Positive predictive value\nexports.ppv = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fp[i] + pred.tp[i] !== 0) ? (pred.tp[i] / (pred.fp[i] + pred.tp[i])) : 0;\n    }\n    return result;\n};\n\n// Negative predictive value\nexports.npv = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.tn[i] !== 0) ? (pred.tn[i] / (pred.fn[i] + pred.tn[i])) : 0;\n    }\n    return result;\n};\n\n// Prediction conditioned fallout\nexports.pcfall = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fp[i] + pred.tp[i] !== 0) ? 1 - (pred.tp[i] / (pred.fp[i] + pred.tp[i])) : 1;\n    }\n    return result;\n};\n\n// Prediction conditioned miss\nexports.pcmiss = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.fn[i] + pred.tn[i] !== 0) ? 1 - (pred.tn[i] / (pred.fn[i] + pred.tn[i])) : 1;\n    }\n    return result;\n};\n\n// Lift value\nexports.lift = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = (pred.nPosPred[i] !== 0) ? ((pred.tp[i] / pred.nPos) / (pred.nPosPred[i] / pred.nSamples)) : 0;\n    }\n    return result;\n};\n\n// Rate of positive predictions\nexports.rpp = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.nPosPred[i] / pred.nSamples;\n    }\n    return result;\n};\n\n// Rate of negative predictions\nexports.rnp = pred => {\n    const l = pred.cutoffs.length;\n    const result = new Array(l);\n    for (var i = 0; i < l; i++) {\n        result[i] = pred.nNegPred[i] / pred.nSamples;\n    }\n    return result;\n};\n\n// Threshold\nexports.threshold = pred => {\n    const clone = pred.cutoffs.slice();\n    clone[0] = clone[1]; // Remove the infinite value\n    return clone;\n};\n","'use strict';\n\nconst measures = require('./measures');\n\nclass Performance {\n    /**\n     *\n     * @param prediction - The prediction matrix\n     * @param target - The target matrix (values: truthy for same class, falsy for different class)\n     * @param options\n     *\n     * @option    all    True if the entire matrix must be used. False to ignore the diagonal and lower part (default is false, for similarity/distance matrices)\n     * @option    max    True if the max value corresponds to a perfect match (like in similarity matrices), false if it is the min value (default is false, like in distance matrices. All values will be multiplied by -1)\n     */\n    constructor(prediction, target, options) {\n        options = options || {};\n        if (prediction.length !== target.length || prediction[0].length !== target[0].length) {\n            throw new Error('dimensions of prediction and target do not match');\n        }\n        const rows = prediction.length;\n        const columns = prediction[0].length;\n        const isDistance = !options.max;\n\n        const predP = [];\n\n        if (options.all) {\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    predP.push({\n                        pred: prediction[i][j],\n                        targ: target[i][j]\n                    });\n                }\n            }\n        } else {\n            if (rows < 3 || rows !== columns) {\n                throw new Error('When \"all\" option is false, the prediction matrix must be square and have at least 3 columns');\n            }\n            for (var i = 0; i < rows - 1; i++) {\n                for (var j = i + 1; j < columns; j++) {\n                    predP.push({\n                        pred: prediction[i][j],\n                        targ: target[i][j]\n                    });\n                }\n            }\n        }\n\n        if (isDistance) {\n            predP.sort((a, b) => a.pred - b.pred);\n        } else {\n            predP.sort((a, b) => b.pred - a.pred);\n        }\n        \n        const cutoffs = this.cutoffs = [isDistance ? Number.MIN_VALUE : Number.MAX_VALUE];\n        const fp = this.fp = [0];\n        const tp = this.tp = [0];\n\n        var nPos = 0;\n        var nNeg = 0;\n\n        var currentPred = predP[0].pred;\n        var nTp = 0;\n        var nFp = 0;\n        for (var i = 0; i < predP.length; i++) {\n            if (predP[i].pred !== currentPred) {\n                cutoffs.push(currentPred);\n                fp.push(nFp);\n                tp.push(nTp);\n                currentPred = predP[i].pred;\n            }\n            if (predP[i].targ) {\n                nPos++;\n                nTp++;\n            } else {\n                nNeg++;\n                nFp++;\n            }\n        }\n        cutoffs.push(currentPred);\n        fp.push(nFp);\n        tp.push(nTp);\n\n        const l = cutoffs.length;\n        const fn = this.fn = new Array(l);\n        const tn = this.tn = new Array(l);\n        const nPosPred = this.nPosPred = new Array(l);\n        const nNegPred = this.nNegPred = new Array(l);\n\n        for (var i = 0; i < l; i++) {\n            fn[i] = nPos - tp[i];\n            tn[i] = nNeg - fp[i];\n\n            nPosPred[i] = tp[i] + fp[i];\n            nNegPred[i] = tn[i] + fn[i];\n        }\n\n        this.nPos = nPos;\n        this.nNeg = nNeg;\n        this.nSamples = nPos + nNeg;\n    }\n\n    /**\n     * Computes a measure from the prediction object.\n     *\n     * Many measures are available and can be combined :\n     * To create a ROC curve, you need fpr and tpr\n     * To create a DET curve, you need fnr and fpr\n     * To create a Lift chart, you need rpp and lift\n     *\n     * Possible measures are : threshold (Threshold), acc (Accuracy), err (Error rate),\n     * fpr (False positive rate), tpr (True positive rate), fnr (False negative rate), tnr (True negative rate), ppv (Positive predictive value),\n     * npv (Negative predictive value), pcfall (Prediction-conditioned fallout), pcmiss (Prediction-conditioned miss), lift (Lift value), rpp (Rate of positive predictions), rnp (Rate of negative predictions)\n     *\n     * @param measure - The short name of the measure\n     *\n     * @return [number]\n     */\n    getMeasure(measure) {\n        if (typeof measure !== 'string') {\n            throw new Error('No measure specified');\n        }\n        if (!measures[measure]) {\n            throw new Error(`The specified measure (${measure}) does not exist`);\n        }\n        return measures[measure](this);\n    }\n\n    /**\n     * Returns the area under the ROC curve\n     */\n    getAURC() {\n        const l = this.cutoffs.length;\n        const x = new Array(l);\n        const y = new Array(l);\n        for (var i = 0; i < l; i++) {\n            x[i] = this.fp[i] / this.nNeg;\n            y[i] = this.tp[i] / this.nPos;\n        }\n        var auc = 0;\n        for (i = 1; i < l; i++) {\n            auc += 0.5 * (x[i] - x[i - 1]) * (y[i] + y[i - 1]);\n        }\n        return auc;\n    }\n\n    /**\n     * Returns the area under the DET curve\n     */\n    getAUDC() {\n        const l = this.cutoffs.length;\n        const x = new Array(l);\n        const y = new Array(l);\n        for (var i = 0; i < l; i++) {\n            x[i] = this.fn[i] / this.nPos;\n            y[i] = this.fp[i] / this.nNeg;\n        }\n        var auc = 0;\n        for (i = 1; i < l; i++) {\n            auc += 0.5 * (x[i] + x[i - 1]) * (y[i] - y[i - 1]);\n        }\n        return auc;\n    }\n\n    getDistribution(options) {\n        options = options || {};\n        var cutLength = this.cutoffs.length;\n        var cutLow = options.xMin || Math.floor(this.cutoffs[cutLength - 1] * 100) / 100;\n        var cutHigh = options.xMax || Math.ceil(this.cutoffs[1] * 100) / 100;\n        var interval = options.interval || Math.floor(((cutHigh - cutLow) / 20 * 10000000) - 1) / 10000000; // Trick to avoid the precision problem of float numbers\n\n        var xLabels = [];\n        var interValues = [];\n        var intraValues = [];\n        var interCumPercent = [];\n        var intraCumPercent = [];\n\n        var nTP = this.tp[cutLength - 1], currentTP = 0;\n        var nFP = this.fp[cutLength - 1], currentFP = 0;\n\n        for (var i = cutLow, j = (cutLength - 1); i <= cutHigh; i += interval) {\n            while (this.cutoffs[j] < i)\n                j--;\n\n            xLabels.push(i);\n\n            var thisTP = nTP - currentTP - this.tp[j];\n            var thisFP = nFP - currentFP - this.fp[j];\n\n            currentTP += thisTP;\n            currentFP += thisFP;\n\n            interValues.push(thisFP);\n            intraValues.push(thisTP);\n\n            interCumPercent.push(100 - (nFP - this.fp[j]) / nFP * 100);\n            intraCumPercent.push(100 - (nTP - this.tp[j]) / nTP * 100);\n        }\n\n        return {\n            xLabels: xLabels,\n            interValues: interValues,\n            intraValues: intraValues,\n            interCumPercent: interCumPercent,\n            intraCumPercent: intraCumPercent\n        };\n    }\n}\n\nPerformance.names = {\n    acc: 'Accuracy',\n    err: 'Error rate',\n    fpr: 'False positive rate',\n    tpr: 'True positive rate',\n    fnr: 'False negative rate',\n    tnr: 'True negative rate',\n    ppv: 'Positive predictive value',\n    npv: 'Negative predictive value',\n    pcfall: 'Prediction-conditioned fallout',\n    pcmiss: 'Prediction-conditioned miss',\n    lift: 'Lift value',\n    rpp: 'Rate of positive predictions',\n    rnp: 'Rate of negative predictions',\n    threshold: 'Threshold'\n};\n\nmodule.exports = Performance;\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","// auxiliary file to create the 256 look at table elements\n\nvar ans = new Array(256);\nfor (var i = 0; i < 256; i++) {\n    var num = i;\n    var c = 0;\n    while (num) {\n        num = num & (num - 1);\n        c++;\n    }\n    ans[i] = c;\n}\n\nmodule.exports = ans;","'use strict';\n\nvar eightBits = require('./creator');\n\n/**\n * Count the number of true values in an array\n * @param {Array} arr\n * @return {number}\n */\nfunction count(arr) {\n    var c = 0;\n    for (var i = 0; i < arr.length; i++) {\n        c += eightBits[arr[i] & 0xff] + eightBits[(arr[i] >> 8) & 0xff] + eightBits[(arr[i] >> 16) & 0xff] + eightBits[(arr[i] >> 24) & 0xff];\n    }\n    return c;\n}\n\n/**\n * Logical AND operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction and(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] & arr2[i];\n    return ans;\n}\n\n/**\n * Logical OR operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction or(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] | arr2[i];\n    return ans;\n}\n\n/**\n * Logical XOR operation\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Array}\n */\nfunction xor(arr1, arr2) {\n    var ans = new Array(arr1.length);\n    for (var i = 0; i < arr1.length; i++)\n        ans[i] = arr1[i] ^ arr2[i];\n    return ans;\n}\n\n/**\n * Logical NOT operation\n * @param {Array} arr\n * @return {Array}\n */\nfunction not(arr) {\n    var ans = new Array(arr.length);\n    for (var i = 0; i < ans.length; i++)\n        ans[i] = ~arr[i];\n    return ans;\n}\n\n/**\n * Gets the n value of array arr\n * @param {Array} arr\n * @param {number} n\n * @return {boolean}\n */\nfunction getBit(arr, n) {\n    var index = n >> 5; // Same as Math.floor(n/32)\n    var mask = 1 << (31 - n % 32);\n    return Boolean(arr[index] & mask);\n}\n\n/**\n * Sets the n value of array arr to the value val\n * @param {Array} arr\n * @param {number} n\n * @param {boolean} val\n * @return {Array}\n */\nfunction setBit(arr, n, val) {\n    var index = n >> 5; // Same as Math.floor(n/32)\n    var mask = 1 << (31 - n % 32);\n    if (val)\n        arr[index] = mask | arr[index];\n    else\n        arr[index] = ~mask & arr[index];\n    return arr;\n}\n\n/**\n * Translates an array of numbers to a string of bits\n * @param {Array} arr\n * @returns {string}\n */\nfunction toBinaryString(arr) {\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        var obj = (arr[i] >>> 0).toString(2);\n        str += '00000000000000000000000000000000'.substr(obj.length) + obj;\n    }\n    return str;\n}\n\n/**\n * Creates an array of numbers based on a string of bits\n * @param {string} str\n * @returns {Array}\n */\nfunction parseBinaryString(str) {\n    var len = str.length / 32;\n    var ans = new Array(len);\n    for (var i = 0; i < len; i++) {\n        ans[i] = parseInt(str.substr(i*32, 32), 2) | 0;\n    }\n    return ans;\n}\n\n/**\n * Translates an array of numbers to a hex string\n * @param {Array} arr\n * @returns {string}\n */\nfunction toHexString(arr) {\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        var obj = (arr[i] >>> 0).toString(16);\n        str += '00000000'.substr(obj.length) + obj;\n    }\n    return str;\n}\n\n/**\n * Creates an array of numbers based on a hex string\n * @param {string} str\n * @returns {Array}\n */\nfunction parseHexString(str) {\n    var len = str.length / 8;\n    var ans = new Array(len);\n    for (var i = 0; i < len; i++) {\n        ans[i] = parseInt(str.substr(i*8, 8), 16) | 0;\n    }\n    return ans;\n}\n\n/**\n * Creates a human readable string of the array\n * @param {Array} arr\n * @returns {string}\n */\nfunction toDebug(arr) {\n    var binary = toBinaryString(arr);\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        str += '0000'.substr((i * 32).toString(16).length) + (i * 32).toString(16) + ':';\n        for (var j = 0; j < 32; j += 4) {\n            str += ' ' + binary.substr(i * 32 + j, 4);\n        }\n        if (i < arr.length - 1) str += '\\n';\n    }\n    return str\n}\n\nmodule.exports = {\n    count: count,\n    and: and,\n    or: or,\n    xor: xor,\n    not: not,\n    getBit: getBit,\n    setBit: setBit,\n    toBinaryString: toBinaryString,\n    parseBinaryString: parseBinaryString,\n    toHexString: toHexString,\n    parseHexString: parseHexString,\n    toDebug: toDebug\n};\n","export default function SavitzkyGolay(data, h, options = {}) {\n  let { windowSize = 9, derivative = 0, polynomial = 3 } = options;\n\n  if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (windowSize > data.length) {\n    throw new RangeError(\n      `Window size is higher than the data length ${windowSize}>${data.length}`,\n    );\n  }\n  if (derivative < 0 || !Number.isInteger(derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (polynomial < 1 || !Number.isInteger(polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n  if (polynomial >= 6) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'You should not use polynomial grade higher than 5 if you are' +\n        ' not sure that your data arises from such a model. Possible polynomial oscillation problems',\n    );\n  }\n\n  let half = Math.floor(windowSize / 2);\n  let np = data.length;\n  let ans = new Array(np);\n  let weights = fullWeights(windowSize, polynomial, derivative);\n  let hs = 0;\n  let constantH = true;\n  if (Array.isArray(h)) {\n    constantH = false;\n  } else {\n    hs = Math.pow(h, derivative);\n  }\n\n  //For the borders\n  for (let i = 0; i < half; i++) {\n    let wg1 = weights[half - i - 1];\n    let wg2 = weights[half + i + 1];\n    let d1 = 0;\n    let d2 = 0;\n    for (let l = 0; l < windowSize; l++) {\n      d1 += wg1[l] * data[l];\n      d2 += wg2[l] * data[np - windowSize + l];\n    }\n    if (constantH) {\n      ans[half - i - 1] = d1 / hs;\n      ans[np - half + i] = d2 / hs;\n    } else {\n      hs = getHs(h, half - i - 1, half, derivative);\n      ans[half - i - 1] = d1 / hs;\n      hs = getHs(h, np - half + i, half, derivative);\n      ans[np - half + i] = d2 / hs;\n    }\n  }\n\n  //For the internal points\n  let wg = weights[half];\n  for (let i = windowSize; i <= np; i++) {\n    let d = 0;\n    for (let l = 0; l < windowSize; l++) d += wg[l] * data[l + i - windowSize];\n    if (!constantH) hs = getHs(h, i - half - 1, half, derivative);\n    ans[i - half - 1] = d / hs;\n  }\n  return ans;\n}\n\nfunction getHs(h, center, half, derivative) {\n  let hs = 0;\n  let count = 0;\n  for (let i = center - half; i < center + half; i++) {\n    if (i >= 0 && i < h.length - 1) {\n      hs += h[i + 1] - h[i];\n      count++;\n    }\n  }\n  return Math.pow(hs / count, derivative);\n}\n\nfunction GramPoly(i, m, k, s) {\n  let Grampoly = 0;\n  if (k > 0) {\n    Grampoly =\n      ((4 * k - 2) / (k * (2 * m - k + 1))) *\n        (i * GramPoly(i, m, k - 1, s) + s * GramPoly(i, m, k - 1, s - 1)) -\n      (((k - 1) * (2 * m + k)) / (k * (2 * m - k + 1))) *\n        GramPoly(i, m, k - 2, s);\n  } else {\n    if (k === 0 && s === 0) {\n      Grampoly = 1;\n    } else {\n      Grampoly = 0;\n    }\n  }\n  return Grampoly;\n}\n\nfunction GenFact(a, b) {\n  let gf = 1;\n  if (a >= b) {\n    for (let j = a - b + 1; j <= a; j++) {\n      gf *= j;\n    }\n  }\n  return gf;\n}\n\nfunction Weight(i, t, m, n, s) {\n  let sum = 0;\n  for (let k = 0; k <= n; k++) {\n    //console.log(k);\n    sum +=\n      (2 * k + 1) *\n      (GenFact(2 * m, k) / GenFact(2 * m + k + 1, k + 1)) *\n      GramPoly(i, m, k, 0) *\n      GramPoly(t, m, k, s);\n  }\n  return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m, n, s) {\n  let weights = new Array(m);\n  let np = Math.floor(m / 2);\n  for (let t = -np; t <= np; t++) {\n    weights[t + np] = new Array(m);\n    for (let j = -np; j <= np; j++) {\n      weights[t + np][j + np] = Weight(j, t, np, n, s);\n    }\n  }\n  return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\n","import SG from 'ml-savitzky-golay-generalized';\n\n/**\n * Global spectra deconvolution\n * @param {Array<number>} x - Independent variable\n * @param {Array<number>} yIn - Dependent variable\n * @param {object} [options] - Options object\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nexport function gsd(x, yIn, options = {}) {\n  let {\n    noiseLevel,\n    sgOptions = {\n      windowSize: 9,\n      polynomial: 3,\n    },\n    smoothY = true,\n    heightFactor = 0,\n    broadRatio = 0.0,\n    maxCriteria = true,\n    minMaxRatio = 0.00025,\n    derivativeThreshold = -1,\n    realTopDetection = false,\n  } = options;\n\n  const y = yIn.slice();\n  let equalSpaced = isEqualSpaced(x);\n\n  if (noiseLevel === undefined) {\n    noiseLevel = equalSpaced ? getNoiseLevel(y) : 0;\n  }\n\n  const yCorrection = { m: 1, b: noiseLevel };\n\n  if (!maxCriteria) {\n    yCorrection.m = -1;\n    yCorrection.b *= -1;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    y[i] = yCorrection.m * y[i] - yCorrection.b;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then,\n  // we can assume it to be equally spaced variable\n  let yData = y;\n  let dY, ddY;\n  const { windowSize, polynomial } = sgOptions;\n\n  if (equalSpaced) {\n    if (smoothY) {\n      yData = SG(y, x[1] - x[0], {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  } else {\n    if (smoothY) {\n      yData = SG(y, x, {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  }\n\n  const xData = x;\n  const dX = x[1] - x[0];\n  let maxDdy = 0;\n  let maxY = 0;\n  for (let i = 0; i < yData.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(yData[i]) > maxY) {\n      maxY = Math.abs(yData[i]);\n    }\n  }\n\n  let lastMax = null;\n  let lastMin = null;\n  let minddY = new Array(yData.length - 2);\n  let intervalL = new Array(yData.length);\n  let intervalR = new Array(yData.length);\n  let broadMask = new Array(yData.length - 2);\n  let minddYLen = 0;\n  let intervalLLen = 0;\n  let intervalRLen = 0;\n  let broadMaskLen = 0;\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < yData.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    // console.log('pasa', y[i], dY[i], ddY[i]);\n    if (Math.abs(dY[i]) > derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX > 0 && lastMax !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX < 0 && lastMin !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n      minddY[minddYLen++] = i; // ( [xData[i], yData[i], i] );\n      broadMask[broadMaskLen++] = Math.abs(ddY[i]) <= broadRatio * maxDdy;\n    }\n  }\n  minddY.length = minddYLen;\n  intervalL.length = intervalLLen;\n  intervalR.length = intervalRLen;\n  broadMask.length = broadMaskLen;\n\n  let signals = new Array(minddY.length);\n  let signalsLen = 0;\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = xData[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(yData[minddY[j]]) > minMaxRatio * maxY) {\n        signals[signalsLen++] = {\n          index: minddY[j],\n          x: frequency,\n          y: (yData[minddY[j]] + yCorrection.b) / yCorrection.m,\n          width: Math.abs(intervalR[possible].x - intervalL[possible].x), // widthCorrection\n          soft: broadMask[j],\n        };\n\n        signals[signalsLen - 1].left = intervalL[possible];\n        signals[signalsLen - 1].right = intervalR[possible];\n\n        if (heightFactor) {\n          let yLeft = yData[intervalL[possible].index];\n          let yRight = yData[intervalR[possible].index];\n          signals[signalsLen - 1].height =\n            heightFactor * (signals[signalsLen - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n  signals.length = signalsLen;\n\n  if (realTopDetection) {\n    determineRealTop(signals, xData, yData);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nconst isEqualSpaced = (x) => {\n  let tmp;\n  let maxDx = 0;\n  let minDx = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i < x.length - 1; ++i) {\n    tmp = Math.abs(x[i + 1] - x[i]);\n    if (tmp < minDx) {\n      minDx = tmp;\n    }\n    if (tmp > maxDx) {\n      maxDx = tmp;\n    }\n  }\n  return (maxDx - minDx) / maxDx < 0.05;\n};\n\nconst getNoiseLevel = (y) => {\n  let mean = 0;\n\n  let stddev = 0;\n  let length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  let averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort((a, b) => a - b);\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n};\n\nconst determineRealTop = (peakList, x, y) => {\n  let alpha, beta, gamma, p, currentPoint;\n  for (let j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 units to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1] &&\n      (y[currentPoint] !== y[currentPoint - 1] ||\n        y[currentPoint] !== y[currentPoint + 1])\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n};\n","/**\n * This function calculates the spectrum as a sum of gaussian functions. The Gaussian\n * parameters are divided in 3 batches. 1st: centers; 2nd: height; 3th: std's;\n * @param t Ordinate values\n * @param p Gaussian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nexport function sumOfGaussians(p) {\n  return function (t) {\n    let nL = p.length / 3;\n    let factor;\n    let rows = t.length;\n    let result = rows === undefined ? 0 : new Float64Array(rows).fill(0);\n    for (let i = 0; i < nL; i++) {\n      factor = Math.pow(p[i + nL * 2], 2) * 2;\n      if (rows === undefined) {\n        result += p[i + nL] * Math.exp(-Math.pow(t - p[i], 2) / factor);\n      } else {\n        for (let j = 0; j < rows; j++) {\n          result[j] += p[i + nL] * Math.exp(-Math.pow(t[j] - p[i], 2) / factor);\n        }\n      }\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { sumOfGaussians } from './sumOfGaussians';\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nexport function optimizeGaussianSum(xy, group, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n  let nL = group.length;\n  let pInit = new Float64Array(nL * 3);\n  let pMin = new Float64Array(nL * 3);\n  let pMax = new Float64Array(nL * 3);\n  let dt = Math.abs(t[0] - t[1]);\n\n  for (let i = 0; i < nL; i++) {\n    pInit[i] = group[i].x;\n    pInit[i + nL] = group[i].y / maxY;\n    pInit[i + 2 * nL] = group[i].width;\n\n    pMin[i] = group[i].x - dt;\n    pMin[i + nL] = 0;\n    pMin[i + 2 * nL] = group[i].width / 4;\n\n    pMax[i] = group[i].x + dt;\n    pMax[i + nL] = (group[i].y * 1.2) / maxY;\n    pMax[i + 2 * nL] = group[i].width * 4;\n  }\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n  let result = new Array(nL);\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n\n  opts = Object.assign({}, lmOptions, opts);\n\n  let pFit = LM(data, sumOfGaussians, opts);\n  for (let i = 0; i < nL; i++) {\n    result[i] = {\n      parameters: [\n        pFit.parameterValues[i],\n        pFit.parameterValues[i + nL] * maxY,\n        pFit.parameterValues[i + nL * 2],\n      ],\n      error: pFit.parameterError,\n    };\n  }\n  return result;\n}\n","/**\n * Single 3 parameter gaussian function\n * @param t Ordinate values\n * @param p Gaussian parameters [mean, height, std]\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\n\nexport function singleGaussian(p) {\n  return function (t) {\n    let factor2 = (p[2] * p[2]) / 2;\n    let rows = t.length;\n    if (!rows) return p[1] * Math.exp((-(t - p[0]) * (t - p[0])) / factor2);\n    let result = new Float64Array(t.length);\n    for (let i = 0; i < t.length; i++) {\n      result[i] = p[1] * Math.exp((-(t[i] - p[0]) * (t[i] - p[0])) / factor2);\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { singleGaussian } from './singleGaussian';\n\n/**\n * Fits a set of points to a gaussian bell. Returns the mean of the peak, the std and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nexport function optimizeSingleGaussian(xy, peak, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n  let dt = Math.abs(t[0] - t[1]);\n  let pInit = new Float64Array([peak.x, 1, peak.width]);\n  let pMin = new Float64Array([peak.x - dt, 0, peak.width / 4]);\n  let pMax = new Float64Array([peak.x + dt, 1.25, peak.width * 4]);\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n\n  opts = Object.assign({}, lmOptions, opts);\n  let pFit = LM(data, singleGaussian, opts);\n  return {\n    parameters: [\n      pFit.parameterValues[0],\n      pFit.parameterValues[1] * maxY,\n      pFit.parameterValues[2],\n    ],\n    error: pFit.parameterError,\n  };\n}\n","/**\n * This function calculates the spectrum as a sum of lorentzian functions. The Lorentzian\n * parameters are divided in 3 batches. 1st: centers; 2nd: heights; 3th: widths;\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @returns {*}\n */\n\nexport function sumOfLorentzians(p) {\n  return function (t) {\n    let nL = p.length / 3;\n    let factor;\n    let p2;\n    let rows = t.length;\n    let result = rows === undefined ? 0 : new Float64Array(rows).fill(0);\n    for (let i = 0; i < nL; i++) {\n      p2 = Math.pow(p[i + nL * 2] / 2, 2);\n      factor = p[i + nL] * p2;\n      if (rows === undefined) {\n        result += factor / (Math.pow(t - p[i], 2) + p2);\n      } else {\n        for (let j = 0; j < rows; j++) {\n          result[j] += factor / (Math.pow(t[j] - p[i], 2) + p2);\n        }\n      }\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { sumOfLorentzians } from './sumOfLorentzians';\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nexport function optimizeLorentzianSum(xy, group, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n\n  let nL = group.length;\n  let pInit = new Float64Array(nL * 3);\n  let pMin = new Float64Array(nL * 3);\n  let pMax = new Float64Array(nL * 3);\n  let dt = Math.abs(t[0] - t[1]);\n\n  for (let i = 0; i < nL; i++) {\n    pInit[i] = group[i].x;\n    pInit[i + nL] = 1;\n    pInit[i + 2 * nL] = group[i].width;\n\n    pMin[i] = group[i].x - dt;\n    pMin[i + nL] = 0;\n    pMin[i + 2 * nL] = group[i].width / 4;\n\n    pMax[i] = group[i].x + dt;\n    pMax[i + nL] = 1.5;\n    pMax[i + 2 * nL] = group[i].width * 4;\n  }\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n\n  let result = new Array(nL);\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n\n  opts = Object.assign({}, lmOptions, opts);\n\n  let pFit = LM(data, sumOfLorentzians, opts);\n  for (let i = 0; i < nL; i++) {\n    result[i] = {\n      parameters: [\n        pFit.parameterValues[i],\n        pFit.parameterValues[i + nL] * maxY,\n        pFit.parameterValues[i + nL * 2],\n      ],\n      error: pFit.parameterError,\n    };\n  }\n  return result;\n}\n","/**\n * Single 4 parameter lorentzian function\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\n\nexport function singleLorentzian(p) {\n  return function (t) {\n    let factor = p[1] * Math.pow(p[2] / 2, 2);\n    let rows = t.length;\n    if (!rows) return factor / (Math.pow(t - p[0], 2) + Math.pow(p[2] / 2, 2));\n    let result = new Float64Array(rows);\n    for (let i = 0; i < rows; i++) {\n      result[i] = factor / (Math.pow(t[i] - p[0], 2) + Math.pow(p[2] / 2, 2));\n    }\n    return result;\n  };\n}\n","import LM from 'ml-levenberg-marquardt';\n\nimport { singleLorentzian } from './singleLorentzian';\n\n/**\n * * Fits a set of points to a Lorentzian function. Returns the center of the peak, the width at half height, and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nexport function optimizeSingleLorentzian(xy, peak, opts = {}) {\n  let t = xy[0];\n  let yData = xy[1];\n  let maxY = Math.max(...yData);\n  yData.forEach((x, i, arr) => (arr[i] /= maxY));\n  let dt = Math.abs(t[0] - t[1]);\n  let pInit = new Float64Array([peak.x, 1, peak.width]);\n  let pMin = new Float64Array([peak.x - dt, 0.75, peak.width / 4]);\n  let pMax = new Float64Array([peak.x + dt, 1.25, peak.width * 4]);\n\n  let data = {\n    x: t,\n    y: yData,\n  };\n\n  let lmOptions = {\n    damping: 1.5,\n    initialValues: pInit,\n    minValues: pMin,\n    maxValues: pMax,\n    gradientDifference: dt / 10000,\n    maxIterations: 100,\n    errorTolerance: 10e-5,\n  };\n  opts = Object.assign({}, lmOptions, opts);\n  let pFit = LM(data, singleLorentzian, opts);\n  return {\n    parameters: [\n      pFit.parameterValues[0],\n      pFit.parameterValues[1] * maxY,\n      pFit.parameterValues[2],\n    ],\n    error: pFit.parameterError,\n  };\n}\n","import {\n  optimizeGaussianSum,\n  optimizeLorentzianSum,\n  optimizeSingleGaussian,\n  optimizeSingleLorentzian,\n} from 'ml-optimize-lorentzian';\n\nexport function optimizePeaks(peakList, x, y, options = {}) {\n  const {\n    functionName = 'gaussian',\n    factorWidth = 4,\n    optimizationOptions = {\n      damping: 1.5,\n      maxIterations: 100,\n      errorTolerance: 10e-5,\n    },\n  } = options;\n\n  let lastIndex = [0];\n  let groups = groupPeaks(peakList, factorWidth);\n  let result = [];\n  let factor = 1;\n  if (functionName === 'gaussian') {\n    factor = 1.17741;\n  } // From https://en.wikipedia.org/wiki/Gaussian_function#Properties\n  let sampling;\n  for (let i = 0; i < groups.length; i++) {\n    let peaks = groups[i].group;\n    if (peaks.length > 1) {\n      // Multiple peaks\n      sampling = sampleFunction(\n        groups[i].limits[0] - groups[i].limits[1],\n        groups[i].limits[0] + groups[i].limits[1],\n        x,\n        y,\n        lastIndex,\n      );\n      if (sampling[0].length > 5) {\n        let optPeaks = [];\n        if (functionName === 'gaussian') {\n          optPeaks = optimizeGaussianSum(sampling, peaks, optimizationOptions);\n        } else {\n          if (functionName === 'lorentzian') {\n            optPeaks = optimizeLorentzianSum(\n              sampling,\n              peaks,\n              optimizationOptions,\n            );\n          }\n        }\n\n        for (let j = 0; j < optPeaks.length; j++) {\n          let { parameters } = optPeaks[j];\n          result.push({\n            x: parameters[0],\n            y: parameters[1],\n            width: parameters[2] * factor,\n            index: peaks[j].index,\n          });\n        }\n      }\n    } else {\n      // Single peak\n      peaks = peaks[0];\n      sampling = sampleFunction(\n        peaks.x - factorWidth * peaks.width,\n        peaks.x + factorWidth * peaks.width,\n        x,\n        y,\n        lastIndex,\n      );\n\n      if (sampling[0].length > 5) {\n        let fitResult = [];\n        if (functionName === 'gaussian') {\n          fitResult = optimizeSingleGaussian(\n            [sampling[0], sampling[1]],\n            peaks,\n            optimizationOptions,\n          );\n        } else {\n          if (functionName === 'lorentzian') {\n            fitResult = optimizeSingleLorentzian(\n              [sampling[0], sampling[1]],\n              peaks,\n              optimizationOptions,\n            );\n          }\n        }\n\n        let { parameters } = fitResult;\n        result.push({\n          x: parameters[0],\n          y: parameters[1],\n          width: parameters[2] * factor,\n          index: peaks.index,\n        }); // From https://en.wikipedia.org/wiki/Gaussian_function#Properties}\n      }\n    }\n  }\n  return result;\n}\n\nfunction sampleFunction(from, to, x, y, lastIndex) {\n  let nbPoints = x.length;\n  let sampleX = [];\n  let sampleY = [];\n  let direction = Math.sign(x[1] - x[0]); // Direction of the derivative\n  if (direction === -1) {\n    lastIndex[0] = x.length - 1;\n  }\n\n  let delta = Math.abs(to - from) / 2;\n  let mid = (from + to) / 2;\n  let stop = false;\n  let index = lastIndex[0];\n  while (!stop && index < nbPoints && index >= 0) {\n    if (Math.abs(x[index] - mid) <= delta) {\n      sampleX.push(x[index]);\n      sampleY.push(y[index]);\n      index += direction;\n    } else {\n      // It is outside the range.\n      if (Math.sign(mid - x[index]) === 1) {\n        // We'll reach the mid going in the current direction\n        index += direction;\n      } else {\n        // There is not more peaks in the current range\n        stop = true;\n      }\n    }\n  }\n  lastIndex[0] = index;\n  return [sampleX, sampleY];\n}\n\nfunction groupPeaks(peakList, nL) {\n  let group = [];\n  let groups = [];\n  let limits = [peakList[0].x, nL * peakList[0].width];\n  let upperLimit, lowerLimit;\n  // Merge forward\n  for (let i = 0; i < peakList.length; i++) {\n    // If the 2 things overlaps\n    if (\n      Math.abs(peakList[i].x - limits[0]) <\n      nL * peakList[i].width + limits[1]\n    ) {\n      // Add the peak to the group\n      group.push(peakList[i]);\n      // Update the group limits\n      upperLimit = limits[0] + limits[1];\n      if (peakList[i].x + nL * peakList[i].width > upperLimit) {\n        upperLimit = peakList[i].x + nL * peakList[i].width;\n      }\n      lowerLimit = limits[0] - limits[1];\n      if (peakList[i].x - nL * peakList[i].width < lowerLimit) {\n        lowerLimit = peakList[i].x - nL * peakList[i].width;\n      }\n      limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2,\n      ];\n    } else {\n      groups.push({ limits: limits, group: group });\n      // var optmimalPeak = fitSpectrum(group,limits,spectrum);\n      group = [peakList[i]];\n      limits = [peakList[i].x, nL * peakList[i].width];\n    }\n  }\n  groups.push({ limits: limits, group: group });\n  // Merge backward\n  for (let i = groups.length - 2; i >= 0; i--) {\n    // The groups overlaps\n    if (\n      Math.abs(groups[i].limits[0] - groups[i + 1].limits[0]) <\n      (groups[i].limits[1] + groups[i + 1].limits[1]) / 2\n    ) {\n      for (let j = 0; j < groups[i + 1].group.length; j++) {\n        groups[i].group.push(groups[i + 1].group[j]);\n      }\n      upperLimit = groups[i].limits[0] + groups[i].limits[1];\n      if (groups[i + 1].limits[0] + groups[i + 1].limits[1] > upperLimit) {\n        upperLimit = groups[i + 1].limits[0] + groups[i + 1].limits[1];\n      }\n      lowerLimit = groups[i].limits[0] - groups[i].limits[1];\n      if (groups[i + 1].limits[0] - groups[i + 1].limits[1] < lowerLimit) {\n        lowerLimit = groups[i + 1].limits[0] - groups[i + 1].limits[1];\n      }\n\n      groups[i].limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2,\n      ];\n\n      groups.splice(i + 1, 1);\n    }\n  }\n  return groups;\n}\n","import { optimizeSingleLorentzian } from 'ml-optimize-lorentzian';\n\n/**\n * This function try to join the peaks that seems to belong to a broad signal in a single broad peak.\n * @param peakList\n * @param options\n */\nexport function joinBroadPeaks(peakList, options = {}) {\n  let width = options.width;\n  let broadLines = [];\n  // Optimize the possible broad lines\n  let max = 0;\n\n  let maxI = 0;\n\n  let count = 1;\n  for (let i = peakList.length - 1; i >= 0; i--) {\n    if (peakList[i].soft) {\n      broadLines.push(peakList.splice(i, 1)[0]);\n    }\n  }\n  // Push a feke peak\n  broadLines.push({ x: Number.MAX_VALUE });\n\n  let candidates = [[broadLines[0].x, broadLines[0].y]];\n  let indexes = [broadLines[0].index];\n\n  for (let i = 1; i < broadLines.length; i++) {\n    // console.log(broadLines[i-1].x+\" \"+broadLines[i].x);\n    if (Math.abs(broadLines[i - 1].x - broadLines[i].x) < width) {\n      candidates.push([broadLines[i].x, broadLines[i].y]);\n      if (broadLines[i].y > max) {\n        max = broadLines[i].y;\n        maxI = i;\n      }\n      indexes.push(broadLines[i].index);\n      count++;\n    } else {\n      if (count > 2) {\n        let fitted = optimizeSingleLorentzian(candidates, {\n          x: broadLines[maxI].x,\n          y: max,\n          width: Math.abs(\n            candidates[0][0] - candidates[candidates.length - 1][0],\n          ),\n        });\n        let { parameters } = fitted;\n        peakList.push({\n          x: parameters[0],\n          y: parameters[1],\n          width: parameters[2],\n          index: Math.floor(\n            indexes.reduce((a, b) => a + b, 0) / indexes.length,\n          ),\n          soft: false,\n        });\n      } else {\n        // Put back the candidates to the signals list\n        indexes.forEach((index) => {\n          peakList.push(broadLines[index]);\n        });\n      }\n      candidates = [[broadLines[i].x, broadLines[i].y]];\n      indexes = [i];\n      max = broadLines[i].y;\n      maxI = i;\n      count = 1;\n    }\n  }\n\n  peakList.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return peakList;\n}\n","/**\n * This method will allow to enlarge peaks and prevent overlap between peaks\n * Because peaks may not be symmetric after we add 2 properties, from and to.\n * @param {Array} peakList\n * @param {object} [options={}]\n * @param {number} [factor=2]\n * @param {boolean} [overlap=false] by default we don't allow overlap\n * @return {Array} peakList\n */\nexport function broadenPeaks(peakList, options = {}) {\n  const { factor = 2, overlap = false } = options;\n\n  for (let peak of peakList) {\n    if (!peak.right || !peak.left) {\n      peak.from = peak.x - (peak.width / 2) * factor;\n      peak.to = peak.x + (peak.width / 2) * factor;\n    } else {\n      peak.from = peak.x - (peak.x - peak.left.x) * factor;\n      peak.to = peak.x + (peak.right.x - peak.x) * factor;\n    }\n  }\n\n  if (!overlap) {\n    for (let i = 0; i < peakList.length - 1; i++) {\n      let peak = peakList[i];\n      let nextPeak = peakList[i + 1];\n      if (peak.to > nextPeak.from) {\n        peak.to = nextPeak.from = (peak.to + nextPeak.from) / 2;\n      }\n    }\n  }\n\n  for (let peak of peakList) {\n    peak.width = peak.to - peak.from;\n  }\n\n  return peakList;\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\nfunction mode(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = 0;\n  var maxCount = 0;\n  var count = 0;\n  var counts = {};\n\n  for (var i = 0; i < input.length; ++i) {\n    var element = input[i];\n    count = counts[element];\n\n    if (count) {\n      counts[element]++;\n      count++;\n    } else {\n      counts[element] = count = 1;\n    }\n\n    if (count > maxCount) {\n      maxCount = count;\n      maxValue = input[i];\n    }\n  }\n\n  return maxValue;\n}\n\nexport default mode;\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\r\n * Fill an array with sequential numbers\r\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\r\n * @param {object} [options={}]\r\n * @param {number} [options.from=0] - first value in the array\r\n * @param {number} [options.to=10] - last value in the array\r\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\r\n * @param {number} [options.step] - if not provided calculated from size\r\n * @return {Array<number>}\r\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size !== 0 && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    // only works with normal array\n    input.length = 0;\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\nimport arrayMean from 'ml-array-mean';\n\nfunction variance(values) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(values)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options$unbiased = options.unbiased,\n      unbiased = _options$unbiased === void 0 ? true : _options$unbiased,\n      _options$mean = options.mean,\n      mean = _options$mean === void 0 ? arrayMean(values) : _options$mean;\n  var sqrError = 0;\n\n  for (var i = 0; i < values.length; i++) {\n    var x = values[i] - mean;\n    sqrError += x * x;\n  }\n\n  if (unbiased) {\n    return sqrError / (values.length - 1);\n  } else {\n    return sqrError / values.length;\n  }\n}\n\nexport default variance;\n","import variance from 'ml-array-variance';\n\nfunction standardDeviation(values) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Math.sqrt(variance(values, options));\n}\n\nexport default standardDeviation;\n","/**\n * Merge abscissa values if the ordinate value is in a list of centroids\n * @param {object} originalPoints\n * @param {Array<number>} originalPoints.x\n * @param {Array<number>} originalPoints.y\n * @param {Array<number>} centroids\n * @param {object} [options]\n * @param {number} [options.window = 0.01] - has to be a positive number\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function mergeByCentroids(\n  originalPoints,\n  centroids,\n  options = {}\n) {\n  const { window = 0.01 } = options;\n\n  var mergedPoints = {\n    x: centroids.slice(),\n    y: new Array(centroids.length).fill(0)\n  };\n\n  var originalIndex = 0;\n  var mergedIndex = 0;\n  while (\n    originalIndex < originalPoints.x.length &&\n    mergedIndex < centroids.length\n  ) {\n    var diff = originalPoints.x[originalIndex] - centroids[mergedIndex];\n    if (Math.abs(diff) < window) {\n      mergedPoints.y[mergedIndex] += originalPoints.y[originalIndex++];\n    } else if (diff < 0) {\n      originalIndex++;\n    } else {\n      mergedIndex++;\n    }\n  }\n\n  return mergedPoints;\n}\n","import binarySearch from 'binary-search';\nimport { ascending, descending } from 'num-sort';\n\n/**\n *\n * @param {object} points\n * @param {Array<number>} originalPoints.x\n * @param {Array<number>} originalPoints.y\n * @param {*} options\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function closestX(points, options) {\n  const { x, y } = points;\n  const { target = x[0], reverse = false } = options;\n\n  let index;\n  if (reverse) {\n    index = binarySearch(x, target, descending);\n  } else {\n    index = binarySearch(x, target, ascending);\n  }\n\n  if (index >= 0) {\n    return {\n      x: x[index],\n      y: y[index]\n    };\n  } else {\n    index = ~index;\n    if (\n      (index !== 0 && Math.abs(x[index] - target) > 0.5) ||\n      index === x.length\n    ) {\n      return {\n        x: x[index - 1],\n        y: y[index - 1]\n      };\n    } else {\n      return {\n        x: x[index],\n        y: y[index]\n      };\n    }\n  }\n}\n","import mean from 'ml-array-mean';\n\n/**\n *\n * @param {object} points\n * @param {Array<number>} points.x\n * @param {Array<number>} points.y\n * @param {object} [options]\n * @param {boolean} [options.unbiased = true] - if true, divide by (n-1); if false, divide by n.\n * @return {number}\n */\nexport default function covariance(points, options = {}) {\n  const { x, y } = points;\n  const { unbiased = true } = options;\n\n  const meanX = mean(x);\n  const meanY = mean(y);\n\n  var error = 0;\n\n  for (let i = 0; i < x.length; i++) {\n    error += (x[i] - meanX) * (y[i] - meanY);\n  }\n\n  if (unbiased) {\n    return error / (x.length - 1);\n  } else {\n    return error / x.length;\n  }\n}\n","/**\n * Merge abscissas values on similar ordinates and weight the group of abscissas\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {number} [options.groupWidth = 0.001] - window for abscissas to merge\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function maxMerge(points, options = {}) {\n  const { x, y } = points;\n  const { groupWidth = 0.001 } = options;\n\n  var merged = { x: [], y: [] };\n  var maxAbscissa = { x: [], y: [] };\n  var size = 0;\n  var index = 0;\n\n  while (index < x.length) {\n    if (size === 0 || x[index] - merged.x[size - 1] > groupWidth) {\n      maxAbscissa.x.push(x[index]);\n      maxAbscissa.y.push(y[index]);\n      merged.x.push(x[index]);\n      merged.y.push(y[index]);\n      index++;\n      size++;\n    } else {\n      if (y[index] > maxAbscissa.y[size - 1]) {\n        maxAbscissa.x[size - 1] = x[index];\n        maxAbscissa.y[size - 1] = y[index];\n      }\n      merged.x[size - 1] = x[index];\n      merged.y[size - 1] += y[index];\n      index++;\n    }\n  }\n\n  merged.x = maxAbscissa.x.slice();\n\n  return merged;\n}\n","import binarySearch from 'binary-search';\nimport { ascending, descending } from 'num-sort';\n\n/**\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {object} [options.from = {index: 0}]\n * @param {object} [options.to = {index: x.length-1}]\n * @param {boolean} [options.reverse = false]\n * @return {{index: number, value: number}}\n */\nexport default function maxY(points, options = {}) {\n  const { x, y } = points;\n  let {\n    from = { index: 0 },\n    to = { index: x.length },\n    reverse = false\n  } = options;\n\n  if (from.value !== undefined && from.index === undefined) {\n    from.index = calculateIndex(from.value, x, reverse);\n  }\n\n  if (to.value !== undefined && to.index === undefined) {\n    to.index = calculateIndex(to.value, x, reverse);\n  }\n\n  var currentMax = Number.MIN_VALUE;\n  var currentIndex;\n  for (var i = from.index; i < to.index; i++) {\n    if (currentMax < y[i]) {\n      currentMax = y[i];\n      currentIndex = i;\n    }\n  }\n\n  return {\n    index: currentIndex,\n    value: currentMax\n  };\n}\n\n/**\n * @param {number} value\n * @param {Array<number>} x\n * @param {boolean} reverse\n * @return {number} index of the value in the array\n */\nfunction calculateIndex(value, x, reverse) {\n  let index;\n  if (reverse) {\n    index = binarySearch(x, value, descending);\n  } else {\n    index = binarySearch(x, value, ascending);\n  }\n\n  if (index < 0) {\n    throw new Error(`the value ${value} doesn't belongs to the abscissa value`);\n  }\n\n  return index;\n}\n","export default function sortX(points, options = {}) {\n  const { x, y } = points;\n  const { reverse = false } = options;\n\n  var sortFunc;\n  if (!reverse) {\n    sortFunc = (a, b) => a.x - b.x;\n  } else {\n    sortFunc = (a, b) => b.x - a.x;\n  }\n\n  var grouped = x\n    .map((val, index) => ({\n      x: val,\n      y: y[index]\n    }))\n    .sort(sortFunc);\n\n  var response = { x: x.slice(), y: y.slice() };\n  for (var i = 0; i < x.length; i++) {\n    response.x[i] = grouped[i].x;\n    response.y[i] = grouped[i].y;\n  }\n\n  return response;\n}\n","\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","/**\n * Merge abscissas values on similar ordinates and weight the group of abscissas\n * @param {object} points\n * @param {Array<number>} points.x - sorted abscissas values\n * @param {Array<number>} points.y - ordinates values\n * @param {object} [options]\n * @param {number} [options.groupWidth = 0.001] - window for abscissas to merge\n * @return {{x: Array<number>, y: Array<number>}}\n */\nexport default function weightedMerge(points, options = {}) {\n  const { x, y } = points;\n  const { groupWidth = 0.001 } = options;\n\n  var merged = { x: [], y: [] };\n  var weightedAbscissa = { x: [], y: [] };\n  var size = 0;\n  var index = 0;\n\n  while (index < x.length) {\n    if (size === 0 || x[index] - merged.x[size - 1] > groupWidth) {\n      weightedAbscissa.x.push(x[index] * y[index]);\n      weightedAbscissa.y.push(y[index]);\n      merged.x.push(x[index]);\n      merged.y.push(y[index]);\n      index++;\n      size++;\n    } else {\n      weightedAbscissa.x[size - 1] += x[index] * y[index];\n      weightedAbscissa.y[size - 1] += y[index];\n      merged.x[size - 1] = x[index];\n      merged.y[size - 1] += y[index];\n      index++;\n    }\n  }\n\n  for (var i = 0; i < merged.x.length; i++) {\n    merged.x[i] = weightedAbscissa.x[i] / weightedAbscissa.y[i];\n  }\n\n  return merged;\n}\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","import { DecisionTreeClassifier, DecisionTreeRegression } from \"ml-cart\";\nimport {\n  RandomForestClassifier,\n  RandomForestRegression,\n} from \"ml-random-forest\";\n\n// Try to keep this list in the same structure as the README.\n\n// Unsupervised learning\nexport { PCA } from \"ml-pca\";\nimport * as HClust from \"ml-hclust\";\nexport { HClust };\nexport { default as KMeans } from \"ml-kmeans\";\n\n// Supervised learning\nimport * as NaiveBayes from \"ml-naivebayes\";\nexport { NaiveBayes };\nexport { default as KNN } from \"ml-knn\";\nexport { PLS, KOPLS, OPLS, OPLSNipals } from \"ml-pls\";\nimport * as CrossValidation from \"ml-cross-validation\";\nexport { CrossValidation };\nexport { default as ConfusionMatrix } from \"ml-confusion-matrix\";\nexport { DecisionTreeClassifier };\nexport { RandomForestClassifier };\n\n// Artificial neural networks\nexport { default as FNN } from \"ml-fnn\";\nexport { default as SOM } from \"ml-som\";\n\n// Regression\nexport {\n  SimpleLinearRegression,\n  PolynomialRegression,\n  MultivariateLinearRegression,\n  PowerRegression,\n  ExponentialRegression,\n  TheilSenRegression,\n  RobustPolynomialRegression,\n} from \"ml-regression\";\nexport { DecisionTreeRegression };\nexport { RandomForestRegression };\n\n// Optimization\nexport { default as levenbergMarquardt } from \"ml-levenberg-marquardt\";\nimport * as FCNNLS from \"ml-fcnnls\";\nexport { FCNNLS };\n\n// Math\nimport * as MatrixLib from \"ml-matrix\";\nconst {\n  Matrix,\n  SVD,\n  EVD,\n  CholeskyDecomposition,\n  LuDecomposition,\n  QrDecomposition,\n} = MatrixLib;\nexport {\n  MatrixLib,\n  Matrix,\n  SVD,\n  EVD,\n  CholeskyDecomposition,\n  LuDecomposition,\n  QrDecomposition,\n};\n\nexport { SparseMatrix } from \"ml-sparse-matrix\";\nexport { default as Kernel } from \"ml-kernel\";\nimport { distance, similarity } from \"ml-distance\";\nexport { distance as Distance, similarity as Similarity };\nexport { default as distanceMatrix } from \"ml-distance-matrix\";\nexport { default as XSadd } from \"ml-xsadd\";\nexport { nGMCA } from \"ml-ngmca\";\n\n// Statistics\nexport { default as Performance } from \"ml-performance\";\n\n// Data preprocessing\nexport { default as savitzkyGolay } from \"ml-savitzky-golay\";\n\n// Utility\nexport { default as BitArray } from \"ml-bit-array\";\nexport { default as HashTable } from \"ml-hash-table\";\nexport { default as padArray } from \"ml-pad-array\";\nexport { default as binarySearch } from \"binary-search\";\nimport * as numSort from \"num-sort\";\nexport { numSort };\nexport { default as Random } from \"ml-random\";\nimport * as GSD from 'ml-gsd';\nexport { GSD };\n\nimport min from \"ml-array-min\";\nimport max from \"ml-array-max\";\nimport median from \"ml-array-median\";\nimport mean from \"ml-array-mean\";\nimport mode from \"ml-array-mode\";\nimport normed from \"ml-array-normed\";\nimport rescale from \"ml-array-rescale\";\nimport sequentialFill from \"ml-array-sequential-fill\";\nimport sum from \"ml-array-sum\";\nimport standardDeviation from \"ml-array-standard-deviation\";\nimport variance from \"ml-array-variance\";\nexport const Array = {\n  min,\n  max,\n  median,\n  mean,\n  mode,\n  normed,\n  rescale,\n  sequentialFill,\n  standardDeviation,\n  sum,\n  variance,\n};\n\nimport centroidsMerge from \"ml-array-xy-centroids-merge\";\nimport closestX from \"ml-arrayxy-closestx\";\nimport covariance from \"ml-array-xy-covariance\";\nimport maxMerge from \"ml-array-xy-max-merge\";\nimport maxY from \"ml-array-xy-max-y\";\nimport sortX from \"ml-array-xy-sort-x\";\nimport uniqueX from \"ml-arrayxy-uniquex\";\nimport weightedMerge from \"ml-array-xy-weighted-merge\";\nimport equallySpaced from \"ml-array-xy-equally-spaced\";\nimport filterX from \"ml-array-xy-filter-x\";\nexport const ArrayXY = {\n  centroidsMerge,\n  closestX,\n  covariance,\n  maxMerge,\n  maxY,\n  sortX,\n  uniqueX,\n  weightedMerge,\n  equallySpaced,\n  filterX,\n};\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","max","input","options","arguments","length","undefined","isArray","TypeError","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","Error","maxValue","i","min","minValue","rescale","output","Array","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","constructor","name","inspectData","rows","columns","maxI","Math","maxJ","result","line","j","push","formatNumber","get","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","e","slice","installMathOperations","AbstractMatrix","Matrix","add","value","addS","addM","set","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","round","sign","sin","sinh","sqrt","tan","tanh","trunc","pow","arg0","powS","powM","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","from","columnOut","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","sumByRow","sum","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","x","varianceByColumn","varianceAll","size","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","interval","eye","diag","data","l","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","n","maxRow","p","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","y","r1","c1","r2","c2","console","warn","embed","mat","resultat","blockMult","a","b","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","center","Symbol","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","lu","pivotVector","pivotSign","t","LUcolj","kmax","LU","isSingular","col","solve","count","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","d","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","SVD","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","sdy","corr","EigenvalueDecomposition","assumeSymmetric","tred2","tql2","H","ort","orthes","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","hh","dl1","c3","el1","s2","tst1","low","high","nn","exshift","z","iter","w","ra","sa","vr","vi","notlast","cdivres","cdiv","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","L","isPositiveDefinite","B","nipals","scaleScores","maxIterations","terminationCriteria","u","diff","tOld","counter","xResidual","residual","yResidual","betas","sumValue","toDiscreteDistribution","numberOfClasses","counts","giniImpurity","probabilities","getNumberOfClasses","filter","val","arr","map","reduce","giniGain","splitted","splitsImpurity","splits","currentSplit","squaredError","meanArray","currentElement","regressionError","matrixSplitter","lesserX","greaterX","lesserY","greaterY","zip","ret","gainFunctions","gini","Utils","regression","splitFunctions","TreeNode","kind","gainFunction","splitFunction","minNumSamples","maxDepth","bestSplit","XTranspose","bestGain","Infinity","check","currentFeature","splitValues","featureSplit","currentSplitVal","split","gain","maxGain","splitValue","lesser","greater","calculatePrediction","distribution","train","currentDepth","parentGain","splitColumn","splittedMatrix","left","right","classify","setNodeParameters","node","defaultOptions","DecisionTreeClassifier","model","root","Tree","assign","trainingSet","trainingLabels","predict","toPredict","predictions","load","DecisionTreeRegression","trainingValues","checkFloat","examplesBaggingWithReplacement","trainingValue","seed","engine","Random","autoSeed","Xr","featureBagging","replacement","toRet","usedIndex","Set","has","RandomForestBase","maxFeatures","nEstimators","treeOptions","isClassifier","indexes","useSampleBagging","Estimator","DTClassifier","DTRegression","estimators","est","res","values","predictionValues","RandomForestClassifier","baseModel","mode","pop","_ref","module","exports","window","median","quickSelectMedian","selectionMethods","arrayMean","arrayMedian","selectionMethod","RandomForestRegression","PCA","dataset","means","stdevs","S","R","excludedFeatures","isCovarianceMatrix","method","nCompNIPALS","ignoreZeroVariance","_computeFromCovarianceMatrix","_adjust","covarianceMatrix","_computeWithNIPALS","singularValues","eigenvalues","singularValue","nComponents","invert","getExplainedVariance","getCumulativeVariance","explained","getEigenvectors","getEigenvalues","getStandardDeviations","getLoadings","evd","EVD","reverse","dc","NIPALS","squaredEuclidean","euclidean","distanceMatrix","distanceFn","getMatrix","Heap","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","lo","hi","cmp","mid","concat","item","lastelt","returnitem","_i","_len","_ref1","_results","_results1","_j","pos","elem","los","startpos","newitem","parent","parentpos","childpos","endpos","rightpos","replace","pushpop","nodes","peek","contains","clear","empty","heap","toArray","insert","top","front","factory","this","require$$0","Cluster","children","height","isLeaf","cut","list","ans","group","groups","forEach","child","traverse","cb","visit","cluster","singleLink","dKI","dKJ","completeLink","averageLink","dIJ","nj","ai","aj","weightedAverageLink","centroidLink","medianLink","wardLink","nk","wardLink2","agnes","distanceFunction","isDistanceMatrix","updateFunc","getDistanceMatrix","numLeaves","toLowerCase","clusters","distance","getSmallestDistance","cluster1","cluster2","newCluster","newClusters","newDistanceMatrix","previous","newIndex","getPreviousIndex","prevI","prevICluster","smallest","smallestI","smallestJ","prev1","prev2","nearestVector","listVectors","similarityFunction","vectorIndex","maxSim","sim","minDist","MAX_VALUE","dist","calculateDistanceMatrix","updateClusterID","centers","clusterID","updateCenters","prevCenters","K","nDim","centersLen","dim","id","hasConverged","oldCenters","tolerance","LOOP","FLOAT_MUL","sh1","sh2","sh3","multiply_uint32","nlo","nhi","XSadd","Date","now","state","Uint32Array","init","getFloat","bind","getUint32","nextState","periodCertification","PROB_TOLERANCE","randomChoice","valuesArr","cumSum","getArray","randomIndex","seedOrRandom","xsadd","XSAdd","randomGenerator","choice","randomSample","mostDistant","maxDist","minDistCent","kmeanspp","nSamples","localTrials","firstCenterIdx","closestDistSquared","cumSumClosestDistSquared","candidateIdx","candidates","distanceToCandidates","euclideanDistances","bestCandidate","bestPot","bestDistSquared","newDistSquared","newPot","A","distanceSymbol","KMeansResult","centroids","converged","iterations","nearest","centroid","computeInformation","enrichedCentroids","withIterations","initialization","step","newCenters","kmeansGenerator","stepNumber","stepResult","kmeans","separateClasses","features","classes","totalPerClasses","separatedClasses","currentIndex","GaussianNB","reload","calculateProbabilities","C1","PI","std","logPriorProbability","currentStd","getCurrentClass","modelName","currentCase","maxProbability","predictedClass","currentProbability","calculateLogProbability","C2","MultinomialNB","conditionalProbability","priorProbability","separateClass","classValues","total","divisor","matrixLog","Node","obj","KDTree","points","metric","dimensions","restoreParent","buildTree","toJSONImpl","point","maxNodes","maxDistance","bestNodes","BinaryHeap","nearestSearch","ownDistance","linearPoint","bestChild","linearDistance","otherChild","saveNode","content","src","dest","depth","scoreFunction","element","bubbleUp","end","sinkDown","parentN","elemScore","child2N","child1N","swap","child1","child1Score","child2","child2Score","KNN","labels","kdTree","isEuclidean","euclideanDistance","getSinglePrediction","knn","nearestPoints","pointsPerClass","maxPoints","lastElement","currentClass","currentPoints","pow2array","initializeMatrices","PLS","meanX","stdDevX","meanY","stdDevY","PBQ","R2X","scaleMethod","latentVectors","rx","cx","ry","cy","ssqXcal","sumOfSquaresY","T","P","Q","W","transposeX","transposeY","tIndex","maxSumColIndex","uIndex","t1","den","pnorm","ssqYcal","E","F","KOPLS","YLoadingMat","SigmaPow","YScoreMat","predScoreMat","YOrthLoadingVec","YOrthEigen","YOrthScoreMat","toNorm","TURegressionCoeff","kernelX","kernel","orthogonalComp","predictiveComp","predictiveComponents","orthogonalComponents","compute","Identity","Sigma","YOrthScoreNorm","TpiPrime","CoTemp","SoTemp","toiPrime","ITo","lastScoreMat","lastTpPrime","KTestTrain","YOrthScoreVector","scoreMatPrime","p1","p2","p3","prediction","predYOrthVectors","ConfusionMatrix","fromLabels","actual","predicted","distinctLabels","actualIdx","predictedIdx","getLabels","getTotalCount","getTrueCount","getFalseCount","getTruePositiveCount","label","getIndex","getTrueNegativeCount","getFalsePositiveCount","getFalseNegativeCount","getPositiveCount","getNegativeCount","getTruePositiveRate","getTrueNegativeRate","getPositivePredictiveValue","TP","getNegativePredictiveValue","TN","getFalseNegativeRate","getFalsePositiveRate","getFalseDiscoveryRate","FP","getFalseOmissionRate","FN","getF1Score","getMatthewsCorrelationCoefficient","getInformedness","getMarkedness","getConfusionTable","getAccuracy","correct","incorrect","getCount","actualIndex","predictedIndex","accuracy","global","createCommonjsModule","fn","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","regeneratorRuntime","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","arg","err","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","displayName","defineIteratorMethods","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","invoke","resolve","reject","record","Promise","then","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","async","next","done","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","keys","key","iterable","iteratorMethod","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Function","hadRuntime","getOwnPropertyNames","oldRuntime","runtimeModule","regenerator","_callee","M","N","twiddle","_callee$","_context","getFolds","allIdx","current","folds","randi","foldsIndex","testIndex","trainIndex","el","idx2","sampleAClass","classVector","fraction","classVectorSorted","JSON","parse","stringify","indexOfSelected","ind","mask","includes","leaveOneOut","Classifier","classifierOptions","leavePOut","distinct","getDistinct","confusionMatrix","initMatrix","gen","combinations","testIdx","trainIdx","validateWithCallback","validate","kFold","testFeatures","trainFeatures","testLabels","trainLabels","getTrainTest","classifier","predictedLabels","updateConfusionMatrix","OPLSNipals","numberOSC","uNew","wOrtho","tOrtho","pOrtho","filteredX","weightsXOrtho","loadingsXOrtho","scoresXOrtho","weightsXPred","loadingsXpred","scoresXpred","loadingsY","tss","OPLS","opls","meansY","stdevsY","tCV","tOrthCV","yHatCV","nComp","cvFolds","Q2","oplsCV","modelNC","nc","yHatk","tPredk","tOrthk","oplsk","fold","trainTest","_getTrainTest","testXk","Xk","Yk","dataCenter","dataSD","plsCV","Eh","scores","tPred","yHat","tssy","press","Q2y","_predictAll","xRes","XOrth","FeaturesCS","labelsCS","Xres","plsCall","R2x","R2y","plsC","pPred","wPred","betasPred","Qpc","tOrth","pOrth","wOrth","totalPred","Yres","getLogs","getScores","scoresX","scoresY","trueLabels","tssx","oplsC","rss","xEx","rssx","logistic","expELU","param","softExponential","softExponentialPrime","ACTIVATION_FUNCTIONS","activation","derivate","arctan","softsign","relu","softplus","bent","sinusoid","sinc","gaussian","Layer","inputSize","outputSize","regularization","epsilon","activationParam","selectedFunction","params","actFunction","derFunction","activationFunction","mlMatrix","forward","backpropagation","delta","dW","db","aCopy","update","OutputLayer","FeedForwardNeuralNetworks","hiddenLayers","learningRate","dicts","layers","buildNetwork","dictOutputs","inputs","propagate","outputs","NodeSquare","weights","som","neighbors","adjustWeights","target","influence","getDistance","otherNode","getDistanceTorus","distX","distY","gridDim","getNeighbors","xy","torus","getPos","bestNeighbor","direction","dist1","dist2","simA","simB","getPosition","NodeHexagonal","hX","getDistanceHexagonal","distZ","fields","randomizer","squareEuclidean","gridType","SOM","numWeights","converters","getConverters","extractor","creator","nodeType","hx","distanceMethod","getMaxDistance","times","findBMU","adjust","iterationCount","startLearningRate","mapRadius","algorithmMethod","_initNodes","loadModel","eval","export","exportModel","includeDistance","initNodes","setTraining","convertedSet","numIterations","timeConstant","trainOne","neighbourhoodRadius","trainingSetFactor","getRandomValue","bmu","_findBestMatchingUnit","now2","radiusLimit","xMin","xMax","yMin","yMax","theX","theY","getConvertedNodes","findBestMatchingUnit","candidate","lowest","computePosition","_predict","getQuantizationError","fit","getFit","normalizers","denormalizers","getNormalizer","getDenormalizer","minMax","normalizer","denormalizer","zero","one","maybeToPrecision","digits","checkArraySize","BaseRegression","new","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","PolynomialRegression","degree","powers","coefficients","checkArrayLength","regress","precision","_toFormula","isLaTeX","sup","closeSup","str","json","pr","FT","SimpleLinearRegression","slope","intercept","computeX","xFactor","absIntercept","operator","slr","numerator","ExponentialRegression","er","yl","linear","PowerRegression","newInputs","latex","xl","MultivariateLinearRegression","statistics","xt","xx","invxx","beta","fittedValues","residuals","ri","stdError","stdErrorMatrix","stdErrors","tStats","summary","regressionStatistics","standardError","observations","variables","tStat","sigma","GaussianKernel","constant","PolynomialKernel","SigmoidKernel","ANOVAKernel","len","CauchyKernel","ExponentialKernel","HistogramIntersectionKernel","LaplacianKernel","MultiquadraticKernel","RationalQuadraticKernel","kernelType","rbf","polynomial","poly","anova","cauchy","histogram","HistogramKernel","laplacian","multiquadratic","rational","RationalKernel","sigmoid","mlp","Kernel","KernelConstructor","kernelFunction","landmarks","kernelMatrix","TheilSenRegression","theilSen","slopes","medianSlope","cuts","RobustPolynomialRegression","robustPolynomial","_","tuples","getRandomTuples","tuple","calcCoefficients","residualsMedian","half","errorCalculation","parameters","parameterizedFunction","func","gradientFunction","evaluatedData","gradientDifference","paramFunction","auxParams","funcParam","matrixFunction","damping","gradientFunc","matrixFunc","inverseMatrix","levenbergMarquardt","errorTolerance","minValues","maxValues","initialValues","parLen","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","iteration","parameterValues","parameterError","sortCollectionSet","collection","objectCollection","BigInt","sorted","cssls","XtX","XtY","Pset","choXtX","luXtX","sortedPset","sortedEset","cols2Solve","vars","initialisation","Fset","D","setDifference","C","optimality","maxIter","Jset","fullSet","notPset","fcnnls","infeasIndex","Hset","hRowColIdx","negRowColIdx","alphaMin","minIdx","idx2zero","findIndex","newParam","fcnnlsVector","haystack","needle","comparator","assertNumber","number","largestPrime","primeNumbers","ascending","nextPrime","binarySearch","FREE","FULL","REMOVED","defaultInitialCapacity","defaultMinLoadFactor","defaultMaxLoadFactor","HashTable","table","minLoadFactor","maxLoadFactor","freeEntries","lowWaterMark","highWaterMark","initialCapacity","capacity","chooseHighWaterMark","indexOfKey","indexOfInsertion","newCapacity","chooseGrowCapacity","rehash","remove","noRehash","maybeShrinkCapacity","delete","chooseShrinkCapacity","containsKey","hash","decrement","containsValue","indexOfValue","ensureCapacity","minCapacity","oldCapacity","oldTable","oldValues","oldState","newTable","newValues","newState","chooseLowWaterMark","forEachKey","forEachValue","forEachPair","minLoad","maxLoad","SparseMatrix","_init","elements","symmetric","forEachNonZero","bandWidth","isBanded","width","cardinality","v1","v2","getNonZeros","setThreshold","newThreshold","trans","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","operators","fillTemplateFunction","op","methods","mathMethod","template","RegExp","additiveSymmetric","avg","bhattacharyya","canberra","chebyshev","clark","czekanowskiSimilarity","up","down","czekanowskiDistance","dice","q1","q2","divergence","fidelity","gower","harmonicMean","hellinger","innerProduct","intersection","jaccard","jeffreys","jensenDifference","jensenShannon","kdivergence","kulczynski","kullbackLeibler","kumarHassebrook","kumarJohnson","lorentzian","manhattan","matusita","minkowski","motyka","neyman","pearson","probabilisticSymmetric","ruzicka","soergel","sorensen","squared","squaredChord","taneja","tanimoto","bitvector","inter","union","tanimotoS","topsoe","waveHedges","createTree","spectrum","minWindow","to","mainCreateTree","start","getSimilarity","gamma","treeSimilarity","getFunction","cosine","diceD","intersectionD","jaccardD","kulczynskiD","motykaD","avgA","avgB","newA","newB","squaredChordD","zeroInsteadOfNegative","checkMatrixS","originalMatrix","fastExtractNMF","res2","sqrtMaxValue","subtracting","normBy","norms","normProj","normLimits","updateMatrixA","Ainit","maxFBIteration","toleranceFB","normConstrained","lambda","St","YSt","prevA","gradient","proximal","tNext","getMax","updateMatrixS","Sinit","At","AtY","prevS","initialize","randGenerator","maxInitFBIteration","toleranceFBInit","sumC","sumR","positiveSumRowIndexS","positiveSumRowS","candidateA","colCandidate","normalize","normOnA","DS","DA","onS","onA","sColumns","aRows","valueForS","valueForA","getMedians","medians","dimMADstd","updateLambda","refinementBeginning","tauMAD","sigmaResidue","lambdaInf","addStd","alY","nextLambda","nGMCA","maximumIteration","phaseRatio","useTranspose","pred","cutoffs","tn","tp","fp","nNeg","nPos","nPosPred","nNegPred","Performance","isDistance","predP","all","targ","currentPred","nTp","nFp","getMeasure","measure","measures","getAURC","auc","getAUDC","getDistribution","cutLength","cutLow","cutHigh","xLabels","interValues","intraValues","interCumPercent","intraCumPercent","nTP","currentTP","nFP","currentFP","thisTP","thisFP","names","acc","fpr","tpr","fnr","tnr","ppv","npv","pcfall","pcmiss","lift","rpp","rnp","arrayCase","cond","matrixCase","padArray","factorial","windowSize","derivative","pad","padValue","savitzkyGolay","J","inic","Jtranspose","Jinv","det","eightBits","arr1","arr2","getBit","setBit","toBinaryString","substr","parseBinaryString","toHexString","parseHexString","toDebug","binary","SavitzkyGolay","np","fullWeights","hs","constantH","wg1","wg2","d1","d2","getHs","wg","GramPoly","Grampoly","GenFact","gf","Weight","gsd","yIn","noiseLevel","sgOptions","smoothY","heightFactor","broadRatio","maxCriteria","minMaxRatio","derivativeThreshold","realTopDetection","equalSpaced","isEqualSpaced","getNoiseLevel","yCorrection","yData","dY","ddY","SG","xData","dX","maxDdy","maxY","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","minddYLen","intervalLLen","intervalRLen","broadMaskLen","signals","signalsLen","lastK","possible","frequency","distanceJ","minDistance","gettingCloser","soft","yLeft","yRight","determineRealTop","base","maxDx","minDx","stddev","averageDeviations","peakList","currentPoint","sumOfGaussians","nL","optimizeGaussianSum","opts","pInit","pMin","pMax","dt","lmOptions","pFit","LM","singleGaussian","factor2","optimizeSingleGaussian","peak","sumOfLorentzians","optimizeLorentzianSum","singleLorentzian","optimizeSingleLorentzian","optimizePeaks","functionName","factorWidth","optimizationOptions","lastIndex","groupPeaks","sampling","peaks","sampleFunction","limits","optPeaks","fitResult","nbPoints","sampleX","sampleY","upperLimit","lowerLimit","joinBroadPeaks","broadLines","fitted","broadenPeaks","overlap","nextPeak","maxCount","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","sumFactor","_i2","_typeof","sequentialFill","_options","_options$from","_options$to","_options$size","_options$unbiased","_options$mean","sqrError","mergeByCentroids","originalPoints","mergedPoints","originalIndex","mergedIndex","closestX","descending","maxMerge","groupWidth","merged","maxAbscissa","calculateIndex","sortX","sortFunc","grouped","response","uniqueX","weightedMerge","weightedAbscissa","zones","NEGATIVE_INFINITY","POSITIVE_INFINITY","zone","currentZone","exclusions","exclusion","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","unitsPerPoint","currentTotal","integral","x0","x1","equallySpacedSmooth","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","previousY","nextX","nextY","currentValue","sumAtMin","sumAtMax","getSlope","y0","y1","main","equallySpacedSlot","lastStep","frontOutsideSpectra","backOutsideSpectra","equallySpaced","arrayXY","variant","xResult","yResult","zoneResult","processZone","getZones","currentFrom","filterX","currentZoneIndex","newX","newY","position","MatrixLib","normed","ArrayXY","centroidsMerge"],"mappings":"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"}